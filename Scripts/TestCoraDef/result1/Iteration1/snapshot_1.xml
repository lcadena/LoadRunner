<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="1">
  <HTTPTask id="1" hostname="coraqa.eu.boehringer.com" path="/" url="http://coraqa.eu.boehringer.com/" origin="Primary" startDateTime="2020-03-05T11:46:52.564+01:00" startTime="2649">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="DNT" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y29yYXFhLmV1LmJvZWhyaW5nZXIuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC8gSFRUUC8xLjENCkROVDogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMNCkFjY2VwdDogKi8qDQpIb3N0OiBjb3JhcWEuZXUuYm9laHJpbmdlci5jb20NCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Content-Length" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Location" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9jb3JhcWEuZXUuYm9laHJpbmdlci5jb20v</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWljcm9zb2Z0LUhUVFBBUEkvMi4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QXp1cmVBcHBQcm94eUFuYWx5dGljQ29va2llX2E0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYl8xLjM9M3xxSi9yR3EwZUdYQ1Nkbm1Ed2tjazB6aUhCWEZEODJ0M0RPSVpERjlOdTVadGpwWXJWTXRDa25XZ3NmeU51RVFIYmlZdjNacGhneitsc2t3bXliRWlJZndFeGlCMTBtbGRrdWltNS9ZeTdHRHJ1NGhJTmd3S1NIUkl0OWdPQXV4MjBKNFZnZTlYZUhkdHNNOHFGU0FSaGc9PTsgcGF0aD0vOyBkb21haW49ZXUuYm9laHJpbmdlci5jb207IFNhbWVTaXRlPU5vbmU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNSBNYXIgMjAyMCAxMDo0Njo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzA3IFRlbXBvcmFyeSBSZWRpcmVjdA0KQ29udGVudC1MZW5ndGg6IDANCkxvY2F0aW9uOiBodHRwczovL2NvcmFxYS5ldS5ib2VocmluZ2VyLmNvbS8NClNlcnZlcjogTWljcm9zb2Z0LUhUVFBBUEkvMi4wDQpTZXQtQ29va2llOiBBenVyZUFwcFByb3h5QW5hbHl0aWNDb29raWVfYTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWViXzEuMz0zfHFKL3JHcTBlR1hDU2RubUR3a2NrMHppSEJYRkQ4MnQzRE9JWkRGOU51NVp0anBZclZNdENrbldnc2Z5TnVFUUhiaVl2M1pwaGd6K2xza3dteWJFaUlmd0V4aUIxMG1sZGt1aW01L1l5N0dEcnU0aElOZ3dLU0hSSXQ5Z09BdXgyMEo0VmdlOVhlSGR0c004cUZTQVJoZz09OyBwYXRoPS87IGRvbWFpbj1ldS5ib2VocmluZ2VyLmNvbTsgU2FtZVNpdGU9Tm9uZQ0KRGF0ZTogVGh1LCAwNSBNYXIgMjAyMCAxMDo0Njo1MiBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPResponse>
    <HTTPTask id="2" hostname="coraqa.eu.boehringer.com" path="/" url="https://coraqa.eu.boehringer.com/" origin="Redirection" startDateTime="2020-03-05T11:46:52.858+01:00" startTime="2944">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cookie" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QXp1cmVBcHBQcm94eUFuYWx5dGljQ29va2llX2E0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYl8xLjM9M3xxSi9yR3EwZUdYQ1Nkbm1Ed2tjazB6aUhCWEZEODJ0M0RPSVpERjlOdTVadGpwWXJWTXRDa25XZ3NmeU51RVFIYmlZdjNacGhneitsc2t3bXliRWlJZndFeGlCMTBtbGRrdWltNS9ZeTdHRHJ1NGhJTmd3S1NIUkl0OWdPQXV4MjBKNFZnZTlYZUhkdHNNOHFGU0FSaGc9PQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y29yYXFhLmV1LmJvZWhyaW5nZXIuY29t</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC8gSFRUUC8xLjENCkNvb2tpZTogQXp1cmVBcHBQcm94eUFuYWx5dGljQ29va2llX2E0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYl8xLjM9M3xxSi9yR3EwZUdYQ1Nkbm1Ed2tjazB6aUhCWEZEODJ0M0RPSVpERjlOdTVadGpwWXJWTXRDa25XZ3NmeU51RVFIYmlZdjNacGhneitsc2t3bXliRWlJZndFeGlCMTBtbGRrdWltNS9ZeTdHRHJ1NGhJTmd3S1NIUkl0OWdPQXV4MjBKNFZnZTlYZUhkdHNNOHFGU0FSaGc9PQ0KRE5UOiAxDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUw0KQWNjZXB0OiAqLyoNCkhvc3Q6IGNvcmFxYS5ldS5ib2VocmluZ2VyLmNvbQ0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="AzureAppProxyAnalyticCookie_a4cc5064-d3dc-4631-b950-aa2561361aeb_1.3" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>M3xxSi9yR3EwZUdYQ1Nkbm1Ed2tjazB6aUhCWEZEODJ0M0RPSVpERjlOdTVadGpwWXJWTXRDa25XZ3NmeU51RVFIYmlZdjNacGhneitsc2t3bXliRWlJZndFeGlCMTBtbGRrdWltNS9ZeTdHRHJ1NGhJTmd3S1NIUkl0OWdPQXV4MjBKNFZnZTlYZUhkdHNNOHFGU0FSaGc9PQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Length" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Location" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tL2UxZjhhZjg2LWVlOTUtNDcxOC1iZDBkLTM3NWIzNzM2NmM4My9vYXV0aDIvYXV0aG9yaXplP3Jlc3BvbnNlX3R5cGU9Y29kZSZjbGllbnRfaWQ9YTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWViJnNjb3BlPW9wZW5pZCZub25jZT00ZmMwNTQyMS05ODE0LTQ2ZDQtODkzNi0yNGQ5ZTBjZGYzMWImcmVkaXJlY3RfdXJpPWh0dHBzJTNhJTJmJTJmYTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWViLmV1LmJvZWhyaW5nZXIuY29tJTJmJnN0YXRlPUFwcFByb3h5U3RhdGUlM2ElN2IlMjJJbnZhbGlkVG9rZW5SZXRyeSUyMiUzYW51bGwlMmMlMjJJc01zb2ZiYSUyMiUzYWZhbHNlJTJjJTIyT3JpZ2luYWxSYXdVcmwlMjIlM2ElMjJodHRwcyUzYSU1YyUyZiU1YyUyZmNvcmFxYS5ldS5ib2VocmluZ2VyLmNvbSU1YyUyZiUyMiUyYyUyMlJlcXVlc3RQcm9maWxlSWQlMjIlM2FudWxsJTdkJTIzRW5kT2ZTdGF0ZVBhcmFtJTIzJmNsaWVudC1yZXF1ZXN0LWlkPWY4NGNlODZmLTA3ZWEtNDIyYS05ZGE2LTI0OTNmODBhNTJiYQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUhUVFBBUEkvMi4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAwNSBNYXIgMjAyMCAxMDo0Njo1MiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMzAyIEZvdW5kDQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbS9lMWY4YWY4Ni1lZTk1LTQ3MTgtYmQwZC0zNzViMzczNjZjODMvb2F1dGgyL2F1dGhvcml6ZT9yZXNwb25zZV90eXBlPWNvZGUmY2xpZW50X2lkPWE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYiZzY29wZT1vcGVuaWQmbm9uY2U9NGZjMDU0MjEtOTgxNC00NmQ0LTg5MzYtMjRkOWUwY2RmMzFiJnJlZGlyZWN0X3VyaT1odHRwcyUzYSUyZiUyZmE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYi5ldS5ib2VocmluZ2VyLmNvbSUyZiZzdGF0ZT1BcHBQcm94eVN0YXRlJTNhJTdiJTIySW52YWxpZFRva2VuUmV0cnklMjIlM2FudWxsJTJjJTIySXNNc29mYmElMjIlM2FmYWxzZSUyYyUyMk9yaWdpbmFsUmF3VXJsJTIyJTNhJTIyaHR0cHMlM2ElNWMlMmYlNWMlMmZjb3JhcWEuZXUuYm9laHJpbmdlci5jb20lNWMlMmYlMjIlMmMlMjJSZXF1ZXN0UHJvZmlsZUlkJTIyJTNhbnVsbCU3ZCUyM0VuZE9mU3RhdGVQYXJhbSUyMyZjbGllbnQtcmVxdWVzdC1pZD1mODRjZTg2Zi0wN2VhLTQyMmEtOWRhNi0yNDkzZjgwYTUyYmENClNlcnZlcjogTWljcm9zb2Z0LUhUVFBBUEkvMi4wDQpEYXRlOiBUaHUsIDA1IE1hciAyMDIwIDEwOjQ2OjUyIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPResponse>
      <HTTPTask id="3" hostname="login.microsoftonline.com" path="/e1f8af86-ee95-4718-bd0d-375b37366c83/oauth2/authorize?response_type=code&amp;client_id=a4cc5064-d3dc-4631-b950-aa2561361aeb&amp;scope=openid&amp;nonce=4fc05421-9814-46d4-8936-24d9e0cdf31b&amp;redirect_uri=https%3a%2f%2fa4cc5064-d3dc-4631-b950-aa2561361aeb.eu.boehringer.com%2f&amp;state=AppProxyState%3a%7b%22InvalidTokenRetry%22%3anull%2c%22IsMsofba%22%3afalse%2c%22OriginalRawUrl%22%3a%22https%3a%5c%2f%5c%2fcoraqa.eu.boehringer.com%5c%2f%22%2c%22RequestProfileId%22%3anull%7d%23EndOfStateParam%23&amp;client-request-id=f84ce86f-07ea-422a-9da6-2493f80a52ba" url="https://login.microsoftonline.com/e1f8af86-ee95-4718-bd0d-375b37366c83/oauth2/authorize?response_type=code&amp;client_id=a4cc5064-d3dc-4631-b950-aa2561361aeb&amp;scope=openid&amp;nonce=4fc05421-9814-46d4-8936-24d9e0cdf31b&amp;redirect_uri=https%3a%2f%2fa4cc5064-d3dc-4631-b950-aa2561361aeb.eu.boehringer.com%2f&amp;state=AppProxyState%3a%7b%22InvalidTokenRetry%22%3anull%2c%22IsMsofba%22%3afalse%2c%22OriginalRawUrl%22%3a%22https%3a%5c%2f%5c%2fcoraqa.eu.boehringer.com%5c%2f%22%2c%22RequestProfileId%22%3anull%7d%23EndOfStateParam%23&amp;client-request-id=f84ce86f-07ea-422a-9da6-2493f80a52ba" origin="Redirection" startDateTime="2020-03-05T11:46:53.473+01:00" startTime="3559">
        <QueryString>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cmVzcG9uc2VfdHlwZT1jb2RlJmNsaWVudF9pZD1hNGNjNTA2NC1kM2RjLTQ2MzEtYjk1MC1hYTI1NjEzNjFhZWImc2NvcGU9b3BlbmlkJm5vbmNlPTRmYzA1NDIxLTk4MTQtNDZkNC04OTM2LTI0ZDllMGNkZjMxYiZyZWRpcmVjdF91cmk9aHR0cHMlM2ElMmYlMmZhNGNjNTA2NC1kM2RjLTQ2MzEtYjk1MC1hYTI1NjEzNjFhZWIuZXUuYm9laHJpbmdlci5jb20lMmYmc3RhdGU9QXBwUHJveHlTdGF0ZSUzYSU3YiUyMkludmFsaWRUb2tlblJldHJ5JTIyJTNhbnVsbCUyYyUyMklzTXNvZmJhJTIyJTNhZmFsc2UlMmMlMjJPcmlnaW5hbFJhd1VybCUyMiUzYSUyMmh0dHBzJTNhJTVjJTJmJTVjJTJmY29yYXFhLmV1LmJvZWhyaW5nZXIuY29tJTVjJTJmJTIyJTJjJTIyUmVxdWVzdFByb2ZpbGVJZCUyMiUzYW51bGwlN2QlMjNFbmRPZlN0YXRlUGFyYW0lMjMmY2xpZW50LXJlcXVlc3QtaWQ9Zjg0Y2U4NmYtMDdlYS00MjJhLTlkYTYtMjQ5M2Y4MGE1MmJh</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </QueryString>
        <HTTPSplittedQueryStrings>
          <HTTPHeaderEntity name="response_type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y29kZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="client_id" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWVi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="scope" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>b3Blbmlk</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="nonce" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NGZjMDU0MjEtOTgxNC00NmQ0LTg5MzYtMjRkOWUwY2RmMzFi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="redirect_uri" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHMlM2ElMmYlMmZhNGNjNTA2NC1kM2RjLTQ2MzEtYjk1MC1hYTI1NjEzNjFhZWIuZXUuYm9laHJpbmdlci5jb20lMmY=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="state" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QXBwUHJveHlTdGF0ZSUzYSU3YiUyMkludmFsaWRUb2tlblJldHJ5JTIyJTNhbnVsbCUyYyUyMklzTXNvZmJhJTIyJTNhZmFsc2UlMmMlMjJPcmlnaW5hbFJhd1VybCUyMiUzYSUyMmh0dHBzJTNhJTVjJTJmJTVjJTJmY29yYXFhLmV1LmJvZWhyaW5nZXIuY29tJTVjJTJmJTIyJTJjJTIyUmVxdWVzdFByb2ZpbGVJZCUyMiUzYW51bGwlN2QlMjNFbmRPZlN0YXRlUGFyYW0lMjM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="client-request-id" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Zjg0Y2U4NmYtMDdlYS00MjJhLTlkYTYtMjQ5M2Y4MGE1MmJh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPSplittedQueryStrings>
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="DNT" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZW4tVVM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bG9naW4ubWljcm9zb2Z0b25saW5lLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cache-Control" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bm8tY2FjaGU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9lMWY4YWY4Ni1lZTk1LTQ3MTgtYmQwZC0zNzViMzczNjZjODMvb2F1dGgyL2F1dGhvcml6ZT9yZXNwb25zZV90eXBlPWNvZGUmY2xpZW50X2lkPWE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYiZzY29wZT1vcGVuaWQmbm9uY2U9NGZjMDU0MjEtOTgxNC00NmQ0LTg5MzYtMjRkOWUwY2RmMzFiJnJlZGlyZWN0X3VyaT1odHRwcyUzYSUyZiUyZmE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYi5ldS5ib2VocmluZ2VyLmNvbSUyZiZzdGF0ZT1BcHBQcm94eVN0YXRlJTNhJTdiJTIySW52YWxpZFRva2VuUmV0cnklMjIlM2FudWxsJTJjJTIySXNNc29mYmElMjIlM2FmYWxzZSUyYyUyMk9yaWdpbmFsUmF3VXJsJTIyJTNhJTIyaHR0cHMlM2ElNWMlMmYlNWMlMmZjb3JhcWEuZXUuYm9laHJpbmdlci5jb20lNWMlMmYlMjIlMmMlMjJSZXF1ZXN0UHJvZmlsZUlkJTIyJTNhbnVsbCU3ZCUyM0VuZE9mU3RhdGVQYXJhbSUyMyZjbGllbnQtcmVxdWVzdC1pZD1mODRjZTg2Zi0wN2VhLTQyMmEtOWRhNi0yNDkzZjgwYTUyYmEgSFRUUC8xLjENCkROVDogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMNCkFjY2VwdDogKi8qDQpIb3N0OiBsb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <contentLenght>46079</contentLenght>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Cache-Control" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Pragma" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bm8tY2FjaGU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Encoding" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Expires" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>LTE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Vary" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Strict-Transport-Security" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="X-Content-Type-Options" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bm9zbmlmZg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="X-Frame-Options" index="8">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>REVOWQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Link" index="9">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>PGh0dHBzOi8vYWFkY2RuLm1zYXV0aC5uZXQ+OyByZWw9cHJlY29ubmVjdDsgY3Jvc3NvcmlnaW4=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Link" index="10">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>PGh0dHBzOi8vYWFkY2RuLm1zYXV0aC5uZXQ+OyByZWw9ZG5zLXByZWZldGNo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Link" index="11">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>PGh0dHBzOi8vYWFkY2RuLm1zZnRhdXRoLm5ldD47IHJlbD1kbnMtcHJlZmV0Y2g=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="X-DNS-Prefetch-Control" index="12">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>b24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="x-ms-request-id" index="13">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NmNkNjEzNzQtOTllNi00ODA0LTg2NTMtZGZjMTc4OTAxOTAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="x-ms-ests-server" index="14">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mi4xLjEwMTA0LjE2IC0gQU1TMSBQcm9kU2xpY2Vz</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="P3P" index="15">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q1A9IkRTUCBDVVIgT1RQaSBJTkQgT1RSaSBPTkwgRklOIg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Set-Cookie" index="16">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YnVpZD1BUUFCQUFFQUFBQmVBRnpEd2xselRZR0RMaF9xWWJIOFI0a1JNVHh1YW1QRGc4S25Cb08tMzVUYTg5TjVRMV9rQkdzZzhrTXNCekszT3JKUXFLYi1sT2hheS1FdGtLNkFQX2ZVUHJOOXhNVDczVTdwMmR0UXRXVkVBWTl6YXdfa3ZSSW44NXYxRlVrZ0FBOyBleHBpcmVzPVNhdCwgMDQtQXByLTIwMjAgMTA6NDY6NTMgR01UOyBwYXRoPS87IHNlY3VyZTsgSHR0cE9ubHk7IFNhbWVTaXRlPU5vbmU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Set-Cookie" index="17">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZnBjPUFwLTVLU0ctUzdoR3VTMk54TU0zWEw5ZTNuVkFBUUFBQUozUDh0VU9BQUFBOyBleHBpcmVzPVNhdCwgMDQtQXByLTIwMjAgMTA6NDY6NTMgR01UOyBwYXRoPS87IHNlY3VyZTsgSHR0cE9ubHk7IFNhbWVTaXRlPU5vbmU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Set-Cookie" index="18">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZXNjdHg9QVFBQkFBQUFBQUJlQUZ6RHdsbHpUWUdETGhfcVliSDhodTFPdndaNFo5bWd5WDFMeUtqR3BvdVYxejlyLXpVN0hjTDZuUFBtLWlUVEJodGxHbS12T1BKdWY0ZzdhMGZUWFdVQUdSdHJyRjcyZ1FZSC13Z3V5ZHVaSEVhNjByTVZ1NmlZd0pXbkZBWVNPYnNET25ud1poRHhjYWk2YndjcmJkd3B6a2RvRFQ1S1RsQUdXWWFIWmZvWnpZMnptYUVfWEhmaEpzRjZsa1FnQUE7IGRvbWFpbj0ubG9naW4ubWljcm9zb2Z0b25saW5lLmNvbTsgcGF0aD0vOyBzZWN1cmU7IEh0dHBPbmx5OyBTYW1lU2l0ZT1Ob25l</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Set-Cookie" index="19">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>eC1tcy1nYXRld2F5LXNsaWNlPXByb2Q7IHBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgc2VjdXJlOyBIdHRwT25seQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Set-Cookie" index="20">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>c3Rzc2VydmljZWNvb2tpZT1lc3RzOyBwYXRoPS87IFNhbWVTaXRlPU5vbmU7IHNlY3VyZTsgSHR0cE9ubHk=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="21">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAwNSBNYXIgMjAyMCAxMDo0Njo1MyBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="22">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDYwNzk=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZSwgbm8tc3RvcmUNClByYWdtYTogbm8tY2FjaGUNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04DQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpFeHBpcmVzOiAtMQ0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWlucw0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1GcmFtZS1PcHRpb25zOiBERU5ZDQpMaW5rOiA8aHR0cHM6Ly9hYWRjZG4ubXNhdXRoLm5ldD47IHJlbD1wcmVjb25uZWN0OyBjcm9zc29yaWdpbg0KTGluazogPGh0dHBzOi8vYWFkY2RuLm1zYXV0aC5uZXQ+OyByZWw9ZG5zLXByZWZldGNoDQpMaW5rOiA8aHR0cHM6Ly9hYWRjZG4ubXNmdGF1dGgubmV0PjsgcmVsPWRucy1wcmVmZXRjaA0KWC1ETlMtUHJlZmV0Y2gtQ29udHJvbDogb24NCngtbXMtcmVxdWVzdC1pZDogNmNkNjEzNzQtOTllNi00ODA0LTg2NTMtZGZjMTc4OTAxOTAwDQp4LW1zLWVzdHMtc2VydmVyOiAyLjEuMTAxMDQuMTYgLSBBTVMxIFByb2RTbGljZXMNClAzUDogQ1A9IkRTUCBDVVIgT1RQaSBJTkQgT1RSaSBPTkwgRklOIg0KU2V0LUNvb2tpZTogYnVpZD1BUUFCQUFFQUFBQmVBRnpEd2xselRZR0RMaF9xWWJIOFI0a1JNVHh1YW1QRGc4S25Cb08tMzVUYTg5TjVRMV9rQkdzZzhrTXNCekszT3JKUXFLYi1sT2hheS1FdGtLNkFQX2ZVUHJOOXhNVDczVTdwMmR0UXRXVkVBWTl6YXdfa3ZSSW44NXYxRlVrZ0FBOyBleHBpcmVzPVNhdCwgMDQtQXByLTIwMjAgMTA6NDY6NTMgR01UOyBwYXRoPS87IHNlY3VyZTsgSHR0cE9ubHk7IFNhbWVTaXRlPU5vbmUNClNldC1Db29raWU6IGZwYz1BcC01S1NHLVM3aEd1UzJOeE1NM1hMOWUzblZBQVFBQUFKM1A4dFVPQUFBQTsgZXhwaXJlcz1TYXQsIDA0LUFwci0yMDIwIDEwOjQ2OjUzIEdNVDsgcGF0aD0vOyBzZWN1cmU7IEh0dHBPbmx5OyBTYW1lU2l0ZT1Ob25lDQpTZXQtQ29va2llOiBlc2N0eD1BUUFCQUFBQUFBQmVBRnpEd2xselRZR0RMaF9xWWJIOGh1MU92d1o0WjltZ3lYMUx5S2pHcG91VjF6OXItelU3SGNMNm5QUG0taVRUQmh0bEdtLXZPUEp1ZjRnN2EwZlRYV1VBR1J0cnJGNzJnUVlILXdndXlkdVpIRWE2MHJNVnU2aVl3SlduRkFZU09ic0RPbm53WmhEeGNhaTZid2NyYmR3cHprZG9EVDVLVGxBR1dZYUhaZm9aelkyem1hRV9YSGZoSnNGNmxrUWdBQTsgZG9tYWluPS5sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tOyBwYXRoPS87IHNlY3VyZTsgSHR0cE9ubHk7IFNhbWVTaXRlPU5vbmUNClNldC1Db29raWU6IHgtbXMtZ2F0ZXdheS1zbGljZT1wcm9kOyBwYXRoPS87IFNhbWVTaXRlPU5vbmU7IHNlY3VyZTsgSHR0cE9ubHkNClNldC1Db29raWU6IHN0c3NlcnZpY2Vjb29raWU9ZXN0czsgcGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBzZWN1cmU7IEh0dHBPbmx5DQpEYXRlOiBUaHUsIDA1IE1hciAyMDIwIDEwOjQ2OjUzIEdNVA0KQ29udGVudC1MZW5ndGg6IDQ2MDc5DQoNCg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData></ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
        <HTTPTask id="4" hostname="aadcdn.msauth.net" path="/ests/2.1/content/cdnbundles/ux.old.converged.login.pcore.min_c395chxpumwymgumps5atw2.js" url="https://aadcdn.msauth.net/ests/2.1/content/cdnbundles/ux.old.converged.login.pcore.min_c395chxpumwymgumps5atw2.js" origin="HTML" ordinal="1" startDateTime="2020-03-05T11:46:54.136+01:00" startTime="4222">
          <HTTPRequest method="GET">
            <HTTPHeaders>
              <HTTPHeaderEntity name="Referer" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>aHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tL2UxZjhhZjg2LWVlOTUtNDcxOC1iZDBkLTM3NWIzNzM2NmM4My9vYXV0aDIvYXV0aG9yaXplP3Jlc3BvbnNlX3R5cGU9Y29kZSZjbGllbnRfaWQ9YTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWViJnNjb3BlPW9wZW5pZCZub25jZT00ZmMwNTQyMS05ODE0LTQ2ZDQtODkzNi0yNGQ5ZTBjZGYzMWImcmVkaXJlY3RfdXJpPWh0dHBzJTNhJTJmJTJmYTRjYzUwNjQtZDNkYy00NjMxLWI5NTAtYWEyNTYxMzYxYWViLmV1LmJvZWhyaW5nZXIuY29tJTJmJnN0YXRlPUFwcFByb3h5U3RhdGUlM2ElN2IlMjJJbnZhbGlkVG9rZW5SZXRyeSUyMiUzYW51bGwlMmMlMjJJc01zb2ZiYSUyMiUzYWZhbHNlJTJjJTIyT3JpZ2luYWxSYXdVcmwlMjIlM2ElMjJodHRwcyUzYSU1YyUyZiU1YyUyZmNvcmFxYS5ldS5ib2VocmluZ2VyLmNvbSU1YyUyZiUyMiUyYyUyMlJlcXVlc3RQcm9maWxlSWQlMjIlM2FudWxsJTdkJTIzRW5kT2ZTdGF0ZVBhcmFtJTIzJmNsaWVudC1yZXF1ZXN0LWlkPWY4NGNlODZmLTA3ZWEtNDIyYS05ZGE2LTI0OTNmODBhNTJiYQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="DNT" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="User-Agent" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Encoding" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Language" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>ZW4tVVM=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Ki8q</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Host" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YWFkY2RuLm1zYXV0aC5uZXQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="7">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Cache-Control" index="8">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bm8tY2FjaGU=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>R0VUIC9lc3RzLzIuMS9jb250ZW50L2NkbmJ1bmRsZXMvdXgub2xkLmNvbnZlcmdlZC5sb2dpbi5wY29yZS5taW5fYzM5NWNoeHB1bXd5bWd1bXBzNWF0dzIuanMgSFRUUC8xLjENClJlZmVyZXI6IGh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbS9lMWY4YWY4Ni1lZTk1LTQ3MTgtYmQwZC0zNzViMzczNjZjODMvb2F1dGgyL2F1dGhvcml6ZT9yZXNwb25zZV90eXBlPWNvZGUmY2xpZW50X2lkPWE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYiZzY29wZT1vcGVuaWQmbm9uY2U9NGZjMDU0MjEtOTgxNC00NmQ0LTg5MzYtMjRkOWUwY2RmMzFiJnJlZGlyZWN0X3VyaT1odHRwcyUzYSUyZiUyZmE0Y2M1MDY0LWQzZGMtNDYzMS1iOTUwLWFhMjU2MTM2MWFlYi5ldS5ib2VocmluZ2VyLmNvbSUyZiZzdGF0ZT1BcHBQcm94eVN0YXRlJTNhJTdiJTIySW52YWxpZFRva2VuUmV0cnklMjIlM2FudWxsJTJjJTIySXNNc29mYmElMjIlM2FmYWxzZSUyYyUyMk9yaWdpbmFsUmF3VXJsJTIyJTNhJTIyaHR0cHMlM2ElNWMlMmYlNWMlMmZjb3JhcWEuZXUuYm9laHJpbmdlci5jb20lNWMlMmYlMjIlMmMlMjJSZXF1ZXN0UHJvZmlsZUlkJTIyJTNhbnVsbCU3ZCUyM0VuZE9mU3RhdGVQYXJhbSUyMyZjbGllbnQtcmVxdWVzdC1pZD1mODRjZTg2Zi0wN2VhLTQyMmEtOWRhNi0yNDkzZjgwYTUyYmENCkROVDogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMNCkFjY2VwdDogKi8qDQpIb3N0OiBhYWRjZG4ubXNhdXRoLm5ldA0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUNCg0K</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
            </HTTPHeaders>
          </HTTPRequest>
          <HTTPResponse>
            <contentLenght>161621</contentLenght>
            <HTTPHeaders>
              <HTTPHeaderEntity name="Cache-Control" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Length" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MTYxNjIx</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Type" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Encoding" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Z3ppcA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-MD5" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>clVkNzA3aU1SaTA0QTZzRzdBeE9BQT09</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Last-Modified" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VHVlLCAwNCBGZWIgMjAyMCAwMjozOTowMCBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="ETag" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MHg4RDdBOTFCNjNEQUY1M0Q=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Server" index="7">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>V2luZG93cy1BenVyZS1CbG9iLzEuMCBNaWNyb3NvZnQtSFRUUEFQSS8yLjA=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="X-Cache" index="8">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VENQX0hJVA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="x-ms-request-id" index="9">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDEwYjI0MjQtYjAxZS0wMDEwLTY3MGItZjI4NzUxMDAwMDAw</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="x-ms-version" index="10">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MjAwOS0wOS0xOQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="x-ms-lease-status" index="11">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>dW5sb2NrZWQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="x-ms-blob-type" index="12">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>QmxvY2tCbG9i</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Access-Control-Expose-Headers" index="13">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>eC1tcy1yZXF1ZXN0LWlkLFNlcnZlcix4LW1zLXZlcnNpb24sQ29udGVudC1UeXBlLENvbnRlbnQtRW5jb2RpbmcsQ2FjaGUtQ29udHJvbCxMYXN0LU1vZGlmaWVkLEVUYWcsQ29udGVudC1NRDUseC1tcy1sZWFzZS1zdGF0dXMseC1tcy1ibG9iLXR5cGUsQ29udGVudC1MZW5ndGgsRGF0ZSxUcmFuc2Zlci1FbmNvZGluZw==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Access-Control-Allow-Origin" index="14">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Kg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="X-Azure-Ref-OriginShield" index="15">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MEZxNWZYZ0FBQUFCdEFoMExRajk5UTZCdC9ObW0rTUZnVEU5T01qRkZSRWRGTURNeE5BQXpPV0V4TW1ZM1pTMDRPVGxtTFRRMlkyWXRZVFprTUMweU5HSmlZbUV5TjJRNU5UWT0=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="X-Azure-Ref" index="16">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MG50aGdYZ0FBQUFCcHlJakthSzl4VGJkQzExWFhpOU5uUWtOT016QkZSRWRGTURNeE53QXpPV0V4TW1ZM1pTMDRPVGxtTFRRMlkyWXRZVFprTUMweU5HSmlZbUV5TjJRNU5UWT0=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Date" index="17">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VGh1LCAwNSBNYXIgMjAyMCAxMDo0Njo1NCBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMsIG1heC1hZ2U9MzE1MzYwMDANCkNvbnRlbnQtTGVuZ3RoOiAxNjE2MjENCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC1qYXZhc2NyaXB0DQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpDb250ZW50LU1ENTogclVkNzA3aU1SaTA0QTZzRzdBeE9BQT09DQpMYXN0LU1vZGlmaWVkOiBUdWUsIDA0IEZlYiAyMDIwIDAyOjM5OjAwIEdNVA0KRVRhZzogMHg4RDdBOTFCNjNEQUY1M0QNClNlcnZlcjogV2luZG93cy1BenVyZS1CbG9iLzEuMCBNaWNyb3NvZnQtSFRUUEFQSS8yLjANClgtQ2FjaGU6IFRDUF9ISVQNCngtbXMtcmVxdWVzdC1pZDogNDEwYjI0MjQtYjAxZS0wMDEwLTY3MGItZjI4NzUxMDAwMDAwDQp4LW1zLXZlcnNpb246IDIwMDktMDktMTkNCngtbXMtbGVhc2Utc3RhdHVzOiB1bmxvY2tlZA0KeC1tcy1ibG9iLXR5cGU6IEJsb2NrQmxvYg0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IHgtbXMtcmVxdWVzdC1pZCxTZXJ2ZXIseC1tcy12ZXJzaW9uLENvbnRlbnQtVHlwZSxDb250ZW50LUVuY29kaW5nLENhY2hlLUNvbnRyb2wsTGFzdC1Nb2RpZmllZCxFVGFnLENvbnRlbnQtTUQ1LHgtbXMtbGVhc2Utc3RhdHVzLHgtbXMtYmxvYi10eXBlLENvbnRlbnQtTGVuZ3RoLERhdGUsVHJhbnNmZXItRW5jb2RpbmcNCkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjogKg0KWC1BenVyZS1SZWYtT3JpZ2luU2hpZWxkOiAwRnE1ZlhnQUFBQUJ0QWgwTFFqOTlRNkJ0L05tbStNRmdURTlPTWpGRlJFZEZNRE14TkFBek9XRXhNbVkzWlMwNE9UbG1MVFEyWTJZdFlUWmtNQzB5TkdKaVltRXlOMlE1TlRZPQ0KWC1BenVyZS1SZWY6IDBudGhnWGdBQUFBQnB5SWpLYUs5eFRiZEMxMVhYaTlOblFrTk9NekJGUkVkRk1ETXhOd0F6T1dFeE1tWTNaUzA0T1RsbUxUUTJZMll0WVRaa01DMHlOR0ppWW1FeU4yUTVOVFk9DQpEYXRlOiBUaHUsIDA1IE1hciAyMDIwIDEwOjQ2OjU0IEdNVA0KDQo=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
            </HTTPHeaders>
            <HTTPBody>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>LyohCiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gU1RBUlQgT0YgVEhJUkQgUEFSVFkgTk9USUNFIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQogKiANCiAqIFRoaXMgZmlsZSBpcyBiYXNlZCBvbiBvciBpbmNvcnBvcmF0ZXMgbWF0ZXJpYWwgZnJvbSB0aGUgcHJvamVjdHMgbGlzdGVkIGJlbG93IChUaGlyZCBQYXJ0eSBJUCkuIFRoZSBvcmlnaW5hbCBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGUgbGljZW5zZSB1bmRlciB3aGljaCBNaWNyb3NvZnQgcmVjZWl2ZWQgc3VjaCBUaGlyZCBQYXJ0eSBJUCwgYXJlIHNldCBmb3J0aCBiZWxvdy4gU3VjaCBsaWNlbnNlcyBhbmQgbm90aWNlcyBhcmUgcHJvdmlkZWQgZm9yIGluZm9ybWF0aW9uYWwgcHVycG9zZXMgb25seS4gTWljcm9zb2Z0IGxpY2Vuc2VzIHRoZSBUaGlyZCBQYXJ0eSBJUCB0byB5b3UgdW5kZXIgdGhlIGxpY2Vuc2luZyB0ZXJtcyBmb3IgdGhlIE1pY3Jvc29mdCBwcm9kdWN0LiBNaWNyb3NvZnQgcmVzZXJ2ZXMgYWxsIG90aGVyIHJpZ2h0cyBub3QgZXhwcmVzc2x5IGdyYW50ZWQgdW5kZXIgdGhpcyBhZ3JlZW1lbnQsIHdoZXRoZXIgYnkgaW1wbGljYXRpb24sIGVzdG9wcGVsIG9yIG90aGVyd2lzZS4NCiAqIA0KICogICBqc29uMi5qcyAoMjAxNi0wNS0wMSkNCiAqICAgaHR0cHM6Ly9naXRodWIuY29tL2RvdWdsYXNjcm9ja2ZvcmQvSlNPTi1qcw0KICogICBMaWNlbnNlOiBQdWJsaWMgRG9tYWluDQogKiANCiAqIFByb3ZpZGVkIGZvciBJbmZvcm1hdGlvbmFsIFB1cnBvc2VzIE9ubHkNCiAqIA0KICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gRU5EIE9GIFRISVJEIFBBUlRZIE5PVElDRSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICovCiFmdW5jdGlvbihlKXtmdW5jdGlvbiB0KG4pe2lmKGlbbl0pcmV0dXJuIGlbbl0uZXhwb3J0czt2YXIgbz1pW25dPXtleHBvcnRzOnt9LGlkOm4sbG9hZGVkOiExfTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyx0KSxvLmxvYWRlZD0hMCxvLmV4cG9ydHN9dmFyIG49d2luZG93LndlYnBhY2tKc29ucDt3aW5kb3cud2VicGFja0pzb25wPWZ1bmN0aW9uKGksYSl7Zm9yKHZhciByLHMsYz0wLGQ9W107YzxpLmxlbmd0aDtjKyspcz1pW2NdLG9bc10mJmQucHVzaC5hcHBseShkLG9bc10pLG9bc109MDtmb3IociBpbiBhKWVbcl09YVtyXTtmb3IobiYmbihpLGEpO2QubGVuZ3RoOylkLnNoaWZ0KCkuY2FsbChudWxsLHQpfTt2YXIgaT17fSxvPXswOjB9O3JldHVybiBvWzJdPVtdLG9bM109W10sdC5lPWZ1bmN0aW9uKGUsbil7aWYoMD09PW9bZV0pcmV0dXJuIG4uY2FsbChudWxsLHQpO2lmKHZvaWQgMCE9PW9bZV0pb1tlXS5wdXNoKG4pO2Vsc2V7b1tlXT1bbl07dmFyIGk9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXSxhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2EudHlwZT0idGV4dC9qYXZhc2NyaXB0IixhLmNoYXJzZXQ9InV0Zi04IixhLmFzeW5jPSEwLGEuc3JjPSh0LnArd2luZG93LlNlcnZlckRhdGEuc0FzeW5jQ2h1bmtQYXRoKyJjb250ZW50L2pzL2FzeW5jY2h1bmsvb2xkY29udmVyZ2VkbG9naW5fcCIrKHsxOiJwb3AiLDI6ImFsdCIsMzoid2l6YXJkIiwibnVsbCI6ImVzdHNsb2dpbl9zaWdudXB1c2VybmFtZSJ9W2VdfHxlKSsiXyIrezE6ImUwOTI1MjExZmExY2YwZDJiMzkwIiwyOiIyZDYyMjVkNDZmOWQ1Njg2NjY4ZSIsMzoiMTk5MDU3ZDJhMGQ4ZTg1MjRkNmEifVtlXSsiLmpzIikudG9Mb3dlckNhc2UoKSxpLmFwcGVuZENoaWxkKGEpfX0sdC5tPWUsdC5jPWksdC5wPSIiLHQoMCl9KFtmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtzKGUudXJsSVB2NkV4cGVyaW1lbnQpLHIoZSl9ZnVuY3Rpb24gbyhlKXt0cnl7aWYodG9wIT09c2VsZiYmdG9wLmxvY2F0aW9uLnJlcGxhY2Uoc2VsZi5sb2NhdGlvbi5ocmVmKSwyPT09ZS5pRmVkU3RhdGUmJmUudXJsRmVkKXJldHVybiBhKGUudXJsRmVkLGUuaURlZmF1bHRMb2dpbk9wdGlvbnMsZGVjb2RlVVJJQ29tcG9uZW50KGIuZXh0cmFjdCgidXNlcm5hbWUiKSksZSksITA7aWYoIV8uZW5hYmxlZCgpKXJldHVybiBkb2N1bWVudC5sb2NhdGlvbj1lLnVybE5vQ29va2llcywhMH1jYXRjaCh0KXtlLmlMb2dpbk1vZGU9di5HZW5lcmljRXJyb3J9cmV0dXJuITF9ZnVuY3Rpb24gYShlLHQsbixpKXt2YXIgbz1pLnNGZWRRUztyZXR1cm4gdD09PVMuTm90aGluZ0NoZWNrZWQmJihvPWIuYXBwZW5kT3JSZXBsYWNlKCI/IitvLCJ3Y3R4IiwiTG9naW5PcHRpb25zJTNEMyUyNiIrYi5leHRyYWN0KCJ3Y3R4IiwiPyIrbykpLnN1YnN0cigxKSksZT1iLmFwcGVuZE9yUmVwbGFjZShlLCJjYmN4dCIsZW5jb2RlVVJJQ29tcG9uZW50KGRlY29kZVVSSUNvbXBvbmVudChiLmV4dHJhY3QoImNiY3h0IikpKSksZT1iLmFwcGVuZE9yUmVwbGFjZShlLCJ2diIsZW5jb2RlVVJJQ29tcG9uZW50KGRlY29kZVVSSUNvbXBvbmVudChiLmV4dHJhY3QoImNiY3h0IikpKSksZT1iLmFwcGVuZE9yUmVwbGFjZShlLCJ1c2VybmFtZSIsZW5jb2RlVVJJQ29tcG9uZW50KG4pKSxlPWIuYXBwZW5kT3JSZXBsYWNlKGUsIm1rdCIsZW5jb2RlVVJJQ29tcG9uZW50KGRlY29kZVVSSUNvbXBvbmVudChiLmV4dHJhY3QoIm1rdCIpKSkpLGU9Yi5hcHBlbmRPclJlcGxhY2UoZSwibGMiLGVuY29kZVVSSUNvbXBvbmVudChkZWNvZGVVUklDb21wb25lbnQoYi5leHRyYWN0KCJsYyIpKSkpLGRvY3VtZW50LmxvY2F0aW9uLnJlcGxhY2UoYi5hcHBlbmQoZSxvKSksITB9ZnVuY3Rpb24gcihlKXtpZihlLmZVcGdyYWRlRVZDZXJ0JiZudWxsIT09bmV3IFJlZ0V4cCgiV2luZG93cyBOVCAoWzAtOV17MSx9Wy4wLTldezAsfSkiKS5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQpJiZwYXJzZUZsb2F0KFJlZ0V4cC4kMSk8NiYmaC5nZXRJRVZlcnNpb24oKT49Nyl0cnl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImV2Iik7dC5zcmM9ZS51cmxFVkNlcnRVcGdyYWRlfWNhdGNoKG4pe319ZnVuY3Rpb24gcyhlKXtpZihlKXt2YXIgdD1uZXcgSW1hZ2U7dC5zcmM9ZX19dmFyIGM9d2luZG93O24ucD1jLlNlcnZlckRhdGEudXJsQ2RuLGMuU2VydmVyRGF0YS51cmxJbWFnZVBhdGg9Yy5TZXJ2ZXJEYXRhLnVybENkbisiaW1hZ2VzLyI7dmFyIGQ9bigxKSxsPW4oNCksdT1uKDUpLHA9big5KSxmPW4oMTUpLGc9bigxNiksbT1uKDE3KSx2PXUuTG9naW5Nb2RlLGg9cC5IZWxwZXIsYj1wLlF1ZXJ5U3RyaW5nLF89cC5Db29raWVzLFM9Zy5Mb2dpbk9wdGlvbix3PSExO2wuYXBwbHlFeHRlbnNpb25zKGQpLGQudXRpbHMucmVnaXN0ZXJFdmVudEhhbmRsZXIoYywibG9hZCIsZnVuY3Rpb24oKXt2YXIgZT1jLlNlcnZlckRhdGE7aWYoZS5zdHI9Zi5nZXRTdHJpbmdzKCJzdHIiLGUpLGUuaHRtbD1mLmdldFN0cmluZ3MoImh0bWwiLGUpLGUuYXJyUHJvb2ZEYXRhPWYuZ2V0U3RyaW5ncygicHJvb2ZEYXRhIiksIXcmJiFvKGUpKXN3aXRjaCh3PSEwLGUuaUxvZ2luTW9kZSl7Y2FzZSB2LkdlbmVyaWNFcnJvcjpjYXNlIHYuR2VuZXJpY0Vycm9yTW9iaWxlOmNhc2Ugdi5HZW5lcmljRXJyb3JIb3N0OmNhc2Ugdi5Td2l0Y2hVc2VyOmNhc2Ugdi5Td2l0Y2hVc2VyTW9iaWxlOmNhc2Ugdi5Td2l0Y2hVc2VySG9zdDpjYXNlIHYuSW52aXRlQmxvY2tlZDpjYXNlIHYuU2VydmljZUJsb2NrZWQ6Y2FzZSB2LklEUEZhaWxlZDpjYXNlIHYuSElQX0xvY2tvdXQ6Y2FzZSB2LkhJUF9Mb2Nrb3V0TW9iaWxlOmNhc2Ugdi5ISVBfTG9ja291dEhvc3Q6Y2FzZSB2LkJpbmRGYWlsZWQ6bi5lKDIsZnVuY3Rpb24oKXt2YXIgdD1uKDUxNik7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSkuaW5uZXJIVE1MPW4oNTE3KSxkLmFwcGx5QmluZGluZ3MobmV3IHQoZSkpLGkoZSl9KTticmVhaztkZWZhdWx0OmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpLmlubmVySFRNTD1uKDM4NCksZC5hcHBseUJpbmRpbmdzKG5ldyBtKGUpKSxpKGUpfX0pfSxmdW5jdGlvbihlLHQsbil7dmFyIGk9d2luZG93LG89aS5kb2N1bWVudCxhPW8uZG9jdW1lbnRNb2RlLHI9aS5uYXZpZ2F0b3I7IWZ1bmN0aW9uKCl7dmFyIHQ9bnVsbCxvPXIudXNlckFnZW50LHM9bnVsbCxjPW8ubWF0Y2goL01TSUUgKFteIF0rKS8pO2lmKGMmJih0PXBhcnNlSW50KGNbMV0pKSwiZnVuY3Rpb24iPT10eXBlb2YgaS5TeW1ib2wmJm8ubWF0Y2goL0FwcGxlV2ViS2l0XC82MDEvKSYmKGkuU3ltYm9sPW51bGwpLHQmJmEmJnQhPT1hJiZPYmplY3QuZGVmaW5lUHJvcGVydHkpdHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJ1c2VyQWdlbnQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gc319KSxzPW8ucmVwbGFjZSgvTVNJRSBbXiBdKy8sIk1TSUUgIithKyIuMCIpLGUuZXhwb3J0cz1uKDIpLHM9b31jYXRjaChkKXtlLmV4cG9ydHM9bigyKX1lbHNlIGUuZXhwb3J0cz1uKDIpfSgpfSxmdW5jdGlvbihlLHQsbil7KGZ1bmN0aW9uKHQpe2UuZXhwb3J0cz10LmtvPW4oMyl9KS5jYWxsKHQsZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaSxvLGE7LyohCgkgKiBLbm9ja291dCBKYXZhU2NyaXB0IGxpYnJhcnkgdjMuNS4wCgkgKiAoYykgVGhlIEtub2Nrb3V0LmpzIHRlYW0gLSBodHRwOi8va25vY2tvdXRqcy5jb20vCgkgKiBMaWNlbnNlOiBNSVQgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwKQoJICovCiFmdW5jdGlvbigpeyFmdW5jdGlvbihyKXt2YXIgcz10aGlzfHwoMCxldmFsKSgidGhpcyIpLGM9cy5kb2N1bWVudCxkPXMubmF2aWdhdG9yLGw9cy5qUXVlcnksdT1zLkpTT047bHx8InVuZGVmaW5lZCI9PXR5cGVvZiBqUXVlcnl8fChsPWpRdWVyeSksZnVuY3Rpb24ocil7bz1bdCxuXSxpPXIsYT0iZnVuY3Rpb24iPT10eXBlb2YgaT9pLmFwcGx5KHQsbyk6aSwhKHZvaWQgMCE9PWEmJihlLmV4cG9ydHM9YSkpfShmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSx0KXtyZXR1cm4obnVsbD09PWV8fHR5cGVvZiBlIGluIG0pJiZlPT09dH1mdW5jdGlvbiBpKGUsdCl7dmFyIG47cmV0dXJuIGZ1bmN0aW9uKCl7bnx8KG49Zy5hLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtuPXIsZSgpfSx0KSl9fWZ1bmN0aW9uIG8oZSx0KXt2YXIgbjtyZXR1cm4gZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQobiksbj1nLmEuc2V0VGltZW91dChlLHQpfX1mdW5jdGlvbiBhKGUsdCl7dCYmImNoYW5nZSIhPT10PyJiZWZvcmVDaGFuZ2UiPT09dD90aGlzLm9jKGUpOnRoaXMuYmIoZSx0KTp0aGlzLnBjKGUpfWZ1bmN0aW9uIHAoZSx0KXtudWxsIT09dCYmdC5zJiZ0LnMoKX1mdW5jdGlvbiBmKGUsdCl7dmFyIG49dGhpcy5wZCxpPW5bU107aS5xYXx8KHRoaXMuUGImJnRoaXMua2JbdF0/KG4udGModCxlLHRoaXMua2JbdF0pLHRoaXMua2JbdF09bnVsbCwtLXRoaXMuUGIpOmkuRlt0XXx8bi50Yyh0LGUsaS5HP3tkYTplfTpuLlpjKGUpKSxlLkthJiZlLmZkKCkpfXZhciBnPSJ1bmRlZmluZWQiIT10eXBlb2YgZT9lOnt9O2cuYj1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1lLnNwbGl0KCIuIiksaT1nLG89MDtvPG4ubGVuZ3RoLTE7bysrKWk9aVtuW29dXTtpW25bbi5sZW5ndGgtMV1dPXR9LGcuSj1mdW5jdGlvbihlLHQsbil7ZVt0XT1ufSxnLnZlcnNpb249IjMuNS4wIixnLmIoInZlcnNpb24iLGcudmVyc2lvbiksZy5vcHRpb25zPXtkZWZlclVwZGF0ZXM6ITEsdXNlT25seU5hdGl2ZUV2ZW50czohMSxmb3JlYWNoSGlkZXNEZXN0cm95ZWQ6ITF9LGcuYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG4gaW4gZSlvLmNhbGwoZSxuKSYmdChuLGVbbl0pfWZ1bmN0aW9uIHQoZSx0KXtpZih0KWZvcih2YXIgbiBpbiB0KW8uY2FsbCh0LG4pJiYoZVtuXT10W25dKTtyZXR1cm4gZX1mdW5jdGlvbiBuKGUsdCl7cmV0dXJuIGUuX19wcm90b19fPXQsZX1mdW5jdGlvbiBpKGUsdCxuLGkpe3ZhciBvPWVbdF0ubWF0Y2goXyl8fFtdO2cuYS5DKG4ubWF0Y2goXyksZnVuY3Rpb24oZSl7Zy5hLk9hKG8sZSxpKX0pLGVbdF09by5qb2luKCIgIil9dmFyIG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxhPXtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSxwPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wsZj17fSxtPXt9O2ZbZCYmL0ZpcmVmb3hcLzIvaS50ZXN0KGQudXNlckFnZW50KT8iS2V5Ym9hcmRFdmVudCI6IlVJRXZlbnRzIl09WyJrZXl1cCIsImtleWRvd24iLCJrZXlwcmVzcyJdLGYuTW91c2VFdmVudHM9ImNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIi5zcGxpdCgiICIpLGUoZixmdW5jdGlvbihlLHQpe2lmKHQubGVuZ3RoKWZvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpO24rKyltW3Rbbl1dPWV9KTt2YXIgdixoPXtwcm9wZXJ0eWNoYW5nZTohMH0sYj1jJiZmdW5jdGlvbigpe2Zvcih2YXIgZT0zLHQ9Yy5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImkiKTt0LmlubmVySFRNTD0iPCEtLVtpZiBndCBJRSAiKyArK2UrIl0+PGk+PC9pPjwhW2VuZGlmXS0tPiIsblswXTspO3JldHVybiA0PGU/ZTpyfSgpLF89L1xTKy9nO3JldHVybntJYzpbImF1dGhlbnRpY2l0eV90b2tlbiIsL15fX1JlcXVlc3RWZXJpZmljYXRpb25Ub2tlbihfLiopPyQvXSxDOmZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIGk9MCxvPWUubGVuZ3RoO2k8bztpKyspdC5jYWxsKG4sZVtpXSxpLGUpfSxBOiJmdW5jdGlvbiI9PXR5cGVvZiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZj9mdW5jdGlvbihlLHQpe3JldHVybiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUsdCl9OmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTAsaT1lLmxlbmd0aDtuPGk7bisrKWlmKGVbbl09PT10KXJldHVybiBuO3JldHVybi0xfSxMYjpmdW5jdGlvbihlLHQsbil7Zm9yKHZhciBpPTAsbz1lLmxlbmd0aDtpPG87aSsrKWlmKHQuY2FsbChuLGVbaV0saSxlKSlyZXR1cm4gZVtpXTtyZXR1cm4gcn0saGI6ZnVuY3Rpb24oZSx0KXt2YXIgbj1nLmEuQShlLHQpOzA8bj9lLnNwbGljZShuLDEpOjA9PT1uJiZlLnNoaWZ0KCl9LHZjOmZ1bmN0aW9uKGUpe3ZhciB0PVtdO3JldHVybiBlJiZnLmEuQyhlLGZ1bmN0aW9uKGUpezA+Zy5hLkEodCxlKSYmdC5wdXNoKGUpfSksdH0sTWI6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPVtdO2lmKGUpZm9yKHZhciBvPTAsYT1lLmxlbmd0aDtvPGE7bysrKWkucHVzaCh0LmNhbGwobixlW29dLG8pKTtyZXR1cm4gaX0sZmI6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPVtdO2lmKGUpZm9yKHZhciBvPTAsYT1lLmxlbmd0aDtvPGE7bysrKXQuY2FsbChuLGVbb10sbykmJmkucHVzaChlW29dKTtyZXR1cm4gaX0sZ2I6ZnVuY3Rpb24oZSx0KXtpZih0IGluc3RhbmNlb2YgQXJyYXkpZS5wdXNoLmFwcGx5KGUsdCk7ZWxzZSBmb3IodmFyIG49MCxpPXQubGVuZ3RoO248aTtuKyspZS5wdXNoKHRbbl0pO3JldHVybiBlfSxPYTpmdW5jdGlvbihlLHQsbil7dmFyIGk9Zy5hLkEoZy5hLiRiKGUpLHQpOzA+aT9uJiZlLnB1c2godCk6bnx8ZS5zcGxpY2UoaSwxKX0sQmE6YSxleHRlbmQ6dCxzZXRQcm90b3R5cGVPZjpuLHpiOmE/bjp0LE86ZSxIYTpmdW5jdGlvbihlLHQsbil7aWYoIWUpcmV0dXJuIGU7dmFyIGksYT17fTtmb3IoaSBpbiBlKW8uY2FsbChlLGkpJiYoYVtpXT10LmNhbGwobixlW2ldLGksZSkpO3JldHVybiBhfSxTYjpmdW5jdGlvbihlKXtmb3IoO2UuZmlyc3RDaGlsZDspZy5yZW1vdmVOb2RlKGUuZmlyc3RDaGlsZCl9LFhiOmZ1bmN0aW9uKGUpe2U9Zy5hLmxhKGUpO2Zvcih2YXIgdD0oZVswXSYmZVswXS5vd25lckRvY3VtZW50fHxjKS5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPTAsaT1lLmxlbmd0aDtuPGk7bisrKXQuYXBwZW5kQ2hpbGQoZy5uYShlW25dKSk7cmV0dXJuIHR9LENhOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTAsaT1lLmxlbmd0aCxvPVtdO248aTtuKyspe3ZhciBhPWVbbl0uY2xvbmVOb2RlKCEwKTtvLnB1c2godD9nLm5hKGEpOmEpfXJldHVybiBvfSx1YTpmdW5jdGlvbihlLHQpe2lmKGcuYS5TYihlKSx0KWZvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpO24rKyllLmFwcGVuZENoaWxkKHRbbl0pfSxXYzpmdW5jdGlvbihlLHQpe3ZhciBuPWUubm9kZVR5cGU/W2VdOmU7aWYoMDxuLmxlbmd0aCl7Zm9yKHZhciBpPW5bMF0sbz1pLnBhcmVudE5vZGUsYT0wLHI9dC5sZW5ndGg7YTxyO2ErKylvLmluc2VydEJlZm9yZSh0W2FdLGkpO2ZvcihhPTAscj1uLmxlbmd0aDthPHI7YSsrKWcucmVtb3ZlTm9kZShuW2FdKX19LFVhOmZ1bmN0aW9uKGUsdCl7aWYoZS5sZW5ndGgpe2Zvcih0PTg9PT10Lm5vZGVUeXBlJiZ0LnBhcmVudE5vZGV8fHQ7ZS5sZW5ndGgmJmVbMF0ucGFyZW50Tm9kZSE9PXQ7KWUuc3BsaWNlKDAsMSk7Zm9yKDsxPGUubGVuZ3RoJiZlW2UubGVuZ3RoLTFdLnBhcmVudE5vZGUhPT10OyllLmxlbmd0aC0tO2lmKDE8ZS5sZW5ndGgpe3ZhciBuPWVbMF0saT1lW2UubGVuZ3RoLTFdO2ZvcihlLmxlbmd0aD0wO24hPT1pOyllLnB1c2gobiksbj1uLm5leHRTaWJsaW5nO2UucHVzaChpKX19cmV0dXJuIGV9LFljOmZ1bmN0aW9uKGUsdCl7Nz5iP2Uuc2V0QXR0cmlidXRlKCJzZWxlY3RlZCIsdCk6ZS5zZWxlY3RlZD10fSxDYjpmdW5jdGlvbihlKXtyZXR1cm4gbnVsbD09PWV8fGU9PT1yPyIiOmUudHJpbT9lLnRyaW0oKTplLnRvU3RyaW5nKCkucmVwbGFjZSgvXltcc1x4YTBdK3xbXHNceGEwXSskL2csIiIpfSxUZDpmdW5jdGlvbihlLHQpe3JldHVybiBlPWV8fCIiLCEodC5sZW5ndGg+ZS5sZW5ndGgpJiZlLnN1YnN0cmluZygwLHQubGVuZ3RoKT09PXR9LHVkOmZ1bmN0aW9uKGUsdCl7aWYoZT09PXQpcmV0dXJuITA7aWYoMTE9PT1lLm5vZGVUeXBlKXJldHVybiExO2lmKHQuY29udGFpbnMpcmV0dXJuIHQuY29udGFpbnMoMSE9PWUubm9kZVR5cGU/ZS5wYXJlbnROb2RlOmUpO2lmKHQuY29tcGFyZURvY3VtZW50UG9zaXRpb24pcmV0dXJuIDE2PT0oMTYmdC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihlKSk7Zm9yKDtlJiZlIT10OyllPWUucGFyZW50Tm9kZTtyZXR1cm4hIWV9LFJiOmZ1bmN0aW9uKGUpe3JldHVybiBnLmEudWQoZSxlLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KX0samQ6ZnVuY3Rpb24oZSl7cmV0dXJuISFnLmEuTGIoZSxnLmEuUmIpfSxQOmZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnRhZ05hbWUmJmUudGFnTmFtZS50b0xvd2VyQ2FzZSgpfSx6YzpmdW5jdGlvbihlKXtyZXR1cm4gZy5vbkVycm9yP2Z1bmN0aW9uKCl7dHJ5e3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaCh0KXt0aHJvdyBnLm9uRXJyb3ImJmcub25FcnJvcih0KSx0fX06ZX0sc2V0VGltZW91dDpmdW5jdGlvbihlLHQpe3JldHVybiBzZXRUaW1lb3V0KGcuYS56YyhlKSx0KX0sRmM6ZnVuY3Rpb24oZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGcub25FcnJvciYmZy5vbkVycm9yKGUpLGV9LDApfSxIOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1nLmEuemMobik7aWYobj1oW3RdLGcub3B0aW9ucy51c2VPbmx5TmF0aXZlRXZlbnRzfHxufHwhbClpZihufHwiZnVuY3Rpb24iIT10eXBlb2YgZS5hZGRFdmVudExpc3RlbmVyKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIGUuYXR0YWNoRXZlbnQpdGhyb3cgRXJyb3IoIkJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGFkZEV2ZW50TGlzdGVuZXIgb3IgYXR0YWNoRXZlbnQiKTt2YXIgbz1mdW5jdGlvbih0KXtpLmNhbGwoZSx0KX0sYT0ib24iK3Q7ZS5hdHRhY2hFdmVudChhLG8pLGcuYS5JLnphKGUsZnVuY3Rpb24oKXtlLmRldGFjaEV2ZW50KGEsbyl9KX1lbHNlIGUuYWRkRXZlbnRMaXN0ZW5lcih0LGksITEpO2Vsc2Ugdnx8KHY9ImZ1bmN0aW9uIj09dHlwZW9mIGwoZSkub24/Im9uIjoiYmluZCIpLGwoZSlbdl0odCxpKX0sRmI6ZnVuY3Rpb24oZSx0KXtpZighZXx8IWUubm9kZVR5cGUpdGhyb3cgRXJyb3IoImVsZW1lbnQgbXVzdCBiZSBhIERPTSBub2RlIHdoZW4gY2FsbGluZyB0cmlnZ2VyRXZlbnQiKTt2YXIgbjtpZigiaW5wdXQiPT09Zy5hLlAoZSkmJmUudHlwZSYmImNsaWNrIj09dC50b0xvd2VyQ2FzZSgpPyhuPWUudHlwZSxuPSJjaGVja2JveCI9PW58fCJyYWRpbyI9PW4pOm49ITEsZy5vcHRpb25zLnVzZU9ubHlOYXRpdmVFdmVudHN8fCFsfHxuKWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBjLmNyZWF0ZUV2ZW50KXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZS5kaXNwYXRjaEV2ZW50KXRocm93IEVycm9yKCJUaGUgc3VwcGxpZWQgZWxlbWVudCBkb2Vzbid0IHN1cHBvcnQgZGlzcGF0Y2hFdmVudCIpO249Yy5jcmVhdGVFdmVudChtW3RdfHwiSFRNTEV2ZW50cyIpLG4uaW5pdEV2ZW50KHQsITAsITAscywwLDAsMCwwLDAsITEsITEsITEsITEsMCxlKSxlLmRpc3BhdGNoRXZlbnQobil9ZWxzZSBpZihuJiZlLmNsaWNrKWUuY2xpY2soKTtlbHNle2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgZS5maXJlRXZlbnQpdGhyb3cgRXJyb3IoIkJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHRyaWdnZXJpbmcgZXZlbnRzIik7ZS5maXJlRXZlbnQoIm9uIit0KX1lbHNlIGwoZSkudHJpZ2dlcih0KX0sYzpmdW5jdGlvbihlKXtyZXR1cm4gZy5OKGUpP2UoKTplfSwkYjpmdW5jdGlvbihlKXtyZXR1cm4gZy5OKGUpP2UudygpOmV9LEViOmZ1bmN0aW9uKGUsdCxuKXt2YXIgbzt0JiYoIm9iamVjdCI9PXR5cGVvZiBlLmNsYXNzTGlzdD8obz1lLmNsYXNzTGlzdFtuPyJhZGQiOiJyZW1vdmUiXSxnLmEuQyh0Lm1hdGNoKF8pLGZ1bmN0aW9uKHQpe28uY2FsbChlLmNsYXNzTGlzdCx0KX0pKToic3RyaW5nIj09dHlwZW9mIGUuY2xhc3NOYW1lLmJhc2VWYWw/aShlLmNsYXNzTmFtZSwiYmFzZVZhbCIsdCxuKTppKGUsImNsYXNzTmFtZSIsdCxuKSl9LEFiOmZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLmModCk7bnVsbCE9PW4mJm4hPT1yfHwobj0iIik7dmFyIGk9Zy5oLmZpcnN0Q2hpbGQoZSk7IWl8fDMhPWkubm9kZVR5cGV8fGcuaC5uZXh0U2libGluZyhpKT9nLmgudWEoZSxbZS5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pXSk6aS5kYXRhPW4sZy5hLnpkKGUpfSxYYzpmdW5jdGlvbihlLHQpe2lmKGUubmFtZT10LDc+PWIpdHJ5e3ZhciBuPWUubmFtZS5yZXBsYWNlKC9bJjw+JyJdL2csZnVuY3Rpb24oZSl7cmV0dXJuIiYjIitlLmNoYXJDb2RlQXQoMCkrIjsifSk7ZS5tZXJnZUF0dHJpYnV0ZXMoYy5jcmVhdGVFbGVtZW50KCI8aW5wdXQgbmFtZT0nIituKyInLz4iKSwhMSl9Y2F0Y2goaSl7fX0semQ6ZnVuY3Rpb24oZSl7OTw9YiYmKGU9MT09ZS5ub2RlVHlwZT9lOmUucGFyZW50Tm9kZSxlLnN0eWxlJiYoZS5zdHlsZS56b29tPWUuc3R5bGUuem9vbSkpfSx2ZDpmdW5jdGlvbihlKXtpZihiKXt2YXIgdD1lLnN0eWxlLndpZHRoO2Uuc3R5bGUud2lkdGg9MCxlLnN0eWxlLndpZHRoPXR9fSxPZDpmdW5jdGlvbihlLHQpe2U9Zy5hLmMoZSksdD1nLmEuYyh0KTtmb3IodmFyIG49W10saT1lO2k8PXQ7aSsrKW4ucHVzaChpKTtyZXR1cm4gbn0sbGE6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLG49MCxpPWUubGVuZ3RoO248aTtuKyspdC5wdXNoKGVbbl0pO3JldHVybiB0fSxEYTpmdW5jdGlvbihlKXtyZXR1cm4gcD9TeW1ib2woZSk6ZX0sWGQ6Nj09PWIsWWQ6Nz09PWIsVzpiLEtjOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPWcuYS5sYShlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpKS5jb25jYXQoZy5hLmxhKGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRleHRhcmVhIikpKSxpPSJzdHJpbmciPT10eXBlb2YgdD9mdW5jdGlvbihlKXtyZXR1cm4gZS5uYW1lPT09dH06ZnVuY3Rpb24oZSl7cmV0dXJuIHQudGVzdChlLm5hbWUpfSxvPVtdLGE9bi5sZW5ndGgtMTswPD1hO2EtLSlpKG5bYV0pJiZvLnB1c2goblthXSk7cmV0dXJuIG99LE1kOmZ1bmN0aW9uKGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgZSYmKGU9Zy5hLkNiKGUpKT91JiZ1LnBhcnNlP3UucGFyc2UoZSk6bmV3IEZ1bmN0aW9uKCJyZXR1cm4gIitlKSgpOm51bGx9LGZjOmZ1bmN0aW9uKGUsdCxuKXtpZighdXx8IXUuc3RyaW5naWZ5KXRocm93IEVycm9yKCJDYW5ub3QgZmluZCBKU09OLnN0cmluZ2lmeSgpLiBTb21lIGJyb3dzZXJzIChlLmcuLCBJRSA8IDgpIGRvbid0IHN1cHBvcnQgaXQgbmF0aXZlbHksIGJ1dCB5b3UgY2FuIG92ZXJjb21lIHRoaXMgYnkgYWRkaW5nIGEgc2NyaXB0IHJlZmVyZW5jZSB0byBqc29uMi5qcywgZG93bmxvYWRhYmxlIGZyb20gaHR0cDovL3d3dy5qc29uLm9yZy9qc29uMi5qcyIpO3JldHVybiB1LnN0cmluZ2lmeShnLmEuYyhlKSx0LG4pfSxOZDpmdW5jdGlvbih0LG4saSl7aT1pfHx7fTt2YXIgbz1pLnBhcmFtc3x8e30sYT1pLmluY2x1ZGVGaWVsZHN8fHRoaXMuSWMscj10O2lmKCJvYmplY3QiPT10eXBlb2YgdCYmImZvcm0iPT09Zy5hLlAodCkpZm9yKHZhciByPXQuYWN0aW9uLHM9YS5sZW5ndGgtMTswPD1zO3MtLSlmb3IodmFyIGQ9Zy5hLktjKHQsYVtzXSksbD1kLmxlbmd0aC0xOzA8PWw7bC0tKW9bZFtsXS5uYW1lXT1kW2xdLnZhbHVlO249Zy5hLmMobik7dmFyIHU9Yy5jcmVhdGVFbGVtZW50KCJmb3JtIik7dS5zdHlsZS5kaXNwbGF5PSJub25lIix1LmFjdGlvbj1yLHUubWV0aG9kPSJwb3N0Ijtmb3IodmFyIHAgaW4gbil0PWMuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSx0LnR5cGU9ImhpZGRlbiIsdC5uYW1lPXAsdC52YWx1ZT1nLmEuZmMoZy5hLmMobltwXSkpLHUuYXBwZW5kQ2hpbGQodCk7ZShvLGZ1bmN0aW9uKGUsdCl7dmFyIG49Yy5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO24udHlwZT0iaGlkZGVuIixuLm5hbWU9ZSxuLnZhbHVlPXQsdS5hcHBlbmRDaGlsZChuKX0pLGMuYm9keS5hcHBlbmRDaGlsZCh1KSxpLnN1Ym1pdHRlcj9pLnN1Ym1pdHRlcih1KTp1LnN1Ym1pdCgpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodSl9LDApfX19KCksZy5iKCJ1dGlscyIsZy5hKSxnLmIoInV0aWxzLmFycmF5Rm9yRWFjaCIsZy5hLkMpLGcuYigidXRpbHMuYXJyYXlGaXJzdCIsZy5hLkxiKSxnLmIoInV0aWxzLmFycmF5RmlsdGVyIixnLmEuZmIpLGcuYigidXRpbHMuYXJyYXlHZXREaXN0aW5jdFZhbHVlcyIsZy5hLnZjKSxnLmIoInV0aWxzLmFycmF5SW5kZXhPZiIsZy5hLkEpLGcuYigidXRpbHMuYXJyYXlNYXAiLGcuYS5NYiksZy5iKCJ1dGlscy5hcnJheVB1c2hBbGwiLGcuYS5nYiksZy5iKCJ1dGlscy5hcnJheVJlbW92ZUl0ZW0iLGcuYS5oYiksZy5iKCJ1dGlscy5jbG9uZU5vZGVzIixnLmEuQ2EpLGcuYigidXRpbHMuY3JlYXRlU3ltYm9sT3JTdHJpbmciLGcuYS5EYSksZy5iKCJ1dGlscy5leHRlbmQiLGcuYS5leHRlbmQpLGcuYigidXRpbHMuZmllbGRzSW5jbHVkZWRXaXRoSnNvblBvc3QiLGcuYS5JYyksZy5iKCJ1dGlscy5nZXRGb3JtRmllbGRzIixnLmEuS2MpLGcuYigidXRpbHMub2JqZWN0TWFwIixnLmEuSGEpLGcuYigidXRpbHMucGVla09ic2VydmFibGUiLGcuYS4kYiksZy5iKCJ1dGlscy5wb3N0SnNvbiIsZy5hLk5kKSxnLmIoInV0aWxzLnBhcnNlSnNvbiIsZy5hLk1kKSxnLmIoInV0aWxzLnJlZ2lzdGVyRXZlbnRIYW5kbGVyIixnLmEuSCksZy5iKCJ1dGlscy5zdHJpbmdpZnlKc29uIixnLmEuZmMpLGcuYigidXRpbHMucmFuZ2UiLGcuYS5PZCksZy5iKCJ1dGlscy50b2dnbGVEb21Ob2RlQ3NzQ2xhc3MiLGcuYS5FYiksZy5iKCJ1dGlscy50cmlnZ2VyRXZlbnQiLGcuYS5GYiksZy5iKCJ1dGlscy51bndyYXBPYnNlcnZhYmxlIixnLmEuYyksZy5iKCJ1dGlscy5vYmplY3RGb3JFYWNoIixnLmEuTyksZy5iKCJ1dGlscy5hZGRPclJlbW92ZUl0ZW0iLGcuYS5PYSksZy5iKCJ1dGlscy5zZXRUZXh0Q29udGVudCIsZy5hLkFiKSxnLmIoInVud3JhcCIsZy5hLmMpLEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9O3ZhciBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaT1uLnNsaWNlKDApO3JldHVybiBpLnB1c2guYXBwbHkoaSxhcmd1bWVudHMpLHQuYXBwbHkoZSxpKX19KSxnLmEuZz1uZXcgZnVuY3Rpb24oKXt2YXIgZSx0LG49MCxpPSJfX2tvX18iKyhuZXcgRGF0ZSkuZ2V0VGltZSgpLG89e307cmV0dXJuIGcuYS5XPyhlPWZ1bmN0aW9uKGUsdCl7dmFyIGE9ZVtpXTtpZighYXx8Im51bGwiPT09YXx8IW9bYV0pe2lmKCF0KXJldHVybiByO2E9ZVtpXT0ia28iK24rKyxvW2FdPXt9fXJldHVybiBvW2FdfSx0PWZ1bmN0aW9uKGUpe3ZhciB0PWVbaV07cmV0dXJuISF0JiYoZGVsZXRlIG9bdF0sZVtpXT1udWxsLCEwKX0pOihlPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZVtpXTtyZXR1cm4hbiYmdCYmKG49ZVtpXT17fSksbn0sdD1mdW5jdGlvbihlKXtyZXR1cm4hIWVbaV0mJihkZWxldGUgZVtpXSwhMCl9KSx7Z2V0OmZ1bmN0aW9uKHQsbil7dmFyIGk9ZSh0LCExKTtyZXR1cm4gaSYmaVtuXX0sc2V0OmZ1bmN0aW9uKHQsbixpKXsodD1lKHQsaSE9PXIpKSYmKHRbbl09aSl9LFRiOmZ1bmN0aW9uKHQsbixpKXtyZXR1cm4gdD1lKHQsITApLHRbbl18fCh0W25dPWkpfSxjbGVhcjp0LFo6ZnVuY3Rpb24oKXtyZXR1cm4gbisrICtpfX19LGcuYigidXRpbHMuZG9tRGF0YSIsZy5hLmcpLGcuYigidXRpbHMuZG9tRGF0YS5jbGVhciIsZy5hLmcuY2xlYXIpLGcuYS5JPW5ldyBmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt2YXIgbj1nLmEuZy5nZXQoZSxpKTtyZXR1cm4gbj09PXImJnQmJihuPVtdLGcuYS5nLnNldChlLGksbikpLG59ZnVuY3Rpb24gdCh0KXt2YXIgaT1lKHQsITEpO2lmKGkpZm9yKHZhciBpPWkuc2xpY2UoMCksbz0wO288aS5sZW5ndGg7bysrKWlbb10odCk7Zy5hLmcuY2xlYXIodCksZy5hLkkuY2xlYW5FeHRlcm5hbERhdGEodCksYVt0Lm5vZGVUeXBlXSYmbih0LmNoaWxkTm9kZXMsITApfWZ1bmN0aW9uIG4oZSxuKXtmb3IodmFyIGksbz1bXSxhPTA7YTxlLmxlbmd0aDthKyspaWYoKCFufHw4PT09ZVthXS5ub2RlVHlwZSkmJih0KG9bby5sZW5ndGhdPWk9ZVthXSksZVthXSE9PWkpKWZvcig7YS0tJiYtMT09Zy5hLkEobyxlW2FdKTspO312YXIgaT1nLmEuZy5aKCksbz17MTohMCw4OiEwLDk6ITB9LGE9ezE6ITAsOTohMH07cmV0dXJue3phOmZ1bmN0aW9uKHQsbil7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIG4pdGhyb3cgRXJyb3IoIkNhbGxiYWNrIG11c3QgYmUgYSBmdW5jdGlvbiIpO2UodCwhMCkucHVzaChuKX0seGI6ZnVuY3Rpb24odCxuKXt2YXIgbz1lKHQsITEpO28mJihnLmEuaGIobyxuKSwwPT1vLmxlbmd0aCYmZy5hLmcuc2V0KHQsaSxyKSl9LG5hOmZ1bmN0aW9uKGUpe3JldHVybiBvW2Uubm9kZVR5cGVdJiYodChlKSxhW2Uubm9kZVR5cGVdJiZuKGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSkpLGV9LHJlbW92ZU5vZGU6ZnVuY3Rpb24oZSl7Zy5uYShlKSxlLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0sY2xlYW5FeHRlcm5hbERhdGE6ZnVuY3Rpb24oZSl7bCYmImZ1bmN0aW9uIj09dHlwZW9mIGwuY2xlYW5EYXRhJiZsLmNsZWFuRGF0YShbZV0pfX19LGcubmE9Zy5hLkkubmEsZy5yZW1vdmVOb2RlPWcuYS5JLnJlbW92ZU5vZGUsZy5iKCJjbGVhbk5vZGUiLGcubmEpLGcuYigicmVtb3ZlTm9kZSIsZy5yZW1vdmVOb2RlKSxnLmIoInV0aWxzLmRvbU5vZGVEaXNwb3NhbCIsZy5hLkkpLGcuYigidXRpbHMuZG9tTm9kZURpc3Bvc2FsLmFkZERpc3Bvc2VDYWxsYmFjayIsZy5hLkkuemEpLGcuYigidXRpbHMuZG9tTm9kZURpc3Bvc2FsLnJlbW92ZURpc3Bvc2VDYWxsYmFjayIsZy5hLkkueGIpLGZ1bmN0aW9uKCl7dmFyIGU9WzAsIiIsIiJdLHQ9WzEsIjx0YWJsZT4iLCI8L3RhYmxlPiJdLG49WzMsIjx0YWJsZT48dGJvZHk+PHRyPiIsIjwvdHI+PC90Ym9keT48L3RhYmxlPiJdLGk9WzEsIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz4iLCI8L3NlbGVjdD4iXSxvPXt0aGVhZDp0LHRib2R5OnQsdGZvb3Q6dCx0cjpbMiwiPHRhYmxlPjx0Ym9keT4iLCI8L3Rib2R5PjwvdGFibGU+Il0sdGQ6bix0aDpuLG9wdGlvbjppLG9wdGdyb3VwOml9LGE9OD49Zy5hLlc7Zy5hLnRhPWZ1bmN0aW9uKHQsbil7dmFyIGk7aWYobCl7aWYobC5wYXJzZUhUTUwpaT1sLnBhcnNlSFRNTCh0LG4pfHxbXTtlbHNlIGlmKChpPWwuY2xlYW4oW3RdLG4pKSYmaVswXSl7Zm9yKHZhciByPWlbMF07ci5wYXJlbnROb2RlJiYxMSE9PXIucGFyZW50Tm9kZS5ub2RlVHlwZTspcj1yLnBhcmVudE5vZGU7ci5wYXJlbnROb2RlJiZyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocil9fWVsc2V7KGk9bil8fChpPWMpO3ZhciBkLHI9aS5wYXJlbnRXaW5kb3d8fGkuZGVmYXVsdFZpZXd8fHMsdT1nLmEuQ2IodCkudG9Mb3dlckNhc2UoKSxwPWkuY3JlYXRlRWxlbWVudCgiZGl2Iik7Zm9yKGQ9KHU9dS5tYXRjaCgvXig/Olx4M2MhLS0uKj8tLVx4M2Vccyo/KSo/PChbYS16XSspW1xzPl0vKSkmJm9bdVsxXV18fGUsdT1kWzBdLGQ9Imlnbm9yZWQ8ZGl2PiIrZFsxXSt0K2RbMl0rIjwvZGl2PiIsImZ1bmN0aW9uIj09dHlwZW9mIHIuaW5uZXJTaGl2P3AuYXBwZW5kQ2hpbGQoci5pbm5lclNoaXYoZCkpOihhJiZpLmJvZHkuYXBwZW5kQ2hpbGQocCkscC5pbm5lckhUTUw9ZCxhJiZwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocCkpO3UtLTspcD1wLmxhc3RDaGlsZDtpPWcuYS5sYShwLmxhc3RDaGlsZC5jaGlsZE5vZGVzKX1yZXR1cm4gaX0sZy5hLkxkPWZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLnRhKGUsdCk7cmV0dXJuIG4ubGVuZ3RoJiZuWzBdLnBhcmVudEVsZW1lbnR8fGcuYS5YYihuKX0sZy5hLmRjPWZ1bmN0aW9uKGUsdCl7aWYoZy5hLlNiKGUpLHQ9Zy5hLmModCksbnVsbCE9PXQmJnQhPT1yKWlmKCJzdHJpbmciIT10eXBlb2YgdCYmKHQ9dC50b1N0cmluZygpKSxsKWwoZSkuaHRtbCh0KTtlbHNlIGZvcih2YXIgbj1nLmEudGEodCxlLm93bmVyRG9jdW1lbnQpLGk9MDtpPG4ubGVuZ3RoO2krKyllLmFwcGVuZENoaWxkKG5baV0pfX0oKSxnLmIoInV0aWxzLnBhcnNlSHRtbEZyYWdtZW50IixnLmEudGEpLGcuYigidXRpbHMuc2V0SHRtbCIsZy5hLmRjKSxnLmFhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4pe2lmKHQpaWYoOD09dC5ub2RlVHlwZSl7dmFyIGk9Zy5hYS5UYyh0Lm5vZGVWYWx1ZSk7bnVsbCE9aSYmbi5wdXNoKHtzZDp0LEpkOml9KX1lbHNlIGlmKDE9PXQubm9kZVR5cGUpZm9yKHZhciBpPTAsbz10LmNoaWxkTm9kZXMsYT1vLmxlbmd0aDtpPGE7aSsrKWUob1tpXSxuKX12YXIgdD17fTtyZXR1cm57V2I6ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgRXJyb3IoIllvdSBjYW4gb25seSBwYXNzIGEgZnVuY3Rpb24gdG8ga28ubWVtb2l6YXRpb24ubWVtb2l6ZSgpIik7dmFyIG49KDQyOTQ5NjcyOTYqKDErTWF0aC5yYW5kb20oKSl8MCkudG9TdHJpbmcoMTYpLnN1YnN0cmluZygxKSsoNDI5NDk2NzI5NiooMStNYXRoLnJhbmRvbSgpKXwwKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDEpO3JldHVybiB0W25dPWUsIjwhLS1ba29fbWVtbzoiK24rIl0tLT4ifSxhZDpmdW5jdGlvbihlLG4pe3ZhciBpPXRbZV07aWYoaT09PXIpdGhyb3cgRXJyb3IoIkNvdWxkbid0IGZpbmQgYW55IG1lbW8gd2l0aCBJRCAiK2UrIi4gUGVyaGFwcyBpdCdzIGFscmVhZHkgYmVlbiB1bm1lbW9pemVkLiIpO3RyeXtyZXR1cm4gaS5hcHBseShudWxsLG58fFtdKSwhMH1maW5hbGx5e2RlbGV0ZSB0W2VdfX0sYmQ6ZnVuY3Rpb24odCxuKXt2YXIgaT1bXTtlKHQsaSk7Zm9yKHZhciBvPTAsYT1pLmxlbmd0aDtvPGE7bysrKXt2YXIgcj1pW29dLnNkLHM9W3JdO24mJmcuYS5nYihzLG4pLGcuYWEuYWQoaVtvXS5KZCxzKSxyLm5vZGVWYWx1ZT0iIixyLnBhcmVudE5vZGUmJnIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChyKX19LFRjOmZ1bmN0aW9uKGUpe3JldHVybihlPWUubWF0Y2goL15cW2tvX21lbW9cOiguKj8pXF0kLykpP2VbMV06bnVsbH19fSgpLGcuYigibWVtb2l6YXRpb24iLGcuYWEpLGcuYigibWVtb2l6YXRpb24ubWVtb2l6ZSIsZy5hYS5XYiksZy5iKCJtZW1vaXphdGlvbi51bm1lbW9pemUiLGcuYWEuYWQpLGcuYigibWVtb2l6YXRpb24ucGFyc2VNZW1vVGV4dCIsZy5hYS5UYyksZy5iKCJtZW1vaXphdGlvbi51bm1lbW9pemVEb21Ob2RlQW5kRGVzY2VuZGFudHMiLGcuYWEuYmQpLGcubWE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7aWYobylmb3IodmFyIGUsdD1vLG49MDtyPG87KWlmKGU9aVtyKytdKXtpZihyPnQpe2lmKDVlMzw9KytuKXtyPW8sZy5hLkZjKEVycm9yKCInVG9vIG11Y2ggcmVjdXJzaW9uJyBhZnRlciBwcm9jZXNzaW5nICIrbisiIHRhc2sgZ3JvdXBzLiIpKTticmVha310PW99dHJ5e2UoKX1jYXRjaChhKXtnLmEuRmMoYSl9fX1mdW5jdGlvbiB0KCl7ZSgpLHI9bz1pLmxlbmd0aD0wfXZhciBuLGk9W10sbz0wLGE9MSxyPTA7cmV0dXJuIG49cy5NdXRhdGlvbk9ic2VydmVyP2Z1bmN0aW9uKGUpe3ZhciB0PWMuY3JlYXRlRWxlbWVudCgiZGl2Iik7cmV0dXJuIG5ldyBNdXRhdGlvbk9ic2VydmVyKGUpLm9ic2VydmUodCx7YXR0cmlidXRlczohMH0pLGZ1bmN0aW9uKCl7dC5jbGFzc0xpc3QudG9nZ2xlKCJmb28iKX19KHQpOmMmJiJvbnJlYWR5c3RhdGVjaGFuZ2UiaW4gYy5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKT9mdW5jdGlvbihlKXt2YXIgdD1jLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO3Qub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7dC5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxjLmRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCh0KSx0PW51bGwsZSgpfSxjLmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCh0KX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChlLDApfSx7c2NoZWR1bGVyOm4seWI6ZnVuY3Rpb24oZSl7cmV0dXJuIG98fGcubWEuc2NoZWR1bGVyKHQpLGlbbysrXT1lLGErK30sY2FuY2VsOmZ1bmN0aW9uKGUpe2UtPWEtbyxlPj1yJiZlPG8mJihpW2VdPW51bGwpfSxyZXNldEZvclRlc3Rpbmc6ZnVuY3Rpb24oKXt2YXIgZT1vLXI7cmV0dXJuIHI9bz1pLmxlbmd0aD0wLGV9LFJkOmV9fSgpLGcuYigidGFza3MiLGcubWEpLGcuYigidGFza3Muc2NoZWR1bGUiLGcubWEueWIpLGcuYigidGFza3MucnVuRWFybHkiLGcubWEuUmQpLGcuVGE9e3Rocm90dGxlOmZ1bmN0aW9uKGUsdCl7ZS50aHJvdHRsZUV2YWx1YXRpb249dDt2YXIgbj1udWxsO3JldHVybiBnLiQoe3JlYWQ6ZSx3cml0ZTpmdW5jdGlvbihpKXtjbGVhclRpbWVvdXQobiksbj1nLmEuc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9LHQpfX0pfSxyYXRlTGltaXQ6ZnVuY3Rpb24oZSx0KXt2YXIgbixhLHI7Im51bWJlciI9PXR5cGVvZiB0P249dDoobj10LnRpbWVvdXQsYT10Lm1ldGhvZCksZS5IYj0hMSxyPSJmdW5jdGlvbiI9PXR5cGVvZiBhP2E6Im5vdGlmeVdoZW5DaGFuZ2VzU3RvcCI9PWE/bzppLGUudGIoZnVuY3Rpb24oZSl7cmV0dXJuIHIoZSxuLHQpfSl9LGRlZmVycmVkOmZ1bmN0aW9uKGUsdCl7aWYoITAhPT10KXRocm93IEVycm9yKCJUaGUgJ2RlZmVycmVkJyBleHRlbmRlciBvbmx5IGFjY2VwdHMgdGhlIHZhbHVlICd0cnVlJywgYmVjYXVzZSBpdCBpcyBub3Qgc3VwcG9ydGVkIHRvIHR1cm4gZGVmZXJyYWwgb2ZmIG9uY2UgZW5hYmxlZC4iKTtlLkhifHwoZS5IYj0hMCxlLnRiKGZ1bmN0aW9uKHQpe3ZhciBuLGk9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIWkpe2cubWEuY2FuY2VsKG4pLG49Zy5tYS55Yih0KTt0cnl7aT0hMCxlLm5vdGlmeVN1YnNjcmliZXJzKHIsImRpcnR5Iil9ZmluYWxseXtpPSExfX19fSkpfSxub3RpZnk6ZnVuY3Rpb24oZSx0KXtlLmVxdWFsaXR5Q29tcGFyZXI9ImFsd2F5cyI9PXQ/bnVsbDpufX07dmFyIG09e3VuZGVmaW5lZDoxLCJib29sZWFuIjoxLG51bWJlcjoxLHN0cmluZzoxfTtnLmIoImV4dGVuZGVycyIsZy5UYSksZy5nYz1mdW5jdGlvbihlLHQsbil7dGhpcy5kYT1lLHRoaXMua2M9dCx0aGlzLmxjPW4sdGhpcy5JYj0hMSx0aGlzLmFiPXRoaXMuSmI9bnVsbCxnLkoodGhpcywiZGlzcG9zZSIsdGhpcy5zKSxnLkoodGhpcywiZGlzcG9zZVdoZW5Ob2RlSXNSZW1vdmVkIix0aGlzLmwpfSxnLmdjLnByb3RvdHlwZS5zPWZ1bmN0aW9uKCl7dGhpcy5JYnx8KHRoaXMuYWImJmcuYS5JLnhiKHRoaXMuSmIsdGhpcy5hYiksdGhpcy5JYj0hMCx0aGlzLmxjKCksdGhpcy5kYT10aGlzLmtjPXRoaXMubGM9dGhpcy5KYj10aGlzLmFiPW51bGwpfSxnLmdjLnByb3RvdHlwZS5sPWZ1bmN0aW9uKGUpe3RoaXMuSmI9ZSxnLmEuSS56YShlLHRoaXMuYWI9dGhpcy5zLmJpbmQodGhpcykpfSxnLlI9ZnVuY3Rpb24oKXtnLmEuemIodGhpcyx2KSx2Lm9iKHRoaXMpfTt2YXIgdj17b2I6ZnVuY3Rpb24oZSl7ZS5TPXtjaGFuZ2U6W119LGUucmM9MX0sc3Vic2NyaWJlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzO249bnx8ImNoYW5nZSI7dmFyIG89bmV3IGcuZ2MoaSx0P2UuYmluZCh0KTplLGZ1bmN0aW9uKCl7Zy5hLmhiKGkuU1tuXSxvKSxpLmNiJiZpLmNiKG4pfSk7cmV0dXJuIGkuUWEmJmkuUWEobiksaS5TW25dfHwoaS5TW25dPVtdKSxpLlNbbl0ucHVzaChvKSxvfSxub3RpZnlTdWJzY3JpYmVyczpmdW5jdGlvbihlLHQpe2lmKHQ9dHx8ImNoYW5nZSIsImNoYW5nZSI9PT10JiZ0aGlzLkdiKCksdGhpcy5XYSh0KSl7dmFyIG49ImNoYW5nZSI9PT10JiZ0aGlzLmRkfHx0aGlzLlNbdF0uc2xpY2UoMCk7dHJ5e2cudi53YygpO2Zvcih2YXIgaSxvPTA7aT1uW29dOysrbylpLklifHxpLmtjKGUpfWZpbmFsbHl7Zy52LmVuZCgpfX19LG1iOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmN9LENkOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm1iKCkhPT1lfSxHYjpmdW5jdGlvbigpeysrdGhpcy5yY30sdGI6ZnVuY3Rpb24oZSl7dmFyIHQsbixpLG8scixzPXRoaXMsYz1nLk4ocyk7cy5iYnx8KHMuYmI9cy5ub3RpZnlTdWJzY3JpYmVycyxzLm5vdGlmeVN1YnNjcmliZXJzPWEpO3ZhciBkPWUoZnVuY3Rpb24oKXtzLkthPSExLGMmJm89PT1zJiYobz1zLm1jP3MubWMoKTpzKCkpO3ZhciBlPW58fHImJnMucWIoaSxvKTtyPW49dD0hMSxlJiZzLmJiKGk9byl9KTtzLnBjPWZ1bmN0aW9uKGUsbil7biYmcy5LYXx8KHI9IW4pLHMuZGQ9cy5TLmNoYW5nZS5zbGljZSgwKSxzLkthPXQ9ITAsbz1lLGQoKX0scy5vYz1mdW5jdGlvbihlKXt0fHwoaT1lLHMuYmIoZSwiYmVmb3JlQ2hhbmdlIikpfSxzLnFjPWZ1bmN0aW9uKCl7cj0hMH0scy5mZD1mdW5jdGlvbigpe3MucWIoaSxzLncoITApKSYmKG49ITApfX0sV2E6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuU1tlXSYmdGhpcy5TW2VdLmxlbmd0aH0sQWQ6ZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gdGhpcy5TW2VdJiZ0aGlzLlNbZV0ubGVuZ3RofHwwO3ZhciB0PTA7cmV0dXJuIGcuYS5PKHRoaXMuUyxmdW5jdGlvbihlLG4peyJkaXJ0eSIhPT1lJiYodCs9bi5sZW5ndGgpfSksdH0scWI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4hdGhpcy5lcXVhbGl0eUNvbXBhcmVyfHwhdGhpcy5lcXVhbGl0eUNvbXBhcmVyKGUsdCl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIltvYmplY3QgT2JqZWN0XSJ9LGV4dGVuZDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBlJiZnLmEuTyhlLGZ1bmN0aW9uKGUsbil7dmFyIGk9Zy5UYVtlXTsiZnVuY3Rpb24iPT10eXBlb2YgaSYmKHQ9aSh0LG4pfHx0KX0pLHR9fTtnLkoodiwiaW5pdCIsdi5vYiksZy5KKHYsInN1YnNjcmliZSIsdi5zdWJzY3JpYmUpLGcuSih2LCJleHRlbmQiLHYuZXh0ZW5kKSxnLkoodiwiZ2V0U3Vic2NyaXB0aW9uc0NvdW50Iix2LkFkKSxnLmEuQmEmJmcuYS5zZXRQcm90b3R5cGVPZih2LEZ1bmN0aW9uLnByb3RvdHlwZSksZy5SLmZuPXYsZy5QYz1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZSYmImZ1bmN0aW9uIj09dHlwZW9mIGUuc3Vic2NyaWJlJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5ub3RpZnlTdWJzY3JpYmVyc30sZy5iKCJzdWJzY3JpYmFibGUiLGcuUiksZy5iKCJpc1N1YnNjcmliYWJsZSIsZy5QYyksZy5VPWcudj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7aS5wdXNoKG4pLG49ZX1mdW5jdGlvbiB0KCl7bj1pLnBvcCgpfXZhciBuLGk9W10sbz0wO3JldHVybnt3YzplLGVuZDp0LGFjOmZ1bmN0aW9uKGUpe2lmKG4pe2lmKCFnLlBjKGUpKXRocm93IEVycm9yKCJPbmx5IHN1YnNjcmliYWJsZSB0aGluZ3MgY2FuIGFjdCBhcyBkZXBlbmRlbmNpZXMiKTtuLm5kLmNhbGwobi5vZCxlLGUuZWR8fChlLmVkPSsrbykpfX0sSzpmdW5jdGlvbihuLGksbyl7dHJ5e3JldHVybiBlKCksbi5hcHBseShpLG98fFtdKX1maW5hbGx5e3QoKX19LHBhOmZ1bmN0aW9uKCl7aWYobilyZXR1cm4gbi5vLnBhKCl9LFZhOmZ1bmN0aW9uKCl7aWYobilyZXR1cm4gbi5vLlZhKCl9LHJiOmZ1bmN0aW9uKCl7aWYobilyZXR1cm4gbi5yYn0sbzpmdW5jdGlvbigpe2lmKG4pcmV0dXJuIG4ub319fSgpLGcuYigiY29tcHV0ZWRDb250ZXh0IixnLlUpLGcuYigiY29tcHV0ZWRDb250ZXh0LmdldERlcGVuZGVuY2llc0NvdW50IixnLlUucGEpLGcuYigiY29tcHV0ZWRDb250ZXh0LmdldERlcGVuZGVuY2llcyIsZy5VLlZhKSxnLmIoImNvbXB1dGVkQ29udGV4dC5pc0luaXRpYWwiLGcuVS5yYiksZy5iKCJjb21wdXRlZENvbnRleHQucmVnaXN0ZXJEZXBlbmRlbmN5IixnLlUuYWMpLGcuYigiaWdub3JlRGVwZW5kZW5jaWVzIixnLldkPWcudi5LKTt2YXIgaD1nLmEuRGEoIl9sYXRlc3RWYWx1ZSIpO2cuc2E9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiAwPGFyZ3VtZW50cy5sZW5ndGg/KHQucWIodFtoXSxhcmd1bWVudHNbMF0pJiYodC54YSgpLHRbaF09YXJndW1lbnRzWzBdLHQud2EoKSksdGhpcyk6KGcudi5hYyh0KSx0W2hdKX1yZXR1cm4gdFtoXT1lLGcuYS5CYXx8Zy5hLmV4dGVuZCh0LGcuUi5mbiksZy5SLmZuLm9iKHQpLGcuYS56Yih0LGIpLGcub3B0aW9ucy5kZWZlclVwZGF0ZXMmJmcuVGEuZGVmZXJyZWQodCwhMCksdH07dmFyIGI9e2VxdWFsaXR5Q29tcGFyZXI6bix3OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbaF19LHdhOmZ1bmN0aW9uKCl7dGhpcy5ub3RpZnlTdWJzY3JpYmVycyh0aGlzW2hdLCJzcGVjdGF0ZSIpLHRoaXMubm90aWZ5U3Vic2NyaWJlcnModGhpc1toXSl9LHhhOmZ1bmN0aW9uKCl7dGhpcy5ub3RpZnlTdWJzY3JpYmVycyh0aGlzW2hdLCJiZWZvcmVDaGFuZ2UiKX19O2cuYS5CYSYmZy5hLnNldFByb3RvdHlwZU9mKGIsZy5SLmZuKTt2YXIgXz1nLnNhLk5hPSJfX2tvX3Byb3RvX18iO2JbX109Zy5zYSxnLk49ZnVuY3Rpb24oZSl7aWYoKGU9ImZ1bmN0aW9uIj09dHlwZW9mIGUmJmVbX10pJiZlIT09YltfXSYmZSE9PWcuby5mbltfXSl0aHJvdyBFcnJvcigiSW52YWxpZCBvYmplY3QgdGhhdCBsb29rcyBsaWtlIGFuIG9ic2VydmFibGU7IHBvc3NpYmx5IGZyb20gYW5vdGhlciBLbm9ja291dCBpbnN0YW5jZSIpO3JldHVybiEhZX0sZy5ZYT1mdW5jdGlvbihlKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZSYmKGVbX109PT1iW19dfHxlW19dPT09Zy5vLmZuW19dJiZlLk1jKX0sZy5iKCJvYnNlcnZhYmxlIixnLnNhKSxnLmIoImlzT2JzZXJ2YWJsZSIsZy5OKSxnLmIoImlzV3JpdGVhYmxlT2JzZXJ2YWJsZSIsZy5ZYSksZy5iKCJpc1dyaXRhYmxlT2JzZXJ2YWJsZSIsZy5ZYSksZy5iKCJvYnNlcnZhYmxlLmZuIixiKSxnLkooYiwicGVlayIsYi53KSxnLkooYiwidmFsdWVIYXNNdXRhdGVkIixiLndhKSxnLkooYiwidmFsdWVXaWxsTXV0YXRlIixiLnhhKSxnLklhPWZ1bmN0aW9uKGUpe2lmKGU9ZXx8W10sIm9iamVjdCIhPXR5cGVvZiBlfHwhKCJsZW5ndGgiaW4gZSkpdGhyb3cgRXJyb3IoIlRoZSBhcmd1bWVudCBwYXNzZWQgd2hlbiBpbml0aWFsaXppbmcgYW4gb2JzZXJ2YWJsZSBhcnJheSBtdXN0IGJlIGFuIGFycmF5LCBvciBudWxsLCBvciB1bmRlZmluZWQuIik7cmV0dXJuIGU9Zy5zYShlKSxnLmEuemIoZSxnLklhLmZuKSxlLmV4dGVuZCh7dHJhY2tBcnJheUNoYW5nZXM6ITB9KX0sZy5JYS5mbj17cmVtb3ZlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLncoKSxuPVtdLGk9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGcuTihlKT9mdW5jdGlvbih0KXtyZXR1cm4gdD09PWV9OmUsbz0wO288dC5sZW5ndGg7bysrKXt2YXIgYT10W29dO2lmKGkoYSkpe2lmKDA9PT1uLmxlbmd0aCYmdGhpcy54YSgpLHRbb10hPT1hKXRocm93IEVycm9yKCJBcnJheSBtb2RpZmllZCBkdXJpbmcgcmVtb3ZlOyBjYW5ub3QgcmVtb3ZlIGl0ZW0iKTtuLnB1c2goYSksdC5zcGxpY2UobywxKSxvLS19fXJldHVybiBuLmxlbmd0aCYmdGhpcy53YSgpLG59LHJlbW92ZUFsbDpmdW5jdGlvbihlKXtpZihlPT09cil7dmFyIHQ9dGhpcy53KCksbj10LnNsaWNlKDApO3JldHVybiB0aGlzLnhhKCksdC5zcGxpY2UoMCx0Lmxlbmd0aCksdGhpcy53YSgpLG59cmV0dXJuIGU/dGhpcy5yZW1vdmUoZnVuY3Rpb24odCl7cmV0dXJuIDA8PWcuYS5BKGUsdCl9KTpbXX0sZGVzdHJveTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLncoKSxuPSJmdW5jdGlvbiIhPXR5cGVvZiBlfHxnLk4oZSk/ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lfTplO3RoaXMueGEoKTtmb3IodmFyIGk9dC5sZW5ndGgtMTswPD1pO2ktLSl7dmFyIG89dFtpXTtuKG8pJiYoby5fZGVzdHJveT0hMCl9dGhpcy53YSgpfSxkZXN0cm95QWxsOmZ1bmN0aW9uKGUpe3JldHVybiBlPT09cj90aGlzLmRlc3Ryb3koZnVuY3Rpb24oKXtyZXR1cm4hMH0pOmU/dGhpcy5kZXN0cm95KGZ1bmN0aW9uKHQpe3JldHVybiAwPD1nLmEuQShlLHQpfSk6W119LGluZGV4T2Y6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcygpO3JldHVybiBnLmEuQSh0LGUpfSxyZXBsYWNlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5pbmRleE9mKGUpOzA8PW4mJih0aGlzLnhhKCksdGhpcy53KClbbl09dCx0aGlzLndhKCkpfSxzb3J0ZWQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcygpLnNsaWNlKDApO3JldHVybiBlP3Quc29ydChlKTp0LnNvcnQoKX0scmV2ZXJzZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcygpLnNsaWNlKDApLnJldmVyc2UoKX19LGcuYS5CYSYmZy5hLnNldFByb3RvdHlwZU9mKGcuSWEuZm4sZy5zYS5mbiksZy5hLkMoInBvcCBwdXNoIHJldmVyc2Ugc2hpZnQgc29ydCBzcGxpY2UgdW5zaGlmdCIuc3BsaXQoIiAiKSxmdW5jdGlvbihlKXtnLklhLmZuW2VdPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy53KCk7dGhpcy54YSgpLHRoaXMueWModCxlLGFyZ3VtZW50cyk7dmFyIG49dFtlXS5hcHBseSh0LGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMud2EoKSxuPT09dD90aGlzOm59fSksZy5hLkMoWyJzbGljZSJdLGZ1bmN0aW9uKGUpe2cuSWEuZm5bZV09ZnVuY3Rpb24oKXt2YXIgdD10aGlzKCk7cmV0dXJuIHRbZV0uYXBwbHkodCxhcmd1bWVudHMpfX0pLGcuT2M9ZnVuY3Rpb24oZSl7cmV0dXJuIGcuTihlKSYmImZ1bmN0aW9uIj09dHlwZW9mIGUucmVtb3ZlJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5wdXNofSxnLmIoIm9ic2VydmFibGVBcnJheSIsZy5JYSksZy5iKCJpc09ic2VydmFibGVBcnJheSIsZy5PYyksZy5UYS50cmFja0FycmF5Q2hhbmdlcz1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oKXtmdW5jdGlvbiB0KCl7aWYoZCl7dmFyIHQ9W10uY29uY2F0KGUudygpfHxbXSk7aWYoZS5XYSgiYXJyYXlDaGFuZ2UiKSl7dmFyIG47KCFjfHwxPGQpJiYoYz1nLmEuT2Iobyx0LGUuTmIpKSxuPWN9bz10LGM9bnVsbCxkPTAsbiYmbi5sZW5ndGgmJmUubm90aWZ5U3Vic2NyaWJlcnMobiwiYXJyYXlDaGFuZ2UiKX19cz90KCk6KHM9ITAsYT1lLm5vdGlmeVN1YnNjcmliZXJzLGUubm90aWZ5U3Vic2NyaWJlcnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdCYmImNoYW5nZSIhPT10fHwrK2QsYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG89W10uY29uY2F0KGUudygpfHxbXSksYz1udWxsLGk9ZS5zdWJzY3JpYmUodCkpfWlmKGUuTmI9e30sdCYmIm9iamVjdCI9PXR5cGVvZiB0JiZnLmEuZXh0ZW5kKGUuTmIsdCksZS5OYi5zcGFyc2U9ITAsIWUueWMpe3ZhciBpLG8sYSxzPSExLGM9bnVsbCxkPTAsbD1lLlFhLHU9ZS5jYjtlLlFhPWZ1bmN0aW9uKHQpe2wmJmwuY2FsbChlLHQpLCJhcnJheUNoYW5nZSI9PT10JiZuKCl9LGUuY2I9ZnVuY3Rpb24odCl7dSYmdS5jYWxsKGUsdCksImFycmF5Q2hhbmdlIiE9PXR8fGUuV2EoImFycmF5Q2hhbmdlIil8fChhJiYoZS5ub3RpZnlTdWJzY3JpYmVycz1hLGE9ciksaSYmaS5zKCksaT1udWxsLHM9ITEsbz1yKX0sZS55Yz1mdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlLHQsbil7cmV0dXJuIG9bby5sZW5ndGhdPXtzdGF0dXM6ZSx2YWx1ZTp0LGluZGV4Om59fWlmKHMmJiFkKXt2YXIgbz1bXSxhPWUubGVuZ3RoLHI9bi5sZW5ndGgsbD0wO3N3aXRjaCh0KXtjYXNlInB1c2giOmw9YTtjYXNlInVuc2hpZnQiOmZvcih0PTA7dDxyO3QrKylpKCJhZGRlZCIsblt0XSxsK3QpO2JyZWFrO2Nhc2UicG9wIjpsPWEtMTtjYXNlInNoaWZ0IjphJiZpKCJkZWxldGVkIixlW2xdLGwpO2JyZWFrO2Nhc2Uic3BsaWNlIjp0PU1hdGgubWluKE1hdGgubWF4KDAsMD5uWzBdP2ErblswXTpuWzBdKSxhKTtmb3IodmFyIGE9MT09PXI/YTpNYXRoLm1pbih0KyhuWzFdfHwwKSxhKSxyPXQrci0yLGw9TWF0aC5tYXgoYSxyKSx1PVtdLHA9W10sZj0yO3Q8bDsrK3QsKytmKXQ8YSYmcC5wdXNoKGkoImRlbGV0ZWQiLGVbdF0sdCkpLHQ8ciYmdS5wdXNoKGkoImFkZGVkIixuW2ZdLHQpKTtnLmEuSmMocCx1KTticmVhaztkZWZhdWx0OnJldHVybn1jPW99fX19O3ZhciBTPWcuYS5EYSgiX3N0YXRlIik7Zy5vPWcuJD1mdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaSgpe2lmKDA8YXJndW1lbnRzLmxlbmd0aCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIG8pdGhyb3cgRXJyb3IoIkNhbm5vdCB3cml0ZSBhIHZhbHVlIHRvIGEga28uY29tcHV0ZWQgdW5sZXNzIHlvdSBzcGVjaWZ5IGEgJ3dyaXRlJyBvcHRpb24uIElmIHlvdSB3aXNoIHRvIHJlYWQgdGhlIGN1cnJlbnQgdmFsdWUsIGRvbid0IHBhc3MgYW55IHBhcmFtZXRlcnMuIik7cmV0dXJuIG8uYXBwbHkoYS5sYixhcmd1bWVudHMpLHRoaXN9cmV0dXJuIGEucWF8fGcudi5hYyhpKSwoYS5rYXx8YS5HJiZpLlhhKCkpJiZpLmhhKCksYS5YfWlmKCJvYmplY3QiPT10eXBlb2YgZT9uPWU6KG49bnx8e30sZSYmKG4ucmVhZD1lKSksImZ1bmN0aW9uIiE9dHlwZW9mIG4ucmVhZCl0aHJvdyBFcnJvcigiUGFzcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGtvLmNvbXB1dGVkIik7dmFyIG89bi53cml0ZSxhPXtYOnIscmE6ITAsa2E6ITAscGI6ITEsaGM6ITEscWE6ITEsdmI6ITEsRzohMSxWYzpuLnJlYWQsbGI6dHx8bi5vd25lcixsOm4uZGlzcG9zZVdoZW5Ob2RlSXNSZW1vdmVkfHxuLmx8fG51bGwsU2E6bi5kaXNwb3NlV2hlbnx8bi5TYSxRYjpudWxsLEY6e30sVjowLEhjOm51bGx9O3JldHVybiBpW1NdPWEsaS5NYz0iZnVuY3Rpb24iPT10eXBlb2YgbyxnLmEuQmF8fGcuYS5leHRlbmQoaSxnLlIuZm4pLGcuUi5mbi5vYihpKSxnLmEuemIoaSx3KSxuLnB1cmU/KGEudmI9ITAsYS5HPSEwLGcuYS5leHRlbmQoaSxUKSk6bi5kZWZlckV2YWx1YXRpb24mJmcuYS5leHRlbmQoaSxDKSxnLm9wdGlvbnMuZGVmZXJVcGRhdGVzJiZnLlRhLmRlZmVycmVkKGksITApLGEubCYmKGEuaGM9ITAsYS5sLm5vZGVUeXBlfHwoYS5sPW51bGwpKSxhLkd8fG4uZGVmZXJFdmFsdWF0aW9ufHxpLmhhKCksYS5sJiZpLmphKCkmJmcuYS5JLnphKGEubCxhLlFiPWZ1bmN0aW9uKCl7aS5zKCl9KSxpfTt2YXIgdz17ZXF1YWxpdHlDb21wYXJlcjpuLHBhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbU10uVn0sVmE6ZnVuY3Rpb24oKXt2YXIgZT1bXTtyZXR1cm4gZy5hLk8odGhpc1tTXS5GLGZ1bmN0aW9uKHQsbil7ZVtuLkxhXT1uLmRhfSksZX0sVWI6ZnVuY3Rpb24oZSl7aWYoIXRoaXNbU10uVilyZXR1cm4hMTt2YXIgdD10aGlzLlZhKCk7cmV0dXJuLTEhPT1nLmEuQSh0LGUpfHwhIWcuYS5MYih0LGZ1bmN0aW9uKHQpe3JldHVybiB0LlViJiZ0LlViKGUpfSl9LHRjOmZ1bmN0aW9uKGUsdCxuKXtpZih0aGlzW1NdLnZiJiZ0PT09dGhpcyl0aHJvdyBFcnJvcigiQSAncHVyZScgY29tcHV0ZWQgbXVzdCBub3QgYmUgY2FsbGVkIHJlY3Vyc2l2ZWx5Iik7dGhpc1tTXS5GW2VdPW4sbi5MYT10aGlzW1NdLlYrKyxuLk1hPXQubWIoKX0sWGE6ZnVuY3Rpb24oKXt2YXIgZSx0LG49dGhpc1tTXS5GO2ZvcihlIGluIG4paWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sZSkmJih0PW5bZV0sdGhpcy5KYSYmdC5kYS5LYXx8dC5kYS5DZCh0Lk1hKSkpcmV0dXJuITB9LElkOmZ1bmN0aW9uKCl7dGhpcy5KYSYmIXRoaXNbU10ucGImJnRoaXMuSmEoITEpfSxqYTpmdW5jdGlvbigpe3ZhciBlPXRoaXNbU107cmV0dXJuIGUua2F8fDA8ZS5WfSxRZDpmdW5jdGlvbigpe3RoaXMuS2E/dGhpc1tTXS5rYSYmKHRoaXNbU10ucmE9ITApOnRoaXMuR2MoKX0sWmM6ZnVuY3Rpb24oZSl7aWYoZS5IYil7dmFyIHQ9ZS5zdWJzY3JpYmUodGhpcy5JZCx0aGlzLCJkaXJ0eSIpLG49ZS5zdWJzY3JpYmUodGhpcy5RZCx0aGlzKTtyZXR1cm57ZGE6ZSxzOmZ1bmN0aW9uKCl7dC5zKCksbi5zKCl9fX1yZXR1cm4gZS5zdWJzY3JpYmUodGhpcy5HYyx0aGlzKX0sR2M6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS50aHJvdHRsZUV2YWx1YXRpb247dCYmMDw9dD8oY2xlYXJUaW1lb3V0KHRoaXNbU10uSGMpLHRoaXNbU10uSGM9Zy5hLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLmhhKCEwKX0sdCkpOmUuSmE/ZS5KYSghMCk6ZS5oYSghMCl9LGhhOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXNbU10sbj10LlNhLGk9ITE7aWYoIXQucGImJiF0LnFhKXtpZih0LmwmJiFnLmEuUmIodC5sKXx8biYmbigpKXtpZighdC5oYylyZXR1cm4gdm9pZCB0aGlzLnMoKX1lbHNlIHQuaGM9ITE7dC5wYj0hMDt0cnl7aT10aGlzLnlkKGUpfWZpbmFsbHl7dC5wYj0hMX1yZXR1cm4gaX19LHlkOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXNbU10sbj0hMSxpPXQudmI/cjohdC5WLG49e3BkOnRoaXMsa2I6dC5GLFBiOnQuVn07Zy52LndjKHtvZDpuLG5kOmYsbzp0aGlzLHJiOml9KSx0LkY9e30sdC5WPTA7dmFyIG89dGhpcy54ZCh0LG4pO3JldHVybiB0LlY/bj10aGlzLnFiKHQuWCxvKToodGhpcy5zKCksbj0hMCksbiYmKHQuRz90aGlzLkdiKCk6dGhpcy5ub3RpZnlTdWJzY3JpYmVycyh0LlgsImJlZm9yZUNoYW5nZSIpLHQuWD1vLHRoaXMubm90aWZ5U3Vic2NyaWJlcnModC5YLCJzcGVjdGF0ZSIpLCF0LkcmJmUmJnRoaXMubm90aWZ5U3Vic2NyaWJlcnModC5YKSx0aGlzLnFjJiZ0aGlzLnFjKCkpLGkmJnRoaXMubm90aWZ5U3Vic2NyaWJlcnModC5YLCJhd2FrZSIpLG59LHhkOmZ1bmN0aW9uKGUsdCl7dHJ5e3ZhciBuPWUuVmM7cmV0dXJuIGUubGI/bi5jYWxsKGUubGIpOm4oKX1maW5hbGx5e2cudi5lbmQoKSx0LlBiJiYhZS5HJiZnLmEuTyh0LmtiLHApLGUucmE9ZS5rYT0hMX19LHc6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpc1tTXTtyZXR1cm4odC5rYSYmKGV8fCF0LlYpfHx0LkcmJnRoaXMuWGEoKSkmJnRoaXMuaGEoKSx0Llh9LHRiOmZ1bmN0aW9uKGUpe2cuUi5mbi50Yi5jYWxsKHRoaXMsZSksdGhpcy5tYz1mdW5jdGlvbigpe3JldHVybiB0aGlzW1NdLkd8fCh0aGlzW1NdLnJhP3RoaXMuaGEoKTp0aGlzW1NdLmthPSExKSx0aGlzW1NdLlh9LHRoaXMuSmE9ZnVuY3Rpb24oZSl7dGhpcy5vYyh0aGlzW1NdLlgpLHRoaXNbU10ua2E9ITAsZSYmKHRoaXNbU10ucmE9ITApLHRoaXMucGModGhpcywhZSl9fSxzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpc1tTXTshZS5HJiZlLkYmJmcuYS5PKGUuRixmdW5jdGlvbihlLHQpe3QucyYmdC5zKCl9KSxlLmwmJmUuUWImJmcuYS5JLnhiKGUubCxlLlFiKSxlLkY9cixlLlY9MCxlLnFhPSEwLGUucmE9ITEsZS5rYT0hMSxlLkc9ITEsZS5sPXIsZS5TYT1yLGUuVmM9cix0aGlzLk1jfHwoZS5sYj1yKX19LFQ9e1FhOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj10W1NdO2lmKCFuLnFhJiZuLkcmJiJjaGFuZ2UiPT1lKXtpZihuLkc9ITEsbi5yYXx8dC5YYSgpKW4uRj1udWxsLG4uVj0wLHQuaGEoKSYmdC5HYigpO2Vsc2V7dmFyIGk9W107Zy5hLk8obi5GLGZ1bmN0aW9uKGUsdCl7aVt0LkxhXT1lfSksZy5hLkMoaSxmdW5jdGlvbihlLGkpe3ZhciBvPW4uRltlXSxhPXQuWmMoby5kYSk7YS5MYT1pLGEuTWE9by5NYSxuLkZbZV09YX0pLHQuWGEoKSYmdC5oYSgpJiZ0LkdiKCl9bi5xYXx8dC5ub3RpZnlTdWJzY3JpYmVycyhuLlgsImF3YWtlIil9fSxjYjpmdW5jdGlvbihlKXt2YXIgdD10aGlzW1NdO3QucWF8fCJjaGFuZ2UiIT1lfHx0aGlzLldhKCJjaGFuZ2UiKXx8KGcuYS5PKHQuRixmdW5jdGlvbihlLG4pe24ucyYmKHQuRltlXT17ZGE6bi5kYSxMYTpuLkxhLE1hOm4uTWF9LG4ucygpKX0pLHQuRz0hMCx0aGlzLm5vdGlmeVN1YnNjcmliZXJzKHIsImFzbGVlcCIpKX0sbWI6ZnVuY3Rpb24oKXt2YXIgZT10aGlzW1NdO3JldHVybiBlLkcmJihlLnJhfHx0aGlzLlhhKCkpJiZ0aGlzLmhhKCksZy5SLmZuLm1iLmNhbGwodGhpcyl9fSxDPXtRYTpmdW5jdGlvbihlKXsiY2hhbmdlIiE9ZSYmImJlZm9yZUNoYW5nZSIhPWV8fHRoaXMudygpfX07Zy5hLkJhJiZnLmEuc2V0UHJvdG90eXBlT2YodyxnLlIuZm4pO3ZhciB5PWcuc2EuTmE7d1t5XT1nLm8sZy5OYz1mdW5jdGlvbihlKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZSYmZVt5XT09PXdbeV19LGcuRWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGcuTmMoZSkmJmVbU10mJmVbU10udmJ9LGcuYigiY29tcHV0ZWQiLGcubyksZy5iKCJkZXBlbmRlbnRPYnNlcnZhYmxlIixnLm8pLGcuYigiaXNDb21wdXRlZCIsZy5OYyksZy5iKCJpc1B1cmVDb21wdXRlZCIsZy5FZCksZy5iKCJjb21wdXRlZC5mbiIsdyksZy5KKHcsInBlZWsiLHcudyksZy5KKHcsImRpc3Bvc2UiLHcucyksZy5KKHcsImlzQWN0aXZlIix3LmphKSxnLkoodywiZ2V0RGVwZW5kZW5jaWVzQ291bnQiLHcucGEpLGcuSih3LCJnZXREZXBlbmRlbmNpZXMiLHcuVmEpLGcud2I9ZnVuY3Rpb24oZSx0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZT9nLm8oZSx0LHtwdXJlOiEwfSk6KGU9Zy5hLmV4dGVuZCh7fSxlKSxlLnB1cmU9ITAsZy5vKGUsdCkpfSxnLmIoInB1cmVDb21wdXRlZCIsZy53YiksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGksbyxhKXtpZihhPWF8fG5ldyBuLGk9byhpKSwib2JqZWN0IiE9dHlwZW9mIGl8fG51bGw9PT1pfHxpPT09cnx8aSBpbnN0YW5jZW9mIFJlZ0V4cHx8aSBpbnN0YW5jZW9mIERhdGV8fGkgaW5zdGFuY2VvZiBTdHJpbmd8fGkgaW5zdGFuY2VvZiBOdW1iZXJ8fGkgaW5zdGFuY2VvZiBCb29sZWFuKXJldHVybiBpO3ZhciBzPWkgaW5zdGFuY2VvZiBBcnJheT9bXTp7fTtyZXR1cm4gYS5zYXZlKGkscyksdChpLGZ1bmN0aW9uKHQpe3ZhciBuPW8oaVt0XSk7c3dpdGNoKHR5cGVvZiBuKXtjYXNlImJvb2xlYW4iOmNhc2UibnVtYmVyIjpjYXNlInN0cmluZyI6Y2FzZSJmdW5jdGlvbiI6c1t0XT1uO2JyZWFrO2Nhc2Uib2JqZWN0IjpjYXNlInVuZGVmaW5lZCI6dmFyIGM9YS5nZXQobik7c1t0XT1jIT09cj9jOmUobixvLGEpfX0pLHN9ZnVuY3Rpb24gdChlLHQpe2lmKGUgaW5zdGFuY2VvZiBBcnJheSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspdChuKTsiZnVuY3Rpb24iPT10eXBlb2YgZS50b0pTT04mJnQoInRvSlNPTiIpfWVsc2UgZm9yKG4gaW4gZSl0KG4pfWZ1bmN0aW9uIG4oKXt0aGlzLmtleXM9W10sdGhpcy52YWx1ZXM9W119Zy4kYz1mdW5jdGlvbih0KXtpZigwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IEVycm9yKCJXaGVuIGNhbGxpbmcga28udG9KUywgcGFzcyB0aGUgb2JqZWN0IHlvdSB3YW50IHRvIGNvbnZlcnQuIik7cmV0dXJuIGUodCxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MDtnLk4oZSkmJjEwPnQ7dCsrKWU9ZSgpO3JldHVybiBlfSl9LGcudG9KU09OPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZT1nLiRjKGUpLGcuYS5mYyhlLHQsbil9LG4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpuLHNhdmU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1nLmEuQSh0aGlzLmtleXMsZSk7MDw9bj90aGlzLnZhbHVlc1tuXT10Oih0aGlzLmtleXMucHVzaChlKSx0aGlzLnZhbHVlcy5wdXNoKHQpKX0sZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBlPWcuYS5BKHRoaXMua2V5cyxlKSwwPD1lP3RoaXMudmFsdWVzW2VdOnJ9fX0oKSxnLmIoInRvSlMiLGcuJGMpLGcuYigidG9KU09OIixnLnRvSlNPTiksZy5WZD1mdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaSh0KXt2YXIgaT1nLndiKGUsbikuZXh0ZW5kKHtHYToiYWx3YXlzIn0pLG89aS5zdWJzY3JpYmUoZnVuY3Rpb24oZSl7ZSYmKG8ucygpLHQoZSkpfSk7cmV0dXJuIGkubm90aWZ5U3Vic2NyaWJlcnMoaS53KCkpLG99cmV0dXJuImZ1bmN0aW9uIiE9dHlwZW9mIFByb21pc2V8fHQ/aSh0LmJpbmQobikpOm5ldyBQcm9taXNlKGkpfSxnLmIoIndoZW4iLGcuVmQpLGZ1bmN0aW9uKCl7Zy51PXtMOmZ1bmN0aW9uKGUpe3N3aXRjaChnLmEuUChlKSl7Y2FzZSJvcHRpb24iOnJldHVybiEwPT09ZS5fX2tvX19oYXNEb21EYXRhT3B0aW9uVmFsdWVfXz9nLmEuZy5nZXQoZSxnLmYub3B0aW9ucy5ZYik6Nz49Zy5hLlc/ZS5nZXRBdHRyaWJ1dGVOb2RlKCJ2YWx1ZSIpJiZlLmdldEF0dHJpYnV0ZU5vZGUoInZhbHVlIikuc3BlY2lmaWVkP2UudmFsdWU6ZS50ZXh0OmUudmFsdWU7Y2FzZSJzZWxlY3QiOnJldHVybiAwPD1lLnNlbGVjdGVkSW5kZXg/Zy51LkwoZS5vcHRpb25zW2Uuc2VsZWN0ZWRJbmRleF0pOnI7ZGVmYXVsdDpyZXR1cm4gZS52YWx1ZX19LHlhOmZ1bmN0aW9uKGUsdCxuKXtzd2l0Y2goZy5hLlAoZSkpe2Nhc2Uib3B0aW9uIjoic3RyaW5nIj09dHlwZW9mIHQ/KGcuYS5nLnNldChlLGcuZi5vcHRpb25zLlliLHIpLCJfX2tvX19oYXNEb21EYXRhT3B0aW9uVmFsdWVfXyJpbiBlJiZkZWxldGUgZS5fX2tvX19oYXNEb21EYXRhT3B0aW9uVmFsdWVfXyxlLnZhbHVlPXQpOihnLmEuZy5zZXQoZSxnLmYub3B0aW9ucy5ZYix0KSxlLl9fa29fX2hhc0RvbURhdGFPcHRpb25WYWx1ZV9fPSEwLGUudmFsdWU9Im51bWJlciI9PXR5cGVvZiB0P3Q6IiIpO2JyZWFrO2Nhc2Uic2VsZWN0IjoiIiE9PXQmJm51bGwhPT10fHwodD1yKTtmb3IodmFyIGksbz0tMSxhPTAscz1lLm9wdGlvbnMubGVuZ3RoO2E8czsrK2EpaWYoaT1nLnUuTChlLm9wdGlvbnNbYV0pLGk9PXR8fCIiPT09aSYmdD09PXIpe289YTticmVha30obnx8MDw9b3x8dD09PXImJjE8ZS5zaXplKSYmKGUuc2VsZWN0ZWRJbmRleD1vLDY9PT1nLmEuVyYmZy5hLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLnNlbGVjdGVkSW5kZXg9b30sMCkpO2JyZWFrO2RlZmF1bHQ6bnVsbCE9PXQmJnQhPT1yfHwodD0iIiksZS52YWx1ZT10fX19fSgpLGcuYigic2VsZWN0RXh0ZW5zaW9ucyIsZy51KSxnLmIoInNlbGVjdEV4dGVuc2lvbnMucmVhZFZhbHVlIixnLnUuTCksZy5iKCJzZWxlY3RFeHRlbnNpb25zLndyaXRlVmFsdWUiLGcudS55YSksZy5tPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXtlPWcuYS5DYihlKSwxMjM9PT1lLmNoYXJDb2RlQXQoMCkmJihlPWUuc2xpY2UoMSwtMSkpLGUrPSJcbiwiO3ZhciB0LG49W10scj1lLm1hdGNoKGkpLHM9W10sYz0wO2lmKDE8ci5sZW5ndGgpe2Zvcih2YXIgZCxsPTA7ZD1yW2xdOysrbCl7dmFyIHU9ZC5jaGFyQ29kZUF0KDApO2lmKDQ0PT09dSl7aWYoMD49Yyl7bi5wdXNoKHQmJnMubGVuZ3RoP3trZXk6dCx2YWx1ZTpzLmpvaW4oIiIpfTp7dW5rbm93bjp0fHxzLmpvaW4oIiIpfSksdD1jPTAscz1bXTtjb250aW51ZX19ZWxzZSBpZig1OD09PXUpe2lmKCFjJiYhdCYmMT09PXMubGVuZ3RoKXt0PXMucG9wKCk7Y29udGludWV9fWVsc2V7aWYoNDc9PT11JiYxPGQubGVuZ3RoJiYoNDc9PT1kLmNoYXJDb2RlQXQoMSl8fDQyPT09ZC5jaGFyQ29kZUF0KDEpKSljb250aW51ZTs0Nz09PXUmJmwmJjE8ZC5sZW5ndGg/KHU9cltsLTFdLm1hdGNoKG8pKSYmIWFbdVswXV0mJihlPWUuc3Vic3RyKGUuaW5kZXhPZihkKSsxKSxyPWUubWF0Y2goaSksbD0tMSxkPSIvIik6NDA9PT11fHwxMjM9PT11fHw5MT09PXU/KytjOjQxPT09dXx8MTI1PT09dXx8OTM9PT11Py0tYzp0fHxzLmxlbmd0aHx8MzQhPT11JiYzOSE9PXV8fChkPWQuc2xpY2UoMSwtMSkpfXMucHVzaChkKX1pZigwPGMpdGhyb3cgRXJyb3IoIlVuYmFsYW5jZWQgcGFyZW50aGVzZXMsIGJyYWNlcywgb3IgYnJhY2tldHMiKX1yZXR1cm4gbn12YXIgdD1bInRydWUiLCJmYWxzZSIsIm51bGwiLCJ1bmRlZmluZWQiXSxuPS9eKD86WyRfYS16XVskXHddKnwoLispKFwuXHMqWyRfYS16XVskXHddKnxcWy4rXF0pKSQvaSxpPVJlZ0V4cCgiXCIoPzpcXFxcLnxbXlwiXSkqXCJ8Jyg/OlxcXFwufFteJ10pKid8YCg/OlxcXFwufFteYF0pKmB8L1xcKig/OlteKl18XFwqK1teKi9dKSpcXCorL3wvLy4qXG58Lyg/OlxcXFwufFteL10pKy93KnxbXlxcczosL11bXixcIidge30oKS86W1xcXV0qW15cXHMsXCInYHt9KCkvOltcXF1dfFteXFxzXSIsImciKSxvPS9bXF0pIidBLVphLXowLTlfJF0rJC8sYT17ImluIjoxLCJyZXR1cm4iOjEsInR5cGVvZiI6MX0scj17fTtyZXR1cm57UmE6W10sdmE6cixaYjplLHViOmZ1bmN0aW9uKGksbyl7ZnVuY3Rpb24gYShlLGkpe3ZhciBvO2lmKCFsKXt2YXIgdT1nLmdldEJpbmRpbmdIYW5kbGVyKGUpO2lmKHUmJnUucHJlcHJvY2VzcyYmIShpPXUucHJlcHJvY2VzcyhpLGUsYSkpKXJldHVybjsodT1yW2VdKSYmKG89aSwwPD1nLmEuQSh0LG8pP289ITE6KHU9by5tYXRjaChuKSxvPW51bGwhPT11JiYodVsxXT8iT2JqZWN0KCIrdVsxXSsiKSIrdVsyXTpvKSksdT1vKSx1JiZjLnB1c2goIiciKygic3RyaW5nIj09dHlwZW9mIHJbZV0/cltlXTplKSsiJzpmdW5jdGlvbihfeil7IitvKyI9X3p9Iil9ZCYmKGk9ImZ1bmN0aW9uKCl7cmV0dXJuICIraSsiIH0iKSxzLnB1c2goIiciK2UrIic6IitpKX1vPW98fHt9O3ZhciBzPVtdLGM9W10sZD1vLnZhbHVlQWNjZXNzb3JzLGw9by5iaW5kaW5nUGFyYW1zLHU9InN0cmluZyI9PXR5cGVvZiBpP2UoaSk6aTtyZXR1cm4gZy5hLkModSxmdW5jdGlvbihlKXthKGUua2V5fHxlLnVua25vd24sZS52YWx1ZSl9KSxjLmxlbmd0aCYmYSgiX2tvX3Byb3BlcnR5X3dyaXRlcnMiLCJ7IitjLmpvaW4oIiwiKSsiIH0iKSxzLmpvaW4oIiwiKX0sSGQ6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKylpZihlW25dLmtleT09dClyZXR1cm4hMDtyZXR1cm4hMX0sJGE6ZnVuY3Rpb24oZSx0LG4saSxvKXtlJiZnLk4oZSk/IWcuWWEoZSl8fG8mJmUudygpPT09aXx8ZShpKTooZT10LmdldCgiX2tvX3Byb3BlcnR5X3dyaXRlcnMiKSkmJmVbbl0mJmVbbl0oaSl9fX0oKSxnLmIoImV4cHJlc3Npb25SZXdyaXRpbmciLGcubSksZy5iKCJleHByZXNzaW9uUmV3cml0aW5nLmJpbmRpbmdSZXdyaXRlVmFsaWRhdG9ycyIsZy5tLlJhKSxnLmIoImV4cHJlc3Npb25SZXdyaXRpbmcucGFyc2VPYmplY3RMaXRlcmFsIixnLm0uWmIpLGcuYigiZXhwcmVzc2lvblJld3JpdGluZy5wcmVQcm9jZXNzQmluZGluZ3MiLGcubS51YiksZy5iKCJleHByZXNzaW9uUmV3cml0aW5nLl90d29XYXlCaW5kaW5ncyIsZy5tLnZhKSxnLmIoImpzb25FeHByZXNzaW9uUmV3cml0aW5nIixnLm0pLGcuYigianNvbkV4cHJlc3Npb25SZXdyaXRpbmcuaW5zZXJ0UHJvcGVydHlBY2Nlc3NvcnNJbnRvSnNvbiIsZy5tLnViKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIDg9PWUubm9kZVR5cGUmJmEudGVzdChvP2UudGV4dDplLm5vZGVWYWx1ZSl9ZnVuY3Rpb24gdChlKXtyZXR1cm4gOD09ZS5ub2RlVHlwZSYmci50ZXN0KG8/ZS50ZXh0OmUubm9kZVZhbHVlKX1mdW5jdGlvbiBuKG4saSl7Zm9yKHZhciBvPW4sYT0xLHI9W107bz1vLm5leHRTaWJsaW5nOyl7aWYodChvKSYmKGcuYS5nLnNldChvLGQsITApLGEtLSwwPT09YSkpcmV0dXJuIHI7ci5wdXNoKG8pLGUobykmJmErK31pZighaSl0aHJvdyBFcnJvcigiQ2Fubm90IGZpbmQgY2xvc2luZyBjb21tZW50IHRhZyB0byBtYXRjaDogIituLm5vZGVWYWx1ZSk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gaShlLHQpe3ZhciBpPW4oZSx0KTtyZXR1cm4gaT8wPGkubGVuZ3RoP2lbaS5sZW5ndGgtMV0ubmV4dFNpYmxpbmc6ZS5uZXh0U2libGluZzpudWxsfXZhciBvPWMmJiI8IS0tdGVzdC0tPiI9PT1jLmNyZWF0ZUNvbW1lbnQoInRlc3QiKS50ZXh0LGE9bz8vXlx4M2MhLS1ccyprbyg/OlxzKyhbXHNcU10rKSk/XHMqLS1ceDNlJC86L15ccyprbyg/OlxzKyhbXHNcU10rKSk/XHMqJC8scj1vPy9eXHgzYyEtLVxzKlwva29ccyotLVx4M2UkLzovXlxzKlwva29ccyokLyxzPXt1bDohMCxvbDohMH0sZD0iX19rb19tYXRjaGVkRW5kQ29tbWVudF9fIjtnLmg9e2VhOnt9LGNoaWxkTm9kZXM6ZnVuY3Rpb24odCl7cmV0dXJuIGUodCk/bih0KTp0LmNoaWxkTm9kZXN9LEVhOmZ1bmN0aW9uKHQpe2lmKGUodCkpe3Q9Zy5oLmNoaWxkTm9kZXModCk7Zm9yKHZhciBuPTAsaT10Lmxlbmd0aDtuPGk7bisrKWcucmVtb3ZlTm9kZSh0W25dKTsKfWVsc2UgZy5hLlNiKHQpfSx1YTpmdW5jdGlvbih0LG4pe2lmKGUodCkpe2cuaC5FYSh0KTtmb3IodmFyIGk9dC5uZXh0U2libGluZyxvPTAsYT1uLmxlbmd0aDtvPGE7bysrKWkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobltvXSxpKX1lbHNlIGcuYS51YSh0LG4pfSxVYzpmdW5jdGlvbih0LG4pe2UodCk/dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQubmV4dFNpYmxpbmcpOnQuZmlyc3RDaGlsZD90Lmluc2VydEJlZm9yZShuLHQuZmlyc3RDaGlsZCk6dC5hcHBlbmRDaGlsZChuKX0sVmI6ZnVuY3Rpb24odCxuLGkpe2k/ZSh0KT90LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG4saS5uZXh0U2libGluZyk6aS5uZXh0U2libGluZz90Lmluc2VydEJlZm9yZShuLGkubmV4dFNpYmxpbmcpOnQuYXBwZW5kQ2hpbGQobik6Zy5oLlVjKHQsbil9LGZpcnN0Q2hpbGQ6ZnVuY3Rpb24obil7aWYoZShuKSlyZXR1cm4hbi5uZXh0U2libGluZ3x8dChuLm5leHRTaWJsaW5nKT9udWxsOm4ubmV4dFNpYmxpbmc7aWYobi5maXJzdENoaWxkJiZ0KG4uZmlyc3RDaGlsZCkpdGhyb3cgRXJyb3IoIkZvdW5kIGludmFsaWQgZW5kIGNvbW1lbnQsIGFzIHRoZSBmaXJzdCBjaGlsZCBvZiAiK24pO3JldHVybiBuLmZpcnN0Q2hpbGR9LG5leHRTaWJsaW5nOmZ1bmN0aW9uKG4pe2lmKGUobikmJihuPWkobikpLG4ubmV4dFNpYmxpbmcmJnQobi5uZXh0U2libGluZykpe3ZhciBvPW4ubmV4dFNpYmxpbmc7aWYodChvKSYmIWcuYS5nLmdldChvLGQpKXRocm93IEVycm9yKCJGb3VuZCBlbmQgY29tbWVudCB3aXRob3V0IGEgbWF0Y2hpbmcgb3BlbmluZyBjb21tZW50LCBhcyBjaGlsZCBvZiAiK24pO3JldHVybiBudWxsfXJldHVybiBuLm5leHRTaWJsaW5nfSxCZDplLFVkOmZ1bmN0aW9uKGUpe3JldHVybihlPShvP2UudGV4dDplLm5vZGVWYWx1ZSkubWF0Y2goYSkpP2VbMV06bnVsbH0sUmM6ZnVuY3Rpb24obil7aWYoc1tnLmEuUChuKV0pe3ZhciBvPW4uZmlyc3RDaGlsZDtpZihvKWRvIGlmKDE9PT1vLm5vZGVUeXBlKXt2YXIgYTthPW8uZmlyc3RDaGlsZDt2YXIgcj1udWxsO2lmKGEpZG8gaWYocilyLnB1c2goYSk7ZWxzZSBpZihlKGEpKXt2YXIgYz1pKGEsITApO2M/YT1jOnI9W2FdfWVsc2UgdChhKSYmKHI9W2FdKTt3aGlsZShhPWEubmV4dFNpYmxpbmcpO2lmKGE9cilmb3Iocj1vLm5leHRTaWJsaW5nLGM9MDtjPGEubGVuZ3RoO2MrKylyP24uaW5zZXJ0QmVmb3JlKGFbY10scik6bi5hcHBlbmRDaGlsZChhW2NdKX13aGlsZShvPW8ubmV4dFNpYmxpbmcpfX19fSgpLGcuYigidmlydHVhbEVsZW1lbnRzIixnLmgpLGcuYigidmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5ncyIsZy5oLmVhKSxnLmIoInZpcnR1YWxFbGVtZW50cy5lbXB0eU5vZGUiLGcuaC5FYSksZy5iKCJ2aXJ0dWFsRWxlbWVudHMuaW5zZXJ0QWZ0ZXIiLGcuaC5WYiksZy5iKCJ2aXJ0dWFsRWxlbWVudHMucHJlcGVuZCIsZy5oLlVjKSxnLmIoInZpcnR1YWxFbGVtZW50cy5zZXREb21Ob2RlQ2hpbGRyZW4iLGcuaC51YSksZnVuY3Rpb24oKXtnLmdhPWZ1bmN0aW9uKCl7dGhpcy5tZD17fX0sZy5hLmV4dGVuZChnLmdhLnByb3RvdHlwZSx7bm9kZUhhc0JpbmRpbmdzOmZ1bmN0aW9uKGUpe3N3aXRjaChlLm5vZGVUeXBlKXtjYXNlIDE6cmV0dXJuIG51bGwhPWUuZ2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiKXx8Zy5pLmdldENvbXBvbmVudE5hbWVGb3JOb2RlKGUpO2Nhc2UgODpyZXR1cm4gZy5oLkJkKGUpO2RlZmF1bHQ6cmV0dXJuITF9fSxnZXRCaW5kaW5nczpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuZ2V0QmluZGluZ3NTdHJpbmcoZSx0KSxuPW4/dGhpcy5wYXJzZUJpbmRpbmdzU3RyaW5nKG4sdCxlKTpudWxsO3JldHVybiBnLmkuc2MobixlLHQsITEpfSxnZXRCaW5kaW5nQWNjZXNzb3JzOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5nZXRCaW5kaW5nc1N0cmluZyhlLHQpLG49bj90aGlzLnBhcnNlQmluZGluZ3NTdHJpbmcobix0LGUse3ZhbHVlQWNjZXNzb3JzOiEwfSk6bnVsbDtyZXR1cm4gZy5pLnNjKG4sZSx0LCEwKX0sZ2V0QmluZGluZ3NTdHJpbmc6ZnVuY3Rpb24oZSl7c3dpdGNoKGUubm9kZVR5cGUpe2Nhc2UgMTpyZXR1cm4gZS5nZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIpO2Nhc2UgODpyZXR1cm4gZy5oLlVkKGUpO2RlZmF1bHQ6cmV0dXJuIG51bGx9fSxwYXJzZUJpbmRpbmdzU3RyaW5nOmZ1bmN0aW9uKGUsdCxuLGkpe3RyeXt2YXIgbyxhPXRoaXMubWQscj1lKyhpJiZpLnZhbHVlQWNjZXNzb3JzfHwiIik7aWYoIShvPWFbcl0pKXt2YXIgcyxjPSJ3aXRoKCRjb250ZXh0KXt3aXRoKCRkYXRhfHx7fSl7cmV0dXJueyIrZy5tLnViKGUsaSkrIn19fSI7cz1uZXcgRnVuY3Rpb24oIiRjb250ZXh0IiwiJGVsZW1lbnQiLGMpLG89YVtyXT1zfXJldHVybiBvKHQsbil9Y2F0Y2goZCl7dGhyb3cgZC5tZXNzYWdlPSJVbmFibGUgdG8gcGFyc2UgYmluZGluZ3MuXG5CaW5kaW5ncyB2YWx1ZTogIitlKyJcbk1lc3NhZ2U6ICIrZC5tZXNzYWdlLGR9fX0pLGcuZ2EuaW5zdGFuY2U9bmV3IGcuZ2F9KCksZy5iKCJiaW5kaW5nUHJvdmlkZXIiLGcuZ2EpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdD0oZT1nLmEuZy5nZXQoZSxUKSkmJmUuTTt0JiYoZS5NPW51bGwsdC5TYygpKX1mdW5jdGlvbiB0KHQsbixpKXt0aGlzLm5vZGU9dCx0aGlzLnhjPW4sdGhpcy5pYj1bXSx0aGlzLlQ9ITEsbi5NfHxnLmEuSS56YSh0LGUpLGkmJmkuTSYmKGkuTS5pYi5wdXNoKHQpLHRoaXMuS2I9aSl9ZnVuY3Rpb24gbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZX19ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSgpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGcuYS5IYShnLnYuSyhlKSxmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlKClbbl19fSl9ZnVuY3Rpb24gYShlLHQsaSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGU/byhlLmJpbmQobnVsbCx0LGkpKTpnLmEuSGEoZSxuKX1mdW5jdGlvbiBkKGUsdCl7cmV0dXJuIG8odGhpcy5nZXRCaW5kaW5ncy5iaW5kKHRoaXMsZSx0KSl9ZnVuY3Rpb24gdShlLHQpe3ZhciBuPWcuaC5maXJzdENoaWxkKHQpO2lmKG4pe3ZhciBpLG89Zy5nYS5pbnN0YW5jZSxhPW8ucHJlcHJvY2Vzc05vZGU7aWYoYSl7Zm9yKDtpPW47KW49Zy5oLm5leHRTaWJsaW5nKGkpLGEuY2FsbChvLGkpO249Zy5oLmZpcnN0Q2hpbGQodCl9Zm9yKDtpPW47KW49Zy5oLm5leHRTaWJsaW5nKGkpLHAoZSxpKX1nLmouR2EodCxnLmouVCl9ZnVuY3Rpb24gcChlLHQpe3ZhciBuPWUsaT0xPT09dC5ub2RlVHlwZTtpJiZnLmguUmModCksKGl8fGcuZ2EuaW5zdGFuY2Uubm9kZUhhc0JpbmRpbmdzKHQpKSYmKG49bSh0LG51bGwsZSkuYmluZGluZ0NvbnRleHRGb3JEZXNjZW5kYW50cyksbiYmIVNbZy5hLlAodCldJiZ1KG4sdCl9ZnVuY3Rpb24gZihlKXt2YXIgdD1bXSxuPXt9LGk9W107cmV0dXJuIGcuYS5PKGUsZnVuY3Rpb24gbyhhKXtpZighblthXSl7dmFyIHI9Zy5nZXRCaW5kaW5nSGFuZGxlcihhKTtyJiYoci5hZnRlciYmKGkucHVzaChhKSxnLmEuQyhyLmFmdGVyLGZ1bmN0aW9uKHQpe2lmKGVbdF0pe2lmKC0xIT09Zy5hLkEoaSx0KSl0aHJvdyBFcnJvcigiQ2Fubm90IGNvbWJpbmUgdGhlIGZvbGxvd2luZyBiaW5kaW5ncywgYmVjYXVzZSB0aGV5IGhhdmUgYSBjeWNsaWMgZGVwZW5kZW5jeTogIitpLmpvaW4oIiwgIikpO28odCl9fSksaS5sZW5ndGgtLSksdC5wdXNoKHtrZXk6YSxMYzpyfSkpLG5bYV09ITB9fSksdH1mdW5jdGlvbiBtKGUsdCxuKXt2YXIgbz1nLmEuZy5UYihlLFQse30pLGE9by5nZDtpZighdCl7aWYoYSl0aHJvdyBFcnJvcigiWW91IGNhbm5vdCBhcHBseSBiaW5kaW5ncyBtdWx0aXBsZSB0aW1lcyB0byB0aGUgc2FtZSBlbGVtZW50LiIpO28uZ2Q9ITB9YXx8KG8uY29udGV4dD1uKTt2YXIgcztpZih0JiYiZnVuY3Rpb24iIT10eXBlb2YgdClzPXQ7ZWxzZXt2YXIgYz1nLmdhLmluc3RhbmNlLGw9Yy5nZXRCaW5kaW5nQWNjZXNzb3JzfHxkLHU9Zy4kKGZ1bmN0aW9uKCl7cmV0dXJuKHM9dD90KG4sZSk6bC5jYWxsKGMsZSxuKSkmJihuW2hdJiZuW2hdKCksbltfXSYmbltfXSgpKSxzfSxudWxsLHtsOmV9KTtzJiZ1LmphKCl8fCh1PW51bGwpfXZhciBwLG09bjtpZihzKXt2YXIgdj1mdW5jdGlvbigpe3JldHVybiBnLmEuSGEodT91KCk6cyxpKX0sYj11P2Z1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBpKHUoKVtlXSl9fTpmdW5jdGlvbihlKXtyZXR1cm4gc1tlXX07di5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHNbZV0mJmkoYihlKSl9LHYuaGFzPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluIHN9LGcuai5UIGluIHMmJmcuai5zdWJzY3JpYmUoZSxnLmouVCxmdW5jdGlvbigpe3ZhciB0PSgwLHNbZy5qLlRdKSgpO2lmKHQpe3ZhciBuPWcuaC5jaGlsZE5vZGVzKGUpO24ubGVuZ3RoJiZ0KG4sZy5EYyhuWzBdKSl9fSksZy5qLm9hIGluIHMmJihtPWcuai5CYihlLG4pLGcuai5zdWJzY3JpYmUoZSxnLmoub2EsZnVuY3Rpb24oKXt2YXIgdD0oMCxzW2cuai5vYV0pKCk7dCYmZy5oLmZpcnN0Q2hpbGQoZSkmJnQoZSl9KSksbz1mKHMpLGcuYS5DKG8sZnVuY3Rpb24odCl7dmFyIG49dC5MYy5pbml0LGk9dC5MYy51cGRhdGUsbz10LmtleTtpZig4PT09ZS5ub2RlVHlwZSYmIWcuaC5lYVtvXSl0aHJvdyBFcnJvcigiVGhlIGJpbmRpbmcgJyIrbysiJyBjYW5ub3QgYmUgdXNlZCB3aXRoIHZpcnR1YWwgZWxlbWVudHMiKTt0cnl7ImZ1bmN0aW9uIj09dHlwZW9mIG4mJmcudi5LKGZ1bmN0aW9uKCl7dmFyIHQ9bihlLGIobyksdixtLiRkYXRhLG0pO2lmKHQmJnQuY29udHJvbHNEZXNjZW5kYW50QmluZGluZ3Mpe2lmKHAhPT1yKXRocm93IEVycm9yKCJNdWx0aXBsZSBiaW5kaW5ncyAoIitwKyIgYW5kICIrbysiKSBhcmUgdHJ5aW5nIHRvIGNvbnRyb2wgZGVzY2VuZGFudCBiaW5kaW5ncyBvZiB0aGUgc2FtZSBlbGVtZW50LiBZb3UgY2Fubm90IHVzZSB0aGVzZSBiaW5kaW5ncyB0b2dldGhlciBvbiB0aGUgc2FtZSBlbGVtZW50LiIpO3A9b319KSwiZnVuY3Rpb24iPT10eXBlb2YgaSYmZy4kKGZ1bmN0aW9uKCl7aShlLGIobyksdixtLiRkYXRhLG0pfSxudWxsLHtsOmV9KX1jYXRjaChhKXt0aHJvdyBhLm1lc3NhZ2U9J1VuYWJsZSB0byBwcm9jZXNzIGJpbmRpbmcgIicrbysiOiAiK3Nbb10rJyJcbk1lc3NhZ2U6ICcrYS5tZXNzYWdlLGF9fSl9cmV0dXJuIG89cD09PXIse3Nob3VsZEJpbmREZXNjZW5kYW50czpvLGJpbmRpbmdDb250ZXh0Rm9yRGVzY2VuZGFudHM6byYmbX19ZnVuY3Rpb24gdihlLHQpe3JldHVybiBlJiZlIGluc3RhbmNlb2YgZy5mYT9lOm5ldyBnLmZhKGUscixyLHQpfXZhciBoPWcuYS5EYSgiX3N1YnNjcmliYWJsZSIpLGI9Zy5hLkRhKCJfYW5jZXN0b3JCaW5kaW5nSW5mbyIpLF89Zy5hLkRhKCJfZGF0YURlcGVuZGVuY3kiKTtnLmY9e307dmFyIFM9e3NjcmlwdDohMCx0ZXh0YXJlYTohMCx0ZW1wbGF0ZTohMH07Zy5nZXRCaW5kaW5nSGFuZGxlcj1mdW5jdGlvbihlKXtyZXR1cm4gZy5mW2VdfTt2YXIgdz17fTtnLmZhPWZ1bmN0aW9uKGUsdCxuLGksbyl7ZnVuY3Rpb24gYSgpe3ZhciBlPXU/bCgpOmwsbz1nLmEuYyhlKTtyZXR1cm4gdD8oZy5hLmV4dGVuZChjLHQpLGIgaW4gdCYmKGNbYl09dFtiXSkpOihjLiRwYXJlbnRzPVtdLGMuJHJvb3Q9byxjLmtvPWcpLGNbaF09cyxkP289Yy4kZGF0YTooYy4kcmF3RGF0YT1lLGMuJGRhdGE9byksbiYmKGNbbl09byksaSYmaShjLHQsbyksdCYmdFtoXSYmIWcuVS5vKCkuVWIodFtoXSkmJnRbaF0oKSxwJiYoY1tfXT1wKSxjLiRkYXRhfXZhciBzLGM9dGhpcyxkPWU9PT13LGw9ZD9yOmUsdT0iZnVuY3Rpb24iPT10eXBlb2YgbCYmIWcuTihsKSxwPW8mJm8uZGF0YURlcGVuZGVuY3k7byYmby5leHBvcnREZXBlbmRlbmNpZXM/YSgpOihzPWcud2IoYSkscy53KCkscy5qYSgpP3MuZXF1YWxpdHlDb21wYXJlcj1udWxsOmNbaF09cil9LGcuZmEucHJvdG90eXBlLmNyZWF0ZUNoaWxkQ29udGV4dD1mdW5jdGlvbihlLHQsbixpKXtpZighaSYmdCYmIm9iamVjdCI9PXR5cGVvZiB0JiYoaT10LHQ9aS5hcyxuPWkuZXh0ZW5kKSx0JiZpJiZpLm5vQ2hpbGRDb250ZXh0KXt2YXIgbz0iZnVuY3Rpb24iPT10eXBlb2YgZSYmIWcuTihlKTtyZXR1cm4gbmV3IGcuZmEodyx0aGlzLG51bGwsZnVuY3Rpb24oaSl7biYmbihpKSxpW3RdPW8/ZSgpOmV9LGkpfXJldHVybiBuZXcgZy5mYShlLHRoaXMsdCxmdW5jdGlvbihlLHQpe2UuJHBhcmVudENvbnRleHQ9dCxlLiRwYXJlbnQ9dC4kZGF0YSxlLiRwYXJlbnRzPSh0LiRwYXJlbnRzfHxbXSkuc2xpY2UoMCksZS4kcGFyZW50cy51bnNoaWZ0KGUuJHBhcmVudCksbiYmbihlKX0saSl9LGcuZmEucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgZy5mYSh3LHRoaXMsbnVsbCxmdW5jdGlvbih0KXtnLmEuZXh0ZW5kKHQsImZ1bmN0aW9uIj09dHlwZW9mIGU/ZSh0KTplKX0sdCl9O3ZhciBUPWcuYS5nLlooKTt0LnByb3RvdHlwZS5TYz1mdW5jdGlvbigpe3RoaXMuS2ImJnRoaXMuS2IuTSYmdGhpcy5LYi5NLnJkKHRoaXMubm9kZSl9LHQucHJvdG90eXBlLnJkPWZ1bmN0aW9uKGUpe2cuYS5oYih0aGlzLmliLGUpLCF0aGlzLmliLmxlbmd0aCYmdGhpcy5UJiZ0aGlzLkJjKCl9LHQucHJvdG90eXBlLkJjPWZ1bmN0aW9uKCl7dGhpcy5UPSEwLHRoaXMueGMuTSYmIXRoaXMuaWIubGVuZ3RoJiYodGhpcy54Yy5NPW51bGwsZy5hLkkueGIodGhpcy5ub2RlLGUpLGcuai5HYSh0aGlzLm5vZGUsZy5qLm9hKSx0aGlzLlNjKCkpfSxnLmo9e1Q6ImNoaWxkcmVuQ29tcGxldGUiLG9hOiJkZXNjZW5kYW50c0NvbXBsZXRlIixzdWJzY3JpYmU6ZnVuY3Rpb24oZSx0LG4saSl7cmV0dXJuIGU9Zy5hLmcuVGIoZSxULHt9KSxlLkZhfHwoZS5GYT1uZXcgZy5SKSxlLkZhLnN1YnNjcmliZShuLGksdCl9LEdhOmZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLmcuZ2V0KGUsVCk7aWYobiYmKG4uRmEmJm4uRmEubm90aWZ5U3Vic2NyaWJlcnMoZSx0KSx0PT1nLmouVCkpaWYobi5NKW4uTS5CYygpO2Vsc2UgaWYobi5NPT09ciYmbi5GYSYmbi5GYS5XYShnLmoub2EpKXRocm93IEVycm9yKCJkZXNjZW5kYW50c0NvbXBsZXRlIGV2ZW50IG5vdCBzdXBwb3J0ZWQgZm9yIGJpbmRpbmdzIG9uIHRoaXMgbm9kZSIpfSxCYjpmdW5jdGlvbihlLG4pe3ZhciBpPWcuYS5nLlRiKGUsVCx7fSk7cmV0dXJuIGkuTXx8KGkuTT1uZXcgdChlLGksbltiXSkpLG5bYl09PWk/bjpuLmV4dGVuZChmdW5jdGlvbihlKXtlW2JdPWl9KX19LGcuU2Q9ZnVuY3Rpb24oZSl7cmV0dXJuKGU9Zy5hLmcuZ2V0KGUsVCkpJiZlLmNvbnRleHR9LGcuZWI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiAxPT09ZS5ub2RlVHlwZSYmZy5oLlJjKGUpLG0oZSx0LHYobikpfSxnLmtkPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbj12KG4pLGcuZWIoZSxhKHQsbixlKSxuKX0sZy5QYT1mdW5jdGlvbihlLHQpezEhPT10Lm5vZGVUeXBlJiY4IT09dC5ub2RlVHlwZXx8dSh2KGUpLHQpfSxnLnVjPWZ1bmN0aW9uKGUsdCxuKXtpZighbCYmcy5qUXVlcnkmJihsPXMualF1ZXJ5KSwyPmFyZ3VtZW50cy5sZW5ndGgpe2lmKHQ9Yy5ib2R5LCF0KXRocm93IEVycm9yKCJrby5hcHBseUJpbmRpbmdzOiBjb3VsZCBub3QgZmluZCBkb2N1bWVudC5ib2R5OyBoYXMgdGhlIGRvY3VtZW50IGJlZW4gbG9hZGVkPyIpfWVsc2UgaWYoIXR8fDEhPT10Lm5vZGVUeXBlJiY4IT09dC5ub2RlVHlwZSl0aHJvdyBFcnJvcigia28uYXBwbHlCaW5kaW5nczogZmlyc3QgcGFyYW1ldGVyIHNob3VsZCBiZSB5b3VyIHZpZXcgbW9kZWw7IHNlY29uZCBwYXJhbWV0ZXIgc2hvdWxkIGJlIGEgRE9NIG5vZGUiKTtwKHYoZSxuKSx0KX0sZy5DYz1mdW5jdGlvbihlKXtyZXR1cm4hZXx8MSE9PWUubm9kZVR5cGUmJjghPT1lLm5vZGVUeXBlP3I6Zy5TZChlKX0sZy5EYz1mdW5jdGlvbihlKXtyZXR1cm4oZT1nLkNjKGUpKT9lLiRkYXRhOnJ9LGcuYigiYmluZGluZ0hhbmRsZXJzIixnLmYpLGcuYigiYmluZGluZ0V2ZW50IixnLmopLGcuYigiYmluZGluZ0V2ZW50LnN1YnNjcmliZSIsZy5qLnN1YnNjcmliZSksZy5iKCJiaW5kaW5nRXZlbnQuc3RhcnRQb3NzaWJseUFzeW5jQ29udGVudEJpbmRpbmciLGcuai5CYiksZy5iKCJhcHBseUJpbmRpbmdzIixnLnVjKSxnLmIoImFwcGx5QmluZGluZ3NUb0Rlc2NlbmRhbnRzIixnLlBhKSxnLmIoImFwcGx5QmluZGluZ0FjY2Vzc29yc1RvTm9kZSIsZy5lYiksZy5iKCJhcHBseUJpbmRpbmdzVG9Ob2RlIixnLmtkKSxnLmIoImNvbnRleHRGb3IiLGcuQ2MpLGcuYigiZGF0YUZvciIsZy5EYyl9KCksZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LGkpe3ZhciByLHM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sdCk/b1t0XTplO3M/cy5zdWJzY3JpYmUoaSk6KHM9b1t0XT1uZXcgZy5SLHMuc3Vic2NyaWJlKGkpLG4odCxmdW5jdGlvbihlLG4pe3ZhciBpPSEoIW58fCFuLnN5bmNocm9ub3VzKTthW3RdPXtkZWZpbml0aW9uOmUsRmQ6aX0sZGVsZXRlIG9bdF0scnx8aT9zLm5vdGlmeVN1YnNjcmliZXJzKGUpOmcubWEueWIoZnVuY3Rpb24oKXtzLm5vdGlmeVN1YnNjcmliZXJzKGUpfSl9KSxyPSEwKX1mdW5jdGlvbiBuKGUsdCl7aSgiZ2V0Q29uZmlnIixbZV0sZnVuY3Rpb24obil7bj9pKCJsb2FkQ29tcG9uZW50IixbZSxuXSxmdW5jdGlvbihlKXt0KGUsbil9KTp0KG51bGwsbnVsbCl9KX1mdW5jdGlvbiBpKHQsbixvLGEpe2F8fChhPWcuaS5sb2FkZXJzLnNsaWNlKDApKTt2YXIgcj1hLnNoaWZ0KCk7aWYocil7dmFyIHM9clt0XTtpZihzKXt2YXIgYz0hMTtpZihzLmFwcGx5KHIsbi5jb25jYXQoZnVuY3Rpb24oZSl7Yz9vKG51bGwpOm51bGwhPT1lP28oZSk6aSh0LG4sbyxhKX0pKSE9PWUmJihjPSEwLCFyLnN1cHByZXNzTG9hZGVyRXhjZXB0aW9ucykpdGhyb3cgRXJyb3IoIkNvbXBvbmVudCBsb2FkZXJzIG11c3Qgc3VwcGx5IHZhbHVlcyBieSBpbnZva2luZyB0aGUgY2FsbGJhY2ssIG5vdCBieSByZXR1cm5pbmcgdmFsdWVzIHN5bmNocm9ub3VzbHkuIil9ZWxzZSBpKHQsbixvLGEpfWVsc2UgbyhudWxsKX12YXIgbz17fSxhPXt9O2cuaT17Z2V0OmZ1bmN0aW9uKG4saSl7dmFyIG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsbik/YVtuXTplO28/by5GZD9nLnYuSyhmdW5jdGlvbigpe2koby5kZWZpbml0aW9uKX0pOmcubWEueWIoZnVuY3Rpb24oKXtpKG8uZGVmaW5pdGlvbil9KTp0KG4saSl9LEFjOmZ1bmN0aW9uKGUpe2RlbGV0ZSBhW2VdfSxuYzppfSxnLmkubG9hZGVycz1bXSxnLmIoImNvbXBvbmVudHMiLGcuaSksZy5iKCJjb21wb25lbnRzLmdldCIsZy5pLmdldCksZy5iKCJjb21wb25lbnRzLmNsZWFyQ2FjaGVkRGVmaW5pdGlvbiIsZy5pLkFjKX0oKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4saSl7ZnVuY3Rpb24gbygpezA9PT0tLXMmJmkocil9dmFyIHI9e30scz0yLGM9bi50ZW1wbGF0ZTtuPW4udmlld01vZGVsLGM/YSh0LGMsZnVuY3Rpb24odCl7Zy5pLm5jKCJsb2FkVGVtcGxhdGUiLFtlLHRdLGZ1bmN0aW9uKGUpe3IudGVtcGxhdGU9ZSxvKCl9KX0pOm8oKSxuP2EodCxuLGZ1bmN0aW9uKHQpe2cuaS5uYygibG9hZFZpZXdNb2RlbCIsW2UsdF0sZnVuY3Rpb24oZSl7cltsXT1lLG8oKX0pfSk6bygpfWZ1bmN0aW9uIG4oZSx0LGkpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KWkoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyB0KGUpfSk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgdFtsXSlpKHRbbF0pO2Vsc2UgaWYoImluc3RhbmNlImluIHQpe3ZhciBvPXQuaW5zdGFuY2U7aShmdW5jdGlvbigpe3JldHVybiBvfSl9ZWxzZSJ2aWV3TW9kZWwiaW4gdD9uKGUsdC52aWV3TW9kZWwsaSk6ZSgiVW5rbm93biB2aWV3TW9kZWwgdmFsdWU6ICIrdCl9ZnVuY3Rpb24gaShlKXtzd2l0Y2goZy5hLlAoZSkpe2Nhc2Uic2NyaXB0IjpyZXR1cm4gZy5hLnRhKGUudGV4dCk7Y2FzZSJ0ZXh0YXJlYSI6cmV0dXJuIGcuYS50YShlLnZhbHVlKTtjYXNlInRlbXBsYXRlIjppZihvKGUuY29udGVudCkpcmV0dXJuIGcuYS5DYShlLmNvbnRlbnQuY2hpbGROb2Rlcyl9cmV0dXJuIGcuYS5DYShlLmNoaWxkTm9kZXMpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIHMuRG9jdW1lbnRGcmFnbWVudD9lIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudDplJiYxMT09PWUubm9kZVR5cGV9ZnVuY3Rpb24gYShlLG4saSl7InN0cmluZyI9PXR5cGVvZiBuLnJlcXVpcmU/dHx8cy5yZXF1aXJlPyh0fHxzLnJlcXVpcmUpKFtuLnJlcXVpcmVdLGkpOmUoIlVzZXMgcmVxdWlyZSwgYnV0IG5vIEFNRCBsb2FkZXIgaXMgcHJlc2VudCIpOmkobil9ZnVuY3Rpb24gcihlKXtyZXR1cm4gZnVuY3Rpb24odCl7dGhyb3cgRXJyb3IoIkNvbXBvbmVudCAnIitlKyInOiAiK3QpfX12YXIgZD17fTtnLmkucmVnaXN0ZXI9ZnVuY3Rpb24oZSx0KXtpZighdCl0aHJvdyBFcnJvcigiSW52YWxpZCBjb25maWd1cmF0aW9uIGZvciAiK2UpO2lmKGcuaS5zYihlKSl0aHJvdyBFcnJvcigiQ29tcG9uZW50ICIrZSsiIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCIpO2RbZV09dH0sZy5pLnNiPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZCxlKX0sZy5pLnVucmVnaXN0ZXI9ZnVuY3Rpb24oZSl7ZGVsZXRlIGRbZV0sZy5pLkFjKGUpfSxnLmkuRWM9e2dldENvbmZpZzpmdW5jdGlvbihlLHQpe3QoZy5pLnNiKGUpP2RbZV06bnVsbCl9LGxvYWRDb21wb25lbnQ6ZnVuY3Rpb24odCxuLGkpe3ZhciBvPXIodCk7YShvLG4sZnVuY3Rpb24obil7ZSh0LG8sbixpKX0pfSxsb2FkVGVtcGxhdGU6ZnVuY3Rpb24oZSx0LG4pe2lmKGU9cihlKSwic3RyaW5nIj09dHlwZW9mIHQpbihnLmEudGEodCkpO2Vsc2UgaWYodCBpbnN0YW5jZW9mIEFycmF5KW4odCk7ZWxzZSBpZihvKHQpKW4oZy5hLmxhKHQuY2hpbGROb2RlcykpO2Vsc2UgaWYodC5lbGVtZW50KWlmKHQ9dC5lbGVtZW50LHMuSFRNTEVsZW1lbnQ/dCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50OnQmJnQudGFnTmFtZSYmMT09PXQubm9kZVR5cGUpbihpKHQpKTtlbHNlIGlmKCJzdHJpbmciPT10eXBlb2YgdCl7dmFyIGE9Yy5nZXRFbGVtZW50QnlJZCh0KTthP24oaShhKSk6ZSgiQ2Fubm90IGZpbmQgZWxlbWVudCB3aXRoIElEICIrdCl9ZWxzZSBlKCJVbmtub3duIGVsZW1lbnQgdHlwZTogIit0KTtlbHNlIGUoIlVua25vd24gdGVtcGxhdGUgdmFsdWU6ICIrdCl9LGxvYWRWaWV3TW9kZWw6ZnVuY3Rpb24oZSx0LGkpe24ocihlKSx0LGkpfX07dmFyIGw9ImNyZWF0ZVZpZXdNb2RlbCI7Zy5iKCJjb21wb25lbnRzLnJlZ2lzdGVyIixnLmkucmVnaXN0ZXIpLGcuYigiY29tcG9uZW50cy5pc1JlZ2lzdGVyZWQiLGcuaS5zYiksZy5iKCJjb21wb25lbnRzLnVucmVnaXN0ZXIiLGcuaS51bnJlZ2lzdGVyKSxnLmIoImNvbXBvbmVudHMuZGVmYXVsdExvYWRlciIsZy5pLkVjKSxnLmkubG9hZGVycy5wdXNoKGcuaS5FYyksZy5pLmNkPWR9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsbil7dmFyIGk9ZS5nZXRBdHRyaWJ1dGUoInBhcmFtcyIpO2lmKGkpe3ZhciBpPXQucGFyc2VCaW5kaW5nc1N0cmluZyhpLG4sZSx7dmFsdWVBY2Nlc3NvcnM6ITAsYmluZGluZ1BhcmFtczohMH0pLGk9Zy5hLkhhKGksZnVuY3Rpb24odCl7cmV0dXJuIGcubyh0LG51bGwse2w6ZX0pfSksbz1nLmEuSGEoaSxmdW5jdGlvbih0KXt2YXIgbj10LncoKTtyZXR1cm4gdC5qYSgpP2cubyh7cmVhZDpmdW5jdGlvbigpe3JldHVybiBnLmEuYyh0KCkpfSx3cml0ZTpnLllhKG4pJiZmdW5jdGlvbihlKXt0KCkoZSl9LGw6ZX0pOm59KTtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sIiRyYXciKXx8KG8uJHJhdz1pKSxvfXJldHVybnskcmF3Ont9fX1nLmkuZ2V0Q29tcG9uZW50TmFtZUZvck5vZGU9ZnVuY3Rpb24oZSl7dmFyIHQ9Zy5hLlAoZSk7aWYoZy5pLnNiKHQpJiYoLTEhPXQuaW5kZXhPZigiLSIpfHwiW29iamVjdCBIVE1MVW5rbm93bkVsZW1lbnRdIj09IiIrZXx8OD49Zy5hLlcmJmUudGFnTmFtZT09PXQpKXJldHVybiB0fSxnLmkuc2M9ZnVuY3Rpb24odCxuLGksbyl7aWYoMT09PW4ubm9kZVR5cGUpe3ZhciBhPWcuaS5nZXRDb21wb25lbnROYW1lRm9yTm9kZShuKTtpZihhKXtpZih0PXR8fHt9LHQuY29tcG9uZW50KXRocm93IEVycm9yKCdDYW5ub3QgdXNlIHRoZSAiY29tcG9uZW50IiBiaW5kaW5nIG9uIGEgY3VzdG9tIGVsZW1lbnQgbWF0Y2hpbmcgYSBjb21wb25lbnQnKTt2YXIgcj17bmFtZTphLHBhcmFtczplKG4saSl9O3QuY29tcG9uZW50PW8/ZnVuY3Rpb24oKXtyZXR1cm4gcn06cn19cmV0dXJuIHR9O3ZhciB0PW5ldyBnLmdhOzk+Zy5hLlcmJihnLmkucmVnaXN0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KGcuaS5yZWdpc3RlciksYy5jcmVhdGVEb2N1bWVudEZyYWdtZW50PWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0LG49ZSgpLGk9Zy5pLmNkO2Zvcih0IGluIGkpO3JldHVybiBufX0oYy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KSl9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXtpZih0PXQudGVtcGxhdGUsIXQpdGhyb3cgRXJyb3IoIkNvbXBvbmVudCAnIitlKyInIGhhcyBubyB0ZW1wbGF0ZSIpO2U9Zy5hLkNhKHQpLGcuaC51YShuLGUpfWZ1bmN0aW9uIHQoZSx0LG4pe3ZhciBpPWUuY3JlYXRlVmlld01vZGVsO3JldHVybiBpP2kuY2FsbChlLHQsbik6dH12YXIgbj0wO2cuZi5jb21wb25lbnQ9e2luaXQ6ZnVuY3Rpb24oaSxvLGEscixzKXtmdW5jdGlvbiBjKCl7dmFyIGU9ZCYmZC5kaXNwb3NlOyJmdW5jdGlvbiI9PXR5cGVvZiBlJiZlLmNhbGwoZCksdSYmdS5zKCksbD1kPXU9bnVsbH12YXIgZCxsLHUscD1nLmEubGEoZy5oLmNoaWxkTm9kZXMoaSkpO3JldHVybiBnLmguRWEoaSksZy5hLkkuemEoaSxjKSxnLm8oZnVuY3Rpb24oKXt2YXIgYSxyLGY9Zy5hLmMobygpKTtpZigic3RyaW5nIj09dHlwZW9mIGY/YT1mOihhPWcuYS5jKGYubmFtZSkscj1nLmEuYyhmLnBhcmFtcykpLCFhKXRocm93IEVycm9yKCJObyBjb21wb25lbnQgbmFtZSBzcGVjaWZpZWQiKTt2YXIgbT1nLmouQmIoaSxzKSx2PWw9KytuO2cuaS5nZXQoYSxmdW5jdGlvbihuKXtpZihsPT09dil7aWYoYygpLCFuKXRocm93IEVycm9yKCJVbmtub3duIGNvbXBvbmVudCAnIithKyInIik7ZShhLG4saSk7dmFyIG89dChuLHIse2VsZW1lbnQ6aSx0ZW1wbGF0ZU5vZGVzOnB9KTtuPW0uY3JlYXRlQ2hpbGRDb250ZXh0KG8se2V4dGVuZDpmdW5jdGlvbihlKXtlLiRjb21wb25lbnQ9byxlLiRjb21wb25lbnRUZW1wbGF0ZU5vZGVzPXB9fSksbyYmby5rb0Rlc2NlbmRhbnRzQ29tcGxldGUmJih1PWcuai5zdWJzY3JpYmUoaSxnLmoub2Esby5rb0Rlc2NlbmRhbnRzQ29tcGxldGUsbykpLGQ9byxnLlBhKG4saSl9fSl9LG51bGwse2w6aX0pLHtjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczohMH19fSxnLmguZWEuY29tcG9uZW50PSEwfSgpO3ZhciBrPXsiY2xhc3MiOiJjbGFzc05hbWUiLCJmb3IiOiJodG1sRm9yIn07Zy5mLmF0dHI9e3VwZGF0ZTpmdW5jdGlvbihlLHQpe3ZhciBuPWcuYS5jKHQoKSl8fHt9O2cuYS5PKG4sZnVuY3Rpb24odCxuKXtuPWcuYS5jKG4pO3ZhciBpPXQuaW5kZXhPZigiOiIpLGk9Imxvb2t1cE5hbWVzcGFjZVVSSSJpbiBlJiYwPGkmJmUubG9va3VwTmFtZXNwYWNlVVJJKHQuc3Vic3RyKDAsaSkpLG89ITE9PT1ufHxudWxsPT09bnx8bj09PXI7bz9pP2UucmVtb3ZlQXR0cmlidXRlTlMoaSx0KTplLnJlbW92ZUF0dHJpYnV0ZSh0KTpuPW4udG9TdHJpbmcoKSw4Pj1nLmEuVyYmdCBpbiBrPyh0PWtbdF0sbz9lLnJlbW92ZUF0dHJpYnV0ZSh0KTplW3RdPW4pOm98fChpP2Uuc2V0QXR0cmlidXRlTlMoaSx0LG4pOmUuc2V0QXR0cmlidXRlKHQsbikpLCJuYW1lIj09PXQmJmcuYS5YYyhlLG8/IiI6bil9KX19LGZ1bmN0aW9uKCl7Zy5mLmNoZWNrZWQ9e2FmdGVyOlsidmFsdWUiLCJhdHRyIl0saW5pdDpmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaSgpe3ZhciBpPWUuY2hlY2tlZCxvPWEoKTtpZighZy5VLnJiKCkmJihpfHwhYyYmIWcuVS5wYSgpKSl7dmFyIGQ9Zy52LksodCk7aWYobCl7dmFyIHA9dT9kLncoKTpkLG09ZjtmPW8sbSE9PW8/aSYmKGcuYS5PYShwLG8sITApLGcuYS5PYShwLG0sITEpKTpnLmEuT2EocCxvLGkpLHUmJmcuWWEoZCkmJmQocCl9ZWxzZSBzJiYobz09PXI/bz1pOml8fChvPXIpKSxnLm0uJGEoZCxuLCJjaGVja2VkIixvLCEwKX19ZnVuY3Rpb24gbygpe3ZhciBuPWcuYS5jKHQoKSksaT1hKCk7bD8oZS5jaGVja2VkPTA8PWcuYS5BKG4saSksZj1pKTplLmNoZWNrZWQ9cyYmaT09PXI/ISFuOmEoKT09PW59dmFyIGE9Zy53YihmdW5jdGlvbigpe3JldHVybiBuLmhhcygiY2hlY2tlZFZhbHVlIik/Zy5hLmMobi5nZXQoImNoZWNrZWRWYWx1ZSIpKTpwP24uaGFzKCJ2YWx1ZSIpP2cuYS5jKG4uZ2V0KCJ2YWx1ZSIpKTplLnZhbHVlOnZvaWQgMH0pLHM9ImNoZWNrYm94Ij09ZS50eXBlLGM9InJhZGlvIj09ZS50eXBlO2lmKHN8fGMpe3ZhciBkPXQoKSxsPXMmJmcuYS5jKGQpaW5zdGFuY2VvZiBBcnJheSx1PSEobCYmZC5wdXNoJiZkLnNwbGljZSkscD1jfHxsLGY9bD9hKCk6cjtjJiYhZS5uYW1lJiZnLmYudW5pcXVlTmFtZS5pbml0KGUsZnVuY3Rpb24oKXtyZXR1cm4hMH0pLGcubyhpLG51bGwse2w6ZX0pLGcuYS5IKGUsImNsaWNrIixpKSxnLm8obyxudWxsLHtsOmV9KSxkPXJ9fX0sZy5tLnZhLmNoZWNrZWQ9ITAsZy5mLmNoZWNrZWRWYWx1ZT17dXBkYXRlOmZ1bmN0aW9uKGUsdCl7ZS52YWx1ZT1nLmEuYyh0KCkpfX19KCksZy5mWyJjbGFzcyJdPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1nLmEuQ2IoZy5hLmModCgpKSk7Zy5hLkViKGUsZS5fX2tvX19jc3NWYWx1ZSwhMSksZS5fX2tvX19jc3NWYWx1ZT1uLGcuYS5FYihlLG4sITApfX0sZy5mLmNzcz17dXBkYXRlOmZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLmModCgpKTtudWxsIT09biYmIm9iamVjdCI9PXR5cGVvZiBuP2cuYS5PKG4sZnVuY3Rpb24odCxuKXtuPWcuYS5jKG4pLGcuYS5FYihlLHQsbil9KTpnLmZbImNsYXNzIl0udXBkYXRlKGUsdCl9fSxnLmYuZW5hYmxlPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1nLmEuYyh0KCkpO24mJmUuZGlzYWJsZWQ/ZS5yZW1vdmVBdHRyaWJ1dGUoImRpc2FibGVkIik6bnx8ZS5kaXNhYmxlZHx8KGUuZGlzYWJsZWQ9ITApfX0sZy5mLmRpc2FibGU9e3VwZGF0ZTpmdW5jdGlvbihlLHQpe2cuZi5lbmFibGUudXBkYXRlKGUsZnVuY3Rpb24oKXtyZXR1cm4hZy5hLmModCgpKX0pfX0sZy5mLmV2ZW50PXtpbml0OmZ1bmN0aW9uKGUsdCxuLGksbyl7dmFyIGE9dCgpfHx7fTtnLmEuTyhhLGZ1bmN0aW9uKGEpeyJzdHJpbmciPT10eXBlb2YgYSYmZy5hLkgoZSxhLGZ1bmN0aW9uKGUpe3ZhciByLHM9dCgpW2FdO2lmKHMpe3RyeXt2YXIgYz1nLmEubGEoYXJndW1lbnRzKTtpPW8uJGRhdGEsYy51bnNoaWZ0KGkpLHI9cy5hcHBseShpLGMpfWZpbmFsbHl7ITAhPT1yJiYoZS5wcmV2ZW50RGVmYXVsdD9lLnByZXZlbnREZWZhdWx0KCk6ZS5yZXR1cm5WYWx1ZT0hMSl9ITE9PT1uLmdldChhKyJCdWJibGUiKSYmKGUuY2FuY2VsQnViYmxlPSEwLGUuc3RvcFByb3BhZ2F0aW9uJiZlLnN0b3BQcm9wYWdhdGlvbigpKX19KX0pfX0sZy5mLmZvcmVhY2g9e1FjOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PWUoKSxuPWcuYS4kYih0KTtyZXR1cm4gbiYmIm51bWJlciIhPXR5cGVvZiBuLmxlbmd0aD8oZy5hLmModCkse2ZvcmVhY2g6bi5kYXRhLGFzOm4uYXMsbm9DaGlsZENvbnRleHQ6bi5ub0NoaWxkQ29udGV4dCxpbmNsdWRlRGVzdHJveWVkOm4uaW5jbHVkZURlc3Ryb3llZCxhZnRlckFkZDpuLmFmdGVyQWRkLGJlZm9yZVJlbW92ZTpuLmJlZm9yZVJlbW92ZSxhZnRlclJlbmRlcjpuLmFmdGVyUmVuZGVyLGJlZm9yZU1vdmU6bi5iZWZvcmVNb3ZlLGFmdGVyTW92ZTpuLmFmdGVyTW92ZSx0ZW1wbGF0ZUVuZ2luZTpnLmJhLk5hfSk6e2ZvcmVhY2g6dCx0ZW1wbGF0ZUVuZ2luZTpnLmJhLk5hfX19LGluaXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZy5mLnRlbXBsYXRlLmluaXQoZSxnLmYuZm9yZWFjaC5RYyh0KSl9LHVwZGF0ZTpmdW5jdGlvbihlLHQsbixpLG8pe3JldHVybiBnLmYudGVtcGxhdGUudXBkYXRlKGUsZy5mLmZvcmVhY2guUWModCksbixpLG8pfX0sZy5tLlJhLmZvcmVhY2g9ITEsZy5oLmVhLmZvcmVhY2g9ITAsZy5mLmhhc2ZvY3VzPXtpbml0OmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGkpe2UuX19rb19oYXNmb2N1c1VwZGF0aW5nPSEwO3ZhciBvPWUub3duZXJEb2N1bWVudDtpZigiYWN0aXZlRWxlbWVudCJpbiBvKXt2YXIgYTt0cnl7YT1vLmFjdGl2ZUVsZW1lbnR9Y2F0Y2gocil7YT1vLmJvZHl9aT1hPT09ZX1vPXQoKSxnLm0uJGEobyxuLCJoYXNmb2N1cyIsaSwhMCksZS5fX2tvX2hhc2ZvY3VzTGFzdFZhbHVlPWksZS5fX2tvX2hhc2ZvY3VzVXBkYXRpbmc9ITF9dmFyIG89aS5iaW5kKG51bGwsITApLGE9aS5iaW5kKG51bGwsITEpO2cuYS5IKGUsImZvY3VzIixvKSxnLmEuSChlLCJmb2N1c2luIixvKSxnLmEuSChlLCJibHVyIixhKSxnLmEuSChlLCJmb2N1c291dCIsYSksZS5fX2tvX2hhc2ZvY3VzTGFzdFZhbHVlPSExfSx1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgbj0hIWcuYS5jKHQoKSk7ZS5fX2tvX2hhc2ZvY3VzVXBkYXRpbmd8fGUuX19rb19oYXNmb2N1c0xhc3RWYWx1ZT09PW58fChuP2UuZm9jdXMoKTplLmJsdXIoKSwhbiYmZS5fX2tvX2hhc2ZvY3VzTGFzdFZhbHVlJiZlLm93bmVyRG9jdW1lbnQuYm9keS5mb2N1cygpLGcudi5LKGcuYS5GYixudWxsLFtlLG4/ImZvY3VzaW4iOiJmb2N1c291dCJdKSl9fSxnLm0udmEuaGFzZm9jdXM9ITAsZy5mLmhhc0ZvY3VzPWcuZi5oYXNmb2N1cyxnLm0udmEuaGFzRm9jdXM9Imhhc2ZvY3VzIixnLmYuaHRtbD17aW5pdDpmdW5jdGlvbigpe3JldHVybntjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczohMH19LHVwZGF0ZTpmdW5jdGlvbihlLHQpe2cuYS5kYyhlLHQoKSl9fSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe2cuZltlXT17aW5pdDpmdW5jdGlvbihlLGksbyxhLHIpe3ZhciBzLGMsZCxsLHUscD17fTtpZih0KXthPW8uZ2V0KCJhcyIpO3ZhciBmPW8uZ2V0KCJub0NoaWxkQ29udGV4dCIpO3U9IShhJiZmKSxwPXthczphLG5vQ2hpbGRDb250ZXh0OmYsZXhwb3J0RGVwZW5kZW5jaWVzOnV9fXJldHVybiBsPShkPSJyZW5kZXIiPT1vLmdldCgiY29tcGxldGVPbiIpKXx8by5oYXMoZy5qLm9hKSxnLm8oZnVuY3Rpb24oKXt2YXIgbyxhPWcuYS5jKGkoKSksZj0hbiE9IWEsbT0hYzsodXx8ZiE9PXMpJiYobCYmKHI9Zy5qLkJiKGUscikpLGYmJih0JiYhdXx8KHAuZGF0YURlcGVuZGVuY3k9Zy5VLm8oKSksbz10P3IuY3JlYXRlQ2hpbGRDb250ZXh0KCJmdW5jdGlvbiI9PXR5cGVvZiBhP2E6aSxwKTpnLlUucGEoKT9yLmV4dGVuZChudWxsLHApOnIpLG0mJmcuVS5wYSgpJiYoYz1nLmEuQ2EoZy5oLmNoaWxkTm9kZXMoZSksITApKSxmPyhtfHxnLmgudWEoZSxnLmEuQ2EoYykpLGcuUGEobyxlKSk6KGcuaC5FYShlKSxkfHxnLmouR2EoZSxnLmouVCkpLHM9Zil9LG51bGwse2w6ZX0pLHtjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczohMH19fSxnLm0uUmFbZV09ITEsZy5oLmVhW2VdPSEwfWUoImlmIiksZSgiaWZub3QiLCExLCEwKSxlKCJ3aXRoIiwhMCl9KCksZy5mWyJsZXQiXT17aW5pdDpmdW5jdGlvbihlLHQsbixpLG8pe3JldHVybiB0PW8uZXh0ZW5kKHQpLGcuUGEodCxlKSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fX0sZy5oLmVhWyJsZXQiXT0hMDt2YXIgeD17fTtnLmYub3B0aW9ucz17aW5pdDpmdW5jdGlvbihlKXtpZigic2VsZWN0IiE9PWcuYS5QKGUpKXRocm93IEVycm9yKCJvcHRpb25zIGJpbmRpbmcgYXBwbGllcyBvbmx5IHRvIFNFTEVDVCBlbGVtZW50cyIpO2Zvcig7MDxlLmxlbmd0aDspZS5yZW1vdmUoMCk7cmV0dXJue2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX0sdXBkYXRlOmZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKCl7cmV0dXJuIGcuYS5mYihlLm9wdGlvbnMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuc2VsZWN0ZWR9KX1mdW5jdGlvbiBvKGUsdCxuKXt2YXIgaT10eXBlb2YgdDtyZXR1cm4iZnVuY3Rpb24iPT1pP3QoZSk6InN0cmluZyI9PWk/ZVt0XTpufWZ1bmN0aW9uIGEodCxpKXtpZihtJiZsKWcudS55YShlLGcuYS5jKG4uZ2V0KCJ2YWx1ZSIpKSwhMCk7ZWxzZSBpZihmLmxlbmd0aCl7dmFyIG89MDw9Zy5hLkEoZixnLnUuTChpWzBdKSk7Zy5hLlljKGlbMF0sbyksbSYmIW8mJmcudi5LKGcuYS5GYixudWxsLFtlLCJjaGFuZ2UiXSl9fXZhciBzPWUubXVsdGlwbGUsYz0wIT1lLmxlbmd0aCYmcz9lLnNjcm9sbFRvcDpudWxsLGQ9Zy5hLmModCgpKSxsPW4uZ2V0KCJ2YWx1ZUFsbG93VW5zZXQiKSYmbi5oYXMoInZhbHVlIiksdT1uLmdldCgib3B0aW9uc0luY2x1ZGVEZXN0cm95ZWQiKTt0PXt9O3ZhciBwLGY9W107bHx8KHM/Zj1nLmEuTWIoaSgpLGcudS5MKTowPD1lLnNlbGVjdGVkSW5kZXgmJmYucHVzaChnLnUuTChlLm9wdGlvbnNbZS5zZWxlY3RlZEluZGV4XSkpKSxkJiYoInVuZGVmaW5lZCI9PXR5cGVvZiBkLmxlbmd0aCYmKGQ9W2RdKSxwPWcuYS5mYihkLGZ1bmN0aW9uKGUpe3JldHVybiB1fHxlPT09cnx8bnVsbD09PWV8fCFnLmEuYyhlLl9kZXN0cm95KX0pLG4uaGFzKCJvcHRpb25zQ2FwdGlvbiIpJiYoZD1nLmEuYyhuLmdldCgib3B0aW9uc0NhcHRpb24iKSksbnVsbCE9PWQmJmQhPT1yJiZwLnVuc2hpZnQoeCkpKTt2YXIgbT0hMTt0LmJlZm9yZVJlbW92ZT1mdW5jdGlvbih0KXtlLnJlbW92ZUNoaWxkKHQpfSxkPWEsbi5oYXMoIm9wdGlvbnNBZnRlclJlbmRlciIpJiYiZnVuY3Rpb24iPT10eXBlb2Ygbi5nZXQoIm9wdGlvbnNBZnRlclJlbmRlciIpJiYoZD1mdW5jdGlvbihlLHQpe2EoMCx0KSxnLnYuSyhuLmdldCgib3B0aW9uc0FmdGVyUmVuZGVyIiksbnVsbCxbdFswXSxlIT09eD9lOnJdKX0pLGcuYS5jYyhlLHAsZnVuY3Rpb24odCxpLGEpe3JldHVybiBhLmxlbmd0aCYmKGY9IWwmJmFbMF0uc2VsZWN0ZWQ/W2cudS5MKGFbMF0pXTpbXSxtPSEwKSxpPWUub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSx0PT09eD8oZy5hLkFiKGksbi5nZXQoIm9wdGlvbnNDYXB0aW9uIikpLGcudS55YShpLHIpKTooYT1vKHQsbi5nZXQoIm9wdGlvbnNWYWx1ZSIpLHQpLGcudS55YShpLGcuYS5jKGEpKSx0PW8odCxuLmdldCgib3B0aW9uc1RleHQiKSxhKSxnLmEuQWIoaSx0KSksW2ldfSx0LGQpLGcudi5LKGZ1bmN0aW9uKCl7aWYobClnLnUueWEoZSxnLmEuYyhuLmdldCgidmFsdWUiKSksITApO2Vsc2V7dmFyIHQ7dD1zP2YubGVuZ3RoJiZpKCkubGVuZ3RoPGYubGVuZ3RoOmYubGVuZ3RoJiYwPD1lLnNlbGVjdGVkSW5kZXg/Zy51LkwoZS5vcHRpb25zW2Uuc2VsZWN0ZWRJbmRleF0pIT09ZlswXTpmLmxlbmd0aHx8MDw9ZS5zZWxlY3RlZEluZGV4LHQmJmcuYS5GYihlLCJjaGFuZ2UiKX19KSxnLmEudmQoZSksYyYmMjA8TWF0aC5hYnMoYy1lLnNjcm9sbFRvcCkmJihlLnNjcm9sbFRvcD1jKX19LGcuZi5vcHRpb25zLlliPWcuYS5nLlooKSxnLmYuc2VsZWN0ZWRPcHRpb25zPXthZnRlcjpbIm9wdGlvbnMiLCJmb3JlYWNoIl0saW5pdDpmdW5jdGlvbihlLHQsbil7Zy5hLkgoZSwiY2hhbmdlIixmdW5jdGlvbigpe3ZhciBpPXQoKSxvPVtdO2cuYS5DKGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIm9wdGlvbiIpLGZ1bmN0aW9uKGUpe2Uuc2VsZWN0ZWQmJm8ucHVzaChnLnUuTChlKSl9KSxnLm0uJGEoaSxuLCJzZWxlY3RlZE9wdGlvbnMiLG8pfSl9LHVwZGF0ZTpmdW5jdGlvbihlLHQpe2lmKCJzZWxlY3QiIT1nLmEuUChlKSl0aHJvdyBFcnJvcigidmFsdWVzIGJpbmRpbmcgYXBwbGllcyBvbmx5IHRvIFNFTEVDVCBlbGVtZW50cyIpO3ZhciBuPWcuYS5jKHQoKSksaT1lLnNjcm9sbFRvcDtuJiYibnVtYmVyIj09dHlwZW9mIG4ubGVuZ3RoJiZnLmEuQyhlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJvcHRpb24iKSxmdW5jdGlvbihlKXt2YXIgdD0wPD1nLmEuQShuLGcudS5MKGUpKTtlLnNlbGVjdGVkIT10JiZnLmEuWWMoZSx0KX0pLGUuc2Nyb2xsVG9wPWl9fSxnLm0udmEuc2VsZWN0ZWRPcHRpb25zPSEwLGcuZi5zdHlsZT17dXBkYXRlOmZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLmModCgpfHx7fSk7Zy5hLk8obixmdW5jdGlvbih0LG4pe2lmKG49Zy5hLmMobiksbnVsbCE9PW4mJm4hPT1yJiYhMSE9PW58fChuPSIiKSxsKWwoZSkuY3NzKHQsbik7ZWxzZSBpZigvXi0tLy50ZXN0KHQpKWUuc3R5bGUuc2V0UHJvcGVydHkodCxuKTtlbHNle3Q9dC5yZXBsYWNlKC8tKFx3KS9nLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQudG9VcHBlckNhc2UoKX0pO3ZhciBpPWUuc3R5bGVbdF07ZS5zdHlsZVt0XT1uLG49PT1pfHxlLnN0eWxlW3RdIT1pfHxpc05hTihuKXx8KGUuc3R5bGVbdF09bisicHgiKX19KX19LGcuZi5zdWJtaXQ9e2luaXQ6ZnVuY3Rpb24oZSx0LG4saSxvKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCgpKXRocm93IEVycm9yKCJUaGUgdmFsdWUgZm9yIGEgc3VibWl0IGJpbmRpbmcgbXVzdCBiZSBhIGZ1bmN0aW9uIik7Zy5hLkgoZSwic3VibWl0IixmdW5jdGlvbihuKXt2YXIgaSxhPXQoKTt0cnl7aT1hLmNhbGwoby4kZGF0YSxlKX1maW5hbGx5eyEwIT09aSYmKG4ucHJldmVudERlZmF1bHQ/bi5wcmV2ZW50RGVmYXVsdCgpOm4ucmV0dXJuVmFsdWU9ITEpfX0pfX0sZy5mLnRleHQ9e2luaXQ6ZnVuY3Rpb24oKXtyZXR1cm57Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fSx1cGRhdGU6ZnVuY3Rpb24oZSx0KXtnLmEuQWIoZSx0KCkpfX0sZy5oLmVhLnRleHQ9ITAsZnVuY3Rpb24oKXtpZihzJiZzLm5hdmlnYXRvcil7dmFyIGUsdCxuLGksbyxhPWZ1bmN0aW9uKGUpe2lmKGUpcmV0dXJuIHBhcnNlRmxvYXQoZVsxXSl9LGM9cy5uYXZpZ2F0b3IudXNlckFnZW50OyhlPXMub3BlcmEmJnMub3BlcmEudmVyc2lvbiYmcGFyc2VJbnQocy5vcGVyYS52ZXJzaW9uKCkpKXx8KG89YShjLm1hdGNoKC9FZGdlXC8oW14gXSspJC8pKSl8fGEoYy5tYXRjaCgvQ2hyb21lXC8oW14gXSspLykpfHwodD1hKGMubWF0Y2goL1ZlcnNpb25cLyhbXiBdKykgU2FmYXJpLykpKXx8KG49YShjLm1hdGNoKC9GaXJlZm94XC8oW14gXSspLykpKXx8KGk9Zy5hLld8fGEoYy5tYXRjaCgvTVNJRSAoW14gXSspLykpKXx8KGk9YShjLm1hdGNoKC9ydjooW14gKV0rKS8pKSl9aWYoODw9aSYmMTA+aSl2YXIgZD1nLmEuZy5aKCksbD1nLmEuZy5aKCksdT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmFjdGl2ZUVsZW1lbnQ7KHQ9dCYmZy5hLmcuZ2V0KHQsbCkpJiZ0KGUpfSxwPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5vd25lckRvY3VtZW50O2cuYS5nLmdldChuLGQpfHwoZy5hLmcuc2V0KG4sZCwhMCksZy5hLkgobiwic2VsZWN0aW9uY2hhbmdlIix1KSksZy5hLmcuc2V0KGUsbCx0KX07Zy5mLnRleHRJbnB1dD17aW5pdDpmdW5jdGlvbihhLHMsYyl7ZnVuY3Rpb24gZChlLHQpe2cuYS5IKGEsZSx0KX1mdW5jdGlvbiBsKCl7dmFyIGU9Zy5hLmMocygpKTtudWxsIT09ZSYmZSE9PXJ8fChlPSIiKSx2IT09ciYmZT09PXY/Zy5hLnNldFRpbWVvdXQobCw0KTphLnZhbHVlIT09ZSYmKF89ITAsYS52YWx1ZT1lLF89ITEsaD1hLnZhbHVlKX1mdW5jdGlvbiB1KCl7bXx8KHY9YS52YWx1ZSxtPWcuYS5zZXRUaW1lb3V0KGYsNCkpfWZ1bmN0aW9uIGYoKXtjbGVhclRpbWVvdXQobSksdj1tPXI7dmFyIGU9YS52YWx1ZTtoIT09ZSYmKGg9ZSxnLm0uJGEocygpLGMsInRleHRJbnB1dCIsZSkpfXZhciBtLHYsaD1hLnZhbHVlLGI9OT09Zy5hLlc/dTpmLF89ITE7aSYmZCgia2V5cHJlc3MiLGYpLDExPmkmJmQoInByb3BlcnR5Y2hhbmdlIixmdW5jdGlvbihlKXtffHwidmFsdWUiIT09ZS5wcm9wZXJ0eU5hbWV8fGIoZSl9KSw4PT1pJiYoZCgia2V5dXAiLGYpLGQoImtleWRvd24iLGYpKSxwJiYocChhLGIpLGQoImRyYWdlbmQiLHUpKSwoIWl8fDk8PWkpJiZkKCJpbnB1dCIsYiksNT50JiYidGV4dGFyZWEiPT09Zy5hLlAoYSk/KGQoImtleWRvd24iLHUpLGQoInBhc3RlIix1KSxkKCJjdXQiLHUpKToxMT5lP2QoImtleWRvd24iLHUpOjQ+bj8oZCgiRE9NQXV0b0NvbXBsZXRlIixmKSxkKCJkcmFnZHJvcCIsZiksZCgiZHJvcCIsZikpOm8mJiJudW1iZXIiPT09YS50eXBlJiZkKCJrZXlkb3duIix1KSxkKCJjaGFuZ2UiLGYpLGQoImJsdXIiLGYpLGcubyhsLG51bGwse2w6YX0pfX0sZy5tLnZhLnRleHRJbnB1dD0hMCxnLmYudGV4dGlucHV0PXtwcmVwcm9jZXNzOmZ1bmN0aW9uKGUsdCxuKXtuKCJ0ZXh0SW5wdXQiLGUpfX19KCksZy5mLnVuaXF1ZU5hbWU9e2luaXQ6ZnVuY3Rpb24oZSx0KXtpZih0KCkpe3ZhciBuPSJrb191bmlxdWVfIisgKytnLmYudW5pcXVlTmFtZS5xZDtnLmEuWGMoZSxuKX19fSxnLmYudW5pcXVlTmFtZS5xZD0wLGcuZi51c2luZz17aW5pdDpmdW5jdGlvbihlLHQsbixpLG8pe3ZhciBhO3JldHVybiBuLmhhcygiYXMiKSYmKGE9e2FzOm4uZ2V0KCJhcyIpLG5vQ2hpbGRDb250ZXh0Om4uZ2V0KCJub0NoaWxkQ29udGV4dCIpfSksdD1vLmNyZWF0ZUNoaWxkQ29udGV4dCh0LGEpLGcuUGEodCxlKSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fX0sZy5oLmVhLnVzaW5nPSEwLGcuZi52YWx1ZT17YWZ0ZXI6WyJvcHRpb25zIiwiZm9yZWFjaCJdLGluaXQ6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPWcuYS5QKGUpLG89ImlucHV0Ij09aTtpZighb3x8ImNoZWNrYm94IiE9ZS50eXBlJiYicmFkaW8iIT1lLnR5cGUpe3ZhciBhPVsiY2hhbmdlIl0scz1uLmdldCgidmFsdWVVcGRhdGUiKSxjPSExLGQ9bnVsbDtzJiYoInN0cmluZyI9PXR5cGVvZiBzJiYocz1bc10pLGcuYS5nYihhLHMpLGE9Zy5hLnZjKGEpKTt2YXIgbD1mdW5jdGlvbigpe2Q9bnVsbCxjPSExO3ZhciBpPXQoKSxvPWcudS5MKGUpO2cubS4kYShpLG4sInZhbHVlIixvKX07IWcuYS5XfHwhb3x8InRleHQiIT1lLnR5cGV8fCJvZmYiPT1lLmF1dG9jb21wbGV0ZXx8ZS5mb3JtJiYib2ZmIj09ZS5mb3JtLmF1dG9jb21wbGV0ZXx8LTEhPWcuYS5BKGEsInByb3BlcnR5Y2hhbmdlIil8fChnLmEuSChlLCJwcm9wZXJ0eWNoYW5nZSIsZnVuY3Rpb24oKXtjPSEwfSksZy5hLkgoZSwiZm9jdXMiLGZ1bmN0aW9uKCl7Yz0hMX0pLGcuYS5IKGUsImJsdXIiLGZ1bmN0aW9uKCl7YyYmbCgpfSkpLGcuYS5DKGEsZnVuY3Rpb24odCl7dmFyIG49bDtnLmEuVGQodCwiYWZ0ZXIiKSYmKG49ZnVuY3Rpb24oKXtkPWcudS5MKGUpLGcuYS5zZXRUaW1lb3V0KGwsMCl9LHQ9dC5zdWJzdHJpbmcoNSkpLGcuYS5IKGUsdCxuKX0pO3ZhciB1O3U9byYmImZpbGUiPT1lLnR5cGU/ZnVuY3Rpb24oKXt2YXIgbj1nLmEuYyh0KCkpO251bGw9PT1ufHxuPT09cnx8IiI9PT1uP2UudmFsdWU9IiI6Zy52LksobCl9OmZ1bmN0aW9uKCl7dmFyIG89Zy5hLmModCgpKSxhPWcudS5MKGUpO251bGwhPT1kJiZvPT09ZD9nLmEuc2V0VGltZW91dCh1LDApOm89PT1hJiZhIT09cnx8KCJzZWxlY3QiPT09aT8oYT1uLmdldCgidmFsdWVBbGxvd1Vuc2V0IiksZy51LnlhKGUsbyxhKSxhfHxvPT09Zy51LkwoZSl8fGcudi5LKGwpKTpnLnUueWEoZSxvKSl9LGcubyh1LG51bGwse2w6ZX0pfWVsc2UgZy5lYihlLHtjaGVja2VkVmFsdWU6dH0pfSx1cGRhdGU6ZnVuY3Rpb24oKXt9fSxnLm0udmEudmFsdWU9ITAsZy5mLnZpc2libGU9e3VwZGF0ZTpmdW5jdGlvbihlLHQpe3ZhciBuPWcuYS5jKHQoKSksaT0ibm9uZSIhPWUuc3R5bGUuZGlzcGxheTtuJiYhaT9lLnN0eWxlLmRpc3BsYXk9IiI6IW4mJmkmJihlLnN0eWxlLmRpc3BsYXk9Im5vbmUiKX19LGcuZi5oaWRkZW49e3VwZGF0ZTpmdW5jdGlvbihlLHQpe2cuZi52aXNpYmxlLnVwZGF0ZShlLGZ1bmN0aW9uKCl7cmV0dXJuIWcuYS5jKHQoKSl9KX19LGZ1bmN0aW9uKGUpe2cuZltlXT17aW5pdDpmdW5jdGlvbih0LG4saSxvLGEpe3JldHVybiBnLmYuZXZlbnQuaW5pdC5jYWxsKHRoaXMsdCxmdW5jdGlvbigpe3ZhciB0PXt9O3JldHVybiB0W2VdPW4oKSx0fSxpLG8sYSl9fX0oImNsaWNrIiksZy5jYT1mdW5jdGlvbigpe30sZy5jYS5wcm90b3R5cGUucmVuZGVyVGVtcGxhdGVTb3VyY2U9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigiT3ZlcnJpZGUgcmVuZGVyVGVtcGxhdGVTb3VyY2UiKX0sZy5jYS5wcm90b3R5cGUuY3JlYXRlSmF2YVNjcmlwdEV2YWx1YXRvckJsb2NrPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoIk92ZXJyaWRlIGNyZWF0ZUphdmFTY3JpcHRFdmFsdWF0b3JCbG9jayIpfSxnLmNhLnByb3RvdHlwZS5tYWtlVGVtcGxhdGVTb3VyY2U9ZnVuY3Rpb24oZSx0KXtpZigic3RyaW5nIj09dHlwZW9mIGUpe3Q9dHx8Yzt2YXIgbj10LmdldEVsZW1lbnRCeUlkKGUpO2lmKCFuKXRocm93IEVycm9yKCJDYW5ub3QgZmluZCB0ZW1wbGF0ZSB3aXRoIElEICIrZSk7cmV0dXJuIG5ldyBnLkIuRChuKX1pZigxPT1lLm5vZGVUeXBlfHw4PT1lLm5vZGVUeXBlKXJldHVybiBuZXcgZy5CLmlhKGUpO3Rocm93IEVycm9yKCJVbmtub3duIHRlbXBsYXRlIHR5cGU6ICIrZSl9LGcuY2EucHJvdG90eXBlLnJlbmRlclRlbXBsYXRlPWZ1bmN0aW9uKGUsdCxuLGkpe3JldHVybiBlPXRoaXMubWFrZVRlbXBsYXRlU291cmNlKGUsaSksdGhpcy5yZW5kZXJUZW1wbGF0ZVNvdXJjZShlLHQsbixpKX0sZy5jYS5wcm90b3R5cGUuaXNUZW1wbGF0ZVJld3JpdHRlbj1mdW5jdGlvbihlLHQpe3JldHVybiExPT09dGhpcy5hbGxvd1RlbXBsYXRlUmV3cml0aW5nfHx0aGlzLm1ha2VUZW1wbGF0ZVNvdXJjZShlLHQpLmRhdGEoImlzUmV3cml0dGVuIil9LGcuY2EucHJvdG90eXBlLnJld3JpdGVUZW1wbGF0ZT1mdW5jdGlvbihlLHQsbil7ZT10aGlzLm1ha2VUZW1wbGF0ZVNvdXJjZShlLG4pLHQ9dChlLnRleHQoKSksZS50ZXh0KHQpLGUuZGF0YSgiaXNSZXdyaXR0ZW4iLCEwKX0sZy5iKCJ0ZW1wbGF0ZUVuZ2luZSIsZy5jYSksZy5pYz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4saSl7ZT1nLm0uWmIoZSk7Zm9yKHZhciBvPWcubS5SYSxhPTA7YTxlLmxlbmd0aDthKyspe3ZhciByPWVbYV0ua2V5O2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLHIpKXt2YXIgcz1vW3JdO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBzKXtpZihyPXMoZVthXS52YWx1ZSkpdGhyb3cgRXJyb3Iocil9ZWxzZSBpZighcyl0aHJvdyBFcnJvcigiVGhpcyB0ZW1wbGF0ZSBlbmdpbmUgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJyIrcisiJyBiaW5kaW5nIHdpdGhpbiBpdHMgdGVtcGxhdGVzIil9fXJldHVybiBuPSJrby5fX3RyX2FtYnRucyhmdW5jdGlvbigkY29udGV4dCwkZWxlbWVudCl7cmV0dXJuKGZ1bmN0aW9uKCl7cmV0dXJueyAiK2cubS51YihlLHt2YWx1ZUFjY2Vzc29yczohMH0pKyIgfSB9KSgpfSwnIituLnRvTG93ZXJDYXNlKCkrIicpIixpLmNyZWF0ZUphdmFTY3JpcHRFdmFsdWF0b3JCbG9jayhuKSt0fXZhciB0PS8oPChbYS16XStcZCopKD86XHMrKD8hZGF0YS1iaW5kXHMqPVxzKilbYS16MC05XC1dKyg/Oj0oPzpcIlteXCJdKlwifFwnW15cJ10qXCd8W14+XSopKT8pKlxzKylkYXRhLWJpbmRccyo9XHMqKFsiJ10pKFtcc1xTXSo/KVwzL2dpLG49L1x4M2MhLS1ccyprb1xiXHMqKFtcc1xTXSo/KVxzKi0tXHgzZS9nO3JldHVybnt3ZDpmdW5jdGlvbihlLHQsbil7dC5pc1RlbXBsYXRlUmV3cml0dGVuKGUsbil8fHQucmV3cml0ZVRlbXBsYXRlKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGcuaWMuS2QoZSx0KX0sbil9LEtkOmZ1bmN0aW9uKGksbyl7cmV0dXJuIGkucmVwbGFjZSh0LGZ1bmN0aW9uKHQsbixpLGEscil7cmV0dXJuIGUocixuLGksbyl9KS5yZXBsYWNlKG4sZnVuY3Rpb24odCxuKXtyZXR1cm4gZShuLCI8IS0tIGtvIC0tPiIsIiNjb21tZW50IixvKX0pfSxsZDpmdW5jdGlvbihlLHQpe3JldHVybiBnLmFhLldiKGZ1bmN0aW9uKG4saSl7dmFyIG89bi5uZXh0U2libGluZztvJiZvLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT10JiZnLmViKG8sZSxpKX0pfX19KCksZy5iKCJfX3RyX2FtYnRucyIsZy5pYy5sZCksZnVuY3Rpb24oKXtnLkI9e30sZy5CLkQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5EPWUpe3ZhciB0PWcuYS5QKGUpO3RoaXMuRGI9InNjcmlwdCI9PT10PzE6InRleHRhcmVhIj09PXQ/MjoidGVtcGxhdGUiPT10JiZlLmNvbnRlbnQmJjExPT09ZS5jb250ZW50Lm5vZGVUeXBlPzM6NH19LGcuQi5ELnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKCl7dmFyIGU9MT09PXRoaXMuRGI/InRleHQiOjI9PT10aGlzLkRiPyJ2YWx1ZSI6ImlubmVySFRNTCI7aWYoMD09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5EW2VdO3ZhciB0PWFyZ3VtZW50c1swXTsiaW5uZXJIVE1MIj09PWU/Zy5hLmRjKHRoaXMuRCx0KTp0aGlzLkRbZV09dH07dmFyIGU9Zy5hLmcuWigpKyJfIjtnLkIuRC5wcm90b3R5cGUuZGF0YT1mdW5jdGlvbih0KXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Zy5hLmcuZ2V0KHRoaXMuRCxlK3QpOnZvaWQgZy5hLmcuc2V0KHRoaXMuRCxlK3QsYXJndW1lbnRzWzFdKX07dmFyIHQ9Zy5hLmcuWigpO2cuQi5ELnByb3RvdHlwZS5ub2Rlcz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuRDtpZigwPT1hcmd1bWVudHMubGVuZ3RoKXt2YXIgbj1nLmEuZy5nZXQoZSx0KXx8e30saT1uLmpifHwoMz09PXRoaXMuRGI/ZS5jb250ZW50OjQ9PT10aGlzLkRiP2U6cik7cmV0dXJuIGkmJiFuLmhkfHwobj10aGlzLnRleHQoKSkmJihpPWcuYS5MZChuLGUub3duZXJEb2N1bWVudCksdGhpcy50ZXh0KCIiKSxnLmEuZy5zZXQoZSx0LHtqYjppLGhkOiEwfSkpLGl9Zy5hLmcuc2V0KGUsdCx7amI6YXJndW1lbnRzWzBdfSl9LGcuQi5pYT1mdW5jdGlvbihlKXt0aGlzLkQ9ZX0sZy5CLmlhLnByb3RvdHlwZT1uZXcgZy5CLkQsZy5CLmlhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1nLkIuaWEsZy5CLmlhLnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKCl7aWYoMD09YXJndW1lbnRzLmxlbmd0aCl7dmFyIGU9Zy5hLmcuZ2V0KHRoaXMuRCx0KXx8e307cmV0dXJuIGUuamM9PT1yJiZlLmpiJiYoZS5qYz1lLmpiLmlubmVySFRNTCksZS5qY31nLmEuZy5zZXQodGhpcy5ELHQse2pjOmFyZ3VtZW50c1swXX0pfSxnLmIoInRlbXBsYXRlU291cmNlcyIsZy5CKSxnLmIoInRlbXBsYXRlU291cmNlcy5kb21FbGVtZW50IixnLkIuRCksZy5iKCJ0ZW1wbGF0ZVNvdXJjZXMuYW5vbnltb3VzVGVtcGxhdGUiLGcuQi5pYSl9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt2YXIgaTtmb3IodD1nLmgubmV4dFNpYmxpbmcodCk7ZSYmKGk9ZSkhPT10OyllPWcuaC5uZXh0U2libGluZyhpKSxuKGksZSl9ZnVuY3Rpb24gdCh0LG4pe2lmKHQubGVuZ3RoKXt2YXIgaT10WzBdLG89dFt0Lmxlbmd0aC0xXSxhPWkucGFyZW50Tm9kZSxyPWcuZ2EuaW5zdGFuY2Uscz1yLnByZXByb2Nlc3NOb2RlO2lmKHMpe2lmKGUoaSxvLGZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5wcmV2aW91c1NpYmxpbmcsYT1zLmNhbGwocixlKTthJiYoZT09PWkmJihpPWFbMF18fHQpLGU9PT1vJiYobz1hW2EubGVuZ3RoLTFdfHxuKSl9KSx0Lmxlbmd0aD0wLCFpKXJldHVybjtpPT09bz90LnB1c2goaSk6KHQucHVzaChpLG8pLGcuYS5VYSh0LGEpKX1lKGksbyxmdW5jdGlvbihlKXsxIT09ZS5ub2RlVHlwZSYmOCE9PWUubm9kZVR5cGV8fGcudWMobixlKX0pLGUoaSxvLGZ1bmN0aW9uKGUpezEhPT1lLm5vZGVUeXBlJiY4IT09ZS5ub2RlVHlwZXx8Zy5hYS5iZChlLFtuXSl9KSxnLmEuVWEodCxhKX19ZnVuY3Rpb24gbihlKXtyZXR1cm4gZS5ub2RlVHlwZT9lOjA8ZS5sZW5ndGg/ZVswXTpudWxsfWZ1bmN0aW9uIGkoZSxpLG8scixzKXtzPXN8fHt9O3ZhciBjPShlJiZuKGUpfHxvfHx7fSkub3duZXJEb2N1bWVudCxkPXMudGVtcGxhdGVFbmdpbmV8fGE7aWYoZy5pYy53ZChvLGQsYyksbz1kLnJlbmRlclRlbXBsYXRlKG8scixzLGMpLCJudW1iZXIiIT10eXBlb2Ygby5sZW5ndGh8fDA8by5sZW5ndGgmJiJudW1iZXIiIT10eXBlb2Ygb1swXS5ub2RlVHlwZSl0aHJvdyBFcnJvcigiVGVtcGxhdGUgZW5naW5lIG11c3QgcmV0dXJuIGFuIGFycmF5IG9mIERPTSBub2RlcyIpO3N3aXRjaChjPSExLGkpe2Nhc2UicmVwbGFjZUNoaWxkcmVuIjpnLmgudWEoZSxvKSxjPSEwO2JyZWFrO2Nhc2UicmVwbGFjZU5vZGUiOmcuYS5XYyhlLG8pLGM9ITA7YnJlYWs7Y2FzZSJpZ25vcmVUYXJnZXROb2RlIjpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKCJVbmtub3duIHJlbmRlck1vZGU6ICIraSl9cmV0dXJuIGMmJih0KG8scikscy5hZnRlclJlbmRlciYmZy52Lksocy5hZnRlclJlbmRlcixudWxsLFtvLHJbcy5hc3x8IiRkYXRhIl1dKSwicmVwbGFjZUNoaWxkcmVuIj09aSYmZy5qLkdhKGUsZy5qLlQpKSxvfWZ1bmN0aW9uIG8oZSx0LG4pe3JldHVybiBnLk4oZSk/ZSgpOiJmdW5jdGlvbiI9PXR5cGVvZiBlP2UodCxuKTplfXZhciBhO2cuZWM9ZnVuY3Rpb24oZSl7aWYoZSE9ciYmIShlIGluc3RhbmNlb2YgZy5jYSkpdGhyb3cgRXJyb3IoInRlbXBsYXRlRW5naW5lIG11c3QgaW5oZXJpdCBmcm9tIGtvLnRlbXBsYXRlRW5naW5lIik7YT1lfSxnLmJjPWZ1bmN0aW9uKGUsdCxzLGMsZCl7aWYocz1zfHx7fSwocy50ZW1wbGF0ZUVuZ2luZXx8YSk9PXIpdGhyb3cgRXJyb3IoIlNldCBhIHRlbXBsYXRlIGVuZ2luZSBiZWZvcmUgY2FsbGluZyByZW5kZXJUZW1wbGF0ZSIpO2lmKGQ9ZHx8InJlcGxhY2VDaGlsZHJlbiIsYyl7dmFyIGw9bihjKTtyZXR1cm4gZy4kKGZ1bmN0aW9uKCl7dmFyIGE9dCYmdCBpbnN0YW5jZW9mIGcuZmE/dDpuZXcgZy5mYSh0LG51bGwsbnVsbCxudWxsLHtleHBvcnREZXBlbmRlbmNpZXM6ITB9KSxyPW8oZSxhLiRkYXRhLGEpLGE9aShjLGQscixhLHMpOyJyZXBsYWNlTm9kZSI9PWQmJihjPWEsbD1uKGMpKX0sbnVsbCx7U2E6ZnVuY3Rpb24oKXtyZXR1cm4hbHx8IWcuYS5SYihsKX0sbDpsJiYicmVwbGFjZU5vZGUiPT1kP2wucGFyZW50Tm9kZTpsfSl9cmV0dXJuIGcuYWEuV2IoZnVuY3Rpb24obil7Zy5iYyhlLHQscyxuLCJyZXBsYWNlTm9kZSIpfSl9LGcuUGQ9ZnVuY3Rpb24oZSxuLGEscyxjKXtmdW5jdGlvbiBkKGUsdCl7Zy52LksoZy5hLmNjLG51bGwsW3MsZSx1LGEsbCx0XSksZy5qLkdhKHMsZy5qLlQpfWZ1bmN0aW9uIGwoZSxuKXt0KG4scCksYS5hZnRlclJlbmRlciYmYS5hZnRlclJlbmRlcihuLGUpLHA9bnVsbH1mdW5jdGlvbiB1KHQsbil7cD1jLmNyZWF0ZUNoaWxkQ29udGV4dCh0LHthczpmLG5vQ2hpbGRDb250ZXh0OmEubm9DaGlsZENvbnRleHQsZXh0ZW5kOmZ1bmN0aW9uKGUpe2UuJGluZGV4PW4sZiYmKGVbZisiSW5kZXgiXT1uKX19KTt2YXIgcj1vKGUsdCxwKTtyZXR1cm4gaShzLCJpZ25vcmVUYXJnZXROb2RlIixyLHAsYSl9dmFyIHAsZj1hLmFzLG09ITE9PT1hLmluY2x1ZGVEZXN0cm95ZWR8fGcub3B0aW9ucy5mb3JlYWNoSGlkZXNEZXN0cm95ZWQmJiFhLmluY2x1ZGVEZXN0cm95ZWQ7aWYobXx8YS5iZWZvcmVSZW1vdmV8fCFnLk9jKG4pKXJldHVybiBnLiQoZnVuY3Rpb24oKXt2YXIgZT1nLmEuYyhuKXx8W107InVuZGVmaW5lZCI9PXR5cGVvZiBlLmxlbmd0aCYmKGU9W2VdKSxtJiYoZT1nLmEuZmIoZSxmdW5jdGlvbihlKXtyZXR1cm4gZT09PXJ8fG51bGw9PT1lfHwhZy5hLmMoZS5fZGVzdHJveSl9KSksZChlKX0sbnVsbCx7bDpzfSk7ZChuLncoKSk7dmFyIHY9bi5zdWJzY3JpYmUoZnVuY3Rpb24oZSl7ZChuKCksZSl9LG51bGwsImFycmF5Q2hhbmdlIik7cmV0dXJuIHYubChzKSx2fTt2YXIgcz1nLmEuZy5aKCksYz1nLmEuZy5aKCk7Zy5mLnRlbXBsYXRlPXtpbml0OmZ1bmN0aW9uKGUsdCl7dmFyIG49Zy5hLmModCgpKTtpZigic3RyaW5nIj09dHlwZW9mIG58fG4ubmFtZSlnLmguRWEoZSk7ZWxzZSBpZigibm9kZXMiaW4gbil7aWYobj1uLm5vZGVzfHxbXSxnLk4obikpdGhyb3cgRXJyb3IoJ1RoZSAibm9kZXMiIG9wdGlvbiBtdXN0IGJlIGEgcGxhaW4sIG5vbi1vYnNlcnZhYmxlIGFycmF5LicpO3ZhciBpPW5bMF0mJm5bMF0ucGFyZW50Tm9kZTtpJiZnLmEuZy5nZXQoaSxjKXx8KGk9Zy5hLlhiKG4pLGcuYS5nLnNldChpLGMsITApKSxuZXcgZy5CLmlhKGUpLm5vZGVzKGkpfWVsc2V7aWYobj1nLmguY2hpbGROb2RlcyhlKSwhKDA8bi5sZW5ndGgpKXRocm93IEVycm9yKCJBbm9ueW1vdXMgdGVtcGxhdGUgZGVmaW5lZCwgYnV0IG5vIHRlbXBsYXRlIGNvbnRlbnQgd2FzIHByb3ZpZGVkIik7aT1nLmEuWGIobiksbmV3IGcuQi5pYShlKS5ub2RlcyhpKX1yZXR1cm57Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fSx1cGRhdGU6ZnVuY3Rpb24oZSx0LG4saSxvKXt2YXIgYT10KCk7dD1nLmEuYyhhKSxuPSEwLGk9bnVsbCwic3RyaW5nIj09dHlwZW9mIHQ/dD17fTooYT10Lm5hbWUsImlmImluIHQmJihuPWcuYS5jKHRbImlmIl0pKSxuJiYiaWZub3QiaW4gdCYmKG49IWcuYS5jKHQuaWZub3QpKSksImZvcmVhY2giaW4gdD9pPWcuUGQoYXx8ZSxuJiZ0LmZvcmVhY2h8fFtdLHQsZSxvKTpuPyhuPW8sImRhdGEiaW4gdCYmKG49by5jcmVhdGVDaGlsZENvbnRleHQodC5kYXRhLHthczp0LmFzLG5vQ2hpbGRDb250ZXh0OnQubm9DaGlsZENvbnRleHQsZXhwb3J0RGVwZW5kZW5jaWVzOiEwfSkpLGk9Zy5iYyhhfHxlLG4sdCxlKSk6Zy5oLkVhKGUpLG89aSwodD1nLmEuZy5nZXQoZSxzKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LnMmJnQucygpLGcuYS5nLnNldChlLHMsIW98fG8uamEmJiFvLmphKCk/cjpvKX19LGcubS5SYS50ZW1wbGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gZT1nLm0uWmIoZSksMT09ZS5sZW5ndGgmJmVbMF0udW5rbm93bnx8Zy5tLkhkKGUsIm5hbWUiKT9udWxsOiJUaGlzIHRlbXBsYXRlIGVuZ2luZSBkb2VzIG5vdCBzdXBwb3J0IGFub255bW91cyB0ZW1wbGF0ZXMgbmVzdGVkIHdpdGhpbiBpdHMgdGVtcGxhdGVzIn0sZy5oLmVhLnRlbXBsYXRlPSEwfSgpLGcuYigic2V0VGVtcGxhdGVFbmdpbmUiLGcuZWMpLGcuYigicmVuZGVyVGVtcGxhdGUiLGcuYmMpLGcuYS5KYz1mdW5jdGlvbihlLHQsbil7aWYoZS5sZW5ndGgmJnQubGVuZ3RoKXt2YXIgaSxvLGEscixzO2ZvcihpPW89MDsoIW58fGk8bikmJihyPWVbb10pOysrbyl7Zm9yKGE9MDtzPXRbYV07KythKWlmKHIudmFsdWU9PT1zLnZhbHVlKXtyLm1vdmVkPXMuaW5kZXgscy5tb3ZlZD1yLmluZGV4LHQuc3BsaWNlKGEsMSksaT1hPTA7YnJlYWt9aSs9YX19fSxnLmEuT2I9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuLGksbyl7dmFyIGEscixzLGMsZCxsPU1hdGgubWluLHU9TWF0aC5tYXgscD1bXSxmPWUubGVuZ3RoLG09dC5sZW5ndGgsdj1tLWZ8fDEsaD1mK20rMTtmb3IoYT0wO2E8PWY7YSsrKWZvcihjPXMscC5wdXNoKHM9W10pLGQ9bChtLGErdikscj11KDAsYS0xKTtyPD1kO3IrKylzW3JdPXI/YT9lW2EtMV09PT10W3ItMV0/Y1tyLTFdOmwoY1tyXXx8aCxzW3ItMV18fGgpKzE6cisxOmErMTtmb3IobD1bXSx1PVtdLHY9W10sYT1mLHI9bTthfHxyOyltPXBbYV1bcl0tMSxyJiZtPT09cFthXVtyLTFdP3UucHVzaChsW2wubGVuZ3RoXT17c3RhdHVzOm4sdmFsdWU6dFstLXJdLGluZGV4OnJ9KTphJiZtPT09cFthLTFdW3JdP3YucHVzaChsW2wubGVuZ3RoXT17c3RhdHVzOmksdmFsdWU6ZVstLWFdLGluZGV4OmF9KTooLS1yLC0tYSxvLnNwYXJzZXx8bC5wdXNoKHtzdGF0dXM6InJldGFpbmVkIix2YWx1ZTp0W3JdfSkpO3JldHVybiBnLmEuSmModix1LCFvLmRvbnRMaW1pdE1vdmVzJiYxMCpmKSxsLnJldmVyc2UoKX1yZXR1cm4gZnVuY3Rpb24odCxuLGkpe3JldHVybiBpPSJib29sZWFuIj09dHlwZW9mIGk/e2RvbnRMaW1pdE1vdmVzOml9Oml8fHt9LHQ9dHx8W10sbj1ufHxbXSx0Lmxlbmd0aDxuLmxlbmd0aD9lKHQsbiwiYWRkZWQiLCJkZWxldGVkIixpKTplKG4sdCwiZGVsZXRlZCIsImFkZGVkIixpKTsKfX0oKSxnLmIoInV0aWxzLmNvbXBhcmVBcnJheXMiLGcuYS5PYiksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuLGksbyl7dmFyIGE9W10scz1nLiQoZnVuY3Rpb24oKXt2YXIgcj10KG4sbyxnLmEuVWEoYSxlKSl8fFtdOzA8YS5sZW5ndGgmJihnLmEuV2MoYSxyKSxpJiZnLnYuSyhpLG51bGwsW24scixvXSkpLGEubGVuZ3RoPTAsZy5hLmdiKGEscil9LG51bGwse2w6ZSxTYTpmdW5jdGlvbigpe3JldHVybiFnLmEuamQoYSl9fSk7cmV0dXJue1k6YSwkOnMuamEoKT9zOnJ9fXZhciB0PWcuYS5nLlooKSxuPWcuYS5nLlooKTtnLmEuY2M9ZnVuY3Rpb24oaSxvLGEscyxjLGQpe2Z1bmN0aW9uIGwoZSl7Zj17QWE6ZSxuYjpnLnNhKF8rKyl9LGgucHVzaChmKSx2fHx5LnB1c2goZil9ZnVuY3Rpb24gdShlKXtmPW1bZV0sXyE9PWYubmIudygpJiZDLnB1c2goZiksZi5uYihfKyspLGcuYS5VYShmLlksaSksaC5wdXNoKGYpfWZ1bmN0aW9uIHAoZSx0KXtpZihlKWZvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpO24rKylnLmEuQyh0W25dLlksZnVuY3Rpb24oaSl7ZShpLG4sdFtuXS5BYSl9KX1vPW98fFtdLCJ1bmRlZmluZWQiPT10eXBlb2Ygby5sZW5ndGgmJihvPVtvXSkscz1zfHx7fTt2YXIgZixtPWcuYS5nLmdldChpLHQpLHY9IW0saD1bXSxiPTAsXz0wLFM9W10sdz1bXSxUPVtdLEM9W10seT1bXSxrPTA7aWYodilnLmEuQyhvLGwpO2Vsc2V7aWYoIWR8fG0mJm0uX2NvdW50V2FpdGluZ0ZvclJlbW92ZSl7dmFyIHg9Zy5hLk1iKG0sZnVuY3Rpb24oZSl7cmV0dXJuIGUuQWF9KTtkPWcuYS5PYih4LG8se2RvbnRMaW1pdE1vdmVzOnMuZG9udExpbWl0TW92ZXMsc3BhcnNlOiEwfSl9Zm9yKHZhciBELFAsSSx4PTA7RD1kW3hdO3grKylzd2l0Y2goUD1ELm1vdmVkLEk9RC5pbmRleCxELnN0YXR1cyl7Y2FzZSJkZWxldGVkIjpmb3IoO2I8STspdShiKyspO1A9PT1yJiYoZj1tW2JdLGYuJCYmKGYuJC5zKCksZi4kPXIpLGcuYS5VYShmLlksaSkubGVuZ3RoJiYocy5iZWZvcmVSZW1vdmUmJihoLnB1c2goZiksaysrLGYuQWE9PT1uP2Y9bnVsbDpULnB1c2goZikpLGYmJlMucHVzaC5hcHBseShTLGYuWSkpKSxiKys7YnJlYWs7Y2FzZSJhZGRlZCI6Zm9yKDtfPEk7KXUoYisrKTtQIT09cj8ody5wdXNoKGgubGVuZ3RoKSx1KFApKTpsKEQudmFsdWUpfWZvcig7XzxvLmxlbmd0aDspdShiKyspO2guX2NvdW50V2FpdGluZ0ZvclJlbW92ZT1rfWcuYS5nLnNldChpLHQsaCkscChzLmJlZm9yZU1vdmUsQyksZy5hLkMoUyxzLmJlZm9yZVJlbW92ZT9nLm5hOmcucmVtb3ZlTm9kZSk7dmFyIEUsUixBO3RyeXtBPWkub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50fWNhdGNoKEIpe31pZih3Lmxlbmd0aClmb3IoOyh4PXcuc2hpZnQoKSkhPXI7KXtmb3IoZj1oW3hdLEU9cjt4OylpZigoUj1oWy0teF0uWSkmJlIubGVuZ3RoKXtFPVJbUi5sZW5ndGgtMV07YnJlYWt9Zm9yKG89MDtiPWYuWVtvXTtFPWIsbysrKWcuaC5WYihpLGIsRSl9Zm9yKHg9MCx3PWcuaC5maXJzdENoaWxkKGkpO2Y9aFt4XTt4Kyspe2ZvcihmLll8fGcuYS5leHRlbmQoZixlKGksYSxmLkFhLGMsZi5uYikpLG89MDtiPWYuWVtvXTt3PWIubmV4dFNpYmxpbmcsRT1iLG8rKyliIT09dyYmZy5oLlZiKGksYixFKTshZi5EZCYmYyYmKGMoZi5BYSxmLlksZi5uYiksZi5EZD0hMCxFPWYuWVtmLlkubGVuZ3RoLTFdKX1mb3IoQSYmaS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPUEmJkEuZm9jdXMoKSxwKHMuYmVmb3JlUmVtb3ZlLFQpLHg9MDt4PFQubGVuZ3RoOysreClUW3hdLkFhPW47cChzLmFmdGVyTW92ZSxDKSxwKHMuYWZ0ZXJBZGQseSl9fSgpLGcuYigidXRpbHMuc2V0RG9tTm9kZUNoaWxkcmVuRnJvbUFycmF5TWFwcGluZyIsZy5hLmNjKSxnLmJhPWZ1bmN0aW9uKCl7dGhpcy5hbGxvd1RlbXBsYXRlUmV3cml0aW5nPSExfSxnLmJhLnByb3RvdHlwZT1uZXcgZy5jYSxnLmJhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1nLmJhLGcuYmEucHJvdG90eXBlLnJlbmRlclRlbXBsYXRlU291cmNlPWZ1bmN0aW9uKGUsdCxuLGkpe3JldHVybih0PSg5PmcuYS5XPzA6ZS5ub2Rlcyk/ZS5ub2RlcygpOm51bGwpP2cuYS5sYSh0LmNsb25lTm9kZSghMCkuY2hpbGROb2Rlcyk6KGU9ZS50ZXh0KCksZy5hLnRhKGUsaSkpfSxnLmJhLk5hPW5ldyBnLmJhLGcuZWMoZy5iYS5OYSksZy5iKCJuYXRpdmVUZW1wbGF0ZUVuZ2luZSIsZy5iYSksZnVuY3Rpb24oKXtnLlphPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5HZD1mdW5jdGlvbigpe2lmKCFsfHwhbC50bXBsKXJldHVybiAwO3RyeXtpZigwPD1sLnRtcGwudGFnLnRtcGwub3Blbi50b1N0cmluZygpLmluZGV4T2YoIl9fIikpcmV0dXJuIDJ9Y2F0Y2goZSl7fXJldHVybiAxfSgpO3RoaXMucmVuZGVyVGVtcGxhdGVTb3VyY2U9ZnVuY3Rpb24odCxuLGksbyl7aWYobz1vfHxjLGk9aXx8e30sMj5lKXRocm93IEVycm9yKCJZb3VyIHZlcnNpb24gb2YgalF1ZXJ5LnRtcGwgaXMgdG9vIG9sZC4gUGxlYXNlIHVwZ3JhZGUgdG8galF1ZXJ5LnRtcGwgMS4wLjBwcmUgb3IgbGF0ZXIuIik7dmFyIGE9dC5kYXRhKCJwcmVjb21waWxlZCIpO3JldHVybiBhfHwoYT10LnRleHQoKXx8IiIsYT1sLnRlbXBsYXRlKG51bGwsInt7a29fd2l0aCAkaXRlbS5rb0JpbmRpbmdDb250ZXh0fX0iK2ErInt7L2tvX3dpdGh9fSIpLHQuZGF0YSgicHJlY29tcGlsZWQiLGEpKSx0PVtuLiRkYXRhXSxuPWwuZXh0ZW5kKHtrb0JpbmRpbmdDb250ZXh0Om59LGkudGVtcGxhdGVPcHRpb25zKSxuPWwudG1wbChhLHQsbiksbi5hcHBlbmRUbyhvLmNyZWF0ZUVsZW1lbnQoImRpdiIpKSxsLmZyYWdtZW50cz17fSxufSx0aGlzLmNyZWF0ZUphdmFTY3JpcHRFdmFsdWF0b3JCbG9jaz1mdW5jdGlvbihlKXtyZXR1cm4ie3trb19jb2RlICgoZnVuY3Rpb24oKSB7IHJldHVybiAiK2UrIiB9KSgpKSB9fSJ9LHRoaXMuYWRkVGVtcGxhdGU9ZnVuY3Rpb24oZSx0KXtjLndyaXRlKCI8c2NyaXB0IHR5cGU9J3RleHQvaHRtbCcgaWQ9JyIrZSsiJz4iK3QrIjwvc2NyaXB0PiIpfSwwPGUmJihsLnRtcGwudGFnLmtvX2NvZGU9e29wZW46Il9fLnB1c2goJDEgfHwgJycpOyJ9LGwudG1wbC50YWcua29fd2l0aD17b3Blbjoid2l0aCgkMSkgeyIsY2xvc2U6In0gIn0pfSxnLlphLnByb3RvdHlwZT1uZXcgZy5jYSxnLlphLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1nLlphO3ZhciBlPW5ldyBnLlphOzA8ZS5HZCYmZy5lYyhlKSxnLmIoImpxdWVyeVRtcGxUZW1wbGF0ZUVuZ2luZSIsZy5aYSl9KCl9KX0oKX0oKX0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZS5wcmV2ZW50RGVmYXVsdD9lLnByZXZlbnREZWZhdWx0KCk6ZS5yZXR1cm5WYWx1ZT0hMX12YXIgbz1uKDUpLGE9big2KSxyPW4oOSkscz1uKDEzKSxjPWEuU3RyaW5nLGQ9ci5IZWxwZXIsbD1vLktleUNvZGUsdT0ia2V5ZG93biIscD0ic2Nyb2xsIixmPSJyZXNpemUiO3QuYXBwbHlFeHRlbnNpb25zPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCxuKXt2YXIgaT1uLmNvbXBvbmVudElkO2lmKGkmJmFbaV0pe3ZhciBvPWFbaV0scj1vLnBhcmVudFZpZXdNb2RlbCxjPW8uYWxpYXMsZD1lLnVud3JhcChvLmV2ZW50cyl8fHt9O2MmJigic3RyaW5nIj09dHlwZW9mIGMmJihjPXJbY10pLGUuaXNXcml0YWJsZU9ic2VydmFibGUoYykmJihjKHQpLGUudXRpbHMuZG9tTm9kZURpc3Bvc2FsLmFkZERpc3Bvc2VDYWxsYmFjayhuLGZ1bmN0aW9uKCl7YyhudWxsKX0pKSksZS51dGlscy5vYmplY3RGb3JFYWNoKGQsZnVuY3Rpb24oZSxuKXtlJiZuJiYoImxvYWQiPT09ZT9uLmNhbGwocix0KTooZT0ib24iK2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrZS5zdWJzdHIoMSkscy5pc0NvbXBvbmVudEV2ZW50KHRbZV0pJiZ0W2VdLnN1YnNjcmliZShmdW5jdGlvbihlKXtyZXR1cm4gbi5hcHBseShyLGUpfSkpKX0pfX12YXIgbz0xLGE9e307ZS5jb21wb25lbnRzLmxvYWRlcnMudW5zaGlmdCh7bG9hZENvbXBvbmVudDpmdW5jdGlvbihuLGksbyl7ZS5jb21wb25lbnRzLmRlZmF1bHRMb2FkZXIubG9hZENvbXBvbmVudChuLGksZnVuY3Rpb24oZSl7aS5lbmFibGVFeHRlbnNpb25zJiYhZnVuY3Rpb24obil7ZS5jcmVhdGVWaWV3TW9kZWw9ZnVuY3Rpb24oZSxpKXt2YXIgbz1uKGUsaSk7cmV0dXJuIHQobyxpLmVsZW1lbnQpLG99fShlLmNyZWF0ZVZpZXdNb2RlbCksbyhlKX0pfX0pLGZ1bmN0aW9uKHQpe2UuYmluZGluZ0hhbmRsZXJzLmNvbXBvbmVudC5pbml0PWZ1bmN0aW9uKG4saSxyLHMsYyl7dmFyIGQ9ZS51bndyYXAoaSgpKTtpZigic3RyaW5nIiE9dHlwZW9mIGQpe3ZhciBsPWQucHVibGljTWV0aG9kcyx1PWQuZXZlbnQ7aWYoZC5kaXNhYmxlZClyZXR1cm47aWYobHx8dSl7dmFyIHA9bi5jb21wb25lbnRJZD1vKys7YVtwXT17cGFyZW50Vmlld01vZGVsOnMsYWxpYXM6bCxldmVudHM6dX0sZS51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKG4sZnVuY3Rpb24oKXtkZWxldGUgYVtwXX0pfX1yZXR1cm4gdChuLGkscixzLGMpfX0oZS5iaW5kaW5nSGFuZGxlcnMuY29tcG9uZW50LmluaXQpLGUuYmluZGluZ0hhbmRsZXJzLnBhZ2VWaWV3Q29tcG9uZW50PXtpbml0OmZ1bmN0aW9uKHQsbixpLG8sYSl7dmFyIHI9ZS51bndyYXAobigpKTtyLnB1YmxpY01ldGhvZHM9by52aWV3SW50ZXJmYWNlc1thLiRpbmRleCgpXSxyLmV2ZW50PXIuZXZlbnR8fHt9LHIuZXZlbnQubG9hZD1vLnZpZXdfb25Mb2FkLHIuZXZlbnQuc3dpdGNoVmlldz1vLnZpZXdfb25Td2l0Y2hWaWV3O3ZhciBzPWZ1bmN0aW9uKCl7cmV0dXJuIHJ9O3JldHVybiBlLmJpbmRpbmdIYW5kbGVycy5jb21wb25lbnQuaW5pdCh0LHMsaSxvLGEpfX0sZS5iaW5kaW5nSGFuZGxlcnMuY29tcG9uZW50LnByZXByb2Nlc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIWV8fCciJyE9PWUuY2hhckF0KDApJiYiJyIhPT1lLmNoYXJBdCgwKT9lOmMuZm9ybWF0KCJ7IG5hbWU6IHswfSwgcGFyYW1zOiB7IH0gfSIsZSl9LGUuYmluZGluZ0hhbmRsZXJzLmRlZmluZUdsb2JhbHM9e2luaXQ6ZnVuY3Rpb24odCxuLGksbyxhKXtmdW5jdGlvbiByKGUpe3ZhciB0PSIiO3RyeXt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtuLmlubmVySFRNTD1lLG4uY2hpbGROb2Rlcy5sZW5ndGg+MCYmbi5jaGlsZE5vZGVzWzBdLnZhbHVlJiYodD1uLmNoaWxkTm9kZXNbMF0udmFsdWUpfWNhdGNoKGkpe31yZXR1cm4gdH12YXIgcz1lLnVud3JhcChuKCkpO3Muc0ZUPXIocy5zRlQpfHxzLnNGVHx8cihzLnNGVFRhZyk7dmFyIGM9YS5leHRlbmQoe3N2cjpzLHN0cjpzLnN0cixodG1sOnMuaHRtbCwkbG9jYXRpb246ZS5vYnNlcnZhYmxlKCl9KTtpZihjLiRsb2NhdGlvbi5zdWJzY3JpYmUoZnVuY3Rpb24oZSl7ZSYmZG9jdW1lbnQubG9jYXRpb24ucmVwbGFjZShlKX0pLGkuaGFzKCJib2R5Q3NzQ2xhc3MiKSl7dmFyIGw9ZC5nZXRJRVZlcnNpb24oKTtpZihsKXt2YXIgdT17Y3NzOnt9fTt1LmNzc1siSUVfTSIrbF09ITAsZS5hcHBseUJpbmRpbmdzVG9Ob2RlKHQsdSl9dmFyIHA9ZC5pc0hpZ2hDb250cmFzdCgpO2lmKHApe3ZhciBmPWQuZ2V0SGlnaENvbnRyYXN0VGhlbWUoKSxnPSJibGFjayI9PT1mLG09IndoaXRlIj09PWY7aWYoZ3x8bSl7dmFyIHY9Zz8idGhlbWUtZGFyayI6InRoZW1lLWxpZ2h0IixoPXtjc3M6e319O2guY3NzW3ZdPSEwLGUuYXBwbHlCaW5kaW5nc1RvTm9kZSh0LGgpfX19cmV0dXJuIGUuYXBwbHlCaW5kaW5nc1RvRGVzY2VuZGFudHMoYyx0KSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fX0sZS5iaW5kaW5nSGFuZGxlcnMuYXV0b1N1Ym1pdD17dXBkYXRlOmZ1bmN0aW9uKHQsbil7dmFyIGk9bigpO2UudW53cmFwKGkpJiYoZS5pc1dyaXRhYmxlT2JzZXJ2YWJsZShpKSYmaSghMSksdC5zdWJtaXQoKSl9fSxlLmJpbmRpbmdIYW5kbGVycy5ocmVmPXt1cGRhdGU6ZnVuY3Rpb24odCxuKXtlLmJpbmRpbmdIYW5kbGVycy5hdHRyLnVwZGF0ZSh0LGZ1bmN0aW9uKCl7cmV0dXJue2hyZWY6bigpfX0pfX0sZS5iaW5kaW5nSGFuZGxlcnMucGxhY2Vob2xkZXI9e3VwZGF0ZTpmdW5jdGlvbih0LG4pe2UuYmluZGluZ0hhbmRsZXJzLmF0dHIudXBkYXRlKHQsZnVuY3Rpb24oKXtyZXR1cm57cGxhY2Vob2xkZXI6bigpfX0pfX0sZS5iaW5kaW5nSGFuZGxlcnMuYXJpYUxhYmVsPXt1cGRhdGU6ZnVuY3Rpb24odCxuKXtlLmJpbmRpbmdIYW5kbGVycy5hdHRyLnVwZGF0ZSh0LGZ1bmN0aW9uKCl7cmV0dXJueyJhcmlhLWxhYmVsIjpuKCl9fSl9fSxlLmJpbmRpbmdIYW5kbGVycy5hcmlhRGVzY3JpYmVkQnk9e3VwZGF0ZTpmdW5jdGlvbih0LG4pe2UuYmluZGluZ0hhbmRsZXJzLmF0dHIudXBkYXRlKHQsZnVuY3Rpb24oKXtyZXR1cm57ImFyaWEtZGVzY3JpYmVkYnkiOm4oKX19KX19LGUuYmluZGluZ0hhbmRsZXJzLmh0bWxXaXRoQmluZGluZ3M9e2luaXQ6ZnVuY3Rpb24oKXtyZXR1cm57Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fSx1cGRhdGU6ZnVuY3Rpb24odCxuLGksbyxhKXtlLnV0aWxzLnNldEh0bWwodCxuKCkpO3ZhciByPWkuZ2V0KCJjaGlsZEJpbmRpbmdzIik7aWYocilmb3IodmFyIHMgaW4gcilpZihyLmhhc093blByb3BlcnR5KHMpKXt2YXIgYz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChzKTtjJiZlLmFwcGx5QmluZGluZ3NUb05vZGUoYyxyW3NdLGEpfWUuYXBwbHlCaW5kaW5nc1RvRGVzY2VuZGFudHMoYSx0KX19LGUuYmluZGluZ0hhbmRsZXJzLmJhY2tncm91bmRJbWFnZT17dXBkYXRlOmZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbih0KXtlLnN0eWxlLmJhY2tncm91bmRJbWFnZT10P2MuZm9ybWF0KCJ1cmwoJ3swfScpIix0KToiIn12YXIgaT10KCksbz13aW5kb3cuJExvYWRlcixhPW5ldyBJbWFnZTthLm9uZXJyb3I9ZnVuY3Rpb24oKXtvJiZvLk9uJiZvLk9uKGEsITAsbil9LGEuc3JjPWksbihpKX19LGUuYmluZGluZ0hhbmRsZXJzLndpemFyZENzc0NoZWNrPXt1cGRhdGU6ZnVuY3Rpb24oZSx0LG4saSxvKXtpZihDU1NMb2FkRmFpbCgpKXt2YXIgYT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFpbkRpdiIpO2EmJihhLnN0eWxlLmRpc3BsYXk9Im5vbmUiKX19fSxlLmJpbmRpbmdIYW5kbGVycy53aXRoUHJvcGVydGllcz17aW5pdDpmdW5jdGlvbih0LG4saSxvLGEpe3ZhciByPWEuZXh0ZW5kKG4pO3JldHVybiBlLmFwcGx5QmluZGluZ3NUb0Rlc2NlbmRhbnRzKHIsdCkse2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX19LGUuYmluZGluZ0hhbmRsZXJzLmNsaWNrRXhwcj17cHJlcHJvY2VzczpmdW5jdGlvbihlKXtyZXR1cm4iZnVuY3Rpb24gKCRkYXRhLCAkZXZlbnQpIHsgIitlKyIgfSJ9LGluaXQ6ZnVuY3Rpb24odCxuLGksbyxhKXtyZXR1cm4gZS5iaW5kaW5nSGFuZGxlcnMuY2xpY2suaW5pdC5jYWxsKHRoaXMsdCxuLGksbyxhKX19LGUuYmluZGluZ0hhbmRsZXJzLmltZ1NyYz17aW5pdDpmdW5jdGlvbihlKXt2YXIgdD13aW5kb3cuJExvYWRlcjtlLm9uZXJyb3I9ZnVuY3Rpb24oKXtpZih0JiZ0Lk9uKXJldHVybiB0Lk9uKGUsITAsZnVuY3Rpb24odCl7ZS5zcmM9dH0pfSxkLmlzU3ZnSW1nU3VwcG9ydGVkKCk/ZS5zcmM9ZS5nZXRBdHRyaWJ1dGUoInN2Z1NyYyIpOmUuc3JjPWUuZ2V0QXR0cmlidXRlKCJwbmdTcmMiKX19LGUuYmluZGluZ0hhbmRsZXJzLnN2Z1NyYz17dXBkYXRlOmZ1bmN0aW9uKHQsbixpKXt2YXIgbz1lLnVud3JhcChuKCkpO2UuYmluZGluZ0hhbmRsZXJzLmF0dHIudXBkYXRlKHQsZnVuY3Rpb24oKXtvJiZkLmlzU3ZnSW1nU3VwcG9ydGVkKCkmJihvPW8ucmVwbGFjZShuZXcgUmVnRXhwKCIucG5nJCIpLCIuc3ZnIikpO3ZhciBlPWkuZ2V0KCJmb3JtYXQiKTtpZihlKWZvcih2YXIgdCBpbiBlKWUuaGFzT3duUHJvcGVydHkodCkmJiFlW3RdJiYobz1vLnJlcGxhY2UodCwiIikpO3JldHVybntzcmM6b319KX19LGUuYmluZGluZ0hhbmRsZXJzLmluamVjdFNjcmlwdD17aW5pdDpmdW5jdGlvbih0LG4pe3ZhciBpPWUudW53cmFwKG4oKSksbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtyZXR1cm4gby50eXBlPSJ0ZXh0L2phdmFzY3JpcHQiLG8uc3JjPWksdC5hcHBlbmRDaGlsZChvKSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fX0sZS5iaW5kaW5nSGFuZGxlcnMuaW5qZWN0SWZyYW1lPXtpbml0OmZ1bmN0aW9uKHQsbil7dmFyIGk9ZS51bndyYXAobigpKTtpZihpJiZpLnVybCl7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7by5oZWlnaHQ9IjAiLG8ud2lkdGg9IjAiLG8uc3R5bGUuZGlzcGxheT0ibm9uZSIsby5zcmM9ZS51bndyYXAoaS51cmwpLGkub25sb2FkJiYoby5vbmxvYWQ9ZnVuY3Rpb24oKXtpLm9ubG9hZChvKX0pLHQuYXBwZW5kQ2hpbGQobyl9cmV0dXJue2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX19LGUuYmluZGluZ0hhbmRsZXJzLmhhc0ZvY3VzRXg9e2luaXQ6ZS5iaW5kaW5nSGFuZGxlcnMuaGFzRm9jdXMuaW5pdCx1cGRhdGU6ZnVuY3Rpb24odCxuLGksbyxhKXtlLmJpbmRpbmdIYW5kbGVycy5oYXNGb2N1cy51cGRhdGUodCxuLGksbyxhKTt2YXIgcj1lLnVud3JhcChuKCkpO2lmKHIpe2lmKHQudmFsdWUpe3ZhciBzPXQudmFsdWUubGVuZ3RoO2lmKCJzZWxlY3Rpb25TdGFydCJpbiB0KXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0cnl7dC5zZWxlY3Rpb25TdGFydD1zLHQuc2VsZWN0aW9uRW5kPXN9Y2F0Y2goZSl7fX0sMCk7ZWxzZSBpZigiY3JlYXRlVGV4dFJhbmdlImluIHQpe3ZhciBjPXQuY3JlYXRlVGV4dFJhbmdlKCk7Yy5tb3ZlU3RhcnQoImNoYXJhY3RlciIscyksYy5jb2xsYXBzZSgpLGMubW92ZUVuZCgiY2hhcmFjdGVyIixzKSxjLnNlbGVjdCgpfX10LmZvY3VzKCl9ZWxzZSB0LmJsdXIoKX19LGUuYmluZGluZ0hhbmRsZXJzLnByZXZlbnRUYWJiaW5nPXtpbml0OmZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZT1lfHx3aW5kb3cuZXZlbnQsIlRhYiIhPT1lLmNvZGUmJmUua2V5Q29kZSE9PWwuVGFifHwhKCFhLmRpcmVjdGlvbnx8ImJvdGgiPT09YS5kaXJlY3Rpb258fCJ1cCI9PT1hLmRpcmVjdGlvbiYmZS5zaGlmdEtleXx8ImRvd24iPT09YS5kaXJlY3Rpb24mJiFlLnNoaWZ0S2V5KXx8KGkoZSksITEpfXZhciBhPWUudW53cmFwKG4oKSl8fHt9OyJub25lIiE9PWEuZGlyZWN0aW9uJiZlLnV0aWxzLnJlZ2lzdGVyRXZlbnRIYW5kbGVyKHQsdSxvKX19LGUuYmluZGluZ0hhbmRsZXJzLmFyaWFIaWRkZW49e3VwZGF0ZTpmdW5jdGlvbih0LG4pe2UuYmluZGluZ0hhbmRsZXJzLmF0dHIudXBkYXRlKHQsZnVuY3Rpb24oKXtyZXR1cm57ImFyaWEtaGlkZGVuIjplLnVud3JhcChuKCkpfX0pfX0sZS5iaW5kaW5nSGFuZGxlcnMubW92ZU9mZlNjcmVlbj17dXBkYXRlOmZ1bmN0aW9uKHQsbil7dmFyIGk9ZS51bndyYXAobigpKTtpZigib2JqZWN0IiE9dHlwZW9mIGkpe3ZhciBvPWkhPT0hMTtpPXtzZXRDbGFzczpvLHNldFRhYkluZGV4Om8sc2V0QXJpYUhpZGRlbjpvfX1lLmJpbmRpbmdIYW5kbGVycy5jc3MudXBkYXRlKHQsZnVuY3Rpb24oKXtyZXR1cm57bW92ZU9mZlNjcmVlbjppLnNldENsYXNzIT09ITF9fSksZS5iaW5kaW5nSGFuZGxlcnMuYXR0ci51cGRhdGUodCxmdW5jdGlvbigpe3JldHVybnt0YWJpbmRleDppLnNldFRhYkluZGV4IT09ITE/LTE6MH19KSxlLmJpbmRpbmdIYW5kbGVycy5hcmlhSGlkZGVuLnVwZGF0ZSh0LGZ1bmN0aW9uKCl7cmV0dXJuIGkuc2V0QXJpYUhpZGRlbiE9PSExfSl9fSxlLmJpbmRpbmdIYW5kbGVycy5wcmVzc0VudGVyPXtpbml0OmZ1bmN0aW9uKHQsbixvLGEscil7ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZT1lfHx3aW5kb3cuZXZlbnQsIkVudGVyIiE9PWUuY29kZSYmZS5rZXlDb2RlIT09bC5FbnRlcnx8KGkoZSksYyhkLGUpLCExKX12YXIgYz1lLnVud3JhcChuKCkpLGQ9ci4kZGF0YTtlLnV0aWxzLnJlZ2lzdGVyRXZlbnRIYW5kbGVyKHQsdSxzKX19LGUuYmluZGluZ0hhbmRsZXJzLmlzU2Nyb2xsZWRUb0JvdHRvbT17aW5pdDpmdW5jdGlvbih0LG4pe2Z1bmN0aW9uIGkoKXt2YXIgZT10LnNjcm9sbFRvcCt0Lm9mZnNldEhlaWdodD49dC5zY3JvbGxIZWlnaHQ7cmV0dXJuIHMoZSksYyYmZSYmbygpLGV9ZnVuY3Rpb24gbygpe2QucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LHAsaSksZC5yZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdyxmLGkpfXZhciBhPWUudW53cmFwKG4oKSkscj1hLmRpc2FibGVkLHM9YS52YWx1ZSxjPWEuc3RpY2t5OyFyJiZlLmlzV3JpdGFibGVPYnNlcnZhYmxlKHMpJiYoYyYmaSgpfHwoZC5hZGRFdmVudExpc3RlbmVyKHQscCxpKSxkLmFkZEV2ZW50TGlzdGVuZXIod2luZG93LGYsaSksZS51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKHQsbykpKX0sdXBkYXRlOmZ1bmN0aW9uKHQsbil7dmFyIGk9ZS51bndyYXAobigpKTtpLnZhbHVlKCkmJih0LnNjcm9sbFRvcD10LnNjcm9sbEhlaWdodCl9fSxlLmJpbmRpbmdIYW5kbGVycy5hbmltYXRpb25FbmQ9e2luaXQ6ZnVuY3Rpb24odCxuLGksbyxhKXt2YXIgcj1kLmdldEFuaW1hdGlvbkVuZEV2ZW50TmFtZSgpO3ImJmUuYmluZGluZ0hhbmRsZXJzLmV2ZW50LmluaXQodCxmdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlW3JdPW4oKSxlfSxpLG8sYSl9fSxlLmJpbmRpbmdIYW5kbGVycy5odG1sV2l0aE1vZHM9e2luaXQ6ZnVuY3Rpb24odCxuLGkpe2Z1bmN0aW9uIG8oZSx0KXtyZXR1cm4gZSE9PXQ/ZSsiICgiK3QrIikiOmV9dmFyIGE9ZS51bndyYXAobigpKTtpZihhKXt2YXIgcj1pLmdldCgiaHRtbE1vZHMiKTtpZihyJiZyLmZpbHRlckxpbmtzKXt2YXIgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtzLmlubmVySFRNTD1hO2Zvcih2YXIgYz1zLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIiksZD1jLmxlbmd0aC0xO2Q+PTA7ZC0tKXt2YXIgbD1jW2RdLHU9bC5pbm5lclRleHQscD1sLnByb3RvY29sO2lmKCJtYWlsdG86Ij09PXB8fCJ0ZWw6Ij09PXApe2lmKHIuYWxsb3dDb250YWN0UHJvdG9jb2xzIT09ITEpY29udGludWU7dT1vKHUsbC5wYXRobmFtZSl9ZWxzZSB1PW8odSxsLmdldEF0dHJpYnV0ZSgiaHJlZiIpKTt2YXIgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7Zi5pbm5lclRleHQ9dSxsLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGYsbCl9YT1zLmlubmVySFRNTH1lLnV0aWxzLnNldEh0bWwodCxhKX19fSxlLnZpcnR1YWxFbGVtZW50cy5hbGxvd2VkQmluZGluZ3Mud2l0aFByb3BlcnRpZXM9ITAsKGUub3B0aW9ucz1lLm9wdGlvbnN8fHt9KS5jcmVhdGVDaGlsZENvbnRleHRXaXRoQXM9ITA7dmFyIHI9bigxNCk7ci5hcHBseUV4dGVuc2lvbnMoZSl9fSxmdW5jdGlvbihlLHQpe3QuVXNlcm5hbWVNYXhMZW5ndGg9MTEzLHQuU0FUT1RQVjFMZW5ndGg9Nix0LlNBVE9UUExlbmd0aD04LHQuUGhvbmVOdW1iZXJDb25maXJtYXRpb25MZW5ndGg9NCx0Lk9uZVRpbWVDb2RlRGVmYXVsdExlbmd0aD0xNix0Lk9uZVRpbWVDb2RlTWF4TGVuZ3RoPTcsdC5QQ0V4cGVyaWVuY2VRUz0icGNleHAiLHQuUENFeHBlcmllbmNlRGlzYWJsZWQ9dC5QQ0V4cGVyaWVuY2VRUysiPWZhbHNlIix0Lk5vdFByZWZlcnJlZENyZWRlbnRpYWxRcz0ibnBjIix0LlJlZ2V4PXtQaG9uZU51bWJlclZhbGlkYXRpb246L15bMC05ICgpW1xdLlwtIypcLytdKyQvfSx0LlByb29mVXBSZWRpcmVjdExhbmRpbmdWaWV3PXtBY2NvdW50Q29tcHJvbWlzZWQ6MSxSaXNreVNlc3Npb246Mn0sdC5Mb2dpbk1vZGU9e05vbmU6MCxMb2dpbjoxLEZvcmNlQ3JlZFR5cGU6MyxMV0FDb25zZW50OjQsR2VuZXJpY0Vycm9yOjUsRm9yY2VTaWduaW46NixPVFM6NyxISVBfTG9naW46OCxISVBfTG9ja291dDo5LEludml0ZUJsb2NrZWQ6MTAsU3dpdGNoVXNlcjoxMSxMV0FEZWxlZ2F0aW9uOjEyLFNlcnZpY2VCbG9ja2VkOjEzLElEUEZhaWxlZDoxNCxTdHJvbmdBdXRoT1RDOjE2LFN0cm9uZ0F1dGhNb2JpbGVPVEM6MjUsRmluaXNoOjI3LExvZ2luV2l6YXJkX0xvZ2luOjI4LFN0cm9uZ0F1dGhXQUJPVEM6MzAsTG9naW5XaXphcmRfSElQX0xvZ2luOjMyLExvZ2luV2l6YXJkX0ZpbmlzaDozNCxMb2dpbk1vYmlsZTozNixGb3JjZVNpZ25pbk1vYmlsZTozNyxHZW5lcmljRXJyb3JNb2JpbGU6MzgsTG9naW5Ib3N0OjM5LEZvcmNlU2lnbmluSG9zdDo0MCxHZW5lcmljRXJyb3JIb3N0OjQyLFN0cm9uZ0F1dGhIb3N0T1RDOjQzLEhJUF9Mb2dpbkhvc3Q6NDUsSElQX0xvZ2luTW9iaWxlOjQ2LEhJUF9Mb2Nrb3V0SG9zdDo0NyxISVBfTG9ja291dE1vYmlsZTo0OCxTd2l0Y2hVc2VySG9zdDo0OSxMb2dpblhib3hfTG9naW46NTAsSElQX0xvZ2luWGJveDo1MSxGaW5pc2hYYm94OjUyLElmRXhpc3RzWGJveDo1MyxTdGFydElmRXhpc3RzWGJveDo1NCxTdHJvbmdBdXRoWGJveE9UQzo1NSxMb2dpbldQV2l6X0xvZ2luOjU2LExvZ2luV1BXaXpfSElQX0xvZ2luOjU3LExvZ2luV1BXaXpfRmluaXNoOjU4LFN0cm9uZ0F1dGhXaXpPVEM6NTksU3Ryb25nQXV0aFdQV2l6T1RDOjYwLEZpbmlzaFdQV2l6OjYxLFN3aXRjaFVzZXJNb2JpbGU6NjIsTG9naW5XUFdpel9QaG9uZVNpZ25Jbjo2MyxMb2dpbldQV2l6X0hJUF9QaG9uZVNpZ25Jbjo2NCxMb2dpbl9QaG9uZVNpZ25Jbjo2NSxMb2dpbl9ISVBfUGhvbmVTaWduSW46NjYsTG9naW5Ib3N0X1Bob25lU2lnbkluOjY3LExvZ2luSG9zdF9ISVBfUGhvbmVTaWduSW46NjgsTG9naW5Nb2JpbGVfUGhvbmVTaWduSW46NjksTG9naW5Nb2JpbGVfSElQX1Bob25lU2lnbkluOjcwLExvZ2luV2l6YXJkX1Bob25lU2lnbkluOjcxLExvZ2luV2l6YXJkX0hJUF9QaG9uZVNpZ25Jbjo3MixMb2dpblhib3hfUGhvbmVTaWduSW46NzMsTG9naW5YYm94X0hJUF9QaG9uZVNpZ25Jbjo3NCxMb2dpbldpbjEwOjc1LEhJUF9Mb2dpbldpbjEwOjc2LEZpbmlzaFdpbjEwOjc3LEZpbmlzaEJsb2NrZWRXaW4xMDo3OCxMb2dpbldpbjEwX1Bob25lU2lnbkluOjc5LEhJUF9Mb2dpbldpbjEwX1Bob25lU2lnbkluOjgwLEZpbmlzaFdpbjEwX1Rva2VuQnJva2VyOjgxLFN3aXRjaFVzZXJXaW4xMDo4MixGb3JjZVNpZ25Jblhib3g6ODgsTG9naW5DbGllbnRTREtfTG9naW46OTIsTG9naW5DbGllbnRTREtfSElQX0xvZ2luOjkzLExvZ2luQ2xpZW50U0RLX0ZpbmlzaDo5NCxTdHJvbmdBdXRoQ2xpZW50U0RLT1RDOjk1LEZpbmlzaENsaWVudFNESzo5NixMb2dpbkNsaWVudFNES19QaG9uZVNpZ25Jbjo5NyxMb2dpbkNsaWVudFNES19ISVBfUGhvbmVTaWduSW46OTgsV2luMTBJbmNsdXNpdmVPT0JFX0ZpbmlzaDo5OSxXaW4xMEluY2x1c2l2ZU9PQkVfRmluaXNoQmxvY2tlZDoxMDAsVGlsZXM6MTAyLFJlbW90ZUNvbm5lY3Q6MTAzLERlc2t0b3BTc29Qcm9ncmVzczoxMDQsRmVkQ29uZmxpY3Q6MTA1LFdpbjEwSG9zdF9Mb2dpbjoxMDYsV2luMTBIb3N0X0xvZ2luX1Bob25lU2lnbmluOjEwNyxXaW4xMEhvc3RfRmluaXNoOjEwOCxXaW4xMEhvc3RfU3Ryb25nQXV0aDoxMDksV2luMTBIb3N0X0hJUF9Mb2dpbjoxMTAsRmlkbzoxMTEsV2luMTBIb3N0X0hJUF9Mb2dpbl9QaG9uZVNpZ25JbjoxMTIsRmVkTGluazoxMTMsVXNlckNyZWRlbnRpYWxQb2xpY3lCbG9ja2VkOjExNCxCaW5kRmFpbGVkOjExNSxXaW4xMEhvc3RPT0JFX0hJUF9Mb2dpbjoxMTYsV2luMTBIb3N0T09CRV9ISVBfTG9naW5fUGhvbmVTaWduSW46MTE3LEFhZEZlZENvbmZsaWN0OjExOCxQcm9vZkZlZENvbmZsaWN0OjExOSxGZWRCb3VuZExpbms6MTIwLEZldGNoU2Vzc2lvbnNQcm9ncmVzczoxMjEsV2luMTBIb3N0X1RyYW5zZmVyTG9naW46MTIyLFRyYW5zZmVyTG9naW46MTIzfSx0LkxvZ2luQm9keT17TG9naW5fT1RDOjV9LHQuU2Vzc2lvblB1bGxGbGFncz17TXNhOjEsRHNzbzoyfSx0LlBhZ2luYXRlZFN0YXRlPXtQcmV2aW91czotMSxVbmtub3duOjAsVXNlcm5hbWU6MSxQYXNzd29yZDoyLE9uZVRpbWVDb2RlOjMsUmVtb3RlTkdDOjQsUGhvbmVEaXNhbWJpZ3VhdGlvbjo1LEx3YUNvbnNlbnQ6NixJZHBEaXNhbWJpZ3VhdGlvbjo3LElkcFJlZGlyZWN0OjgsVmlld0FncmVlbWVudDoxMCxMZWFybk1vcmU6MTEsVGlsZXM6MTIsQ29uZmlybVNlbmQ6MTMsUmVtb3RlQ29ubmVjdENvZGU6MTQsUmVtb3RlTG9naW5Qb2xsaW5nOjE1LEJpbmRSZWRpcmVjdDoxNixUZXJtc09mVXNlOjE3LERlc2t0b3BTc29Qcm9ncmVzczoxOCxSZXNldFBhc3N3b3JkU3BsaXR0ZXI6MTksS21zaToyMCxDaGVja1Bhc3N3b3JkVHlwZToyMSxDaGFuZ2VQYXNzd29yZDoyMixGaWRvOjIzLENyZWRlbnRpYWxQaWNrZXI6MjQsQ29uc2VudDoyNSxFcnJvcjoyNixDb25maXJtU2lnbnVwOjI3LENvbmZpcm1SZWNvdmVyVXNlcm5hbWU6MjgsQ29uZmlybUNvbnNlbnRTZWxlY3Rpb246MjksRmVkQ29uZmxpY3Q6MzAsUHJvb2ZVcFJlZGlyZWN0OjMyLFByb29mVXBSZWRpcmVjdExhbmRpbmc6MzMsQ29uZGl0aW9uYWxBY2Nlc3NJbnN0YWxsQnJva2VyOjM0LENvbmRpdGlvbmFsQWNjZXNzV29ya3BsYWNlSm9pbjozNSxDb25kaXRpb25hbEFjY2Vzc0Vycm9yOjM2LENyZWF0ZUZpZG86MzcsRmVkTGluazozOCxGZWRMaW5rQ29tcGxldGU6NDAsSWRwUmVkaXJlY3RTcGVlZGJ1bXA6NDEsVHJhbnNmZXJMb2dpbjo0MixDbXNpOjQzLFByb29mQ29uZmlybWF0aW9uOjQ0LE1lc3NhZ2VQcm9tcHQ6NDUsRmluaXNoRXJyb3I6NDYsSGlwOjQ4LExlYXJuTW9yZU9mZmxpbmVBY2NvdW50OjQ5LFRlbmFudERpc2FtYmlndWF0aW9uOjUwLEFhZEZlZENvbmZsaWN0OjUxLFJlbW90ZUNvbm5lY3RDYW5hcnlWYWxpZGF0aW9uOjUyLFBhcnRuZXJDYW5hcnlWYWxpZGF0aW9uOjUzLFByb29mRmVkQ29uZmxpY3Q6NTQsRmV0Y2hTZXNzaW9uc1Byb2dyZXNzOjU1LEFjY2Vzc1Bhc3M6NTYsU2lnbnVwVXNlcm5hbWU6NTd9LHQuUG9zdFR5cGU9e1Bhc3N3b3JkOjExLEZlZGVyYXRpb246MTMsU0hBMToxNSxTdHJvbmdBdXRoOjE4LFN0cm9uZ0F1dGhUT1RQOjE5LExXQUNvbnNlbnQ6MzAsUGFzc3dvcmRJbmxpbmU6MjAsUmVtb3RlTkdDOjIxLFNlc3Npb25BcHByb3ZhbDoyMixOR0M6MjMsT3RjTm9QYXNzd29yZDoyNCxSZW1vdGVDb25uZWN0X05hdGl2ZVBsYXRmb3JtOjI1LE9UQzoyNyxLbXNpOjI4fSx0LlVzZXJQcm9wZXJ0eT17VVNFUk5BTUU6ImxvZ2luIixFUlJPUl9DT0RFOiJIUiIsRVJSX01TRzoiRXJyb3JNZXNzYWdlIixFWFRfRVJST1I6IkV4dEVyciIsRVJSX1VSTDoiRXJyVXJsIixEQVRPS0VOOiJEQVRva2VuIixEQV9TRVNLRVk6IkRBU2Vzc2lvbktleSIsREFfU1RBUlQ6IkRBU3RhcnRUaW1lIixEQV9FWFBJUkU6IkRBRXhwaXJlcyIsU1RTX0lMRlQ6IlNUU0lubGluZUZsb3dUb2tlbiIsU0lHTklOTkFNRToiU2lnbmluTmFtZSIsRklSU1RfTkFNRToiTGFzdE5hbWUiLExBU1RfTkFNRToiRmlyc3ROYW1lIixUSUxFX1VSTDoiVGlsZVVybCIsQ0lEOiJDSUQiLFBVSUQ6IlBVSUQifSx0LkVycm9yPXtTX09LOiIwIixJbnZhbGlkUmVhbG1EaXNjTG9naW46MTAsVXNlcm5hbWVJbnZhbGlkOjFlMyxQYXNzd29yZEVtcHR5OjEwMDEsSElQRW1wdHk6MTAwMixBbHRFbWFpbEludmFsaWQ6MTAwNSxQaG9uZUludmFsaWQ6MTAwNixTQUNvbnRhaW5zTmFtZToxMDA3LE9UQ0VtcHR5OjEwMDksT1RDSW52YWxpZDoxMDEwLE5vdEVub3VnaFByb29mczoxMDEzLFBob25lRW1wdHk6MTAxNSxGZWRVc2VyOjEwMTYsRmVkVXNlckNvbmZsaWN0OjEwMTcsRmVkVXNlckludml0ZUJsb2NrZWQ6MTAxOCxFbXB0eUZpZWxkczoxMDIwLFBob25lSGFzU3BlY2lhbENoYXJzOjEwMjEsQXV0b1ZlcmlmeU5vQ29kZVNlbnQ6MTAyMixQcm9vZkNvbmZpcm1hdGlvbkVtcHR5OjEwMjMsUHJvb2ZDb25maXJtYXRpb25JbnZhbGlkOjEwMjQsVE9UUEludmFsaWQ6MTAyNSxTZXNzaW9uTm90QXBwcm92ZWQ6MTAyNixQaG9uZU51bWJlckludmFsaWQ6MTAyNyxQaG9uZUZvcm1hdHRpbmdJbnZhbGlkOjEwMjgsUG9sbGluZ1RpbWVkT3V0OjEwMjksU2VuZE5vdGlmaWNhdGlvbkZhaWxlZDoxMDMwLFNlcnZlcl9NZXNzYWdlT25seTo5OTk5LFBQX0VfREJfTUVNQkVSRE9FU05PVEVYSVNUOiJDRkZGRkMxNSIsUFBfRV9FWENMVURFRDoiODAwNDEwMTAiLFBQX0VfTUVNQkVSX0xPQ0tFRDoiODAwNDEwMTEiLFBQX0VfQkFEX1BBU1NXT1JEOiI4MDA0MTAxMiIsUFBfRV9NSVNTSU5HX01FTUJFUk5BTUU6IjgwMDQxMDMxIixQUF9FX01JU1NJTkdfUEFTU1dPUkQ6IjgwMDQxMDMyIixQUF9FX0ZFREVSQVRJT05fSU5MSU5FTE9HSU5fRElTQUxMT1dFRDoiODAwNDc4QUMiLFBQX0VfUEVfUlVMRUZBTFNFOiI4MDA0NDkwQyIsUFBfRV9NT0JJTEVDUkVEU19QSE9ORU5VTUJFUl9CTEFOSzoiODAwNDU4MDEiLFBQX0VfTU9CSUxFQ1JFRFNfUEhPTkVOVU1CRVJfVE9PU0hPUlQ6IjgwMDQ1ODA2IixQUF9FX01PQklMRUNSRURTX1BIT05FTlVNQkVSX1RPT0xPTkc6IjgwMDQ1ODA3IixQUF9FX01PQklMRUNSRURTX1BIT05FTlVNQkVSX0lOVkFMSUQ6IjgwMDQ1ODAwIixQUF9FX05BTUVfQkxBTks6IjgwMDQxMTAwIixQUF9FX0VNQUlMX0lOQ09NUExFVEU6IjgwMDQxMTBEIixQUF9FX0VNQUlMX0lOVkFMSUQ6IjgwMDQxMTBCIixQUF9FX05BTUVfVE9PX1NIT1JUOiI4MDA0MTEwMSIsUFBfRV9OQU1FX0lOVkFMSUQ6IjgwMDQxMTAzIixQUF9FX0lOVkFMSURBUkc6IjgwMDQ4Mzg4IixQUF9FX1NBX1RPT1NIT1JUOiI4MDA0MTEyMCIsUFBfRV9TQV9UT09MT05HOiI4MDA0MTEyMSIsUFBfRV9JTlZBTElEX1BIT05FTlVNQkVSOiI4MDA0MTEzRiIsUFBfRV9TRUNSRVRRX0NPTlRBSU5TX1NFQ1JFVEE6IjgwMDQxMTY1IixQUF9FX1NFQ1JFVEFfQ09OVEFJTlNfU0VDUkVUUToiODAwNDExN0QiLFBQX0VfU0FfQ09OVEFJTlNfTUVNQkVSTkFNRToiODAwNDExNkEiLFBQX0VfU1RST05HUFJPQ0VTU19BTFRFTUFJTFNBTUVBU01BSUxCT1g6IjgwMDQ5QzJEIixQUF9FX0VNQUlMX1JJR0hUX1RPT19MT05HOiI4MDA0MTEwQyIsUFBfRV9OQU1FX1RPT19MT05HOiI4MDA0MTEwMiIsUFBfRV9BTElBU19BVVRIX05PVFBFUk1JVFRFRDoiODAwNDc4OEIiLFBQX0VfVE9UUF9JTlZBTElEOiI4MDA0OUMzNCIsUFBfRV9PTERfU0tZUEVfUEFTU1dPUkQ6IjgwMDQzNTU3IixQUF9FX09UVF9EQVRBX0lOVkFMSUQ6IjgwMDQzNDhGIixQUF9FX09UVF9BTFJFQURZX0NPTlNVTUVEOiI4MDA0MzQ5MCIsUFBfRV9PVFRfSU5WQUxJRF9QVVJQT1NFOiI4MDA0MzQ5NiIsUFBfRV9QUFNBX1JQVF9OT1RPQUREUkVTUzoiODAwNDgxMjAiLFBQX0VfU1RST05HUFJPQ0VTU19CQURERVZJQ0VOQU1FOiI4MDA0OUMyMiIsUFBfRV9JTkxJTkVMT0dJTl9JTlZBTElEX1NNUzoiODAwNDM0RTEiLFBQX0VfSU5MSU5FTE9HSU5fSU5WQUxJRF9BTFQ6IjgwMDQzNEUyIixQUF9FX1BSRVZJT1VTX1BBU1NXT1JEOiI4MDA0MTAxMyIsUFBfRV9ISVBfVkFMSURBVElPTl9XUk9ORzoiODAwNDU1MDUiLFBQX0VfSElQX1ZBTElEQVRJT05fRVJST1JfRkFUQUw6IjgwMDQ1NTM3IixQUF9FX0hJUF9WQUxJREFUSU9OX0VSUk9SX1VOQVVUSEVOVElDQVRFRDoiODAwNDU1MzgiLFBQX0VfSElQX1ZBTElEQVRJT05fRVJST1JfT1RIRVI6IjgwMDQ1NTM5IixQUF9FX1NRX0NPTlRBSU5TX1BBU1NXT1JEOiI4MDA0MzQxRSIsUFBfRV9TQV9DT05UQUlOU19QQVNTV09SRDoiODAwNDM0MUMiLFBQX0VfU0FfQ09OVEFJTkVEX0lOX1BBU1NXT1JEOiI4MDA0MzQxRCIsUFBfRV9MSUJQSE9ORU5VTUJFUklOVEVST1BfTlVNQkVSUEFSU0VfRVhDRVBUSU9OOiI4MDA0MzUxMCIsUFBfRV9TVFJPTkdQUk9DRVNTX0VNQUlMX0hBU19NT0JJTEVfRE9NQUlOOiI4MDA0OUMzMyIsUFBfRV9TVFJPTkdQUk9DRVNTX01YQUxJQVNfTk9UQUxMT1dFRDoiODAwNDlDMjMiLFBQX0VfSU5WQUxJRF9NRU1CRVJOQU1FOiI4MDA0MTAzNCIsUFBfRV9TQV9UT09fTUFOWV9DQUNIRV9TRVNTSU9OUzoiODAwNEEwMEMiLFBQX0VfSU5URVJGQUNFX0RJU0FCTEVEOiI4MDA0MzQ0OCIsUFBfRV9BU1NPQ0lBVEVfRFVQTElDQVRFX0FDQ09VTlQ6IjgwMDQzNTM0IixQUF9FX09BVVRIX1JFTU9URV9DT05ORUNUX1VTRVJfQ09ERV9NSVNTSU5HX09SX0lOVkFMSUQ6IjgwMDQ3OEM3IixQUF9FX0xPR0lOX05PUEFfVVNFUl9QQVNTV09SRF9SRVFVSVJFRDoiODAwNDc4Q0UiLFBQX0VfSURQX0xJTktFRElOX0JJTkRJTkdfTk9UX0FMTE9XRUQ6IjgwMDQ3OEQ1IixQUF9FX0lEUF9HT09HTEVfQklORElOR19OT1RfQUxMT1dFRDoiODAwNDc4RDYiLFBQX0VfSURQX0dJVEhVQl9CSU5ESU5HX05PVF9BTExPV0VEOiI4MDA0NzhENyIsUFBfRV9JRFBfQklORElOR19FWElTVFNfU0FNU1VORzoiODAwNDQ1M0UifSx0LkVzdHNFcnJvcj17VXNlckFjY291bnRTZWxlY3Rpb25JbnZhbGlkOiIxNjAwMSIsVXNlclVuYXV0aG9yaXplZDoiNTAwMjAiLFVzZXJBY2NvdW50Tm90Rm91bmQ6IjUwMDM0IixJZHNMb2NrZWQ6IjUwMDUzIixJbnZhbGlkUGFzc3dvcmRMYXN0UGFzc3dvcmRVc2VkOiI1MDA1NCIsSW52YWxpZFBhc3N3b3JkRXhwaXJlZFBhc3N3b3JkOiI1MDA1NSIsSW52YWxpZFBhc3N3b3JkTnVsbFBhc3N3b3JkOiI1MDA1NiIsVXNlckRpc2FibGVkOiI1MDA1NyIsRmxvd1Rva2VuRXhwaXJlZDoiNTAwODkiLEludmFsaWRVc2VyTmFtZU9yUGFzc3dvcmQ6IjUwMTI2IixJbnZhbGlkRG9tYWluTmFtZToiNTAxMjgiLFByb3RlY3RlZEtleU1pc3VzZToiNTAxNDEiLE1pc3NpbmdDdXN0b21TaWduaW5nS2V5OiI1MDE0NiIsSWRwTG9vcERldGVjdGVkOiI1MDE3NCIsSW52YWxpZE9uZVRpbWVQYXNzY29kZToiNTAxODEiLEV4cGlyZWRPbmVUaW1lUGFzc2NvZGU6IjUwMTgyIixPbmVUaW1lUGFzc2NvZGVDYWNoZUVycm9yOiI1MDE4MyIsT25lVGltZVBhc3Njb2RlRW50cnlOb3RFeGlzdDoiNTAxODQiLEludmFsaWRQYXNzd29yZDoiNTAxOTMiLFNzb0FydGlmYWN0RXhwaXJlZER1ZVRvQ29uZGl0aW9uYWxBY2Nlc3M6IjcwMDQ0IixJbnZhbGlkVGVuYW50TmFtZToiOTAwMDIiLFBob25lU2lnbkluQmxvY2tlZEJ5VXNlckNyZWRlbnRpYWxQb2xpY3k6IjEzMDUwMCIsUHVibGljSWRlbnRpZmllclNhc0JlZ2luQ2FsbFJldHJpYWJsZUVycm9yOiIxMzEwMDEiLFB1YmxpY0lkZW50aWZpZXJBdXRoVXNlck5vdEFsbG93ZWRCeVBvbGljeToiMTMxMDEwIixQdWJsaWNJZGVudGlmaWVyU2FzQmVnaW5DYWxsTm9uUmV0cmlhYmxlRXJyb3I6IjEzMTAwMiIsUHVibGljSWRlbnRpZmllclNhc0VuZENhbGxSZXRyaWFibGVFcnJvcjoiMTMxMDAzIixQdWJsaWNJZGVudGlmaWVyU2FzRW5kQ2FsbE5vblJldHJpYWJsZUVycm9yOiIxMzEwMDQiLERldmljZUlzRGlzYWJsZWQ6IjEzNTAxMSIsRmlkb0Jsb2NrZWRCeVBvbGljeToiMTM1MDE2IixCbG9ja2VkQWRhbFZlcnNpb246IjIyMDMwMCIsQmxvY2tlZENsaWVudElkOiIyMjA0MDAiLFVzZXJVbmF1dGhvcml6ZWRBcGlWZXJzaW9uTm90U3VwcG9ydGVkOiI1MDAyMDEiLFVzZXJVbmF1dGhvcml6ZWRNc2FHdWVzdFVzZXJzTm90U3VwcG9ydGVkOiI1MDAyMDIiLFVzZXJBY2NvdW50RGVsZXRlZDoiNTAwMzQxIixVc2VyQWNjb3VudE5vdEZvdW5kTm90Q29uZmlndXJlZEZvclJlbW90ZU5nYzoiNTAwMzQyIixVc2VyQWNjb3VudE5vdEZvdW5kRmFpbGVkVG9DcmVhdGVSZW1vdGVTaWduSW46IjUwMDM0MyIsVXNlckFjY291bnROb3RGb3VuZEZvckZpZG9TaWduSW46IjUwMDM0NCIsSW52YWxpZEdyYW50RGV2aWNlTm90Rm91bmQ6IjcwMDAwMyIsSW52YWxpZFRlbmFudE5hbWVFbXB0eUd1aWRJZGVudGlmaWVyOiI5MDAwMjEiLEludmFsaWRUZW5hbnROYW1lRW1wdHlJZGVudGlmaWVyOiI5MDAwMjIiLEludmFsaWRUZW5hbnROYW1lRm9ybWF0OiI5MDAwMjMiLEFjY2Vzc1Bhc3NCbG9ja2VkQnlQb2xpY3k6IjEzMDUwMiIsSW52YWxpZEFjY2Vzc1Bhc3M6IjEzMDUwMyIsQWNjZXNzUGFzc0V4cGlyZWQ6IjEzMDUwNCIsVXNlclZvaWNlQXV0aEZhaWxlZENhbGxXZW50VG9Wb2ljZW1haWw6IlVzZXJWb2ljZUF1dGhGYWlsZWRDYWxsV2VudFRvVm9pY2VtYWlsIixVc2VyVm9pY2VBdXRoRmFpbGVkSW52YWxpZFBob25lSW5wdXQ6IlVzZXJWb2ljZUF1dGhGYWlsZWRJbnZhbGlkUGhvbmVJbnB1dCIsVXNlclZvaWNlQXV0aEZhaWxlZFBob25lSHVuZ1VwOiJVc2VyVm9pY2VBdXRoRmFpbGVkUGhvbmVIdW5nVXAiLFVzZXJWb2ljZUF1dGhGYWlsZWRJbnZhbGlkUGhvbmVOdW1iZXI6IlVzZXJWb2ljZUF1dGhGYWlsZWRJbnZhbGlkUGhvbmVOdW1iZXIiLFVzZXJWb2ljZUF1dGhGYWlsZWRJbnZhbGlkRXh0ZW5zaW9uOiJVc2VyVm9pY2VBdXRoRmFpbGVkSW52YWxpZEV4dGVuc2lvbiIsSW52YWxpZEZvcm1hdDoiSW52YWxpZEZvcm1hdCIsVXNlckF1dGhGYWlsZWREdXBsaWNhdGVSZXF1ZXN0OiJVc2VyQXV0aEZhaWxlZER1cGxpY2F0ZVJlcXVlc3QiLFVzZXJWb2ljZUF1dGhGYWlsZWRQaG9uZVVucmVhY2hhYmxlOiJVc2VyVm9pY2VBdXRoRmFpbGVkUGhvbmVVbnJlYWNoYWJsZSIsVXNlclZvaWNlQXV0aEZhaWxlZFByb3ZpZGVyQ291bGRudFNlbmRDYWxsOiJVc2VyVm9pY2VBdXRoRmFpbGVkUHJvdmlkZXJDb3VsZG50U2VuZENhbGwiLFVzZXIyV2F5U01TQXV0aEZhaWxlZFByb3ZpZGVyQ291bGRudFNlbmRTTVM6IlVzZXIyV2F5U01TQXV0aEZhaWxlZFByb3ZpZGVyQ291bGRudFNlbmRTTVMiLFNNU0F1dGhGYWlsZWRQcm92aWRlckNvdWxkbnRTZW5kU01TOiJTTVNBdXRoRmFpbGVkUHJvdmlkZXJDb3VsZG50U2VuZFNNUyIsVXNlcjJXYXlTTVNBdXRoRmFpbGVkTm9SZXNwb25zZVRpbWVvdXQ6IlVzZXIyV2F5U01TQXV0aEZhaWxlZE5vUmVzcG9uc2VUaW1lb3V0IixTTVNBdXRoRmFpbGVkTm9SZXNwb25zZVRpbWVvdXQ6IlNNU0F1dGhGYWlsZWROb1Jlc3BvbnNlVGltZW91dCIsU01TQXV0aEZhaWxlZFdyb25nQ29kZUVudGVyZWQ6IlNNU0F1dGhGYWlsZWRXcm9uZ0NvZGVFbnRlcmVkIixPYXRoQ29kZUluY29ycmVjdDoiT2F0aENvZGVJbmNvcnJlY3QiLE9hdGhDb2RlRHVwbGljYXRlOiJPYXRoQ29kZUR1cGxpY2F0ZSIsT2F0aENvZGVPbGQ6Ik9hdGhDb2RlT2xkIixQaG9uZUFwcE5vUmVzcG9uc2U6IlBob25lQXBwTm9SZXNwb25zZSIsVXNlcjJXYXlTTVNBdXRoRmFpbGVkV3JvbmdDb2RlRW50ZXJlZDoiVXNlcjJXYXlTTVNBdXRoRmFpbGVkV3JvbmdDb2RlRW50ZXJlZCIsUGhvbmVBcHBJbnZhbGlkUmVzdWx0OiJQaG9uZUFwcEludmFsaWRSZXN1bHQiLFBob25lQXBwRGVuaWVkOiJQaG9uZUFwcERlbmllZCIsUGhvbmVBcHBUb2tlbkNoYW5nZWQ6IlBob25lQXBwVG9rZW5DaGFuZ2VkIixTTVNBdXRoRmFpbGVkTWF4QWxsb3dlZENvZGVSZXRyeVJlYWNoZWQ6IlNNU0F1dGhGYWlsZWRNYXhBbGxvd2VkQ29kZVJldHJ5UmVhY2hlZCIsUGhvbmVBcHBGcmF1ZFJlcG9ydGVkOiJQaG9uZUFwcEZyYXVkUmVwb3J0ZWQiLEZyYXVkQ29kZUVudGVyZWQ6IkZyYXVkQ29kZUVudGVyZWQiLFVzZXJJc0Jsb2NrZWQ6IlVzZXJJc0Jsb2NrZWQifSx0LkZpZG89e01heFVzZXJQcm9tcHRMZW5ndGg6OTksRmluaXNoU3RhdGVzOntTdWNjZXNzOjAsQ2FuY2VsOjEsRXJyb3I6MixOb3RTdXBwb3J0ZWQ6M30sVW5leHBlY3RlZEVycm9yQ29kZTo5OTk5LEVkZ2VFcnJvckNvZGVzOntTeW50YXhFcnJvcjozLE5vdEZvdW5kRXJyb3I6OCxOb3RTdXBwb3J0ZWRFcnJvcjo5LEludmFsaWRBY2Nlc3NFcnJvcjoxNSxBYm9ydEVycm9yOjIwfX0sdC5JZkV4aXN0c1Jlc3VsdD17VW5rbm93bjotMSxFeGlzdHM6MCxOb3RFeGlzdDoxLFRocm90dGxlZDoyLEVycm9yOjQsRXhpc3RzSW5PdGhlck1pY3Jvc29mdElEUDo1LEV4aXN0c0JvdGhJRFBzOjZ9LHQuVGhyb3R0bGVTdGF0dXM9e05vdFRocm90dGxlZDowLEFhZFRocm90dGxlZDoxLE1zYVRocm90dGxlZDoyfSx0LkRvbWFpblR5cGU9e1Vua25vd246MSxDb25zdW1lcjoyLE1hbmFnZWQ6MyxGZWRlcmF0ZWQ6NCxDbG91ZEZlZGVyYXRlZDo1fSx0LkNyZWRlbnRpYWxUeXBlPXtQYXNzd29yZDoxLFJlbW90ZU5HQzoyLE9uZVRpbWVDb2RlOjMsRmVkZXJhdGlvbjo0LENsb3VkRmVkZXJhdGlvbjo1LE90aGVyTWljcm9zb2Z0SWRwRmVkZXJhdGlvbjo2LEZpZG86NyxHaXRIdWI6OCxQdWJsaWNJZGVudGlmaWVyQ29kZTo5LExpbmtlZEluOjEwLFJlbW90ZUxvZ2luOjExLEdvb2dsZToxMixBY2Nlc3NQYXNzOjEzLEZhY2Vib29rOjE0LE5vUHJlZmVycmVkQ3JlZGVudGlhbDoxZTN9LHQuUmVtb3RlTmdjVHlwZT17UHVzaE5vdGlmaWNhdGlvbjoxLFFyQ29kZToyLExpc3RTZXNzaW9uczozfSx0LlNlc3Npb25Qb2xsaW5nVHlwZT17SW1hZ2U6MSxKc29uOjJ9LHQuQWdyZWVtZW50VHlwZT17UHJpdmFjeToicHJpdmFjeSIsVG91OiJ0b3UiLEltcHJlc3N1bToiaW1wcmVzc3VtIn0sdC5BcGlFcnJvckNvZGVzPXtHZW5lcmFsRXJyb3I6NmUzLEF1dGhGYWlsdXJlOjYwMDEsSW52YWxpZEFyZ3M6NjAwMixHZW5lcmljOjhlMyxUaW1lb3V0OjgwMDEsQWJvcnRlZDo4MDAyfSx0LkRlZmF1bHRSZXF1ZXN0VGltZW91dD0zZTQsUFJPT0Y9e1R5cGU6e0VtYWlsOjEsQWx0RW1haWw6MixTTVM6MyxEZXZpY2VJZDo0LENTUzo1LFNRU0E6NixISVA6OCxCaXJ0aGRheTo5LFRPVFBBdXRoZW50aWNhdG9yOjEwLFJlY292ZXJ5Q29kZToxMSxTdHJvbmdUaWNrZXQ6MTMsVE9UUEF1dGhlbnRpY2F0b3JWMjoxNCxUd29XYXlWb2ljZToxNSxUd29XYXlTTVM6MTYsVm9pY2U6LTN9fSx0LkNvbnRlbnRUeXBlPXtKc29uOiJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04IixGb3JtVXJsRW5jb2RlZDoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIn0sdC5CaW5kUHJvdmlkZXI9e0xpbmtlZEluOjAsR2l0SHViOjEsR29vZ2xlOjIsU2Ftc3VuZzozfSx0LlByb21vdGVkQWx0Q3JlZEZsYWdzPXtOb25lOjAsR2l0SHViOjEsTGlua2VkSW46Mn0sdC5FbnZpcm9ubWVudE5hbWU9e0ludGVybmFsOjEsVGVzdFNsaWNlOjIsRmlyc3RTbGljZTozfSx0LkFuaW1hdGlvblN0YXRlPXtCZWdpbjowLEVuZDotMSxSZW5kZXJOZXdWaWV3OjEsQW5pbWF0ZU5ld1ZpZXc6Mn0sdC5BbmltYXRpb25OYW1lPXtOb25lOjAsU2xpZGVPdXROZXh0OjEsU2xpZGVJbk5leHQ6MixTbGlkZU91dEJhY2s6MyxTbGlkZUluQmFjazo0fSx0LkRpYWxvZ0lkPXtOb25lOjAsRmlkb0hlbHA6MSxHaXRIdWJIZWxwOjJ9LHQuS2V5Q29kZT17VGFiOjksRW50ZXI6MTMsRXNjYXBlOjI3LFNwYWNlOjMyLFBhZ2VVcDozMyxQYWdlRG93bjozNCxFbmQ6MzUsSG9tZTozNixBcnJvd1VwOjM4LEFycm93RG93bjo0MCxHYW1lUGFkQjoxOTZ9LHQuUHJvb2ZPZlBvc3Nlc3Npb249e0F1dGhlbnRpY2F0b3JLZXk6ImNwYSIsQ2FuYXJ5VG9rZW5LZXk6ImNhbmFyeSIsTWV0aG9kSGludDoiY3BhX21ldGhvZF9oaW50In0sdC5VcGdyYWRlTWlncmF0aW9uVVhJZD17SW52YWxpZDowLE1vamFuZzoxfSx0LlRyYW5zZmVyTG9naW5TdHJpbmdzVmFyaWFudD17RGVmYXVsdDowLE1NWDoxLE1NWFBob25lRmlyc3Q6Mn19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEpLG89big3KSxhPW4oOCkscj10Lk9iamVjdD17Y2xvbmU6ZnVuY3Rpb24oZSl7dmFyIHQ9e307cmV0dXJuIGUmJih0PW8ucGFyc2Uoby5zdHJpbmdpZnkoZSkpKSx0fSxqb2luOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT0iIjtyZXR1cm4gZSYmci5mb3JFYWNoKGUsZnVuY3Rpb24oZSxvKXtpJiYoaSs9dCksaSs9ZStuKyhvfHwiIil9KSxpfSxmb3JFYWNoOmZ1bmN0aW9uKGUsdCl7aS51dGlscy5vYmplY3RGb3JFYWNoKGUsdCl9LGZpbmRPd25Qcm9wZXJ0eTpmdW5jdGlvbihlLHQsbil7dmFyIGk7biYmKGk9dC50b0xvd2VyQ2FzZSgpKTtmb3IodmFyIG8gaW4gZSlpZihlLmhhc093blByb3BlcnR5KG8pJiYobz09PXR8fG4mJm8udG9Mb3dlckNhc2UoKT09PWkpKXJldHVybiBvO3JldHVybiBudWxsfSxleHRlbmQ6aS51dGlscy5leHRlbmR9LHM9dC5TdHJpbmc9e3RyaW06ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvXlxzK3xccyskL2csIiIpfSxmaW5kOmZ1bmN0aW9uKGUsdCxuLGkpe3JldHVybiBlP24/ZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodC50b0xvd2VyQ2FzZSgpLGkpOmUuaW5kZXhPZih0LGkpOi0xfSxmb3JtYXQ6YS5mb3JtYXQsZG91YmxlU3BsaXQ6ZnVuY3Rpb24oZSx0LG4saSxvKXt2YXIgYT17fTtyZXR1cm4gZSYmYy5mb3JFYWNoKGUuc3BsaXQodCksZnVuY3Rpb24oZSl7aWYoZSl7dmFyIHQ9ZS5zcGxpdChuKSxyPXRbMF07byYmKHI9byhyKSksMT09PXQubGVuZ3RoP2Fbcl09bnVsbDppP2Fbcl09dC5zbGljZSgxKTphW3JdPXQuc2xpY2UoMSkuam9pbihuKX19KSxhfSxpc0VtYWlsQWRkcmVzczpmdW5jdGlvbihlKXtpZihlPXMudHJpbShlKSxlLmNoYXJBdCgwKT4ifiJ8fGUuaW5kZXhPZigiICIpIT09LTEpcmV0dXJuITE7dmFyIHQ9ZS5pbmRleE9mKCJAIik7aWYodD09PS0xfHxlLmluZGV4T2YoIi4iLHQpPT09LTEpcmV0dXJuITE7dmFyIG49ZS5zcGxpdCgiQCIpO3JldHVybiEobi5sZW5ndGg+Mnx8blswXS5sZW5ndGg8MXx8blsxXS5sZW5ndGg8Mil9LGlzUGhvbmVOdW1iZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXBsYWNlKC9cRCsvZywiIik7cmV0dXJuIHQubGVuZ3RoPj00JiZ0Lmxlbmd0aDw9NTB9LGlzU2t5cGVOYW1lOmZ1bmN0aW9uKGUpe2U9cy50cmltKGUpO3ZhciB0PW5ldyBSZWdFeHAoL15bYS16QS1aXVthLXpBLVowLTkuLFwtXzonXXswLDEyOH0kLyk7cmV0dXJuISFlLm1hdGNoKHQpfSxleHRyYWN0RG9tYWluOmZ1bmN0aW9uKGUsdCxuKXtpZighcy5pc0VtYWlsQWRkcmVzcyhlKSlyZXR1cm4gZTt2YXIgaT1zLnRyaW0oZSkuc3BsaXQoIkAiKVsxXTtyZXR1cm4gZT1uPyJAIjoiIix0P2UraS5zbGljZSgwLGkubGFzdEluZGV4T2YoIi4iKSsxKTplK2l9LGV4dHJhY3REb21haW5Gcm9tVXJsOmZ1bmN0aW9uKGUpe2lmKGUpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTtyZXR1cm4gdC5ocmVmPWUsdC5ob3N0bmFtZX1yZXR1cm4iIn0sZXh0cmFjdE9yaWdpbkZyb21Vcmw6ZnVuY3Rpb24oZSl7aWYoZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpO3QuaHJlZj1lO3ZhciBuPXQub3JpZ2luO3JldHVybiBufHwobj10LnByb3RvY29sKyIvLyIrdC5ob3N0bmFtZSsodC5wb3J0PyI6Iit0LnBvcnQ6IiIpKSxufXJldHVybiIifSxkb09yaWdpbnNNYXRjaDpmdW5jdGlvbihlLHQpe3ZhciBuPXMuZXh0cmFjdE9yaWdpbkZyb21VcmwoZSksaT1zLmV4dHJhY3RPcmlnaW5Gcm9tVXJsKHQpO3JldHVybiBpPT09bn0sY2FwRmlyc3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKS50b0xvd2VyQ2FzZSgpfSxjbGVhbnNlVXNlcm5hbWU6ZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm4iIjtpZihlPXMudHJpbShlKS50b0xvd2VyQ2FzZSgpLCFzLmlzRW1haWxBZGRyZXNzKGUpJiYhcy5pc1NreXBlTmFtZShlKSYmcy5pc1Bob25lTnVtYmVyKGUpKXt2YXIgbj0iIjtyZXR1cm4gdCYmIisiPT09ZS5jaGFyQXQoMCkmJihuPSIrIiksbitlLnJlcGxhY2UoL1xEKy9nLCIiKX1yZXR1cm4gZX19LGM9dC5BcnJheT17Zmlyc3Q6aS51dGlscy5hcnJheUZpcnN0LGZvckVhY2g6aS51dGlscy5hcnJheUZvckVhY2gsbWFwOmkudXRpbHMuYXJyYXlNYXAscmVtb3ZlSXRlbTppLnV0aWxzLmFycmF5UmVtb3ZlSXRlbSxmaW5kSW5kZXg6ZnVuY3Rpb24oZSx0KXtpZihlJiYib2JqZWN0Ij09dHlwZW9mIGUmJmUubGVuZ3RoKWZvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKWlmKHQoZVtuXSkpcmV0dXJuIG47cmV0dXJuLTF9fTt0LkRhdGVUaW1lPXtnZXRDdXJyZW50VGltZTpmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxnZXRVVENTdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc/KG5ldyBEYXRlKS50b0lTT1N0cmluZygpOihuZXcgRGF0ZSkudG9VVENTdHJpbmcoKX19LHQuRXJyb3JEYXRhPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztuLmVycm9yVGV4dD1lLG4ucmVtZWRpYXRpb25UZXh0PXQsbi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBuLmVycm9yVGV4dH19fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7dmFyIEpTT047SlNPTnx8KEpTT049e30pLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGYoZSl7cmV0dXJuIGU8MTA/IjAiK2U6ZX1mdW5jdGlvbiBxdW90ZShlKXtyZXR1cm4gZXNjYXBhYmxlLmxhc3RJbmRleD0wLGVzY2FwYWJsZS50ZXN0KGUpPyciJytlLnJlcGxhY2UoZXNjYXBhYmxlLGZ1bmN0aW9uKGUpe3ZhciB0PW1ldGFbZV07cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P3Q6IlxcdSIrKCIwMDAwIitlLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCl9KSsnIic6JyInK2UrJyInfWZ1bmN0aW9uIHN0cihlLHQpe3ZhciBuLGksbyxhLHIscz1nYXAsYz10W2VdO3N3aXRjaChjJiYib2JqZWN0Ij09dHlwZW9mIGMmJiJmdW5jdGlvbiI9PXR5cGVvZiBjLnRvSlNPTiYmKGM9Yy50b0pTT04oZSkpLCJmdW5jdGlvbiI9PXR5cGVvZiByZXAmJihjPXJlcC5jYWxsKHQsZSxjKSksdHlwZW9mIGMpe2Nhc2Uic3RyaW5nIjpyZXR1cm4gcXVvdGUoYyk7Y2FzZSJudW1iZXIiOnJldHVybiBpc0Zpbml0ZShjKT9TdHJpbmcoYyk6Im51bGwiO2Nhc2UiYm9vbGVhbiI6Y2FzZSJudWxsIjpyZXR1cm4gU3RyaW5nKGMpO2Nhc2Uib2JqZWN0IjppZighYylyZXR1cm4ibnVsbCI7aWYoZ2FwKz1pbmRlbnQscj1bXSwiW29iamVjdCBBcnJheV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShjKSl7Zm9yKGE9Yy5sZW5ndGgsbj0wO248YTtuKz0xKXJbbl09c3RyKG4sYyl8fCJudWxsIjtyZXR1cm4gbz0wPT09ci5sZW5ndGg/IltdIjpnYXA/IltcbiIrZ2FwK3Iuam9pbigiLFxuIitnYXApKyJcbiIrcysiXSI6IlsiK3Iuam9pbigiLCIpKyJdIixnYXA9cyxvfWlmKHJlcCYmIm9iamVjdCI9PXR5cGVvZiByZXApZm9yKGE9cmVwLmxlbmd0aCxuPTA7bjxhO24rPTEpInN0cmluZyI9PXR5cGVvZiByZXBbbl0mJihpPXJlcFtuXSxvPXN0cihpLGMpLG8mJnIucHVzaChxdW90ZShpKSsoZ2FwPyI6ICI6IjoiKStvKSk7ZWxzZSBmb3IoaSBpbiBjKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChjLGkpJiYobz1zdHIoaSxjKSxvJiZyLnB1c2gocXVvdGUoaSkrKGdhcD8iOiAiOiI6IikrbykpO3JldHVybiBvPTA9PT1yLmxlbmd0aD8ie30iOmdhcD8ie1xuIitnYXArci5qb2luKCIsXG4iK2dhcCkrIlxuIitzKyJ9IjoieyIrci5qb2luKCIsIikrIn0iLGdhcD1zLG99fXZhciBnbG9iYWw9RnVuY3Rpb24oInJldHVybiB0aGlzIikoKSxKU09OPWdsb2JhbC5KU09OO0pTT058fChKU09OPXt9KSwiZnVuY3Rpb24iIT10eXBlb2YgRGF0ZS5wcm90b3R5cGUudG9KU09OJiYoRGF0ZS5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKGUpe3JldHVybiBpc0Zpbml0ZSh0aGlzLnZhbHVlT2YoKSk/dGhpcy5nZXRVVENGdWxsWWVhcigpKyItIitmKHRoaXMuZ2V0VVRDTW9udGgoKSsxKSsiLSIrZih0aGlzLmdldFVUQ0RhdGUoKSkrIlQiK2YodGhpcy5nZXRVVENIb3VycygpKSsiOiIrZih0aGlzLmdldFVUQ01pbnV0ZXMoKSkrIjoiK2YodGhpcy5nZXRVVENTZWNvbmRzKCkpKyJaIjpudWxsfSxTdHJpbmcucHJvdG90eXBlLnRvSlNPTj1OdW1iZXIucHJvdG90eXBlLnRvSlNPTj1Cb29sZWFuLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudmFsdWVPZigpfSk7dmFyIGN4PS9bXHUwMDAwXHUwMGFkXHUwNjAwLVx1MDYwNFx1MDcwZlx1MTdiNFx1MTdiNVx1MjAwYy1cdTIwMGZcdTIwMjgtXHUyMDJmXHUyMDYwLVx1MjA2Zlx1ZmVmZlx1ZmZmMC1cdWZmZmZdL2csZXNjYXBhYmxlPS9bXFxcIlx4MDAtXHgxZlx4N2YtXHg5Zlx1MDBhZFx1MDYwMC1cdTA2MDRcdTA3MGZcdTE3YjRcdTE3YjVcdTIwMGMtXHUyMDBmXHUyMDI4LVx1MjAyZlx1MjA2MC1cdTIwNmZcdWZlZmZcdWZmZjAtXHVmZmZmXS9nLGdhcCxpbmRlbnQsbWV0YT17IlxiIjoiXFxiIiwiXHQiOiJcXHQiLCJcbiI6IlxcbiIsIlxmIjoiXFxmIiwiXHIiOiJcXHIiLCciJzonXFwiJywiXFwiOiJcXFxcIn0scmVwOyJmdW5jdGlvbiIhPXR5cGVvZiBKU09OLnN0cmluZ2lmeSYmKEpTT04uc3RyaW5naWZ5PWZ1bmN0aW9uKGUsdCxuKXt2YXIgaTtpZihnYXA9IiIsaW5kZW50PSIiLCJudW1iZXIiPT10eXBlb2Ygbilmb3IoaT0wO2k8bjtpKz0xKWluZGVudCs9IiAiO2Vsc2Uic3RyaW5nIj09dHlwZW9mIG4mJihpbmRlbnQ9bik7aWYocmVwPXQsdCYmImZ1bmN0aW9uIiE9dHlwZW9mIHQmJigib2JqZWN0IiE9dHlwZW9mIHR8fCJudW1iZXIiIT10eXBlb2YgdC5sZW5ndGgpKXRocm93IG5ldyBFcnJvcigiSlNPTi5zdHJpbmdpZnkiKTtyZXR1cm4gc3RyKCIiLHsiIjplfSl9KSwiZnVuY3Rpb24iIT10eXBlb2YgSlNPTi5wYXJzZSYmKEpTT04ucGFyc2U9ZnVuY3Rpb24odGV4dCxyZXZpdmVyKXtmdW5jdGlvbiB3YWxrKGUsdCl7dmFyIG4saSxvPWVbdF07aWYobyYmIm9iamVjdCI9PXR5cGVvZiBvKWZvcihuIGluIG8pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sbikmJihpPXdhbGsobyxuKSx2b2lkIDAhPT1pP29bbl09aTpkZWxldGUgb1tuXSk7cmV0dXJuIHJldml2ZXIuY2FsbChlLHQsbyl9dmFyIGo7aWYodGV4dD1TdHJpbmcodGV4dCksY3gubGFzdEluZGV4PTAsY3gudGVzdCh0ZXh0KSYmKHRleHQ9dGV4dC5yZXBsYWNlKGN4LGZ1bmN0aW9uKGUpe3JldHVybiJcXHUiKygiMDAwMCIrZS5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTQpfSkpLC9eW1xdLDp7fVxzXSokLy50ZXN0KHRleHQucmVwbGFjZSgvXFwoPzpbIlxcXC9iZm5ydF18dVswLTlhLWZBLUZdezR9KS9nLCJAIikucmVwbGFjZSgvIlteIlxcXG5ccl0qInx0cnVlfGZhbHNlfG51bGx8LT9cZCsoPzpcLlxkKik/KD86W2VFXVsrXC1dP1xkKyk/L2csIl0iKS5yZXBsYWNlKC8oPzpefDp8LCkoPzpccypcWykrL2csIiIpKSlyZXR1cm4gaj1ldmFsKCIoIit0ZXh0KyIpIiksImZ1bmN0aW9uIj09dHlwZW9mIHJldml2ZXI/d2Fsayh7IiI6an0sIiIpOmo7dGhyb3cgbmV3IFN5bnRheEVycm9yKCJKU09OLnBhcnNlIil9KSxnbG9iYWwuSlNPTj1KU09OLG1vZHVsZS5leHBvcnRzPUpTT059KCl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXtmb3JtYXQ6ZnVuY3Rpb24oZSl7aWYoZSlmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKWU9ZS5yZXBsYWNlKG5ldyBSZWdFeHAoIlxceyIrKHQtMSkrIlxcfSIsImciKSxhcmd1bWVudHNbdF0pO3JldHVybiBlfX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEwKSxvPW4oNiksYT1uKDExKSxyPW4oMTIpLHM9by5PYmplY3QsYz1vLlN0cmluZyxkPW8uQXJyYXksbD13aW5kb3csdT1udWxsLHA9e30sZj17fSxnPXt9LG09bnVsbCx2PW51bGwsaD1udWxsLGI9bnVsbCxfPW51bGwsUz1udWxsLHc9bnVsbCxUPSEhbC5TZXJ2ZXJEYXRhLmZVc2VTYW1lU2l0ZTt0Lkh0dHBDb2RlPXtPazoyMDAsTm90TW9kaWZpZWQ6MzA0LFRpbWVvdXQ6NDA4LENsaWVudENsb3NlZFJlcXVlc3Q6NDk5fTt2YXIgQz10LkhlbHBlcj17aXNJRU9sZGVyVGhhbjpmdW5jdGlvbihlKXtpZih2b2lkIDA9PT1wW2VdKXt2YXIgdD1DLmdldElFVmVyc2lvbigpO3BbZV09dCYmdDxlKzF9cmV0dXJuIHBbZV19LGlzRWRnZTpmdW5jdGlvbigpe2lmKG51bGw9PT11KXt1PSExO3ZhciBlPUMuZ2V0V2luZG93c1ZlcnNpb24oKTtpZihudWxsIT09ZSYmZT49MTApe3ZhciB0PUMuZ2V0SUVWZXJzaW9uKCk7dT1udWxsIT09dCYmdD49MTJ9fXJldHVybiB1fSxpc0Nocm9tZTpmdW5jdGlvbigpe3JldHVybiBudWxsPT09bSYmKG09bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoImNocm9tZSIpPi0xKSxtfSxpc0ZpcmVmb3hOZXdlclRoYW46ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT09ZltlXSl7dmFyIHQ9Qy5nZXRGaXJlZm94VmVyc2lvbigpO2ZbZV09dCYmdD5lfXJldHVybiBmW2VdfSxpc0Nocm9tZU5ld2VyVGhhbjpmdW5jdGlvbihlKXtpZih2b2lkIDA9PT1nW2VdKXt2YXIgdD1DLmdldENocm9tZVZlcnNpb24oKTtnW2VdPXQmJnQ+ZX1yZXR1cm4gZ1tlXX0saXNJT1NTYWZhcmk6ZnVuY3Rpb24oKXtpZihudWxsPT09dil7dmFyIGU9bC5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7dj0vc2FmYXJpLy50ZXN0KGUpJiYvaXBob25lfGlwb2R8aXBhZC8udGVzdChlKSYmIWwuTVNTdHJlYW19cmV0dXJuIHZ9LGlzSU9TVUlXZWJWaWV3OmZ1bmN0aW9uKCl7aWYobnVsbD09PWgpe3ZhciBlPWwubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO2g9L3NhZmFyaS8udGVzdChlKT09PSExJiYvaXBob25lfGlwb2R8aXBhZC8udGVzdChlKSYmIWwuTVNTdHJlYW19cmV0dXJuIGh9LGlzUXRDYXJCcm93c2VyOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PT1iJiYoYj1uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigicXRjYXJicm93c2VyIik+LTEpLGJ9LGlzT25Ub3VjaFN0YXJ0RXZlbnRTdXBwb3J0ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4ib250b3VjaHN0YXJ0ImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0sZ2V0SUVWZXJzaW9uOmZ1bmN0aW9uKCl7dmFyIGU9bC5uYXZpZ2F0b3IudXNlckFnZW50LHQ9ZS5pbmRleE9mKCJNU0lFICIpO2lmKHQ+MClyZXR1cm4gcGFyc2VJbnQoZS5zdWJzdHJpbmcodCs1LGUuaW5kZXhPZigiLiIsdCkpLDEwKTt2YXIgbj1lLmluZGV4T2YoIlRyaWRlbnQvIik7aWYobj4wKXt2YXIgaT1lLmluZGV4T2YoInJ2OiIpO3JldHVybiBwYXJzZUludChlLnN1YnN0cmluZyhpKzMsZS5pbmRleE9mKCIuIixpKSksMTApfXZhciBvPWUuaW5kZXhPZigiRWRnZS8iKTtyZXR1cm4gbz4wP3BhcnNlSW50KGUuc3Vic3RyaW5nKG8rNSxlLmluZGV4T2YoIi4iLG8pKSwxMCk6bnVsbH0sZ2V0RmlyZWZveFZlcnNpb246ZnVuY3Rpb24oKXt2YXIgZT1sLm5hdmlnYXRvci51c2VyQWdlbnQsdD1lLm1hdGNoKC8oZmlyZWZveCg/PVwvKSlcLz9ccyooXGQrKS9pKTtyZXR1cm4gdCYmMz09PXQubGVuZ3RoJiYiZmlyZWZveCI9PT10WzFdLnRvTG93ZXJDYXNlKCk/cGFyc2VJbnQodFsyXSk6bnVsbH0sZ2V0Q2hyb21lVmVyc2lvbjpmdW5jdGlvbigpe3ZhciBlPWwubmF2aWdhdG9yLnVzZXJBZ2VudCx0PWUubWF0Y2goLyhjaHJvbWUoPz1cLykpXC8/XHMqKFxkKykvaSk7cmV0dXJuIHQmJjM9PT10Lmxlbmd0aCYmImNocm9tZSI9PT10WzFdLnRvTG93ZXJDYXNlKCk/cGFyc2VJbnQodFsyXSk6bnVsbH0sZ2V0V2luZG93c1ZlcnNpb246ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9PW5ldyBSZWdFeHAoIldpbmRvd3MgTlQgKFswLTldezEsfVsuMC05XXswLH0pIikuZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50KT9wYXJzZUZsb2F0KFJlZ0V4cC4kMSk6bnVsbH0saHRtbEVzY2FwZTpmdW5jdGlvbihlKXtpZighZSlyZXR1cm4iIjt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpO3JldHVybiB0LmlubmVyVGV4dD1lLHQuaW5uZXJIVE1MfSxodG1sVW5lc2NhcGU6ZnVuY3Rpb24oZSl7aWYoIWUpcmV0dXJuIiI7aWYoZS5tYXRjaCgvPFtePD5dKz4vKSlyZXR1cm4gZTt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpO3JldHVybiB0LmlubmVySFRNTD1lLHQudmFsdWV9LGdldFN0YWNrU2l6ZTpmdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7bisrLChpfHxuPD1lKSYmdCgpfXZhciBuPTAsaT0idW5kZWZpbmVkIj09dHlwZW9mIGV8fG51bGw9PT1lO3RyeXt0KCl9Y2F0Y2gobyl7fXJldHVybiBufSxnZXRBbmltYXRpb25FbmRFdmVudE5hbWU6ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSx0PXthbmltYXRpb246ImFuaW1hdGlvbmVuZCIsT0FuaW1hdGlvbjoib0FuaW1hdGlvbkVuZCIsTW96QW5pbWF0aW9uOiJhbmltYXRpb25lbmQiLFdlYmtpdEFuaW1hdGlvbjoid2Via2l0QW5pbWF0aW9uRW5kIn07Zm9yKHZhciBuIGluIHQpaWYodm9pZCAwIT09ZS5zdHlsZVtuXSlyZXR1cm4gdFtuXTsKcmV0dXJuIiJ9LGlzU3RhY2tTaXplR3JlYXRlclRoYW46ZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZXx8MCxDLmdldFN0YWNrU2l6ZShlKT5lfSxpc1N2Z0ltZ1N1cHBvcnRlZDpmdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKCJodHRwOi8vd3d3LnczLm9yZy9UUi9TVkcxMS9mZWF0dXJlI0ltYWdlIiwiMS4xIil9LGlzUGxhY2Vob2xkZXJBdHRyaWJ1dGVBbGxvd2VkOmZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT09UyYmKFM9Qy5pc0Nocm9tZU5ld2VyVGhhbigxNil8fEMuaXNFZGdlKCl8fEMuaXNGaXJlZm94TmV3ZXJUaGFuKDE0KXx8ZSYmQy5pc0lPU1VJV2ViVmlldygpfHxDLmlzSU9TU2FmYXJpKCl8fEMuaXNRdENhckJyb3dzZXIoKSksU30saXNDU1NBbmltYXRpb25TdXBwb3J0ZWQ6ZnVuY3Rpb24oKXt2YXIgZT0hMSx0PVsiV2Via2l0IiwiTW96IiwiTyJdLG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7aWYoZT12b2lkIDAhPT1uLnN0eWxlLmFuaW1hdGlvbk5hbWUsIWUpe3ZhciBpPWQuZmlyc3QodCxmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09bi5zdHlsZVtlKyJBbmltYXRpb25OYW1lIl19KTtlPSEhaX1yZXR1cm4gZX0saXNTdHlsZVN1cHBvcnRlZDpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGV9LGlzQ09SU1N1cHBvcnRlZDpmdW5jdGlvbigpe3JldHVybiBsLlhEb21haW5SZXF1ZXN0fHxsLlhNTEh0dHBSZXF1ZXN0JiYid2l0aENyZWRlbnRpYWxzImluIG5ldyBYTUxIdHRwUmVxdWVzdH0saXNIaXN0b3J5U3VwcG9ydGVkOmZ1bmN0aW9uKCl7aWYobnVsbD09PXcpe3ZhciBlPSJfX2hpc3RvcnlfdGVzdCI7aWYodz1sLmhpc3RvcnkmJmwuaGlzdG9yeS5wdXNoU3RhdGUmJiJ1bmRlZmluZWQiIT10eXBlb2YgbC5oaXN0b3J5LnN0YXRlJiYidW5kZWZpbmVkIiE9dHlwZW9mIGwub25wb3BzdGF0ZSl0cnl7bC5oaXN0b3J5LnJlcGxhY2VTdGF0ZShlLCIiKSxsLmhpc3Rvcnkuc3RhdGUhPT1lJiYodz0hMSl9Y2F0Y2godCl7dz0hMX19cmV0dXJuIHd9LGlzRmlkb1N1cHBvcnRlZEFzeW5jOmZ1bmN0aW9uKGUpe3ZhciB0PXZvaWQgMCE9PWwubmF2aWdhdG9yLmNyZWRlbnRpYWxzJiZ2b2lkIDAhPT1sLm5hdmlnYXRvci5jcmVkZW50aWFscy5jcmVhdGUmJnZvaWQgMCE9PWwubmF2aWdhdG9yLmNyZWRlbnRpYWxzLmdldCYmdm9pZCAwIT09bC5QdWJsaWNLZXlDcmVkZW50aWFsJiZ2b2lkIDAhPT1sLlB1YmxpY0tleUNyZWRlbnRpYWwuaXNVc2VyVmVyaWZ5aW5nUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlO3JldHVybiB0P2wuUHVibGljS2V5Q3JlZGVudGlhbC5pc0V4dGVybmFsQ1RBUDJTZWN1cml0eUtleVN1cHBvcnRlZD9yLm5ld1Byb21pc2VXaXRoVGltZW91dChsLlB1YmxpY0tleUNyZWRlbnRpYWwuaXNFeHRlcm5hbENUQVAyU2VjdXJpdHlLZXlTdXBwb3J0ZWQsaS5Qcm9taXNlVGltZW91dCwhMSk6YS5yZXNvbHZlKGUpOmEucmVzb2x2ZSghMSl9LGlzQ2hhbmdpbmdJbnB1dFR5cGVTdXBwb3J0ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hQy5pc0lFT2xkZXJUaGFuKDkpfSxpc0hpZ2hDb250cmFzdDpmdW5jdGlvbigpe2lmKG51bGw9PT1fKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7ZS5zdHlsZS5ib3JkZXJMZWZ0Q29sb3I9InJlZCIsZS5zdHlsZS5ib3JkZXJSaWdodENvbG9yPSJibHVlIixlLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIsZS5zdHlsZS50b3A9Ii05OTlweCIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlKTt2YXIgdD1DLmdldENvbXB1dGVkU3R5bGUoZSk7Xz10LmJvcmRlckxlZnRDb2xvcj09PXQuYm9yZGVyUmlnaHRDb2xvcixkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGUpfXJldHVybiBffSxnZXRIaWdoQ29udHJhc3RUaGVtZTpmdW5jdGlvbigpe2lmKEMuaXNIaWdoQ29udHJhc3QoKSl7dmFyIGU9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXSx0PUMuZ2V0Q29tcHV0ZWRTdHlsZShlKTtpZih0LmJhY2tncm91bmRDb2xvcil7dmFyIG49dC5iYWNrZ3JvdW5kQ29sb3IudG9Mb3dlckNhc2UoKS5yZXBsYWNlKG5ldyBSZWdFeHAoIiAiLCJnIiksIiIpO2lmKCJyZ2IoMCwwLDApIj09PW58fCIjMDAwMDAwIj09PW58fCIjMDAwIj09PW4pcmV0dXJuImJsYWNrIjtpZigicmdiKDI1NSwyNTUsMjU1KSI9PT1ufHwiI2ZmZmZmZiI9PT1ufHwiI2ZmZiI9PT1uKXJldHVybiJ3aGl0ZSJ9fX0sZ2V0Q29tcHV0ZWRTdHlsZTpmdW5jdGlvbihlKXtyZXR1cm4gZG9jdW1lbnQuZGVmYXVsdFZpZXcmJmRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGU/ZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShlLG51bGwpOmUuY3VycmVudFN0eWxlP2UuY3VycmVudFN0eWxlOnt9fSxoaXN0b3J5OntwdXNoU3RhdGU6ZnVuY3Rpb24oZSx0KXtDLmlzSGlzdG9yeVN1cHBvcnRlZCgpJiZsLmhpc3RvcnkucHVzaFN0YXRlKGUsdCl9LHJlcGxhY2VTdGF0ZTpmdW5jdGlvbihlLHQpe0MuaXNIaXN0b3J5U3VwcG9ydGVkKCkmJmwuaGlzdG9yeS5yZXBsYWNlU3RhdGUoZSx0KX19LGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oZSx0LG4saSl7ZS5hZGRFdmVudExpc3RlbmVyP2UuYWRkRXZlbnRMaXN0ZW5lcih0LG4saSk6ZS5hdHRhY2hFdmVudCYmZS5hdHRhY2hFdmVudCgib24iK3Qsbil9LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oZSx0LG4saSl7ZS5yZW1vdmVFdmVudExpc3RlbmVyP2UucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LG4saSk6ZS5kZXRhY2hFdmVudCYmZS5kZXRhY2hFdmVudCgib24iK3Qsbil9LGdldEV2ZW50VGFyZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBlP2UudGFyZ2V0P2UudGFyZ2V0OmUuc3JjRWxlbWVudD9lLnNyY0VsZW1lbnQ6bnVsbDpudWxsfX0seT10LlF1ZXJ5U3RyaW5nPXtwYXJzZTpmdW5jdGlvbihlKXt2YXIgdD1lLG49bnVsbCxpPW51bGw7aWYoZSl7dmFyIG89ZS5pbmRleE9mKCI/IiksYT1lLmluZGV4T2YoIiMiKTthIT09LTEmJihvPT09LTF8fGE8byk/KHQ9ZS5zdWJzdHJpbmcoMCxhKSxpPWMuZG91YmxlU3BsaXQoZS5zdWJzdHJpbmcoYSsxKSwiJiIsIj0iKSk6byE9PS0xJiZhPT09LTE/KHQ9ZS5zdWJzdHJpbmcoMCxvKSxuPWMuZG91YmxlU3BsaXQoZS5zdWJzdHJpbmcobysxKSwiJiIsIj0iKSk6byE9PS0xJiZhIT09LTEmJih0PWUuc3Vic3RyaW5nKDAsbyksbj1jLmRvdWJsZVNwbGl0KGUuc3Vic3RyaW5nKG8rMSxhKSwiJiIsIj0iKSxpPWMuZG91YmxlU3BsaXQoZS5zdWJzdHJpbmcoYSsxKSwiJiIsIj0iKSl9dmFyIHI9e29yaWdpbkFuZFBhdGg6dCxxdWVyeTpuLGZyYWdtZW50Oml9O3JldHVybiByfSxqb2luOmZ1bmN0aW9uKGUpe3ZhciB0PWUub3JpZ2luQW5kUGF0aHx8IiI7cmV0dXJuIGUucXVlcnkmJih0Kz0iPyIrcy5qb2luKGUucXVlcnksIiYiLCI9IikpLGUuZnJhZ21lbnQmJih0Kz0iIyIrcy5qb2luKGUuZnJhZ21lbnQsIiYiLCI9IikpLHR9LGFwcGVuZEN1cnJlbnRRdWVyeVBhcmFtZXRlcklmTm90RXhpc3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9eS5wYXJzZSh3aW5kb3cubG9jYXRpb24uaHJlZik7cmV0dXJuIHMuZm9yRWFjaCh0LnF1ZXJ5LGZ1bmN0aW9uKHQsbil7ZT15LmFkZElmTm90RXhpc3QoZSx0LG4pfSksZX0sYXBwZW5kOmZ1bmN0aW9uKGUsdCl7dmFyIG49eS5wYXJzZShlKSxpPWMuZG91YmxlU3BsaXQodCwiJiIsIj0iKTtyZXR1cm4gbi5xdWVyeT1uLnF1ZXJ5fHx7fSxzLmZvckVhY2goaSxmdW5jdGlvbihlLHQpe24ucXVlcnlbZV09dHx8bnVsbH0pLHkuam9pbihuKX0sYWRkSWZOb3RFeGlzdDpmdW5jdGlvbihlLHQsbil7bj1ufHwiIjt2YXIgaT15LnBhcnNlKGUpO3JldHVybiBudWxsPT09cy5maW5kT3duUHJvcGVydHkoaS5xdWVyeXx8e30sdCwhMCkmJihpLnF1ZXJ5PWkucXVlcnl8fHt9LGkucXVlcnlbdC50b0xvd2VyQ2FzZSgpXT1uKSx5LmpvaW4oaSl9LGFkZDpmdW5jdGlvbihlLHQpe3ZhciBuPXkucGFyc2UoZSk7cmV0dXJuIGUmJnQmJnQubGVuZ3RoJiYobi5xdWVyeT1uLnF1ZXJ5fHx7fSxkLmZvckVhY2godCxmdW5jdGlvbihlKXtuLnF1ZXJ5W2VbMF1dPWVbMV19KSkseS5qb2luKG4pfSxhcHBlbmRPclJlcGxhY2U6ZnVuY3Rpb24oZSx0LG4saSl7dmFyIG89eS5wYXJzZShlKTtvLnF1ZXJ5PW8ucXVlcnl8fHt9O3ZhciBhPXMuZmluZE93blByb3BlcnR5KG8ucXVlcnksdCwhMCk7YSYmZGVsZXRlIG8ucXVlcnlbYV0sby5xdWVyeVt0LnRvTG93ZXJDYXNlKCldPW47dmFyIHI9eS5qb2luKG8pO3JldHVybiBpJiZyLmxlbmd0aD5pP2U6cn0scmVtb3ZlOmZ1bmN0aW9uKGUsdCl7dmFyIG49eS5wYXJzZShlKTtuLnF1ZXJ5PW4ucXVlcnl8fHt9O3ZhciBpPXMuZmluZE93blByb3BlcnR5KG4ucXVlcnksdCwhMCk7cmV0dXJuIGkmJmRlbGV0ZSBuLnF1ZXJ5W2ldLHkuam9pbihuKX0sZXh0cmFjdDpmdW5jdGlvbihlLHQpe3R8fCIiPT09dHx8KHQ9ZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoKTt2YXIgbj15LnBhcnNlKHQpO24ucXVlcnk9bi5xdWVyeXx8e307dmFyIGk9cy5maW5kT3duUHJvcGVydHkobi5xdWVyeSxlLCEwKTtyZXR1cm4gaT9uLnF1ZXJ5W2ldOiIifSxhcHBlbmRPclJlcGxhY2VGcm9tQ3VycmVudFVybDpmdW5jdGlvbihlLHQpe3ZhciBuPXkuZXh0cmFjdCh0KTtyZXR1cm4gbj95LmFwcGVuZE9yUmVwbGFjZShlLHQsbik6ZX0sc3RyaXBRdWVyeVN0cmluZ0FuZEZyYWdtZW50OmZ1bmN0aW9uKGUpe3JldHVybiB5LnBhcnNlKGUpLm9yaWdpbkFuZFBhdGh9fSxrPXQuQ29va2llcz17ZXhwaXJlRGF0ZToiVGh1LCAzMC1PY3QtMTk4MCAxNjowMDowMCBHTVQiLHBlcnNpc3REYXRlOiJXZWQsIDMwLURlYy0yMDM3IDE2OjAwOjAwIEdNVCIsY29va2llU2FmZVJlZ2V4Oi9eW1x1MDAyMVx1MDAyMy1cdTAwMkJcdTAwMkQtXHUwMDNBXHUwMDNDLVx1MDA1Qlx1MDA1RC1cdTAwN0VdKyQvLGVuYWJsZWQ6ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRGF0ZSx0PSJHIitlLmdldFRpbWUoKSxuPSJDa1RzdCI7ay53cml0ZShuLHQpO3ZhciBpPSEhay5nZXRDb29raWUobik7cmV0dXJuIGsucmVtb3ZlKG4pLGl9LGdldENvb2tpZTpmdW5jdGlvbihlKXt2YXIgdD1jLmRvdWJsZVNwbGl0KGRvY3VtZW50LmNvb2tpZSwiOyIsIj0iLCExLGMudHJpbSk7cmV0dXJuIHRbZV0/dFtlXTpudWxsfSxnZXRPYmplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9ay5nZXRDb29raWUoZSl8fCIiO3JldHVybiBjLmRvdWJsZVNwbGl0KHQsIiYiLCI9Iil9LHJlbW92ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dHx8ZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWUsbz1pLnNwbGl0KCIuIiksYT1vLmxlbmd0aCxyPW9bYS0yXSsiLiIrb1thLTFdLHM9bnx8Ii8iLGQ9Imh0dHBzOiI9PT1kb2N1bWVudC5sb2NhdGlvbi5wcm90b2NvbCxsPWQ/IjtzZWN1cmUiOiIiLHU9ay5nZXREZWZhdWx0U2FtZVNpdGVBdHRyaWJ1dGUoZCk7ZG9jdW1lbnQuY29va2llPWMuZm9ybWF0KCJ7MH09IDtkb21haW49LnsxfTtwYXRoPXsyfTtleHBpcmVzPXszfXs0fXs1fSIsZSxyLHMsay5leHBpcmVEYXRlLGwsdSksZG9jdW1lbnQuY29va2llPWMuZm9ybWF0KCJ7MH09IDtkb21haW49LnsxfTtwYXRoPXsyfTtleHBpcmVzPXszfXs0fXs1fSIsZSxpLHMsay5leHBpcmVEYXRlLGwsdSl9LHdyaXRlOmZ1bmN0aW9uKGUsdCxuLGksbyxhLHIscyl7dmFyIGM9YT8iLiI6IiIsZD1kb2N1bWVudC5kb21haW4uc3BsaXQoIi4iKTtvJiZkLnNwbGljZSgwLE1hdGgubWF4KDAsZC5sZW5ndGgtMikpO3ZhciBsPWMrZC5qb2luKCIuIik7ay53cml0ZVdpdGhFeHBpcmF0aW9uKGUsdCxuLGk/ay5wZXJzaXN0RGF0ZTpudWxsLGwscixzKX0sd3JpdGVXaXRoRXhwaXJhdGlvbjpmdW5jdGlvbihlLHQsbixpLG8sYSxyKXtpZigiIj09PXQpay5yZW1vdmUoZSxvKTtlbHNleyJvYmplY3QiPT10eXBlb2YgdCYmKHQ9cy5qb2luKHQsIiYiLCI9IikpO3ZhciBkLGw9aT8iO2V4cGlyZXM9IitpOiIiLHU9bz8iO2RvbWFpbj0iK286IiIscD1hfHwiLyIsZj1uPyI7c2VjdXJlIjoiIjtkPXImJiJub25lIiE9PXIudG9Mb3dlckNhc2UoKT8iO1NhbWVTaXRlPSIrcjprLmdldERlZmF1bHRTYW1lU2l0ZUF0dHJpYnV0ZShuKTt2YXIgZz1jLmZvcm1hdCgiezB9PXsxfXsyfTtwYXRoPXszfXs0fXs1fXs2fSIsZSx0LHUscCxsLGYsZCk7ZG9jdW1lbnQuY29va2llPWd9fSxpc0Nvb2tpZVNhZmVWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gay5jb29raWVTYWZlUmVnZXgudGVzdChlKX0sZ2V0RGVmYXVsdFNhbWVTaXRlQXR0cmlidXRlOmZ1bmN0aW9uKGUpe3JldHVybiBlJiZUPyI7U2FtZVNpdGU9Tm9uZSI6IiJ9fX0sZnVuY3Rpb24oZSx0KXt0LlBsYXRmb3JtVGltZW91dD0wLHQuVGltZW91dD02ZTUsdC5Qcm9taXNlVGltZW91dD0yNTAsdC5TdXBwb3J0ZWRLZXlBbGdvcml0aG1zPVstNywtMjU3XSx0LkVycm9yPXtJbnRlcm5hbDoiSW50ZXJuYWxFcnJvciIsRmlkb0NyZWF0ZUNhbGxVbmV4cGVjdGVkUmVzcG9uc2U6IkZpZG9DcmVhdGVDYWxsVW5leHBlY3RlZFJlc3BvbnNlIn19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT13aW5kb3csbz1udWxsLGE9bnVsbCxyPW51bGwscz0wLGM9MSxkPTI7bz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUsdCxpLGEpe3AucHVzaChmdW5jdGlvbigpe3ZhciBuO3RyeXtuPWw9PT1jPyJmdW5jdGlvbiI9PXR5cGVvZiBlP2UodSk6dToiZnVuY3Rpb24iPT10eXBlb2YgdD90KHUpOnV9Y2F0Y2gocil7cmV0dXJuIHZvaWQgYShyKX1uIGluc3RhbmNlb2Ygbz9uLnRoZW4oaSxhKTpsPT09ZCYmImZ1bmN0aW9uIiE9dHlwZW9mIHQ/YShuKTppKG4pfSksbCE9PXMmJm4oKX1mdW5jdGlvbiBuKCl7aWYocC5sZW5ndGg+MCl7dmFyIGU9cC5zbGljZSgpO3A9W10sc2V0VGltZW91dChmdW5jdGlvbigpe2Zvcih2YXIgdD0wLG49ZS5sZW5ndGg7dDxuOysrdCllW3RdKCl9LDApfX1mdW5jdGlvbiBpKGUpe2w9PT1zJiYodT1lLGw9YyxuKCkpfWZ1bmN0aW9uIGEoZSl7bD09PXMmJih1PWUsbD1kLG4oKSl9dmFyIHI9dGhpcyxsPXMsdT1udWxsLHA9W107ci50aGVuPWZ1bmN0aW9uKGUsbil7cmV0dXJuIG5ldyBvKGZ1bmN0aW9uKGksbyl7dChlLG4saSxvKX0pfSxyWyJjYXRjaCJdPWZ1bmN0aW9uKGUpe3JldHVybiByLnRoZW4obnVsbCxlKX0sZnVuY3Rpb24oKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJQcm9taXNlOiBhcmd1bWVudCBpcyBub3QgYSBGdW5jdGlvbiBvYmplY3QiKTt0cnl7ZShpLGEpfWNhdGNoKHQpe2EodCl9fSgpfSxhPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1mdW5jdGlvbihpKXtlW3RdPWksbigpfTtyZXR1cm4gaX0sby5hbGw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUubGVuZ3RoP25ldyBvKGZ1bmN0aW9uKHQsbil7Zm9yKHZhciBpPVtdLHI9MCxzPTAsYz1lLmxlbmd0aDtzPGM7KytzKXt2YXIgZD1lW3NdO2QgaW5zdGFuY2VvZiBvPyhyKyssZC50aGVuKGEoaSxzLGZ1bmN0aW9uKCl7MD09PS0tciYmdChpKX0pLG4pKTppW3NdPWR9MD09PXImJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KGkpfSwwKX0pOm8ucmVzb2x2ZShbXSl9LHI9ZnVuY3Rpb24oZSx0KXt2YXIgbj1mdW5jdGlvbigpe2UodCl9O3JldHVybiBufSxvLnJhY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBvKGZ1bmN0aW9uKHQsbil7aWYoZSYmZS5sZW5ndGgpZm9yKHZhciBpPTAsYT1lLmxlbmd0aDtpPGE7KytpKXt2YXIgcz1lW2ldO3MgaW5zdGFuY2VvZiBvP3MudGhlbih0LG4pOnNldFRpbWVvdXQocih0LHMpLDApfX0pfSxvLnJlamVjdD1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IG8oZnVuY3Rpb24odCxuKXtuKGUpfSl9LG8ucmVzb2x2ZT1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIG8/ZTpuZXcgbyhlJiYiZnVuY3Rpb24iPT10eXBlb2YgZS50aGVuP2Z1bmN0aW9uKHQsbil7ZS50aGVuKHQsbil9OmZ1bmN0aW9uKHQpe3QoZSl9KX0sZS5leHBvcnRzPWkuUHJvbWlzZXx8b30sZnVuY3Rpb24oZSx0LG4pe3ZhciBpPW4oMTEpO3QudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbj1mdW5jdGlvbihlKXtlWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe3ZhciB0PWU7ZSBpbnN0YW5jZW9mIEVycm9yfHwodD1uZXcgRXJyb3IoIlVuaGFuZGxlZCBQcm9taXNlIHJlamVjdGlvbjogIitlKSksc2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IHR9LDApfSl9LHQubmV3UHJvbWlzZVdpdGhUaW1lb3V0PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbmV3IGkoZnVuY3Rpb24obyxhKXtpLnJlc29sdmUoZSgpKS50aGVuKG8sYSksc2V0VGltZW91dChmdW5jdGlvbigpe28obil9LHQpfSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigxKTt0LmNyZWF0ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbj0hMCxlLmV2ZW50QXJncyhBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSx0fXZhciB0LG49ITE7cmV0dXJuIGUuZXZlbnRBcmdzPWkub2JzZXJ2YWJsZSgpLmV4dGVuZCh7bm90aWZ5OiJhbHdheXMifSksZS5zdWJzY3JpYmU9ZnVuY3Rpb24oaSl7ZS5ldmVudEFyZ3Muc3Vic2NyaWJlKGZ1bmN0aW9uKGUpe3Q9aShlKX0pLG4mJih0PWkoZS5ldmVudEFyZ3MucGVlaygpKSl9LGV9LHQuaXNDb21wb25lbnRFdmVudD1mdW5jdGlvbihlKXtyZXR1cm4gZSYmaS5pc09ic2VydmFibGUoZS5ldmVudEFyZ3MpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciBpPW4oNiksbz1uKDkpLGE9aS5TdHJpbmcscj0xO3QuYXBwbHlFeHRlbnNpb25zPWZ1bmN0aW9uKGUpeyFmdW5jdGlvbih0KXtlLmJpbmRpbmdQcm92aWRlci5pbnN0YW5jZS5wcmVwcm9jZXNzTm9kZT1mdW5jdGlvbihuKXtpZihuLm5vZGVUeXBlPT09ciYmbi50YWdOYW1lJiYic2VsZWN0Ij09PW4udGFnTmFtZS50b0xvd2VyQ2FzZSgpJiZvLkhlbHBlci5pc0lFT2xkZXJUaGFuKDgpKXt2YXIgaT0iZGF0YS1iaW5kIixzPW4uZ2V0QXR0cmlidXRlKGkpO2lmKHMpe3ZhciBjPVtdLGQ9YS5kb3VibGVTcGxpdChzLCIsIiwiOiIsITEsYS50cmltKSxsPXtoYXNGb2N1czoiaGFzRm9jdXNCYXNpYyJ9O2UudXRpbHMub2JqZWN0Rm9yRWFjaChkLGZ1bmN0aW9uKGUpe3ZhciB0PWxbZV18fGUrIkV4IjtjLnB1c2godCsiOiIrZFtlXSl9KSxuLnNldEF0dHJpYnV0ZShpLGMuam9pbigpKX19dCYmdChuKX19KGUuYmluZGluZ1Byb3ZpZGVyLmluc3RhbmNlLnByZXByb2Nlc3NOb2RlKSxlLmJpbmRpbmdIYW5kbGVycy5vcHRpb25zRXg9e2luaXQ6ZnVuY3Rpb24odCxuLGksbyxhKXtmdW5jdGlvbiByKHQsbil7dmFyIGk9dHlwZW9mIG47cmV0dXJuImZ1bmN0aW9uIj09PWk/ZS51bndyYXAobih0KSk6InN0cmluZyI9PT1pJiZ0W25dPyJmdW5jdGlvbiI9PXR5cGVvZiB0W25dP2UudW53cmFwKHRbbl0oKSk6ZS51bndyYXAodFtuXSk6dm9pZCAwfWZ1bmN0aW9uIHMoKXt2YXIgZT10Lm9wdGlvbnNbdC5zZWxlY3RlZEluZGV4XS4kZGF0YTt0LiRkYXRhPWU7dmFyIG49dS5wZWVrKCk7dSgib2JqZWN0Ij09dHlwZW9mIG4/ZTp0LnZhbHVlKX12YXIgYz1lLnVud3JhcChuKCkpLGQ9aS5nZXQoIm9wdGlvbnNWYWx1ZUV4IiksbD1pLmdldCgib3B0aW9uc1RleHRFeCIpLHU9aS5nZXQoInZhbHVlRXgiKTtlLnV0aWxzLmFycmF5Rm9yRWFjaChjLGZ1bmN0aW9uKGUpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpO24uJGRhdGE9ZSxkJiYobi52YWx1ZT1yKGUsZCkpO3ZhciBpPXIoZSxsKSxvPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGkpO24uYXBwZW5kQ2hpbGQobyksdC5hcHBlbmRDaGlsZChuKX0pLGUuYXBwbHlCaW5kaW5nc1RvTm9kZSh0LHtldmVudDp7Y2hhbmdlOnN9fSk7dmFyIHA9dS5zdWJzY3JpYmUoZnVuY3Rpb24oZSl7aWYoZSl7dmFyIG49dHlwZW9mIGUsaT0ib2JqZWN0Ij09PW4sbz0ic3RyaW5nIj09PW47aWYoaSYmdC4kZGF0YSE9PWV8fG8mJnQudmFsdWUhPT1lKWZvcih2YXIgYT0wO2E8dC5vcHRpb25zLmxlbmd0aDthKyspe3ZhciByPXQub3B0aW9uc1thXTtpZihpJiZyLiRkYXRhPT09ZXx8byYmci52YWx1ZT09PWUpcmV0dXJuIHIuc2VsZWN0ZWQ9ITAsdm9pZCh0LiRkYXRhPXIuJGRhdGEpfX19KTshZnVuY3Rpb24obil7ZS51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKHQsZnVuY3Rpb24oKXtuLmRpc3Bvc2UoKX0pfShwKSx1LnBlZWsoKT91LnZhbHVlSGFzTXV0YXRlZCgpOih1KHQub3B0aW9uc1swXS52YWx1ZSksdC4kZGF0YT10Lm9wdGlvbnNbMF0uJGRhdGEpfX0sZS5iaW5kaW5nSGFuZGxlcnMuaGFzRm9jdXNCYXNpYz17aW5pdDplLmJpbmRpbmdIYW5kbGVycy5oYXNGb2N1cy5pbml0LHVwZGF0ZTpmdW5jdGlvbih0LG4pe3ZhciBpPWUudW53cmFwKG4oKSk7aT90LmZvY3VzKCk6dC5ibHVyKCl9fX19LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbigpe3ZhciBlPXRoaXMsdD17fTtlLnJlZ2lzdGVyU291cmNlPWZ1bmN0aW9uKGUsbil7dFtlXT10W2VdfHxbXSx0W2VdLnB1c2gobil9LGUuZ2V0U3RyaW5ncz1mdW5jdGlvbihlLG4pe2Zvcih2YXIgaT17fSxvPXRbZV18fFtdLGE9MCxyPW8ubGVuZ3RoO2E8cjthKyspb1thXShpLG4pO3JldHVybiBpfX12YXIgaT13aW5kb3c7aS5TdHJpbmdSZXBvc2l0b3J5PWUuZXhwb3J0cz1pLlN0cmluZ1JlcG9zaXRvcnl8fG5ldyBufSxmdW5jdGlvbihlLHQpe3QuVG9rZW5zPXtVc2VybmFtZToiI34jTWVtYmVyTmFtZV9MUyN+IyJ9LHQuRmVkPXtEb21haW5Ub2tlbjoiI34jcGFydG5lcmRvbWFpbiN+IyIsRmVkRG9tYWluOiIjfiNGZWRlcmF0ZWREb21haW5OYW1lX0xTI34jIixQYXJ0bmVyOiIjfiNGZWRlcmF0ZWRQYXJ0bmVyTmFtZV9MUyN+IyJ9LHQuTG9naW5PcHRpb249e0RvTm90UmVtZW1iZXI6MCxSZW1lbWJlclBXRDoxLE5vdGhpbmdDaGVja2VkOjN9LHQuU3RyaW5nc1ZhcmlhbnRJZD17RGVmYXVsdDowLFNreXBlTW92ZUFsaWFzOjEsQ29tYmluZWRTaWduaW5TaWdudXA6MixDb21iaW5lZFNpZ25pblNpZ251cERlZmF1bHRUaXRsZTozLFJlbW90ZUNvbm5lY3RMb2dpbjo0LENvbWJpbmVkU2lnbmluU2lnbnVwVjI6NSxDb21iaW5lZFNpZ25pblNpZ251cFYyV2VsY29tZVRpdGxlOjZ9LHQuT2ZmbGluZUFjY291bnROZXdTdHJpbmdzVmFyaWFudElkPXtEZWZhdWx0OjAsUGFnZUhlYWRlckNvbWJpbmF0aW9uMToxLFBhZ2VIZWFkZXJDb21iaW5hdGlvbjI6MixQYWdlSGVhZGVyQ29tYmluYXRpb24zOjMsUGFnZUhlYWRlckNvbWJpbmF0aW9uNDo0LFBhZ2VIZWFkZXJDb21iaW5hdGlvbjU6NSxQYWdlSGVhZGVyQ29tYmluYXRpb242OjYsUGFnZUhlYWRlckNvbWJpbmF0aW9uNzo3fSx0LlNpZ251cExpbmtFeHBTdHJpbmdzVmFyaWFudElkPXtEZWZhdWx0OjAsU2lnbnVwX0xpbmsxOjEsU2lnbnVwX0xpbmsyOjIsU2lnbnVwX0xpbmszOjN9LHQuQWxsb3dlZElkZW50aXRpZXNUeXBlPXtNc2FPbmx5OjAsQWFkT25seToxLEJvdGg6Mn0sdC5TZXNzaW9uSWRwPXtBYWQ6MCxNc2E6MX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEpLG89big2KSxhPW4oMTgpLHI9bigxNjYpLHM9big1KSxjPW4oOSksZD1uKDE2OSksbD1uKDE3MCksdT1uKDExKSxwPW4oMTczKSxmPW4oMTc3KSxnPW4oMTIpLG09bigxNzgpLHY9bnVsbCxoPXdpbmRvdyxiPXMuRXJyb3IsXz1zLkVzdHNFcnJvcixTPW8uU3RyaW5nLHc9by5PYmplY3QsVD1vLkVycm9yRGF0YSxDPXMuTG9naW5Nb2RlLHk9cy5QYWdpbmF0ZWRTdGF0ZSxrPXMuQ3JlZGVudGlhbFR5cGUseD1zLkFuaW1hdGlvblN0YXRlLEQ9cy5BbmltYXRpb25OYW1lLFA9Yy5IZWxwZXIsST1jLlF1ZXJ5U3RyaW5nLEU9Yy5Db29raWVzLFI9cC5HY3RSZXN1bHRBY3Rpb24sQT1wLkdjdFJlcXVlc3RIZWxwZXJGbGFncyxCPXIuQ2FuYXJ5VmFsaWRhdGlvblN1Y2Nlc3NBY3Rpb247ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIG51bGx9ZnVuY3Rpb24gbihlKXt2YXIgdD1LLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLG49dC5nZXRDdXJyZW50VmlldygpO1g9WC5jb25jYXQoZi5tZXJnZVNlc3Npb25zKHQuZ2V0U2hhcmVkRGF0YUl0ZW0oInNlc3Npb25zIiksZSkpLEsuYXN5bmNUaWxlUmVxdWVzdENvdW50PD0wJiYobi52aWV3SWQ9PT15LlRpbGVzPyhuLnZpZXdJbnRlcmZhY2UuYWRkTmV3U2Vzc2lvbnMoWCksWD1bXSk6bi52aWV3SWQ9PT15LlVzZXJuYW1lJiYoIUsubmV3U2Vzc2lvbigpJiZYLmxlbmd0aD4wJiZLLm5ld1Nlc3Npb24oWFswXSksWD1bXSkpfWZ1bmN0aW9uIG8oZSl7Sy5zaG93RGVidWdEZXRhaWxzKGUpLCFlJiZLLmZvb3Rlck1ldGhvZHMoKSYmSy5mb290ZXJNZXRob2RzKCkuZm9jdXNNb3JlSW5mb0xpbmsoKX1mdW5jdGlvbiBzKGUpe2lmKCFlfHwhZS5jb25maXJtYXRpb25WaWV3SWQpdGhyb3ciTm8gdmlldyBJRCB3YXMgc3BlY2lmaWVkIHRvIGhhbmRsZSB0aGUgY2FuYXJ5IHZhbGlkYXRpb24gZmFpbHVyZS4iO1o9ZS5jb25maXJtYXRpb25WaWV3SWQsSy5wb3N0Q2FuYXJ5VmFsaWRhdGlvbkFjdGlvbj1lLnBvc3RDb25maXJtYXRpb25BY3Rpb259ZnVuY3Rpb24gYyhlKXtLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uPWV9ZnVuY3Rpb24gTChlLHQsbil7cmV0dXJuIG4/SS5hcHBlbmRPclJlcGxhY2UoZSx0LGVuY29kZVVSSUNvbXBvbmVudChTLnRyaW0obikpKTplfWZ1bmN0aW9uIEYoKXt2YXIgZT1nZTtyZXR1cm4gQWUmJmkudXRpbHMub2JqZWN0Rm9yRWFjaChTLmRvdWJsZVNwbGl0KEFlLCImIiwiPSIpLGZ1bmN0aW9uKHQsbil7ZT1JLmFkZElmTm90RXhpc3QoZSx0LG4pfSksZX1mdW5jdGlvbiBOKGUpe3RyeXt2YXIgdD1FLmdldE9iamVjdCgid2xpZHBlcmYiKTt0LkZSPSJMIix0LlNUPShuZXcgRGF0ZSkuZ2V0VGltZSgpLEUud3JpdGUoIndsaWRwZXJmIix0LCEwLCEwLCEwLGUpfWNhdGNoKG4pe319ZnVuY3Rpb24gTyhlKXt2YXIgdD0iIjt0cnl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bi5pbm5lckhUTUw9ZSxuLmNoaWxkTm9kZXMubGVuZ3RoPjAmJm4uY2hpbGROb2Rlc1swXS52YWx1ZSYmKHQ9bi5jaGlsZE5vZGVzWzBdLnZhbHVlKX1jYXRjaChpKXt9cmV0dXJuIHR9ZnVuY3Rpb24gVSgpe3JldHVybiBLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpJiYoSy5wYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKCJzaG93RmVkQ3JlZEJ1dHRvbiIpfHxLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmN1cnJlbnRWaWV3SGFzTWV0YWRhdGEoeikpfWZ1bmN0aW9uIE0oKXtyZXR1cm4gVSgpJiZLLmZlZENyZWRCdXR0b25zKCl9ZnVuY3Rpb24gVihlLHQpe3ZhciBuPWEubG9hZFRlbmFudEJyYW5kaW5nKFVlJiZVZS5Fc3RzUHJvcGVydGllcyYmVWUuRXN0c1Byb3BlcnRpZXMuVXNlclRlbmFudEJyYW5kaW5nKSxpPWEubG9hZFRlbmFudEJyYW5kaW5nKFBlKSxvPWEuZ2V0TWVyZ2VkQnJhbmRpbmcoaSxuLG90KTtpZihLLmluaXRpYWxTaGFyZWREYXRhPXt1c2VybmFtZTpTLmNsZWFuc2VVc2VybmFtZShlKSxkaXNwbGF5TmFtZTplLHJlbW90ZU5nY1BhcmFtczp7c2Vzc2lvbklkZW50aWZpZXI6VmUsZW50cm9weTpIZSxkZWZhdWx0VHlwZTpqZX0sb3RjUGFyYW1zOnt9LGZpZG9QYXJhbXM6e2FsbG93TGlzdDpxZX0saGlwUmVxdWlyZWRGb3JVc2VybmFtZTpiZT9TLmNsZWFuc2VVc2VybmFtZShlKToiIixzZXNzaW9uczpCZXx8W10sZmxvd1Rva2VuOk8oJC5zRlQpfHwkLnNGVHx8TyhkZSksdXNlclRlbmFudEJyYW5kaW5nOm98fHt9LGNhbGxNZXRhZGF0YTp7fSxhdmFpbGFibGVDcmVkczpbXSxldmljdGVkQ3JlZHM6W10sb3RjQ3JlZGVudGlhbDp7fSxzaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M6ISghSWV8fCFJZS5zaG93RGVzY09uQ3JlZFZpZXdzKSx1bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlOk9lJiZPZS5zdGFydERlc2t0b3BTc29PblBhZ2VMb2FkP09lLmhpbnRlZERvbWFpbk5hbWU6bnVsbCxpc1NpZ251cFBvc3Q6ITF9LFVlKXt2YXIgcj1wYXJzZUludChNZSl8fHkuVW5rbm93bjtyPT09eS5PbmVUaW1lQ29kZSYmKFVlLkNyZWRlbnRpYWxzJiZVZS5DcmVkZW50aWFscy5QcmVmQ3JlZGVudGlhbCE9PWsuUHVibGljSWRlbnRpZmllckNvZGUmJlVlLkNyZWRlbnRpYWxzLlByZWZDcmVkZW50aWFsIT09ay5Ob1ByZWZlcnJlZENyZWRlbnRpYWwmJihVZS5DcmVkZW50aWFscy5QcmVmQ3JlZGVudGlhbD1rLk9uZVRpbWVDb2RlKSwkZSYmKEsuaW5pdGlhbFNoYXJlZERhdGEucHJvb2ZDb25maXJtYXRpb249JGUpKTt2YXIgcz1KLmdldEdjdFNoYXJlZERhdGEoVWUsdCwhMSk7Sy5pbml0aWFsU2hhcmVkRGF0YS5wcmVmZXJyZWRDcmVkZW50aWFsPXMucHJlZmVycmVkQ3JlZGVudGlhbCxLLmluaXRpYWxTaGFyZWREYXRhLmF2YWlsYWJsZUNyZWRzPXMuYXZhaWxhYmxlQ3JlZHN8fFtdLEsuaW5pdGlhbFNoYXJlZERhdGEuZXZpY3RlZENyZWRzPXMuZXZpY3RlZENyZWRzfHxbXSxLLmluaXRpYWxTaGFyZWREYXRhLm90Y0NyZWRlbnRpYWw9cy5vdGNDcmVkZW50aWFsLEsuaW5pdGlhbFNoYXJlZERhdGEub3RjUGFyYW1zPXMub3RjUGFyYW1zfX1mdW5jdGlvbiBIKGUsdCl7dmFyIG49W0MuRm9yY2VTaWduaW4sQy5Gb3JjZVNpZ25pbk1vYmlsZSxDLkZvcmNlU2lnbmluSG9zdF0sbz1pLnV0aWxzLmFycmF5SW5kZXhPZihuLHJlKSE9PS0xfHxjZSxhPSFvJiZCZSYmQmUubGVuZ3RoP3kuVGlsZXM6eS5Vc2VybmFtZSxyPWE7c3dpdGNoKHJlKXtjYXNlIEMuTFdBQ29uc2VudDphPXI9eS5Md2FDb25zZW50O2JyZWFrO2Nhc2UgQy5UaWxlczphPXI9eS5UaWxlczticmVhaztjYXNlIEMuRmVkQ29uZmxpY3Q6YT1yPXkuRmVkQ29uZmxpY3Q7YnJlYWs7Y2FzZSBDLlByb29mRmVkQ29uZmxpY3Q6YT1yPXkuUHJvb2ZGZWRDb25mbGljdDticmVhaztjYXNlIEMuQWFkRmVkQ29uZmxpY3Q6YT1yPXkuQWFkRmVkQ29uZmxpY3Q7YnJlYWs7Y2FzZSBDLkZlZExpbms6YT1yPXkuRmVkTGluazticmVhaztjYXNlIEMuV2luMTBIb3N0X0hJUF9Mb2dpbjpjYXNlIEMuV2luMTBIb3N0X0hJUF9Mb2dpbl9QaG9uZVNpZ25JbjphPXI9eS5QYXNzd29yZDticmVhaztjYXNlIEMuRmlkbzphPXI9eS5GaWRvO2JyZWFrO2Nhc2UgQy5Vc2VyQ3JlZGVudGlhbFBvbGljeUJsb2NrZWQ6YT1yPXkuQ3JlZGVudGlhbFBpY2tlcjticmVhaztjYXNlIEMuRmVkQm91bmRMaW5rOnI9eS5GZWRMaW5rO2JyZWFrO2RlZmF1bHQ6dmFyIHM9cGFyc2VJbnQoTWUpfHx5LlVua25vd247aWYocyE9PXkuVW5rbm93biYmcyE9PXkuRGVza3RvcFNzb1Byb2dyZXNzJiZzIT09eS5GZXRjaFNlc3Npb25zUHJvZ3Jlc3Mpcj1zO2Vsc2UgaWYoVWUpe3ZhciBjPUouZ2V0UmVzdWx0KGUsVWUsdCk7c3dpdGNoKGMuYWN0aW9uKXtjYXNlIFIuU2hvd0Vycm9yOnI9cmU9PT1DLkZldGNoU2Vzc2lvbnNQcm9ncmVzcz95LkZldGNoU2Vzc2lvbnNQcm9ncmVzczphO2JyZWFrO2Nhc2UgUi5Td2l0Y2hWaWV3OmkudXRpbHMuZXh0ZW5kKEsuaW5pdGlhbFNoYXJlZERhdGEsaS51dGlscy5leHRlbmQoYy5zaGFyZWREYXRhLGMudmlld1BhcmFtc3x8e30pKSxyPXJlPT09Qy5EZXNrdG9wU3NvUHJvZ3Jlc3M/eS5EZXNrdG9wU3NvUHJvZ3Jlc3M6cmU9PT1DLkZldGNoU2Vzc2lvbnNQcm9ncmVzcz95LkZldGNoU2Vzc2lvbnNQcm9ncmVzczpjLnZpZXdJZDticmVhaztjYXNlIFIuUmVkaXJlY3Q6Sy52aWV3X29uUmVkaXJlY3QoYy5yZWRpcmVjdFVybCxjLnJlZGlyZWN0UG9zdFBhcmFtcyxjLmlzSWRwUmVkaXJlY3QpfX1lbHNlIHJlPT09Qy5EZXNrdG9wU3NvUHJvZ3Jlc3M/cj15LkRlc2t0b3BTc29Qcm9ncmVzczpyZT09PUMuRmV0Y2hTZXNzaW9uc1Byb2dyZXNzP3I9eS5GZXRjaFNlc3Npb25zUHJvZ3Jlc3M6d2UmJksuZ2V0U2VydmVyRXJyb3IoKSYmKHI9eS5Vc2VybmFtZSk7KF9lfHxvfHx5ZXx8VGUpJiYoYT1yKX1LLmluaXRpYWxWaWV3SWQ9YSxLLmN1cnJlbnRWaWV3SWQ9cn1mdW5jdGlvbiBqKGUsdCl7Sy5pc0ZpZG9TdXBwb3J0ZWQoZSksVih0LGUpLEgodCxlKX1mdW5jdGlvbiBxKGUsdCl7cmV0dXJuIFMuZm9ybWF0KCIuL3NpZ25pbi17MH17MX0uezJ9IixlLHQ/Ii13aGl0ZSI6IiIsZWU/InN2ZyI6InBuZyIpfWZ1bmN0aW9uIEcoZSl7dmFyIHQ9e30sbj1udWxsLGk9bnVsbCxvPW51bGwsYT1udWxsLHI9bnVsbDtzd2l0Y2goZSl7Y2FzZSBrLk90aGVyTWljcm9zb2Z0SWRwRmVkZXJhdGlvbjpuPW9lLkNUX1BXRF9TVFJfVXNlTWljcm9zb2Z0X0xpbmssaT1MZSxvPXR0LGE9cj1tKHEoIm1pY3Jvc29mdCIsITEpKTticmVhaztjYXNlIGsuTGlua2VkSW46bj1vZS5DVF9QV0RfU1RSX1VzZUxpbmtlZEluX0xpbmssaT1XZSxhPW0ocSgibGlua2VkaW4iLCEwKSkscj1tKHEoImxpbmtlZGluIiwhMSkpO2JyZWFrO2Nhc2Ugay5HaXRIdWI6bj1vZS5DVF9QV0RfU1RSX1VzZUdpdEh1Yl9MaW5rLGk9S2UsYT1tKHEoImdpdGh1YiIsITApKSxyPW0ocSgiZ2l0aHViIiwhMSkpO2JyZWFrO2Nhc2Ugay5Hb29nbGU6bj1vZS5DVF9QV0RfU1RSX1VzZUdvb2dsZV9MaW5rLG89bnQsYT1yPW0ocSgiZ29vZ2xlIiwhMSkpO2JyZWFrO2Nhc2Ugay5GYWNlYm9vazpuPW9lLkNUX1BXRF9TVFJfVXNlRmFjZWJvb2tfTGluayxvPWl0LGE9cj1tKCIuL3NpZ25pbi1mYWNlYm9vay5wbmciKX1yZXR1cm4gdD17dGV4dDpuLHNpZ25JblVybDppLHNpZ25VcFVybDpvLGxpZ2h0SWNvblVybDphLGRhcmtJY29uVXJsOnIsY3JlZFR5cGU6ZX19ZnVuY3Rpb24gVyhlLHQpe3Q/ZG9jdW1lbnQubG9jYXRpb24ucmVwbGFjZShlKTpkb2N1bWVudC5sb2NhdGlvbi5hc3NpZ24oZSl9dmFyIEs9dGhpcyx6PSJzaG93RmVkQ3JlZFNpZ251cEJ1dHRvbnMiLCQ9ZSxYPVtdLEo9bnVsbCxRPXt9LFk9W10sWj1udWxsLGVlPSExLHRlPW51bGwsbmU9aS5vYnNlcnZhYmxlKCksaWU9aS5vYnNlcnZhYmxlKCExKSxvZT0kLnN0cixhZT0kLmh0bWwscmU9JC5pTG9naW5Nb2RlLHNlPSQuaUxCb2R5RGVmYXVsdCxjZT0kLmZQT1NUX0ZvcmNlU2lnbmluLGRlPSQuc0ZUVGFnLGxlPSQuc0ZUQ29va2llTmFtZSx1ZT0kLnNDdHgscGU9JC5mSXNDbG91ZEJ1aWxkLGZlPSQuZkFsbG93Q2FuY2VsLGdlPSQudXJsUG9zdCxtZT0kLnVybENhbmNlbCx2ZT0kLnVybEJhY2ssaGU9JC51cmxSZXNldFBhc3N3b3JkLGJlPSQudXJsSElQU2NyaXB0LF9lPSQuc1ByZWZpbGxVc2VybmFtZSxTZT0kLnNTaWduSW5Vc2VybmFtZSx3ZT0kLnNQT1NUX1VzZXJuYW1lLFRlPSQuc1p0ZFVwbkhpbnQsQ2U9JC5zRm91bmRNU0FzfHwiIix5ZT0kLmZMb2NrVXNlcm5hbWUsa2U9JC5zRXJyVHh0LHhlPSQuYXJyVmFsRXJycyxEZT0kLmZQcmVmaXhDb29raWVEb21haW5FbmFibGVkLFBlPSQuc3RhdGljVGVuYW50QnJhbmRpbmcsSWU9JC5vQXBwQ29icmFuZGluZyxFZT0kLmlCYWNrZ3JvdW5kSW1hZ2UsUmU9JC5zUmVzZXRQYXNzd29yZFByZWZpbGxQYXJhbXx8Im1uIixBZT0kLnNSYXdRdWVyeVN0cmluZyxCZT0kLmFyclNlc3Npb25zLExlPSQudXJsR29Ub0FBREVycm9yLEZlPSQub1VybE90aGVySWRwUG9zdFBhcmFtcyxOZT0kLm9DYW5jZWxQb3N0UGFyYW1zLE9lPSQuZGVza3RvcFNzb0NvbmZpZyxVZT0kLm9HZXRDcmVkVHlwZVJlc3VsdCxNZT0kLnNQT1NUX1BhZ2luYXRlZExvZ2luU3RhdGUsVmU9JC5zUE9TVF9QYWdpbmF0ZWRMb2dpblN0YXRlUk5HQ1NMSyxIZT0kLnNQT1NUX1BhZ2luYXRlZExvZ2luU3RhdGVSTkdDRW50cm9weSxqZT0kLnNQT1NUX1BhZ2luYXRlZExvZ2luU3RhdGVSTkdDRGVmYXVsdFR5cGUscWU9JC5hcnJGaWRvQWxsb3dMaXN0LEdlPSQuaVByb21vdGVkRmVkQ3JlZFR5cGUsV2U9JC51cmxMaW5rZWRJbkZlZCxLZT0kLnVybEdpdEh1YkZlZCx6ZT0kLmZFbmFibGVDc3NBbmltYXRpb24sJGU9JC5zUHJvb2ZDb25maXJtLFhlPSEhJC5mSXNGaWRvU3VwcG9ydGVkLEplPSEhJC5zRXh0ZXJuYWxDYW5hcnksUWU9JC5pU2Vzc2lvblB1bGxUeXBlLFllPSQuZklzRGVidWdUcmFjaW5nRW5hYmxlZCxaZT0kLmZEZXRlY3RCcm93c2VyQ2FwYWJpbGl0aWVzLGV0PSQuZklzV3JpdGVXbG9wdENvb2tpZURpc2FsbG93ZWQsdHQ9JC51cmxPdGhlcklkcFNpZ251cCxudD0kLnVybEdvb2dsZUZlZFNpZ251cCxpdD0kLnVybEZhY2Vib29rRmVkU2lnbnVwLG90PSQuaXNHbG9iYWxUZW5hbnQ7Sy5sZWFybk1vcmU9bnVsbCxLLmluaXRpYWxWaWV3SWQ9bnVsbCxLLmN1cnJlbnRWaWV3SWQ9bnVsbCxLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uPW51bGwsSy5pbml0aWFsU2hhcmVkRGF0YT17fSxLLnByZWZpbGxOYW1lcz1bXSxLLmFncmVlbWVudFR5cGU9bnVsbCxLLmFzeW5jVGlsZVJlcXVlc3RDb3VudD0wLEsudXNlQ3NzQW5pbWF0aW9ucz0hMSxLLnNlc3Npb25QdWxsVHlwZT1RZSxLLmlzRGVidWdUcmFjaW5nRW5hYmxlZD1ZZSxLLmFzeW5jSW5pdFJlYWR5PWkub2JzZXJ2YWJsZSghMSksSy5jdHg9aS5vYnNlcnZhYmxlKCksSy5wb3N0VXJsPWkub2JzZXJ2YWJsZSgpLEsudXNlckNsaWNrZWRDZW50aXBlZGU9aS5vYnNlcnZhYmxlKCExKSxLLnBhZ2VTdWJtaXR0ZWQ9aS5vYnNlcnZhYmxlKCExKSxLLmZvcmNlU3VibWl0PWkub2JzZXJ2YWJsZSghMSksSy5hcmlhSGlkZGVuPWkub2JzZXJ2YWJsZSghMSksSy53YXNMZWFybk1vcmVTaG93bj1pLm9ic2VydmFibGUoITEpLEsucG9zdFJlZGlyZWN0VXJsPWkub2JzZXJ2YWJsZSgpLEsucG9zdFJlZGlyZWN0UGFyYW1zPWkub2JzZXJ2YWJsZUFycmF5KCksSy5wb3N0UmVkaXJlY3RGb3JjZVN1Ym1pdD1pLm9ic2VydmFibGUoITEpLEsucG9zdGVkTG9naW5TdGF0ZVZpZXdJZD1pLm9ic2VydmFibGUoKSxLLnBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ0VudHJvcHk9aS5vYnNlcnZhYmxlKCksSy5wb3N0ZWRMb2dpblN0YXRlVmlld1JOR0NEZWZhdWx0VHlwZT1pLm9ic2VydmFibGUoKSxLLnBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ1NMSz1pLm9ic2VydmFibGUoKSxLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcz1pLm9ic2VydmFibGUoKSxLLmJhY2tncm91bmRDb250cm9sTWV0aG9kcz1pLm9ic2VydmFibGUoKSxLLmxlYXJuTW9yZU1ldGhvZHM9aS5vYnNlcnZhYmxlKCksSy5pbnN0cnVtZW50YXRpb25NZXRob2RzPWkub2JzZXJ2YWJsZSgpLEsuZm9vdGVyTWV0aG9kcz1pLm9ic2VydmFibGUoKSxLLnBhc3N3b3JkPWkub2JzZXJ2YWJsZSgpLEsuaXNSZXF1ZXN0UGVuZGluZz1pLm9ic2VydmFibGUoITEpLEsuc2hvd0xpZ2h0Ym94UHJvZ3Jlc3M9aS5vYnNlcnZhYmxlKCExKSxLLmJhbm5lckxvZ29Vcmw9aS5vYnNlcnZhYmxlKCksSy5iYWNrZ3JvdW5kTG9nb1VybD1pLm9ic2VydmFibGUoKSxLLm5ld1Nlc3Npb249aS5vYnNlcnZhYmxlKCksSy5mYWRlSW5MaWdodEJveD1pLm9ic2VydmFibGUoITEpLEsuYWN0aXZlRGlhbG9nPWkub2JzZXJ2YWJsZSgpLEsuaXNGaWRvU3VwcG9ydGVkPWkub2JzZXJ2YWJsZSghMSksSy5zaG93RGVidWdEZXRhaWxzPWkub2JzZXJ2YWJsZSghMSksSy5pc1NpZ251cFBvc3Q9aS5vYnNlcnZhYmxlKCExKSxLLmFuaW1hdGU9aS51dGlscy5leHRlbmQoaS5vYnNlcnZhYmxlKEQuTm9uZSkse2lzU2xpZGVPdXROZXh0OmkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIEsuYW5pbWF0ZSgpPT09RC5TbGlkZU91dE5leHR9KSxpc1NsaWRlSW5OZXh0OmkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIEsuYW5pbWF0ZSgpPT09RC5TbGlkZUluTmV4dH0pLGlzU2xpZGVPdXRCYWNrOmkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIEsuYW5pbWF0ZSgpPT09RC5TbGlkZU91dEJhY2t9KSxpc1NsaWRlSW5CYWNrOmkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIEsuYW5pbWF0ZSgpPT09RC5TbGlkZUluQmFja30pfSksSy5mbG93VG9rZW49aS5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gbmUoKXx8JC5zRlR9KSxLLm5ld1Nlc3Npb25JbmZvPWkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7aWYoSy5uZXdTZXNzaW9uKCkpe3ZhciBlPXt9LHQ9Sy5uZXdTZXNzaW9uKCksbj1QLmh0bWxVbmVzY2FwZSh0LmRpc3BsYXlOYW1lKSxpPVAuaHRtbFVuZXNjYXBlKHQuZnVsbE5hbWUpLG89dC5pc1NpZ25lZEluJiZpO3JldHVybiBvPyhlLnVuc2FmZV9uZXdTZXNzaW9uRnVsbE5hbWU9byxlLnVuc2FmZV9uZXdTZXNzaW9uRGlzcGxheU5hbWU9bik6ZS51bnNhZmVfbmV3U2Vzc2lvbkZ1bGxOYW1lPW4sZX1yZXR1cm4gbnVsbH0pLEsuc2hvd0ZlZENyZWRCdXR0b25zPWkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIEsudXNlQ3NzQW5pbWF0aW9ucz8oSy5hbmltYXRlKEQuTm9uZSksaWUoKSk6TSgpfSksSy5mZWRDcmVkQnV0dG9ucz1pLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPW51bGw7cmV0dXJuIFUoKT8oSy5wYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKHopP2U9W10uY29uY2F0KHR0P2suT3RoZXJNaWNyb3NvZnRJZHBGZWRlcmF0aW9uOltdLG50P2suR29vZ2xlOltdLGl0P2suRmFjZWJvb2s6W10pOkdlJiYoZT1bR2VdKSxlP2kudXRpbHMuYXJyYXlNYXAoZSxHKTpudWxsKTpudWxsfSksSy5nZXRTZXJ2ZXJFcnJvcj1mdW5jdGlvbigpe3ZhciBlPW51bGwsdD1udWxsO2lmKGtlKWU9a2U7ZWxzZSBpZih4ZSYmeGUubGVuZ3RoKXN3aXRjaCh4ZVswXSl7Y2FzZSBiLkVtcHR5RmllbGRzOmNhc2UgYi5Vc2VybmFtZUludmFsaWQ6Y2FzZSBiLlBQX0VfTUlTU0lOR19NRU1CRVJOQU1FOmNhc2UgYi5QUF9FX05BTUVfSU5WQUxJRDpjYXNlIGIuUFBfRV9FTUFJTF9SSUdIVF9UT09fTE9ORzpjYXNlIGIuUFBfRV9OQU1FX1RPT19MT05HOmNhc2UgYi5QUF9FX0lOVkFMSURfUEhPTkVOVU1CRVI6Y2FzZSBiLlBQX0VfTElCUEhPTkVOVU1CRVJJTlRFUk9QX05VTUJFUlBBUlNFX0VYQ0VQVElPTjplPW9lLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZFVzZXJuYW1lO2JyZWFrO2Nhc2UgYi5QUF9FX0VYQ0xVREVEOmU9YWUuQ1RfUFdEX1NUUl9FcnJvcl9Xcm9uZ0NyZWRzO2JyZWFrO2Nhc2UgYi5QUF9FX0JBRF9QQVNTV09SRDpjYXNlIGIuUFBfRV9QUkVWSU9VU19QQVNTV09SRDpjYXNlIGIuUFBfRV9JTlZBTElEX01FTUJFUk5BTUU6Y2FzZSBiLlBQX0VfREJfTUVNQkVSRE9FU05PVEVYSVNUOmNhc2UgYi5QUF9FX1BFX1JVTEVGQUxTRTpjYXNlIF8uSW52YWxpZFVzZXJOYW1lT3JQYXNzd29yZDpjYXNlIF8uUHJvdGVjdGVkS2V5TWlzdXNlOmNhc2UgXy5JbnZhbGlkUGFzc3dvcmRFeHBpcmVkUGFzc3dvcmQ6Y2FzZSBfLlVzZXJBY2NvdW50Tm90Rm91bmQ6Y2FzZSBfLlVzZXJBY2NvdW50RGVsZXRlZDpjYXNlIF8uVXNlckFjY291bnROb3RGb3VuZE5vdENvbmZpZ3VyZWRGb3JSZW1vdGVOZ2M6Y2FzZSBfLlVzZXJBY2NvdW50Tm90Rm91bmRGYWlsZWRUb0NyZWF0ZVJlbW90ZVNpZ25JbjpjYXNlIF8uVXNlclVuYXV0aG9yaXplZEFwaVZlcnNpb25Ob3RTdXBwb3J0ZWQ6Y2FzZSBfLlVzZXJVbmF1dGhvcml6ZWRNc2FHdWVzdFVzZXJzTm90U3VwcG9ydGVkOmNhc2UgXy5JbnZhbGlkVGVuYW50TmFtZTpjYXNlIF8uSW52YWxpZFRlbmFudE5hbWVFbXB0eUd1aWRJZGVudGlmaWVyOmNhc2UgXy5JbnZhbGlkVGVuYW50TmFtZUVtcHR5SWRlbnRpZmllcjpjYXNlIF8uSW52YWxpZFRlbmFudE5hbWVGb3JtYXQ6Y2FzZSBfLkludmFsaWREb21haW5OYW1lOmU9YWVbYmU/IkNUX0lITF9TVFJfRXJyb3JfV3JvbmdIaXAiOiJDVF9QV0RfU1RSX0Vycm9yX1dyb25nQ3JlZHMiXTticmVhaztjYXNlIF8uVXNlclVuYXV0aG9yaXplZDplPWFlLkNUX1BXRF9TVFJfRXJyb3JfVXNlcm5hbWVOb3RFeGlzdF9HdWVzdF9TaWdudXBBbGxvd2VkO2JyZWFrO2Nhc2UgXy5JbnZhbGlkUGFzc3dvcmQ6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0ludmFsaWRQYXNzd29yZDticmVhaztjYXNlIGIuUFBfRV9PTERfU0tZUEVfUEFTU1dPUkQ6ZT1vZS5DVF9JTF9TVFJfRXJyb3JfT2xkU2t5cGVQd2Q7YnJlYWs7Y2FzZSBiLlBQX0VfQUxJQVNfQVVUSF9OT1RQRVJNSVRURUQ6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0FsaWFzTm90QWxsb3dlZDticmVhaztjYXNlIGIuUFBfRV9GRURFUkFUSU9OX0lOTElORUxPR0lOX0RJU0FMTE9XRUQ6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0ZlZE5vdEFsbG93ZWQ7YnJlYWs7Y2FzZSBiLlBhc3N3b3JkRW1wdHk6Y2FzZSBiLlBQX0VfTUlTU0lOR19QQVNTV09SRDpjYXNlIF8uSW52YWxpZFBhc3N3b3JkTnVsbFBhc3N3b3JkOmU9b2UuQ1RfUFdEX1NUUl9FcnJvcl9NaXNzaW5nUGFzc3dvcmQ7YnJlYWs7Y2FzZSBiLlBQX0VfSURQX0xJTktFRElOX0JJTkRJTkdfTk9UX0FMTE9XRUQ6ZT1vZS5DVF9TVFJfRXJyb3JfRmVkVXNlck5vdEZvdW5kX0xpbmtlZEluO2JyZWFrO2Nhc2UgYi5QUF9FX0lEUF9HT09HTEVfQklORElOR19OT1RfQUxMT1dFRDplPW9lLkNUX1NUUl9FcnJvcl9GZWRVc2VyTm90Rm91bmRfR29vZ2xlO2JyZWFrO2Nhc2UgYi5QUF9FX0lEUF9HSVRIVUJfQklORElOR19OT1RfQUxMT1dFRDplPW9lLkNUX1NUUl9FcnJvcl9GZWRVc2VyTm90Rm91bmRfR2l0SHViO2JyZWFrO2Nhc2UgYi5QUF9FX09UVF9EQVRBX0lOVkFMSUQ6Y2FzZSBiLlBQX0VfT1RUX0FMUkVBRFlfQ09OU1VNRUQ6Y2FzZSBiLlBQX0VfT1RUX0lOVkFMSURfUFVSUE9TRTpjYXNlIGIuUFBfRV9QUFNBX1JQVF9OT1RPQUREUkVTUzpjYXNlIF8uSW52YWxpZE9uZVRpbWVQYXNzY29kZTpjYXNlIF8uRXhwaXJlZE9uZVRpbWVQYXNzY29kZTpjYXNlIF8uT25lVGltZVBhc3Njb2RlQ2FjaGVFcnJvcjpjYXNlIF8uT25lVGltZVBhc3Njb2RlRW50cnlOb3RFeGlzdDpjYXNlIF8uUHVibGljSWRlbnRpZmllclNhc0VuZENhbGxOb25SZXRyaWFibGVFcnJvcjpjYXNlIF8uUHVibGljSWRlbnRpZmllclNhc0VuZENhbGxSZXRyaWFibGVFcnJvcjplPW9lLkNUX09UQ19TVFJfRXJyb3JfQ29kZUluY29ycmVjdDticmVhaztjYXNlIF8uRmxvd1Rva2VuRXhwaXJlZDplPW9lLkNUX1BXRF9TVFJfRXJyb3JfRmxvd1Rva2VuRXhwaXJlZDticmVhaztjYXNlIF8uSWRzTG9ja2VkOmU9b2UuQ1RfUFdEX1NUUl9FcnJvcl9JZHNMb2NrZWQ7YnJlYWs7Y2FzZSBfLlVzZXJEaXNhYmxlZDplPW9lLkNUX1BXRF9TVFJfRXJyb3JfVXNlckRpc2FibGVkO2JyZWFrO2Nhc2UgXy5NaXNzaW5nQ3VzdG9tU2lnbmluZ0tleTplPW9lLkNUX1BXRF9TVFJfRXJyb3JfTWlzc2luZ0N1c3RvbVNpZ25pbmdLZXk7YnJlYWs7Y2FzZSBfLkJsb2NrZWRBZGFsVmVyc2lvbjplPW9lLkNUX1BXRF9TVFJfRXJyb3JfQmxvY2tlZEFkYWxWZXJzaW9uO2JyZWFrO2Nhc2UgXy5CbG9ja2VkQ2xpZW50SWQ6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0Jsb2NrZWRDbGllbnRJZDticmVhaztjYXNlIF8uVXNlckFjY291bnRTZWxlY3Rpb25JbnZhbGlkOmU9b2UuQ1RfUFdEX1NUUl9FcnJvcl9TZWxlY3RlZEFjY291bnRJbnZhbGlkO2JyZWFrO2Nhc2UgXy5JZHBMb29wRGV0ZWN0ZWQ6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0lkcExvb3BEZXRlY3RlZDticmVhaztjYXNlIF8uSW52YWxpZFBhc3N3b3JkTGFzdFBhc3N3b3JkVXNlZDplPW9lLkNUX1BXRF9TVFJfRXJyb3JfTGFzdFBhc3N3b3JkVXNlZDticmVhaztjYXNlIF8uUGhvbmVTaWduSW5CbG9ja2VkQnlVc2VyQ3JlZGVudGlhbFBvbGljeTplPW9lLlNUUl9Vc2VyQ3JlZGVudGlhbFBvbGljeV9CbG9ja2VkLHQ9b2UuU1RSX1VzZXJDcmVkZW50aWFsUG9saWN5X0Jsb2NrZWRfUGhvbmVTaWduSW5fUmVtZWRpYXRpb247YnJlYWs7Y2FzZSBfLlB1YmxpY0lkZW50aWZpZXJBdXRoVXNlck5vdEFsbG93ZWRCeVBvbGljeTplPW9lLlNUUl9Vc2VyQ3JlZGVudGlhbFBvbGljeV9CbG9ja2VkO2JyZWFrO2Nhc2UgXy5GaWRvQmxvY2tlZEJ5UG9saWN5OmU9b2UuU1RSX1VzZXJDcmVkZW50aWFsUG9saWN5X0Jsb2NrZWQsdD1vZS5TVFJfVXNlckNyZWRlbnRpYWxQb2xpY3lfQmxvY2tlZF9GaWRvX1JlbWVkaWF0aW9uO2JyZWFrO2Nhc2UgXy5Vc2VyQWNjb3VudE5vdEZvdW5kRm9yRmlkb1NpZ25JbjplPW9lLkNUX0ZJRE9fU1RSX0Vycm9yX05vdEZvdW5kO2JyZWFrO2Nhc2UgXy5BY2Nlc3NQYXNzQmxvY2tlZEJ5UG9saWN5OmU9b2UuQ1RfUFdEX1NUUl9FcnJvcl9BY2Nlc3NQYXNzQmxvY2tlZDticmVhaztjYXNlIF8uSW52YWxpZEFjY2Vzc1Bhc3M6ZT1vZS5DVF9QV0RfU1RSX0Vycm9yX0luY29ycmVjdEFjY2Vzc1Bhc3M7YnJlYWs7Y2FzZSBfLkFjY2Vzc1Bhc3NFeHBpcmVkOmU9b2UuQ1RfUFdEX1NUUl9FcnJvcl9BY2Nlc3NQYXNzRXhwaXJlZDticmVhaztkZWZhdWx0OmU9bnVsbH1lbHNlIGlmKFVlKXt2YXIgbj1KLmdldFJlc3VsdChLLmluaXRpYWxTaGFyZWREYXRhLmRpc3BsYXlOYW1lLFVlLCExKTtuLmFjdGlvbj09PVIuU2hvd0Vycm9yJiYoZT1uLmVycm9yKX1yZXR1cm4gZT9uZXcgVChlLHQpOm51bGx9LEsuZmV0Y2hTZXNzaW9uc19vblVwZGF0ZVVzZXJUaWxlcz1mdW5jdGlvbihlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bihlKX0pfSxLLmZldGNoU2Vzc2lvbnNfb25JbmNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ9ZnVuY3Rpb24oKXtLLmFzeW5jVGlsZVJlcXVlc3RDb3VudCsrfSxLLmZldGNoU2Vzc2lvbnNfb25EZWNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ9ZnVuY3Rpb24oKXtLLmFzeW5jVGlsZVJlcXVlc3RDb3VudC0tfSxLLmZldGNoU2Vzc2lvbnNfb25FeGVjdXRlR2N0UmVzdWx0PWZ1bmN0aW9uKCl7Zy50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKHUuYWxsKFkpLnRoZW4oZnVuY3Rpb24oKXt2YXIgZT1KLmdldFJlc3VsdChQLmh0bWxVbmVzY2FwZShfZSksVWUsSy5pc0ZpZG9TdXBwb3J0ZWQoKSk7c3dpdGNoKGUuYWN0aW9uKXtjYXNlIFIuU2hvd0Vycm9yOksucGFnaW5hdGlvbkNvbnRyb2xNZXRob2RzKCkudmlld19vblN3aXRjaFZpZXcoeS5Vc2VybmFtZSk7YnJlYWs7Y2FzZSBSLlN3aXRjaFZpZXc6Sy5wYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS52aWV3X29uU3dpdGNoVmlldyhlLnZpZXdJZCk7YnJlYWs7Y2FzZSBSLlJlZGlyZWN0Oksudmlld19vblJlZGlyZWN0KGUucmVkaXJlY3RVcmwpfX0pKX0sSy5wYWdpbmF0aW9uQ29udHJvbF9vbkNhbmNlbD1mdW5jdGlvbigpe2lmKGZlJiZtZSl7dmFyIGU9bWU7U2UmJihOZT9OZS51c2VybmFtZT1TZTplPUkuYXBwZW5kT3JSZXBsYWNlKGUsInVzZXJuYW1lIixTZSkpLEsudmlld19vblJlZGlyZWN0KGUsTmUpfWVsc2UgdmU/KEsudmlld19vblNldFBlbmRpbmdSZXF1ZXN0KCEwKSxXKHZlLCEwKSk6diYmdi5oYW5kbGVPbkZpbmFsQmFjayYmdi5oYW5kbGVPbkZpbmFsQmFjaygkKX0sSy52aWV3X29uU3VibWl0UmVhZHk9ZnVuY3Rpb24oZSl7dmFyIHQ9Sy5wYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5nZXRDdXJyZW50Vmlld0lkKCksbj1LLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmdldFNoYXJlZERhdGEoKTtLLnBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ0RlZmF1bHRUeXBlKG4ucmVtb3RlTmdjUGFyYW1zLmRlZmF1bHRUeXBlKSxLLnBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ0VudHJvcHkobi5yZW1vdGVOZ2NQYXJhbXMuZW50cm9weSksSy5wb3N0ZWRMb2dpblN0YXRlVmlld1JOR0NTTEsobi5yZW1vdGVOZ2NQYXJhbXMuc2Vzc2lvbklkZW50aWZpZXIpLEsuaXNTaWdudXBQb3N0KG4uaXNTaWdudXBQb3N0KSx0PT09eS5IaXAmJih0PXkuUGFzc3dvcmQpLEsucG9zdGVkTG9naW5TdGF0ZVZpZXdJZCh0KSwhbmUoKSYmbi5mbG93VG9rZW4mJm5lKG4uZmxvd1Rva2VuKTt2YXIgaT0oaC5Vc2VyVHJhY2tlcnx8e30pLmRlc3Ryb3k7aWYoaSl0cnl7aSgpfWNhdGNoKG8pe31OKERlKSxLLmluc3RydW1lbnRhdGlvbk1ldGhvZHMoKS5yZWNvcmRTdWJtaXQoKSxLLnBhZ2VTdWJtaXR0ZWQoITApLEsuZm9yY2VTdWJtaXQoITApLEsuaXNSZXF1ZXN0UGVuZGluZyghMCksSy5zaG93TGlnaHRib3hQcm9ncmVzcyghZSl9LEsudmlld19vblJlZGlyZWN0PWZ1bmN0aW9uKGUsdCxuLG8pe24mJmxlJiZLLmZsb3dUb2tlbigpJiZFLndyaXRlKGxlLEsuZmxvd1Rva2VuKCksIXBlKSx0PyhLLnBvc3RSZWRpcmVjdFVybChlKSxpLnV0aWxzLm9iamVjdEZvckVhY2godCxmdW5jdGlvbihlLHQpeyJ1bnNhZmVfIj09PWUuc3Vic3RyKDAsNykmJihlPWUuc3Vic3RyKDcpKSxLLnBvc3RSZWRpcmVjdFBhcmFtcy5wdXNoKHtuYW1lOmUsdW5zYWZlX3ZhbHVlOnR9KX0pLEsucG9zdFJlZGlyZWN0Rm9yY2VTdWJtaXQoITApKTpXKGUpLEsuaXNSZXF1ZXN0UGVuZGluZyghMCksSy5zaG93TGlnaHRib3hQcm9ncmVzcyghbyl9LEsudmlld19vblNob3c9ZnVuY3Rpb24oZSxuKXt2YXIgaT1lLmR5bmFtaWNCcmFuZGluZz9LLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmdldFNoYXJlZERhdGFJdGVtKCJ1c2VyVGVuYW50QnJhbmRpbmciKTphLmxvYWRUZW5hbnRCcmFuZGluZyhQZSksbz1hLmdldFBhZ2VCcmFuZGluZyhpLEllLEVlKTtLLmJhY2tncm91bmRDb250cm9sTWV0aG9kcygpJiZLLmJhY2tncm91bmRDb250cm9sTWV0aG9kcygpLnVwZGF0ZUJyYW5kaW5nKG8pLEsuYmFubmVyTG9nb1VybChvLmJhbm5lckxvZ29VcmwpLEsuYmFja2dyb3VuZExvZ29Vcmwoby5iYWNrZ3JvdW5kTG9nb1VybCksbiE9PXkuVXNlcm5hbWUmJksubmV3U2Vzc2lvbihudWxsKSxYLmxlbmd0aD4wJiYobiE9PXkuVXNlcm5hbWUmJm4hPT15LlRpbGVzfHwobj09PXkuVXNlcm5hbWUmJksubmV3U2Vzc2lvbihYWzBdKSxYPVtdKSk7dmFyIHI9dChuKTtLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmxvYWRWaWV3KG4scil9LEsudmlld19vblVwZGF0ZUZsb3dUb2tlbj1mdW5jdGlvbihlKXtuZShlKSxLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLnNldFNoYXJlZERhdGFJdGVtKCJmbG93VG9rZW4iLGUpfSxLLnZpZXdfb25VcGRhdGVSZW1vdGVOZ2NQYXJhbXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPUsucGFnaW5hdGlvbkNvbnRyb2xNZXRob2RzKCkuZ2V0U2hhcmVkRGF0YUl0ZW0oInJlbW90ZU5nY1BhcmFtcyIpO2kuc2Vzc2lvbklkZW50aWZpZXI9ZSxpLmVudHJvcHk9dCxpLmRlZmF1bHRUeXBlPW59LEsudmlld19vblNldExpZ2h0Qm94RmFkZUluPWZ1bmN0aW9uKGUpe0suZmFkZUluTGlnaHRCb3goZSl9LEsudmlld19vblNldFBlbmRpbmdSZXF1ZXN0PWZ1bmN0aW9uKGUpe0suaXNSZXF1ZXN0UGVuZGluZyhlKSxLLnNob3dMaWdodGJveFByb2dyZXNzKGUpfSxLLmZvb3Rlcl9hZ3JlZW1lbnRDbGljaz1mdW5jdGlvbihlKXtLLmFncmVlbWVudFR5cGU9ZSxLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLnZpZXdfb25Td2l0Y2hWaWV3KHkuVmlld0FncmVlbWVudCl9LEsuY2xvc2VEZWJ1Z0RldGFpbHNfb25DbGljaz1mdW5jdGlvbigpe28oITEpLEsuZm9vdGVyTWV0aG9kcygpJiZLLmZvb3Rlck1ldGhvZHMoKS5zZXREZWJ1Z0RldGFpbHNTdGF0ZSghMSl9LEsudG9nZ2xlRGVidWdEZXRhaWxzX29uQ2xpY2s9ZnVuY3Rpb24oKXtvKCFLLnNob3dEZWJ1Z0RldGFpbHMoKSl9LEsuc2V0RGVidWdUcmFjaW5nX29uQ2xpY2s9ZnVuY3Rpb24oKXtLLmlzRGVidWdUcmFjaW5nRW5hYmxlZD0hSy5pc0RlYnVnVHJhY2luZ0VuYWJsZWR9LEsubGVhcm5Nb3JlX29uU2hvdz1mdW5jdGlvbigpe0suYXJpYUhpZGRlbighMCksSy53YXNMZWFybk1vcmVTaG93bighMCksSy5sZWFybk1vcmVNZXRob2RzKCkub3BlbigpfSxLLmxlYXJuTW9yZV9vbkhpZGU9ZnVuY3Rpb24oKXtLLmFyaWFIaWRkZW4oITEpLEsucGFnaW5hdGlvbkNvbnRyb2xNZXRob2RzKCkuc2V0RGVmYXVsdEZvY3VzKCl9LEsucGFzc3dvcmRWaWV3X29uUmVzZXRQYXNzd29yZD1mdW5jdGlvbihlKXtXKEwoaGUsUmUsZSkpLEsudmlld19vblNldFBlbmRpbmdSZXF1ZXN0KCEwKX0sSy5uZXdTZXNzaW9uX29uQ2xpY2s9ZnVuY3Rpb24oKXt2YXIgZT1LLm5ld1Nlc3Npb24oKTtpZihlLmlzV2luZG93c1Nzbyl7dmFyIHQ9bmV3IGwoJCk7Zy50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKHQubG9naW5XaW5kb3dzVXNlckFzeW5jKGUuc3NvTGluaykudGhlbihudWxsLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9KS50aGVuKGZ1bmN0aW9uKGUpe2UmJksudmlld19vblJlZGlyZWN0KGUpfSkpfWVsc2UgaWYoZS5pc090aGVySWRwKXt2YXIgbj1TLnRyaW0oZS5kaXNwbGF5TmFtZSksaT1JLmFwcGVuZE9yUmVwbGFjZShMZSwidXNlcm5hbWUiLGVuY29kZVVSSUNvbXBvbmVudChuKSksbz1GZT93LmNsb25lKEZlKTpudWxsO28mJihvLnVzZXJuYW1lPW4pLEsudmlld19vblJlZGlyZWN0KGksbywhMCl9fSxLLm5ld1Nlc3Npb25DbG9zZV9vbkNsaWNrPWZ1bmN0aW9uKCl7Sy5uZXdTZXNzaW9uKG51bGwpfSxLLmZlZENyZWRCdXR0b25fb25DbGljaz1mdW5jdGlvbihlKXtLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpJiZLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmN1cnJlbnRWaWV3SGFzTWV0YWRhdGEoeik/Sy52aWV3X29uUmVkaXJlY3QoZS5zaWduVXBVcmwpOksudmlld19vblJlZGlyZWN0KGUuc2lnbkluVXJsKX0sSy5wYWdpbmF0aW9uQ29udHJvbF9vbkFuaW1hdGlvblN0YXRlQ2hhbmdlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1NKCk7c3dpdGNoKGUpe2Nhc2UgeC5CZWdpbjppJiZuJiZLLmFuaW1hdGUodD9ELlNsaWRlT3V0QmFjazpELlNsaWRlT3V0TmV4dCk7YnJlYWs7Y2FzZSB4LlJlbmRlck5ld1ZpZXc6aWUoITEpO2JyZWFrO2Nhc2UgeC5BbmltYXRlTmV3VmlldzppJiYoaWUoITApLEsuYW5pbWF0ZSh0P0QuU2xpZGVJbkJhY2s6RC5TbGlkZUluTmV4dCkpO2JyZWFrO2Nhc2UgeC5FbmQ6aWUoaSksSy5hbmltYXRlKEQuTm9uZSl9fSxLLnZpZXdfb25SZWdpc3RlckRpYWxvZz1mdW5jdGlvbihlLHQpe1FbZV09e3RlbXBsYXRlTm9kZXM6dC50ZW1wbGF0ZU5vZGVzLGRhdGE6dC5kYXRhfX0sSy52aWV3X29uVW5yZWdpc3RlckRpYWxvZz1mdW5jdGlvbihlKXtkZWxldGUgUVtlXX0sSy52aWV3X29uU2hvd0RpYWxvZz1mdW5jdGlvbihlKXtLLmFjdGl2ZURpYWxvZyhRW2VdKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Sy5hY3RpdmVEaWFsb2coUVtlXSl9LDApO3ZhciB0PW5ldyB1KGZ1bmN0aW9uKGUpe3RlPXtyZXNvbHZlOmV9fSk7cmV0dXJuIHR9LEsuZGlhbG9nX29uQ2xvc2U9ZnVuY3Rpb24oKXtLLmFjdGl2ZURpYWxvZyhudWxsKSxLLnBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpLmdldEN1cnJlbnRWaWV3KCkudmlld0ludGVyZmFjZS5zZXREZWZhdWx0Rm9jdXMoKSx0ZSYmdGUucmVzb2x2ZSgpfSxmdW5jdGlvbigpe2lmKGVlPVAuaXNTdmdJbWdTdXBwb3J0ZWQoKSxaZSl7dmFyIHQ9bmV3IGQ7dC53cml0ZUNvb2tpZSgpfUo9bmV3IHAoJCxBLkRpc2FibGVEZXNrdG9wU3NvUHJlZmVycmVkQ3JlZHxBLkRpc2FibGVBdXRvU2VuZHxBLklzUG9zdFJlcXVlc3QpO3ZhciBvPUNlP0NlLnNwbGl0KCIsIik6W10sYT1QLmh0bWxVbmVzY2FwZSh3ZXx8U2V8fF9lfHxUZXx8IiIpO28uc29ydCgpLEsucHJlZmlsbE5hbWVzPUsucHJlZmlsbE5hbWVzLmNvbmNhdChpLnV0aWxzLmFycmF5TWFwKG8sUC5odG1sVW5lc2NhcGUpKSxLLnVzZUNzc0FuaW1hdGlvbnM9emUmJlAuaXNDU1NBbmltYXRpb25TdXBwb3J0ZWQoKSx2JiZ2LnByb3BlcnR5QmFnU2V0QXN5bmMmJnYucHJvcGVydHlCYWdTZXRBc3luYyh2LlByb3BlcnR5QmFnSXRlbU5hbWVzLkVuY3J5cHRlZFBhc3N3b3JkLCIiKSxLLmN0eCh1ZSksSy5wb3N0VXJsKEYoKSk7dmFyIG09UC5pc0ZpZG9TdXBwb3J0ZWRBc3luYyhYZSkudGhlbihmdW5jdGlvbihlKXtqKGUsYSl9LGZ1bmN0aW9uKCl7aighMSxhKX0pO1kucHVzaChtKTt2YXIgaD1uZXcgcihlKTtpZihKZSl7Sy52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QoITApO3ZhciBiPWgudmFsaWRhdGVBc3luYygpLnRoZW4oYyxzKTtZLnB1c2goYil9aWYoIWV0JiZzZSl7dmFyIF89Uy5mb3JtYXQoIlt7MH1dIixzZSksdz1FLmdldE9iamVjdCgiV0xPcHQiKSxUPXcuYWN0fHwiIjtULmluZGV4T2YoXyk9PT0tMSYmKFQrPV8pLHcuYWN0PVQsRS53cml0ZSgiV0xPcHQiLHcsITEsITApfXZhciBDPW5ldyBsKCQpO0MuaXNFbmFibGVkKCkmJihLLmFzeW5jVGlsZVJlcXVlc3RDb3VudCsrLGcudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbihDLnB1bGxCcm93c2VyU3NvQ29va2llQXN5bmMoKS50aGVuKG51bGwsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0pLnRoZW4oZnVuY3Rpb24oZSl7Sy5hc3luY1RpbGVSZXF1ZXN0Q291bnQtLSxlPWV8fHt9LGUubmV3U2Vzc2lvbnM/bihmLnBhcnNlQnNzb1Nlc3Npb25zKGUubmV3U2Vzc2lvbnMpKTplLnJlZGlyZWN0VXJsP1coZS5yZWRpcmVjdFVybCwhMCk6bihbXSl9KSkpLHYmJnYuaW5pdGlhbGl6ZSYmdi5pbml0aWFsaXplKCksZy50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKHUuYWxsKFkpLnRoZW4oZnVuY3Rpb24oKXtLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uJiYoSy5wb3N0Q2FuYXJ5VmFsaWRhdGlvbkFjdGlvbi5hY3Rpb249PT1CLlN3aXRjaFZpZXcmJihLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uLnZpZXdJZD1LLmN1cnJlbnRWaWV3SWQpLFo/Sy5pbml0aWFsVmlld0lkPUsuY3VycmVudFZpZXdJZD1aOksucG9zdENhbmFyeVZhbGlkYXRpb25BY3Rpb24uYWN0aW9uPT09Qi5SZWRpcmVjdCYmSy52aWV3X29uUmVkaXJlY3QoSy5wb3N0Q2FuYXJ5VmFsaWRhdGlvbkFjdGlvbi5yZWRpcmVjdFVybCxLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uLnJlZGlyZWN0UG9zdFBhcmFtcyxLLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uLmlzSWRwUmVkaXJlY3QpKSxLLnZpZXdfb25TZXRQZW5kaW5nUmVxdWVzdCghMSksSy5hc3luY0luaXRSZWFkeSghMCl9KSl9KCl9fSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigxKSxvPW4oNiksYT1uKDkpLHI9bigxOSkscz1uKDI0KSxjPW4oMTE1KSxkPWEuSGVscGVyLGw9by5TdHJpbmcsdT17bG9hZFRlbmFudEJyYW5kaW5nOmZ1bmN0aW9uKGUpe3ZhciB0PXt9O2lmKGUpe3ZhciBuPVsiQm9pbGVyUGxhdGVUZXh0IiwiVXNlcklkTGFiZWwiLCJUaWxlTG9nbyIsIlRpbGVEYXJrTG9nbyIsIkJhbm5lckxvZ28iLCJCYWNrZ3JvdW5kQ29sb3IiLCJJbGx1c3RyYXRpb24iLCJLZWVwTWVTaWduZWRJbkRpc2FibGVkIiwiVXNlVHJhbnNwYXJlbnRMaWdodEJveCJdLG89ZVswXXx8e30sYT1lWzFdfHx7fTtpLnV0aWxzLmFycmF5Rm9yRWFjaChuLGZ1bmN0aW9uKGUpe3RbZV09YVtlXXx8b1tlXXx8IiJ9KSx0LlRpbGVEYXJrTG9nb3x8KHQuVGlsZURhcmtMb2dvPXQuVGlsZUxvZ28pfXJldHVybiB0fSxnZXRQYWdlQnJhbmRpbmc6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXt9O3JldHVybiBlJiYoaS5iYW5uZXJMb2dvVXJsPWUuQmFubmVyTG9nbyksZSYmKGUuQmFja2dyb3VuZENvbG9yfHxlLklsbHVzdHJhdGlvbik/KGkuY29sb3I9ZS5CYWNrZ3JvdW5kQ29sb3IsaS5iYWNrZ3JvdW5kSW1hZ2VVcmw9ZS5JbGx1c3RyYXRpb24saS51c2VUcmFuc3BhcmVudExpZ2h0Qm94PWUuVXNlVHJhbnNwYXJlbnRMaWdodEJveCxpLnVzZUltYWdlTWFzaz0hMCk6dCYmKHQuYmFja2dyb3VuZEltYWdlSW5kZXg+PTB8fHQuYmFja2dyb3VuZExvZ29JbmRleD49MHx8dC5iYWNrZ3JvdW5kQ29sb3J8fHQuZnJpZW5kbHlBcHBOYW1lKT8odC5iYWNrZ3JvdW5kSW1hZ2VJbmRleD49MCYmKGkuYmFja2dyb3VuZEltYWdlVXJsPXMobC5mb3JtYXQoIi4vezB9LmpwZyIsdC5iYWNrZ3JvdW5kSW1hZ2VJbmRleCkpLGQuaXNTdHlsZVN1cHBvcnRlZCgiYmFja2dyb3VuZFNpemUiKSYmKGkuc21hbGxJbWFnZVVybD1zKGwuZm9ybWF0KCIuL3swfS1zbWFsbC5qcGciLHQuYmFja2dyb3VuZEltYWdlSW5kZXgpKSkpLHQuYmFja2dyb3VuZExvZ29JbmRleD49MCYmKGkuYmFja2dyb3VuZExvZ29Vcmw9YyhsLmZvcm1hdCgiLi97MH0ucG5nIix0LmJhY2tncm91bmRMb2dvSW5kZXgpKSksaS5jb2xvcj10LmJhY2tncm91bmRDb2xvciwKaS5mcmllbmRseUFwcE5hbWU9dC5mcmllbmRseUFwcE5hbWUpOnQmJnQudXJsTGVnYWN5QmFja2dyb3VuZExvZ28/aS5iYWNrZ3JvdW5kTG9nb1VybD10LnVybExlZ2FjeUJhY2tncm91bmRMb2dvOm4+PTAmJihpLmJhY2tncm91bmRJbWFnZVVybD1yKGwuZm9ybWF0KCIuL3swfS5qcGciLG4pKSxkLmlzU3R5bGVTdXBwb3J0ZWQoImJhY2tncm91bmRTaXplIikmJihpLnNtYWxsSW1hZ2VVcmw9cihsLmZvcm1hdCgiLi97MH0tc21hbGwuanBnIixuKSkpKSxpfSxnZXRNZXJnZWRCcmFuZGluZzpmdW5jdGlvbihlLHQsbil7dmFyIGk7cmV0dXJuIG4/aT10OihpPWUsaS5CYW5uZXJMb2dvPXQmJnQuQmFubmVyTG9nbyxpLkJvaWxlclBsYXRlVGV4dD10JiZ0LkJvaWxlclBsYXRlVGV4dCxpLktlZXBNZVNpZ25lZEluRGlzYWJsZWQ9dCYmdC5LZWVwTWVTaWduZWRJbkRpc2FibGVkKSxpfX07ZS5leHBvcnRzPXV9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3JldHVybiBuKG8oZSkpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGFbZV18fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrZSsiJy4iKX0oKX12YXIgYT17Ii4vMC1zbWFsbC5qcGciOjIwLCIuLzAuanBnIjoyMSwiLi8xLXNtYWxsLmpwZyI6MjIsIi4vMS5qcGciOjIzfTtpLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmtleXMoYSl9LGkucmVzb2x2ZT1vLGUuZXhwb3J0cz1pLGkuaWQ9MTl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9iYWNrZ3JvdW5kcy8wLXNtYWxsXzEzOGJjZWU2MjRmYTA0ZWY5Yjc1ZTg2MjExYTlmZTBkLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9iYWNrZ3JvdW5kcy8wX2E1ZGJkNDM5M2ZmNmE3MjVjN2U2MmI2MWRmN2U3MmYwLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9iYWNrZ3JvdW5kcy8xLXNtYWxsXzg0N2NkMjRjM2Y2YTFjZDVjNzk0Yzk1ODIxY2U1MzE1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9iYWNrZ3JvdW5kcy8xXzlkNjU3ZGNjMTk5YWNiZTk1NTliODllM2U3YWZhYzljLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3JldHVybiBuKG8oZSkpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGFbZV18fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrZSsiJy4iKX0oKX12YXIgYT17Ii4vMC1zbWFsbC5qcGciOjI1LCIuLzAuanBnIjoyNiwiLi8xLXNtYWxsLmpwZyI6MjcsIi4vMS5qcGciOjI4LCIuLzEwLXNtYWxsLmpwZyI6MjksIi4vMTAuanBnIjozMCwiLi8xMS1zbWFsbC5qcGciOjMxLCIuLzExLmpwZyI6MzIsIi4vMTMtc21hbGwuanBnIjozMywiLi8xMy5qcGciOjM0LCIuLzE0LXNtYWxsLmpwZyI6MzUsIi4vMTQuanBnIjozNiwiLi8xNS1zbWFsbC5qcGciOjM3LCIuLzE1LmpwZyI6MzgsIi4vMTYtc21hbGwuanBnIjozOSwiLi8xNi5qcGciOjQwLCIuLzE3LXNtYWxsLmpwZyI6NDEsIi4vMTcuanBnIjo0MiwiLi8xOC1zbWFsbC5qcGciOjQzLCIuLzE4LmpwZyI6NDQsIi4vMTktc21hbGwuanBnIjo0NSwiLi8xOS5qcGciOjQ2LCIuLzItc21hbGwuanBnIjo0NywiLi8yLmpwZyI6NDgsIi4vMjAtc21hbGwuanBnIjo0OSwiLi8yMC5qcGciOjUwLCIuLzIxLXNtYWxsLmpwZyI6NTEsIi4vMjEuanBnIjo1MiwiLi8yMi1zbWFsbC5qcGciOjUzLCIuLzIyLmpwZyI6NTQsIi4vMjMtc21hbGwuanBnIjo1NSwiLi8yMy5qcGciOjU2LCIuLzI0LXNtYWxsLmpwZyI6NTcsIi4vMjQuanBnIjo1OCwiLi8yNS1zbWFsbC5qcGciOjU5LCIuLzI1LmpwZyI6NjAsIi4vMjYtc21hbGwuanBnIjo2MSwiLi8yNi5qcGciOjYyLCIuLzI3LXNtYWxsLmpwZyI6NjMsIi4vMjcuanBnIjo2NCwiLi8yOC1zbWFsbC5qcGciOjY1LCIuLzI4LmpwZyI6NjYsIi4vMjktc21hbGwuanBnIjo2NywiLi8yOS5qcGciOjY4LCIuLzMtc21hbGwuanBnIjo2OSwiLi8zLmpwZyI6NzAsIi4vMzAtc21hbGwuanBnIjo3MSwiLi8zMC5qcGciOjcyLCIuLzMxLXNtYWxsLmpwZyI6NzMsIi4vMzEuanBnIjo3NCwiLi8zMi1zbWFsbC5qcGciOjc1LCIuLzMyLmpwZyI6NzYsIi4vMzMtc21hbGwuanBnIjo3NywiLi8zMy5qcGciOjc4LCIuLzM0LXNtYWxsLmpwZyI6NzksIi4vMzQuanBnIjo4MCwiLi8zNS1zbWFsbC5qcGciOjgxLCIuLzM1LmpwZyI6ODIsIi4vMzYtc21hbGwuanBnIjo4MywiLi8zNi5qcGciOjg0LCIuLzM3LXNtYWxsLmpwZyI6ODUsIi4vMzcuanBnIjo4NiwiLi8zOC1zbWFsbC5qcGciOjg3LCIuLzM4LmpwZyI6ODgsIi4vMzktc21hbGwuanBnIjo4OSwiLi8zOS5qcGciOjkwLCIuLzQtc21hbGwuanBnIjo5MSwiLi80LmpwZyI6OTIsIi4vNDAtc21hbGwuanBnIjo5MywiLi80MC5qcGciOjk0LCIuLzQxLXNtYWxsLmpwZyI6OTUsIi4vNDEuanBnIjo5NiwiLi80Mi1zbWFsbC5qcGciOjk3LCIuLzQyLmpwZyI6OTgsIi4vNDMtc21hbGwuanBnIjo5OSwiLi80My5qcGciOjEwMCwiLi80NC1zbWFsbC5qcGciOjEwMSwiLi80NC5qcGciOjEwMiwiLi80NS1zbWFsbC5qcGciOjEwMywiLi80NS5qcGciOjEwNCwiLi81LXNtYWxsLmpwZyI6MTA1LCIuLzUuanBnIjoxMDYsIi4vNi1zbWFsbC5qcGciOjEwNywiLi82LmpwZyI6MTA4LCIuLzctc21hbGwuanBnIjoxMDksIi4vNy5qcGciOjExMCwiLi84LXNtYWxsLmpwZyI6MTExLCIuLzguanBnIjoxMTIsIi4vOS1zbWFsbC5qcGciOjExMywiLi85LmpwZyI6MTE0fTtpLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmtleXMoYSl9LGkucmVzb2x2ZT1vLGUuZXhwb3J0cz1pLGkuaWQ9MjR9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8wLXNtYWxsX2U0NjA5ZmYzZDMwNDBiNmNkOTc3M2FjMDFiOWY5M2NiLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8wXzAxODA1MjkwNTkwMjgyMWRlOWQ0NTgyYjhmZWU4ZGZmLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xLXNtYWxsX2MxNTIxYTczMjE0ODAzMmNhYWVhNTdmZTU0YzA1OTJiLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xX2U4MjIwNGYzNzE1NzY3ZmIzZTg5NTcwYmQzMTkyY2E2LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xMC1zbWFsbF9kMzk3OGJiY2I4MGM4MDg2NTI4Mjg0N2M1NGYyOTU1Yy5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTBfOTU0OTM1MDYxYTViNzZjNjc0ZWZkZWM3YTMxMDU0MGYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzExLXNtYWxsXzU2ODU5NTVkYzQxOTg3ZWQwNmUxZWUzYWRlMjZiMDFmLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xMV9jZmU5Y2I2MmViYjY2MDVlMDNmYjhkMjg1YzYxMWI0OC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTMtc21hbGxfYTE5ZTdiY2E0NDY2MDU5ZWFkZDM0NGFiMTFlNjkwNGYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzEzX2JiZTI5NTRlNWFkZTNhODY3MWU3MDkwNGYzMjMwM2IxLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xNC1zbWFsbF84ODYxNTYwNTlkMDczMGZiZDJmMDU2ZGQzZjM1YzMyNS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTRfMDYwMTlmNWZiNmIyYmEzOGI4NmRjZTZhMjNmNzVjZGQuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzE1LXNtYWxsX2ZiMmFlNWExMWQxZjQ1MDVkYjg1NWMyYjYzZThjYTk1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xNV82MDI4ZWE4MTMzYjQ2NGRmNDMwZjQ0NzI3ODcyZjM4NC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTYtc21hbGxfZTdhYjliYmE2MjljYmU4NGRiZWI4N2Y2OWQyYTBmNmMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzE2XzExMmY4ZjAzYzRhZmZlNGIzYWM3MmZjY2ZmZGUxYzdlLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xNy1zbWFsbF9hZjZmY2ZmNTdmMTNkYjZhMTlhZjQzZTU0MWM2NzM5MS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTdfYTMzYzgwNmIyYzdhNmU1Nzg5YjljZGM5NDIzMjE4ZWMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzE4LXNtYWxsXzJjYjA3OWI2ZWEzYmVmMDI1MmE5MjE5ZWQ2NGM1YzE0LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8xOF81YzMzNDEyMTljODhiMDM5MTAwOGQzOGY2ZjNlMzU3MS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMTktc21hbGxfMmQ3MDY0OTI1YzhhYjg2MDgxYWMyZGMwYjhiOTE1MDYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzE5XzhjZWMxY2IxMDI0YzZkZWRmZGY2ZDRlNjI2ODhkMWU1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yLXNtYWxsX2EwZDIxYmU1MjEzYmZhMjY2N2EwMWRkYzAwZTU5ODg1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yXzQ5ZDMxYWE3ODQ5YzA2N2IyMDhmMDQ1N2Q4YjFiYjc1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yMC1zbWFsbF8xM2I4MjhlMzE1NWZmOGFhYTIxODY3YTg1NTIyYWFjNy5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjBfNmUyZjQxMWMwZjc4NjUwN2FkYzc1NmY0MDk3MmU1OGQuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzIxLXNtYWxsXzhjNjUxMWZlNDU5NDRiNjY4YjNlYmFjOTA2MjM4YjIzLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yMV9hMDljOGE1ODM1OThkNDg0OTcyZmFhNTlmMDgzOGYwNi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjItc21hbGxfZDk2YjgxYjM5NGVhYjA4NTIwNGYwY2U2ZTFiMDA1MmEuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzIyXzA3N2MzY2E0OTA1YTcwNzIzMzQ2ZmVmMjE4ZTQzNWZhLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yMy1zbWFsbF9hMGRiYTgyZjcwZmYzMDI1OTJmZjkxNTZiZWM5OTBmZi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjNfZWFkYjVjZDNmMTk5ZjkxMjhkNGM0NjhmYTE5NzgzYjkuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzI0LXNtYWxsXzJiMTIzZDkwYWQ1MThhNzBkNDhkOGE4ZTIxOTA2NGQ2LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yNF9iZTg5NTllMzVhN2YwZmU0NWJkY2VlOTcyYzU0MWZjMi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjUtc21hbGxfZDkyMGI5NmRjNDZlYzhkYTI0MWVhNWI1YjQ1MzE2NmMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzI1XzBlOWQ3YmIwMGFiYzgxZWIxYmY3MGNiZjM5NjFiMjNiLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yNi1zbWFsbF80ZDVmYmM5YjJiZDk1ODczZmQxMjY1NjRkM2U5ZTFiNC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjZfMThmYjY0NjhhOWZkMGQwYzM3MDhmYmE1NGFhODQ0MzYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzI3LXNtYWxsXzM1MDUwYTlhYjk0ZTJmOGM2MWU2ZjEyZjJhYmUwMzNjLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yN18xNWE0ZGI3YzQwODE4YzJmODZkNTgyZDRlNzM3MThiNC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjgtc21hbGxfOTg4Y2EwYjMzYjQxOThhN2ZmZWVhOWYwZGIzMDgwNDguanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzI4XzY1ZjdhYWNjYTYxOTNhNzU3NjVhMTMyY2E4ZTcyNjkwLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8yOS1zbWFsbF9mZDk2NmNjODgyNTkyNjU1MGY5M2E5YzYzNDliMzZkZi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMjlfMDFhNzRkYTY0MTZjYWNjNTMzNDI0YjU0MzVjMGViYzIuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzMtc21hbGxfODFlYjZmNWI1NjgxNDRkZjZjZTM1ZWEzY2ZkNDgzMmMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzNfNzM2N2E5NDcyN2NiNTI1MzhlNDJlNzFiNzM3YzlkODguanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzMwLXNtYWxsXzg1YzQ5ZDY0NTM2MjFmYWU4OGMxN2M1ZTc4OWNhNTEzLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zMF83YWIzZDAyMGNmMDEwYzk4MmU3OWRjYjU1OTc0ZDZmNC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzEtc21hbGxfNzIxNmY3N2I0MjE3OWE3ZjE4N2ZkZTc3NmUwZGEwZmMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzMxX2NjYzM2ODcyNDQ0MTlkODE2YTZhZTFhYzkzMDU0YmM1LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zMi1zbWFsbF8xMmY2NTM4YjI2NTY5ZmUwM2QzZGIzODk4ZjJhNGJhZC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzJfYWNlMzBmYWI2NzdhMjQ4NjI3Y2Y5MWEyYzQzYjE0OGYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzMzLXNtYWxsXzEzOGJjZWU2MjRmYTA0ZWY5Yjc1ZTg2MjExYTlmZTBkLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zM19hNWRiZDQzOTNmZjZhNzI1YzdlNjJiNjFkZjdlNzJmMC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzQtc21hbGxfMmRjYjljOWY3NjZiYzk5MDlkZDk4NDY0ZjgzOWQwNzEuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzM0X2IzNzJhZjdmMDNiMjEwNmRkZTNjODUxMTY1MzI1N2U2LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zNS1zbWFsbF8yM2NhMjViZWE3ZmJmODc4MGEzMWM0YjViNWM1OGVlZi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzVfNmJlNTdhZGJhZDZlNTQ0MWZjNjM1ZmRjNTk0MjA4MmMuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzM2LXNtYWxsXzliMDQzNThlMjAzMTkzZGIzODk1ODFmYzMwOWVkYzU0LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zNl8yYjc1MGZmMTI5MmJmYjEyMGQ3YzYxMmM4ZjllMjg1Ni5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzctc21hbGxfM2Q1N2Y4MDg2MDk0ZDU4MTNjYTAzOTVlMTFiMjExNWQuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzM3XzlkZGY2NzEyNzhlZGUxYzE1YjNiOWE1MjhhZjA4OTRhLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zOC1zbWFsbF9iYjgxOTE4MWRhMjZkZTkzNzQwNmUzYzRjYWRlMDczMi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvMzhfN2JlNmMyYjA4M2RlMWFjN2Y2ZDVmY2YxMjExM2U3MWUuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzM5LXNtYWxsXzdiMzA5MWMyZjVkZGM1MzRjMzFiMjExNDZlNzEwOGI2LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy8zOV85MzFkYTNiNzM4NDFmOWQ1MzQzMDlhNjBhNjRmZDEwYi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNC1zbWFsbF82NzAwNGEwZDdiYWQwOTJhNDc3NTk3YjAxNzVjNjA2Mi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNF84YmMyNzQ1MTRjNmM0YzRhODhlZTgyZGU3Y2ZlYjkwNi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNDAtc21hbGxfOTkwMzk4ZTI4YjMyYjI4ZjUyNTg5YmVmNmQxZjBhNWYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzQwXzBmNjg4YTExOGUyNGI1NmMxNzEzNDgyNDRiOWIwN2Y4LmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy80MS1zbWFsbF9jNjRjOWZlYjQ5ZDY5NmY2ODMxNDA4YmE1OWFmYjVlYy5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNDFfZDY1YWI3ZmE5YTkzYWZhZDA4ZjI2YTMzZDcwNTRiMzguanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzQyLXNtYWxsXzVjZTA1YTJhZTZjYTZlMmExZmM0NjY4OGRiZTQyZTgwLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy80Ml8xNTVjNWZjZjA4ZGMwYWJmZDhmMTRjNjVkN2Q1NjU0ZC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNDMtc21hbGxfMGIwZmU1MzdlMzQzYWZmMmQ2MzJmYjFiMTdkMmUxMmEuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzQzXzk0MmM0YWNmYTQ2NWMzZTllM2ZmNGM1YTM0YzY0Y2QzLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy80NC1zbWFsbF8zMjlhMzlhM2E4Yzk4YjRjYjZlN2Y0Njc1NDQzYTE5YS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNDRfN2YyMmFjYjZhZDRhMTdhZTAyNjU3NjlmY2U1YzIyYTYuanBnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGJhY2tncm91bmRzLzQ1LXNtYWxsX2QxYmQ2NzE5MzVhZGMxY2RmNjM5NTZlOGViOWFmYWMyLmpwZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBiYWNrZ3JvdW5kcy80NV80YmQ4NmI1YWFmYmYyNTNiZjk0ZWM4OTI1MGI4MGJlZS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNS1zbWFsbF9mNWJhMmUyNWJjMzc2NGFhODNhODU4NTNkZWI1M2Q4Ny5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNV84NTU2Y2NhMjFkZjNiN2UzZWI3MTQ0NDNiNmNlYzIwOC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNi1zbWFsbF9jMjQ5YWM1M2JjNWYwYjc5OTcyZGQ0NGIxY2E5NTAwOS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNl9kNDA1Y2U0ZWRmNDlkODNjOTk2NDhhNjdhZmVmOTA1NC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvNy1zbWFsbF9lMTg3M2U2YWQ1M2EwYWY0NDRmNWFkZGI2N2VhY2VkNi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvN18yOGM2Nzg5YzgwOTU5MmY5NDhkNmFkMTY1YmM5N2I0ZC5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvOC1zbWFsbF81NTI4MzJjMWUwMWNiM2UzZDViMjI0NzQ4OTAxZTEyNy5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvOF8xMjhjZDExN2VjMTQxNTViNjg1OWQxNzUwODNjMzA5NS5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvOS1zbWFsbF9hY2NkZjM1ZDEzNTE5ZTU4MzA5YTc1YmQwZjUzNDBhNi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwYmFja2dyb3VuZHMvOV84MzJkMjE5NzZjNWQ1OTZmMmNlMWU2NzE0YmIyNjgwMi5qcGcifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtyZXR1cm4gbihvKGUpKX1mdW5jdGlvbiBvKGUpe3JldHVybiBhW2VdfHxmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2UrIicuIil9KCl9dmFyIGE9eyIuLzAucG5nIjoxMTYsIi4vMS5wbmciOjExNywiLi8xMC5wbmciOjExOCwiLi8xMS5wbmciOjExOSwiLi8xMi5wbmciOjEyMCwiLi8xMy5wbmciOjEyMSwiLi8xNC5wbmciOjEyMiwiLi8xNS5wbmciOjEyMywiLi8xNy5wbmciOjEyNCwiLi8xOC5wbmciOjEyNSwiLi8xOS5wbmciOjEyNiwiLi8yLnBuZyI6MTI3LCIuLzIwLnBuZyI6MTI4LCIuLzIxLnBuZyI6MTI5LCIuLzIyLnBuZyI6MTMwLCIuLzIzLnBuZyI6MTMxLCIuLzI0LnBuZyI6MTMyLCIuLzI1LnBuZyI6MTMzLCIuLzI2LnBuZyI6MTM0LCIuLzI3LnBuZyI6MTM1LCIuLzI4LnBuZyI6MTM2LCIuLzI5LnBuZyI6MTM3LCIuLzMucG5nIjoxMzgsIi4vMzAucG5nIjoxMzksIi4vMzEucG5nIjoxNDAsIi4vMzIucG5nIjoxNDEsIi4vMzMucG5nIjoxNDIsIi4vMzQucG5nIjoxNDMsIi4vMzUucG5nIjoxNDQsIi4vMzYucG5nIjoxNDUsIi4vMzcucG5nIjoxNDYsIi4vMzgucG5nIjoxNDcsIi4vMzkucG5nIjoxNDgsIi4vNC5wbmciOjE0OSwiLi80MC5wbmciOjE1MCwiLi80MS5wbmciOjE1MSwiLi80Mi5wbmciOjE1MiwiLi80My5wbmciOjE1MywiLi80NC5wbmciOjE1NCwiLi80NS5wbmciOjE1NSwiLi80Ni5wbmciOjE1NiwiLi80Ny5wbmciOjE1NywiLi80OC5wbmciOjE1OCwiLi80OS5wbmciOjE1OSwiLi81LnBuZyI6MTYwLCIuLzUwLnBuZyI6MTYxLCIuLzUxLnBuZyI6MTYyLCIuLzYucG5nIjoxNjMsIi4vNy5wbmciOjE2NCwiLi84LnBuZyI6MTY1fTtpLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmtleXMoYSl9LGkucmVzb2x2ZT1vLGUuZXhwb3J0cz1pLGkuaWQ9MTE1fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMF8zYjZmMDdlNmQ4YzU0ZTZlNzMwOTVlYzZkY2JkMTI0Yi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMV83OWNlOWYwN2IzMmYxMzEyMGIyNjkyNmQ3NjY0ZjA0OS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMTBfMTdmZDA2ODg3NTZiZjQwYThkMTJmNmVlNTJmN2YxYTcucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzExXzk4MmM0M2EzZmI0MjlmOTk5MmExZjc4MTg4ZGViNTEwLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8xMl9lMTU4Njk0OTRhMTQ0NjE2OTE1OWM3YjFhNWU5NTljMC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMTNfOTVhMDUzNWUzNDY0ZWJmOTQ3MTZiYWRlZTRlZDVhNmYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzE0XzI5ODE3NjY1N2Y4MDY5ZWE1MjIwYzIzYWRiNmI3MGJlLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8xNV9hODQ2NDE2NjAyZmI5NTc4YWJlNDlkYTY1MmJiY2RjMS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMTdfMzdlNGVjYmYzOGIyNmJmOTZhOGUxMjY1ZGQxNTM3NWIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzE4XzE0MDQ5MTI1ZWMyMGJkZDVkNmM2ZjgyY2VmY2E0NjE5LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8xOV9iZTc5M2I3NjYyZDYxZmE5ZDU2MDg0MzE3ODE2MGYxYi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMl9jNjAxZGRiN2U5OWE4ZTY5NDYxOWFmOWNhMDVkOTY1ZC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMjBfNzFjNWRkMzcxNTk2MjczZmQzNDZiZDBjNmViZThmYjkucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzIxX2NjZjk0NDUxNjRmYzk4ZmI3MzUxNTQ0YTNkNDJhODZkLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8yMl9hZDA4MzIxYmEyOTMwYjE3YWJmZmM2MGRmZDIzNDY5ZS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMjNfNDBjODc0NjgzZTMyNjQxZjc4MzE3OWU4ZjU2NjAzYjcucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzI0X2U5NjdhZTQzYjVhOTJmYzU3YzVkNGRiNDdmZDg5MGQ1LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8yNV9jNjJlODRhZjAyMzlmYjg3OTYxMGI5Y2VmY2MxY2U5OC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMjZfN2JkZWQ1N2NiOTlmYjhkNTQyZTFkNTBlODY3MTJlMTkucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzI3Xzg1MTg4N2NhYWFiMWI3YTRlNDUwOTZmYmViZjg3NTdmLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8yOF83NzNhMjViNjI2MTYyNjgwODBlYmRhNWYyM2M0ZWY1Ni5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMjlfNzExOTY0MjcwZjVkM2RmODJlODZlOTc0YzljMTM5YTQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzNfOTE3Yzk1MTg0ZmM0ZjlmNmU1ZDhkMWNmN2ZhYTcxYWYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzMwXzFmNWIwNDE0NDE2ZGQ3YzRjNmM5Y2IzZmZiZjg2ZDBmLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8zMV9lMTZkNTA5NjAzNjc2N2JkNDBkMjJiYzM2ZTVhZGY4Zi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMzJfZDEyYTI4MWFjYzFiZTQwYTZlMzljMjE4Yzg5MWJmNjgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzMzX2ZiNjU4ZjljN2EyM2EwYmU2MmVlNTk4ZjVjNjE0ZjNmLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8zNF84ZDg0NDEwM2ZkMjA1NDAxMTcyMDQ4NzQ1NWU1YzNhMS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMzVfZTZiZjMwOTcwNjExYzQ0OTIxYTlkMTZjNmQ3NWJhZWQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzM2XzhiNTFlODYxZjYzMzBhMzdhMTgxYzVjNDhhYjE4Y2Y3LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy8zN181MzNlMjkzZjBjODk0N2FkYTY1M2I0N2MwMGUzOTRlMi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvMzhfNDBjZDQyODU2NzY0NGVhYmYyZWRlMzc1MmNmZTRiM2MucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzM5XzY1MTAyNjRkNDZiOTFlMzU0MWEwYzkwN2Q3OWEyMTkzLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy80XzFkOTI5MDI1OTY3NzNmZWYxZWZjMzNkOTllYTE4NjBhLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy80MF8wMmU3OTNmZWNlMTQzM2U2YWQwMzUxYzI0NTE5ZmQ5My5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvNDFfYzk2M2FlMjAwNmFiYjQ4NTVjMmIyYmNlYzliOTBmNDEucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzQyXzM0N2MyZGFjYmZlMDQwYTYxNGVlNDY3YWFjM2FiNzkxLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy80M185YTgyOWNlMzJlNjU3ZWIwODU0Y2E5YmZkNzkzM2FjZS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvNDRfMDhlZDY1N2U0OGYxNDU4NjQxYjVmODc5ZDgyMDA0Y2QucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzQ1X2U5NDUxODZmOGExYzE1MWRmYzBlMGI3ZWZmOThhYTFmLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy80Nl9jNGY3YmQ4NzMwMmRhNTFiNjJlODc3YmRkNDFhYWRlYy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvNDdfODE2NTkxYmVlYWEzOGY1NzZmZDUzN2UzYjU0MmM5ODMucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzQ4XzEwNjRjYzIyYTVjODkwMTk3OWNmMjRlZjRiN2JjM2JiLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy80OV8yMzg3YzYyMTQ0NjJlYjIzNWEzYmU4YWI5ZDAxZWQyZC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvNV9iMzdiYWJhOWViZDIwOThmOTFhZWVlZTVkYWUzNmFhNS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwbG9nb3MvNTBfNjdkYWVmYzQ1YTUzM2EyMjFkNzA2ZWRhOTE0NWFlNTEucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGxvZ29zLzUxXzlhODI5Y2UzMmU2NTdlYjA4NTRjYTliZmQ3OTMzYWNlLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy82X2IwOTU3NGZlMzg3MThkY2NmY2I4OTUyMWQyMDc5ZDlkLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy83X2Q4Nzg5YTBjZTJjMGUxYTYzYjBhYjlmYWFkM2E2OTgyLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBsb2dvcy84XzhhNTg2NTliMDVhMGNlMmRhMGM0YjVjZDZlMmM3YjIwLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXtpZihnKXJldHVybiBzLkRldmljZUF1dGg7aWYoYj09PWMuRmlkbylyZXR1cm4gcy5GaWRvQXV0aDt0aHJvdyJDYW5hcnkgVmFsaWRhdGlvbjogRmxvdyBJRHMgbm90IGtub3duLiJ9ZnVuY3Rpb24gbigpe3JldHVybiBtP3thY3Rpb246ZC5SZWRpcmVjdCxyZWRpcmVjdFVybDp2LHJlZGlyZWN0UG9zdFBhcmFtczpoLGlzSWRwUmVkaXJlY3Q6ITF9OnthY3Rpb246ZC5Td2l0Y2hWaWV3fX12YXIgbD10aGlzLHU9ZSxwPXUuc0V4dGVybmFsQ2FuYXJ5LGY9dS51cmxDYW5hcnlWYWxpZGF0aW9uLGc9ISF1LnNSZW1vdGVDb25uZWN0QXBwTmFtZSxtPSEhdS5mSXNSZW1vdGVDb25uZWN0U2lnbnVwLHY9dS51cmxTaWduVXAsaD11Lm9TaWduVXBQb3N0UGFyYW1zLGI9dS5pUGFydG5lckNhbmFyeVNjZW5hcmlvO2wudmFsaWRhdGVBc3luYz1mdW5jdGlvbigpe3JldHVybiBuZXcgcihmdW5jdGlvbihlLHIpe3ZhciBzPXQoKTtzLkNhbmFyeT1wO3ZhciBjPW4oKSxkPW5ldyBvKHtjaGVja0FwaUNhbmFyeTohMSx3aXRoQ3JlZGVudGlhbHM6ITB9KTtkLkpzb24oZixzLGZ1bmN0aW9uKCl7ZShjKX0sZnVuY3Rpb24oZSl7cihuZXcgaS5DYW5hcnlWYWxpZGF0aW9uRXJyb3IoZSxzLkNvbmZpcm1hdGlvblZpZXdJZCxjKSl9LGEuRGVmYXVsdFJlcXVlc3RUaW1lb3V0KX0pfX12YXIgbz1uKDE2NyksYT1uKDUpLHI9bigxMSkscz17RGV2aWNlQXV0aDp7UGFnZUlkOiJDb252ZXJnZWRSZW1vdGVDb25uZWN0IixBY3Rpb25JZDoiT0F1dGgyRGV2aWNlQXV0aCIsQ29uZmlybWF0aW9uVmlld0lkOmEuUGFnaW5hdGVkU3RhdGUuUmVtb3RlQ29ubmVjdENhbmFyeVZhbGlkYXRpb259LEZpZG9BdXRoOntQYWdlSWQ6IlBhZ2luYXRlZExvZ2luIixBY3Rpb25JZDoiRmlkb0dldCIsQ29uZmlybWF0aW9uVmlld0lkOmEuUGFnaW5hdGVkU3RhdGUuUGFydG5lckNhbmFyeVZhbGlkYXRpb259fSxjPWkuUGFydG5lckNhbmFyeVNjZW5hcmlvPXtVbmRlZmluZWQ6MCxGaWRvOjF9LGQ9aS5DYW5hcnlWYWxpZGF0aW9uU3VjY2Vzc0FjdGlvbj17U3dpdGNoVmlldzoxLFJlZGlyZWN0OjJ9O2kuQ2FuYXJ5VmFsaWRhdGlvbkVycm9yPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzO2kubmFtZT0iQ2FuYXJ5VmFsaWRhdGlvbkVycm9yIixpLm1lc3NhZ2U9IkNhbmFyeSB2YWxpZGF0aW9uIGZhaWxlZCwgdXNlciBjb25maXJtYXRpb24gcmVxdWlyZWQuIixpLnN0YWNrPShuZXcgRXJyb3IpLnN0YWNrLGkuaW5uZXJFcnJvcj1lLGkuY29uZmlybWF0aW9uVmlld0lkPXQsaS5wb3N0Q29uZmlybWF0aW9uQWN0aW9uPW59LGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7dmFyIGk9big3KSxvPW4oMTY4KSxhPW4oNSkscj1uKDYpLHM9big5KSxjPXdpbmRvdyxkPWMuJENvbmZpZ3x8Yy5TZXJ2ZXJEYXRhfHx7fSxsPXIuT2JqZWN0LHU9cy5RdWVyeVN0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlPXtocGdpZDpkLmhwZ2lkfHwwLGhwZ2FjdDpkLmhwZ2FjdHx8MCxBY2NlcHQ6Yn07cmV0dXJuIF8mJmQuYXBpQ2FuYXJ5JiYoZS5jYW5hcnk9ZC5hcGlDYW5hcnkpLGQuY29ycmVsYXRpb25JZCYmKGVbaF09ZC5jb3JyZWxhdGlvbklkKSxkLnNlc3Npb25JZCYmKGUuaHBncmVxdWVzdGlkPWQuc2Vzc2lvbklkKSxlfWZ1bmN0aW9uIG4oZSl7dmFyIHQ9ZTtpZihlJiYhcyhlKSl7dmFyIG49e307bC5mb3JFYWNoKGUsZnVuY3Rpb24oZSx0KXsidW5zYWZlXyI9PT1lLnN1YnN0cigwLDcpJiYoZT1lLnN1YnN0cig3KSksbltlXT10fSksdD1pLnN0cmluZ2lmeShuKX1yZXR1cm4gdCYmKHQ9dC5yZXBsYWNlKC9cPy9nLCJcXHUwMDNGIikpLHR9ZnVuY3Rpb24gcihlKXtlLmhlYWRlcnM9dCgpLGUud2l0aENyZWRlbnRpYWxzPVMsZS5icmVha0NhY2hlPXcsZS5yZXNwb25zZVR5cGU9VH1mdW5jdGlvbiBzKGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgZX1lPWV8fHt9O3ZhciBjPXRoaXMscD0zZTQsZj04ZTMsZz04MDAxLG09ODAwMix2PTEwMCxoPSJjbGllbnQtcmVxdWVzdC1pZCIsYj0iYXBwbGljYXRpb24vanNvbiIsXz1lLmNoZWNrQXBpQ2FuYXJ5IT09ITEsUz1lLndpdGhDcmVkZW50aWFsc3x8ITEsdz1lLmJyZWFrQ2FjaGV8fCExLFQ9ZS5yZXNwb25zZVR5cGV8fCIiLEM9ZS5ub3RpZnlPbkNsaWVudEFib3J0fHwhMTtjLkVycm9ycz1bXSxjLkpzb249ZnVuY3Rpb24oZSx0LG8scixzKXtmdW5jdGlvbiBsKGUsdCl7dmFyIG49e307aWYoNTAwPT09ZS5zdGF0dXMpdHJ5e249aS5wYXJzZShlLnJlc3BvbnNlVGV4dCl8fHt9fWNhdGNoKG8pe31pZighbi5lcnJvcil7dmFyIGE9ITEscj1mLHM9IlJlcXVlc3QgRmFpbGVkIC0tIE5vIFJlc3BvbnNlIGZyb20gU2VydmVyIjtzd2l0Y2godCl7Y2FzZSJ0aW1lb3V0IjpyPWcscz0iVGltZW91dCBFcnJvciIsYT0hMDticmVhaztjYXNlImFib3J0IjpyPW0scz0iQWJvcnRlZCI7YnJlYWs7Y2FzZSJlcnJvciI6ZS5zdGF0dXM+PTQwMCYmKGE9ITApO2JyZWFrO2Nhc2UicGFyc2VyZXJyb3IiOnM9IlVuYWJsZSB0byBwYXJzZSByZXNwb25zZSIsYT0hMH1uLmVycm9yPXtjb2RlOnIsbWVzc2FnZTpzLGRlYnVnTWVzc2FnZToiKHhociBzdGF0dXMgIitlLnN0YXR1cysiKSB4aHIucmVzcG9uc2VUZXh0OiAiK2UucmVzcG9uc2VUZXh0LHN0YWNrVHJhY2U6IiIsaXNGYXRhbDphfX1yZXR1cm4gbn1mdW5jdGlvbiB1KHQpe3Q9dHx8e307dmFyIG4sYT10LmVycm9yfHxudWxsLHM9e3N0YXJ0VGltZTpiLGVuZFRpbWU6KG5ldyBEYXRlKS5nZXRUaW1lKCl9O2lmKHQuYXBpQ2FuYXJ5JiYoZC5hcGlDYW5hcnk9dC5hcGlDYW5hcnksZGVsZXRlIHQuYXBpQ2FuYXJ5KSxhKXtuPWEuc3RhY2tUcmFjZSxuPW4mJm4uZW5jb2RlSnNvbj9uLmVuY29kZUpzb24oKToiIjt2YXIgbD1pLnN0cmluZ2lmeSh7Y29kZTphLmNvZGUsbWVzc2FnZTphLm1lc3NhZ2UsZGVidWc6YS5kZWJ1Z01lc3NhZ2Usc3RhY2t0cmFjZTpuLHJlcXVlc3RVcmw6ZX0pO2MuRXJyb3JzLnB1c2gobCksYy5FcnJvcnMubGVuZ3RoPnYmJmMuRXJyb3JzLnNoaWZ0KCksKGEuY29kZSE9PW18fEMpJiZyJiZyKHQscyl9ZWxzZSBvJiZvKHQscyl9ZnVuY3Rpb24gcCgpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGU9e2Vycm9yOntjb2RlOm0sbWVzc2FnZToiUmVxdWVzdCBGYWlsZWQhIixpc0ZhdGFsOiEwfX07dShlKX0sMCksbnVsbH12YXIgaD0hKCFvJiYhciksYj0obmV3IERhdGUpLmdldFRpbWUoKTtpZihfJiYhZC5hcGlDYW5hcnkpcmV0dXJuIHAoKTt2YXIgUz1uKHQpO2MuUG9zdChlLGEuQ29udGVudFR5cGUuSnNvbixTLGZ1bmN0aW9uKGUsdCl7aWYoaCl7dmFyIG49aS5wYXJzZSh0KTt1KG4pfX0sZnVuY3Rpb24oZSx0LG4saSl7aCYmdShsKHQsbixpKSl9LHMpfSxjLlBvc3Q9ZnVuY3Rpb24oZSx0LG4saSxhLHMpe3ZhciBkPXt0YXJnZXRVcmw6ZSxjb250ZW50VHlwZTp0LGRhdGE6bixyZXF1ZXN0VHlwZTpvLlJlcXVlc3RUeXBlLlBvc3QsdGltZW91dDpzfHxwLHN1Y2Nlc3NDYWxsYmFjazppLGZhaWx1cmVDYWxsYmFjazphLHRpbWVvdXRDYWxsYmFjazphfTtyKGQpLG8uSGFuZGxlci5jYWxsKGMsZCksYy5zZW5kUmVxdWVzdCgpfSxjLkdldD1mdW5jdGlvbihlLHQsbixpLGEpe3ZhciBzPXt0YXJnZXRVcmw6ZSxjb250ZW50VHlwZTp0LHJlcXVlc3RUeXBlOm8uUmVxdWVzdFR5cGUuR2V0LHRpbWVvdXQ6YXx8cCxzdWNjZXNzQ2FsbGJhY2s6bixmYWlsdXJlQ2FsbGJhY2s6aSx0aW1lb3V0Q2FsbGJhY2s6aX07cihzKSxvLkhhbmRsZXIuY2FsbChjLHMpLGMuc2VuZFJlcXVlc3QoKX0sYy5CZWFjb249ZnVuY3Rpb24oZSxpLG8sYSxyKXtpZihuYXZpZ2F0b3Iuc2VuZEJlYWNvbil7dmFyIHM9W10sZD1uKGkpLHA9dCgpO2RlbGV0ZSBwLkFjY2VwdCxkZWxldGUgcC5jYW5hcnksbC5mb3JFYWNoKHAsZnVuY3Rpb24oZSx0KXtzLnB1c2goW2UsdF0pfSk7dmFyIGY9bmF2aWdhdG9yLnNlbmRCZWFjb24odS5hZGQoZSxzKSxkKTtmJiZvP28oKTohZiYmYSYmYSgpfWVsc2UgYy5Kc29uKGUsaSxvLGEscil9fX0sZnVuY3Rpb24oZSx0LG4pe3ZhciBpPW4oNyksbz1uKDkpLGE9big2KSxyPWEuT2JqZWN0LHM9by5IdHRwQ29kZSxjPXdpbmRvdzt0LlJlcXVlc3RUeXBlPXtQb3N0OiJQT1NUIixHZXQ6IkdFVCJ9O3ZhciBkPXQuU3RhdGU9e1Vuc3VwcG9ydGVkOi0xLFVuc2VudDowLERvbmU6NCxUaW1lb3V0OjV9O3QuRXZlbnQ9e09uU3VjY2VzczoiYWpheHN1Y2Nlc3MiLE9uRXJyb3I6ImFqYXhlcnJvciIsT25UaW1lb3V0OiJhamF4dGltZW91dCJ9LHQuSGVscGVyPXtnZW5lcmF0ZVJlcXVlc3RTdHJpbmc6ZnVuY3Rpb24oZSl7dmFyIHQ9IiI7cmV0dXJuIGUmJnIuZm9yRWFjaChlLGZ1bmN0aW9uKGUsbil7KG58fCIiPT09bikmJih0Lmxlbmd0aD4wJiYodCs9IiYiKSx0Kz1lKyI9IituKX0pLHR9fSx0LkhhbmRsZXI9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQpe2V8fGguaXNTdWNjZXNzKCk/aiYmaih3LF8pOih0fHwhaC5pc1N1Y2Nlc3MoKSYmIUMpJiZxJiZxKHcsVCxULnN0YXR1c1RleHQpfWZ1bmN0aW9uIG4oKXtpZihrPW51bGwsQz0hMCxoLmNhbmNlbCgpLEcpe3ZhciBlPXtzdGF0dXM6cy5UaW1lb3V0LHN0YXR1c1RleHQ6InRpbWVvdXQifTtHKHcsZSxlLnN0YXR1c1RleHQpfX1mdW5jdGlvbiBsKGUpe2lmKGcoKSwhaC5pc0NvbXBsZXRlKCkmJiFULmNhbmNlbGVkJiZxKXt2YXIgdD17c3RhdHVzOnMuQ2xpZW50Q2xvc2VkUmVxdWVzdCxzdGF0dXNUZXh0OiJhYm9ydCJ9O3EoZSx0LHQuc3RhdHVzVGV4dCl9fWZ1bmN0aW9uIHUoZSl7aC5pc0NvbXBsZXRlKCl8fGYoZSl9ZnVuY3Rpb24gcChlKXtoLmlzQ29tcGxldGUoKSYmIUMmJmYoZSl9ZnVuY3Rpb24gZihlKXtnKCksXz1ULnJlc3BvbnNlVGV4dCx3PWUsdCgpfWZ1bmN0aW9uIGcoKXtrJiYoY2xlYXJUaW1lb3V0KGspLGs9bnVsbCl9ZnVuY3Rpb24gbSgpe0M9ITE7dmFyIGU9IndpdGhDcmVkZW50aWFscyJpbiBuZXcgWE1MSHR0cFJlcXVlc3Q7aWYoIXh8fGUpe3ZhciB0PVI7VD1uZXcgWE1MSHR0cFJlcXVlc3QsVC5vbnJlYWR5c3RhdGVjaGFuZ2U9cCxULmFkZEV2ZW50TGlzdGVuZXImJihULmFkZEV2ZW50TGlzdGVuZXIoImFib3J0IixsKSxULmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIix1KSksTSYmKHQ9by5RdWVyeVN0cmluZy5hcHBlbmRPclJlcGxhY2UodCwiXyIsKG5ldyBEYXRlKS5nZXRUaW1lKCkpKSxGLmxlbmd0aD4wP1Qub3BlbihBLHQsQixGLE4pOlQub3BlbihBLHQsQiksaC5jbGVhclJlc3BvbnNlKCksci5mb3JFYWNoKEgsZnVuY3Rpb24oZSx0KXtULnNldFJlcXVlc3RIZWFkZXIoZSx0KX0pLFQucmVzcG9uc2VUeXBlPVYsVC53aXRoQ3JlZGVudGlhbHM9VX1lbHNlIGMuWERvbWFpblJlcXVlc3Q/IUJ8fEZ8fE58fER8fFB8fEl8fFU/eT0hMTooVD1uZXcgWERvbWFpblJlcXVlc3QsVC5vbmVycm9yPWZ1bmN0aW9uKCl7dighMSl9LFQub25sb2FkPWZ1bmN0aW9uKCl7dighMCl9LFQub3BlbihBLFIpLGguY2xlYXJSZXNwb25zZSgpKTp5PSExfWZ1bmN0aW9uIHYoZSl7ZygpLF89VC5yZXNwb25zZVRleHQsdChlLCFlKX12YXIgaD10aGlzLGI9IkNvbnRlbnQtdHlwZSIsXz0iIixTPVtdLHc9bnVsbCxUPW51bGwsQz0hMSx5PSEwLGs9bnVsbCx4PSExLEQ9ISFlLmNvbnRlbnRUeXBlLFA9ISFlLmhlYWRlcnMsST0hIWUuaGVhZGVyVmFsdWUsRT1lLmRhdGF8fCIiLFI9ZS50YXJnZXRVcmx8fCIiLEE9ZS5yZXF1ZXN0VHlwZXx8IiIsQj1lLmlzQXN5bmMhPT0hMSxMPWUudGltZW91dHx8MCxGPWUudXNlcm5hbWV8fCIiLE49ZS5wYXNzd29yZHx8IiIsTz1lLmNvbnRlbnRUeXBlfHwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIixVPWUud2l0aENyZWRlbnRpYWxzfHwhMSxNPWUuYnJlYWtDYWNoZXx8ITEsVj1lLnJlc3BvbnNlVHlwZXx8IiIsSD1lLmhlYWRlcnN8fHt9LGo9ZS5zdWNjZXNzQ2FsbGJhY2sscT1lLmZhaWx1cmVDYWxsYmFjayxHPWUudGltZW91dENhbGxiYWNrO2guc2VuZFJlcXVlc3Q9ZnVuY3Rpb24oZSl7dz1lLG0oKSx5JiYoTD4wJiYoaz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5jYWxsKGgpfSxMKSksVC5zZW5kKEUpKX0saC5nZXRTdGF0ZT1mdW5jdGlvbigpe3JldHVybiB5P0M/ZC5UaW1lb3V0OlQ/VC5yZWFkeVN0YXRlOmQuVW5zZW50OmQuVW5zdXBwb3J0ZWR9LGguZ2V0U3RhdHVzPWZ1bmN0aW9uKCl7cmV0dXJuIEM/cy5UaW1lb3V0OlQ/VC5zdGF0dXM6MH0saC5jYW5jZWw9ZnVuY3Rpb24oKXtUJiYoVC5jYW5jZWxlZD0hMCxULmFib3J0KCkpfSxoLmdldFJlc3BvbnNlSnNvbj1mdW5jdGlvbigpe3JldHVybiBfP2kucGFyc2UoXyk6e319LGguaXNDb21wbGV0ZT1mdW5jdGlvbigpe3JldHVybiBoLmdldFN0YXRlKCk9PT1kLkRvbmV8fGguZ2V0U3RhdGUoKT09PWQuVGltZW91dH0saC5pc1N1Y2Nlc3M9ZnVuY3Rpb24oKXtyZXR1cm4gaC5pc0NvbXBsZXRlKCkmJlNbaC5nZXRTdGF0dXMoKV19LGguY2xlYXJSZXNwb25zZT1mdW5jdGlvbigpe189IiJ9LGZ1bmN0aW9uKCl7SFtiXT1PLFNbcy5Pa109ITAsU1tzLk5vdE1vZGlmaWVkXT0hMCxTW3MuVGltZW91dF09ITE7dmFyIGU9YS5TdHJpbmcuZXh0cmFjdERvbWFpbkZyb21VcmwoUik7ZSYmKHg9YS5TdHJpbmcuZXh0cmFjdERvbWFpbkZyb21VcmwoZG9jdW1lbnQubG9jYXRpb24uaHJlZikhPT1lKX0oKX19LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKCl7ZnVuY3Rpb24gZSgpe2EuaXNPblRvdWNoU3RhcnRFdmVudFN1cHBvcnRlZCgpJiYoaXw9cy5PblRvdWNoU3RhcnRFdmVudFByZXNlbnQpfXZhciB0PXRoaXMsbj0iYnJjYXAiLGk9cy5Ob25lO3Qud3JpdGVDb29raWU9ZnVuY3Rpb24oKXtyLndyaXRlKG4saSwhMCwhMCl9LGZ1bmN0aW9uKCl7ZSgpfSgpfXZhciBvPW4oOSksYT1vLkhlbHBlcixyPW8uQ29va2llcyxzPXtOb25lOjAsT25Ub3VjaFN0YXJ0RXZlbnRQcmVzZW50OjF9O2UuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7dmFyIGk9big3KSxvPW4oNiksYT1uKDkpLHI9bigxNjcpLHM9bigxMSksYz1uKDE3MSksZD1uKDE3MiksbD13aW5kb3csdT1hLlF1ZXJ5U3RyaW5nLHA9YS5Db29raWVzLGY9by5BcnJheTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtpZighbC5uYXZpZ2F0b3J8fCJmdW5jdGlvbiIhPXR5cGVvZiBsLm5hdmlnYXRvci5tc0xhdW5jaFVyaSlyZXR1cm4gdigiQlNTTy5pbmZvIiwibm90LXN1cHBvcnRlZCIpLG0oIndpbmRvdy5uYXZpZ2F0b3IubXNMYXVuY2hVcmkgaXMgbm90IGF2YWlsYWJsZSBmb3IgX2xvZ2luV2luZG93c1VzZXIiKSxzLnJlamVjdCgiYnNzb05vdFN1cHBvcnRlZCIpO3ZhciB0PSJhYm9ydCI9PT1ULmluaXRpYXRlUHVsbFRpbWVvdXRBY3Rpb24sbj1uZXcgZCh7bG9nTWVzc2FnZTptLGxvZ0RhdGFQb2ludDp2fSxULmluaXRpYXRlUHVsbFRpbWVvdXRNcyxULm92ZXJhbGxUaW1lb3V0TXMsdCk7cmV0dXJuIG4ubG9naW5XaW5kb3dzVXNlckFzeW5jKGUpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVsb2FkPyhtKCJTU08gY29va2llIGRldGVjdGVkLiBSZWZyZXNoaW5nIHBhZ2UuIiksYSgpKTpzLnJlamVjdCgiZXJyb3IiKX0pfWZ1bmN0aW9uIG4oKXtpZighbC5uYXZpZ2F0b3J8fCJmdW5jdGlvbiIhPXR5cGVvZiBsLm5hdmlnYXRvci5tc0xhdW5jaFVyaSlyZXR1cm4gdigiQlNTTy5pbmZvIiwibm90LXN1cHBvcnRlZCIpLG0oIndpbmRvdy5uYXZpZ2F0b3IubXNMYXVuY2hVcmkgaXMgbm90IGF2YWlsYWJsZSBmb3IgX3B1bGxCcm93c2VyU3NvQ29va2llIikscy5yZWplY3QoImJzc29Ob3RTdXBwb3J0ZWQiKTt2YXIgZT1wLmdldENvb2tpZSh4LnNzb1RpbGVzKXx8VC5mb3JjZVRpbGVzO2lmKCFlJiZwLmdldENvb2tpZSh4LnNzb1B1bGxlZCkpcmV0dXJuIHYoIkJTU08uaW5mbyIsInRocm90dGxlZCIpLG0oIkNvb2tpZSBwdWxsIHRocm90dGxlZCIpLHMucmVqZWN0KCJ0aHJvdHRsZWQiKTt2YXIgdD0idGJhdXRoOi8vbG9naW4ud2luZG93cy5uZXQ/Y29udGV4dD0iK2VuY29kZVVSSUNvbXBvbmVudChsLmxvY2F0aW9uLmhyZWYuc3BsaXQoIi8iLDMpLmpvaW4oIi8iKSkrKFQubm9uY2U/IiZyZXF1ZXN0X25vbmNlPSIrZW5jb2RlVVJJQ29tcG9uZW50KFQubm9uY2UpOiIiKSsoVC5yaWQ/IiZyaWQ9IitlbmNvZGVVUklDb21wb25lbnQoVC5yaWQpOiIiKSxuPXQ7ZSYmKG49dS5hcHBlbmRPclJlcGxhY2UobiwidXNlcl9pZCIsIioiKSxwLnJlbW92ZSh4LnNzb1RpbGVzKSk7dmFyIGk9ImFib3J0Ij09PVQuaW5pdGlhdGVQdWxsVGltZW91dEFjdGlvbixvPW5ldyBkKHtsb2dNZXNzYWdlOm0sbG9nRGF0YVBvaW50OnZ9LFQuaW5pdGlhdGVQdWxsVGltZW91dE1zLFQub3ZlcmFsbFRpbWVvdXRNcyxpKTtyZXR1cm4gby5wdWxsQnJvd3NlclNzb0Nvb2tpZUFzeW5jKG4pLnRoZW4oZnVuY3Rpb24oZSl7aWYoZS5yZWxvYWQpcmV0dXJuIG0oIlNTTyBjb29raWUgZGV0ZWN0ZWQuIFJlZnJlc2hpbmcgcGFnZS4iKSx7cmVkaXJlY3RVcmw6YSgpfTtpZihlLnVzZXJMaXN0KXt2YXIgbj1nKGUudXNlckxpc3QsdCk7cmV0dXJuIG4ubGVuZ3RoPjA/e25ld1Nlc3Npb25zOm59OnMucmVqZWN0KCJub1VzZXJzIil9fSl9ZnVuY3Rpb24gbygpe3ZhciBlPW5ldyBjKHtsb2dNZXNzYWdlOm0sbG9nRGF0YVBvaW50OnZ9LFQubm9uY2UsImxvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20iLEMseSk7cmV0dXJuIGUuZ2V0Q29va2llc0FzeW5jKCkudGhlbihmdW5jdGlvbihlKXtpZighZXx8IWUubGVuZ3RoKXJldHVybiBzLnJlamVjdChuZXcgYy5FcnJvcigiUGFnZUV4Y2VwdGlvbiIsIkV4dGVuc2lvbiByZXR1cm5lZCBubyBjb29raWVzIikpO2Zvcih2YXIgdD0wLG49ZS5sZW5ndGg7dDxuOysrdCl7dmFyIGk9ZVt0XS5kYXRhO2kuaW5kZXhPZigiOyIpIT09LTEmJihpPWkuc3Vic3RyKDAsaS5pbmRleE9mKCI7IikpKSxwLndyaXRlKGVbdF0ubmFtZSxpLCFDKX1yZXR1cm4gbSgiU1NPIGNvb2tpZSBkZXRlY3RlZC4gUmVmcmVzaGluZyBwYWdlLiIpLHtyZWRpcmVjdFVybDphKCl9fSkudGhlbihudWxsLGZ1bmN0aW9uKGUpe3JldHVybiBwLndyaXRlKHguYWFkU3NvLGUudG9Db29raWVTdHJpbmcoKSwhQyksbSgiRXJyb3I6ICIrZS50b1N0cmluZygpKSxzLnJlamVjdChlKX0pfWZ1bmN0aW9uIGEoKXt2YXIgZT1uZXcgRGF0ZTtlLnNldFNlY29uZHMoZS5nZXRTZWNvbmRzKCkrNjApLHAud3JpdGVXaXRoRXhwaXJhdGlvbih4LnNzb1B1bGxlZCwiMSIsIUMsZS50b1VUQ1N0cmluZygpKTt2YXIgdD1sLmxvY2F0aW9uLmhyZWY7cmV0dXJuIHQ9dS5hcHBlbmRPclJlcGxhY2UodCwic3NvX3JlbG9hZCIsInRydWUiKSxULnJlbG9hZE9uRmFpbHVyZXx8InNlbGVjdF9hY2NvdW50IiE9PXUuZXh0cmFjdCgicHJvbXB0IikudG9Mb3dlckNhc2UoKXx8KHQ9dS5hcHBlbmRPclJlcGxhY2UodCwicHJvbXB0IiwiIikpLHR9ZnVuY3Rpb24gZyhlLHQpe3ZhciBuPVtdLG89aS5wYXJzZShlKS51c2VycztyZXR1cm4gbyYmby5sZW5ndGg+MD8oZi5mb3JFYWNoKG8sZnVuY3Rpb24oZSl7dmFyIGk9e3Nzb1VuaXF1ZUlkOmUudW5pcXVlX2lkLGRpc3BsYXlOYW1lOmUuZGlzcGxheV9uYW1lfHwiIixuYW1lOmUudXBuLGlzV2luZG93c1NzbzohMCxpc1NpZ25lZEluOiEwLHVybDp0fTtuLnB1c2goaSl9KSxtKCJVc2VyIGxpc3QgcHJvY2Vzc2VkLiBMaXN0OiAiK2kuc3RyaW5naWZ5KG4pKSk6bSgiVXNlciBsaXN0IGlzIGVtcHR5LiIpLG59ZnVuY3Rpb24gbShlKXtELnRyYWNlcy5wdXNoKGUpfWZ1bmN0aW9uIHYoZSx0KXtELmRhdGFbZV09dH1mdW5jdGlvbiBoKGUpe3JldHVybiBELnJlc3VsdD1lLm5ld1Nlc3Npb25zPyJVc2VyTGlzdCI6IlJlbG9hZCIsXygpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pfWZ1bmN0aW9uIGIoZSl7cmV0dXJuIEQucmVzdWx0PSJFcnJvciIsZSBpbnN0YW5jZW9mIGMuRXJyb3I/Ik9TRXJyb3IiPT09ZS5jb2RlJiZlLmV4dGVybmFsRGF0YSYmZS5leHRlcm5hbERhdGEuZXJyb3I/RC5lcnJvcj1lLmV4dGVybmFsRGF0YS5lcnJvcjpELmVycm9yPWUuY29kZTpELmVycm9yPWUsXygpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcy5yZWplY3QoZSl9KX1mdW5jdGlvbiBfKCl7cmV0dXJuIG5ldyBzKGZ1bmN0aW9uKGUpe3RyeXtsLmNvbnNvbGUmJmwuY29uc29sZS5pbmZvKCJCU1NPIFRlbGVtZXRyeTogIitpLnN0cmluZ2lmeShEKSl9Y2F0Y2godCl7fWlmKFQudGVsZW1ldHJ5LnVybCl7dmFyIG49bmV3IHIoe2NoZWNrQXBpQ2FuYXJ5Omt9KTtuLkJlYWNvbihULnRlbGVtZXRyeS51cmwsRCxlLGUsNTAwKX1lbHNlIGUoKX0pfXZhciBTPXRoaXMsdz1lLFQ9dy5ic3NvfHx7ZW5hYmxlZDohMX0sQz13LmZJc0Nsb3VkQnVpbGQseT13LmZUcmltQ2hyb21lQnNzb1VybCxrPXcuY2hlY2tBcGlDYW5hcnkhPT0hMSx4PVQuY29va2llTmFtZXMsRD1udWxsO1MubG9naW5XaW5kb3dzVXNlckFzeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBULmVuYWJsZWQ/dChlKS50aGVuKGgsYik6cy5yZWplY3QoImJzc29EaXNhYmxlZCIpfSxTLnB1bGxCcm93c2VyU3NvQ29va2llQXN5bmM9ZnVuY3Rpb24oKXt2YXIgZSx0PVQuZmFpbHVyZVJlZGlyZWN0VXJsfHxULnJlbG9hZE9uRmFpbHVyZSxpPVQudHlwZTtyZXR1cm4gVC5lbmFibGVkPygid2luZG93cyI9PT1pP2U9bigpOiJjaHJvbWUiPT09aSYmKGU9bygpKSxlLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHQmJiFlLnJlZGlyZWN0VXJsP3MucmVqZWN0KCJzaWxlbnRQdWxsRmFpbGVkIik6ZX0pLnRoZW4oaCxiKS50aGVuKG51bGwsZnVuY3Rpb24oZSl7cmV0dXJuIHQ/VC5yZWxvYWRPbkZhaWx1cmU/e3JlZGlyZWN0VXJsOmEoKX06e3JlZGlyZWN0VXJsOlQuZmFpbHVyZVJlZGlyZWN0VXJsfTpzLnJlamVjdChlKX0pKTpzLnJlamVjdCgiYnNzb0Rpc2FibGVkIil9LFMuaXNFbmFibGVkPWZ1bmN0aW9uKCl7cmV0dXJuISFULmVuYWJsZWR9LGZ1bmN0aW9uKCl7VC5lbmFibGVkJiYoRD17cmVzdWx0Om51bGwsZXJyb3I6bnVsbCx0eXBlOlQudGVsZW1ldHJ5LnR5cGV8fG51bGwsZGF0YTp7fSx0cmFjZXM6W119LFQuaW5pdGlhdGVQdWxsVGltZW91dE1zPVQuaW5pdGlhdGVQdWxsVGltZW91dE1zfHxULm92ZXJhbGxUaW1lb3V0TXMsVC5pbml0aWF0ZVB1bGxUaW1lb3V0QWN0aW9uPVQuaW5pdGlhdGVQdWxsVGltZW91dEFjdGlvbnx8ImFib3J0IixtKCJCcm93c2VyU1NPIEluaXRpYWxpemVkIikpfSgpfX0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSx0LG4sbyxhKXtmdW5jdGlvbiBsKGUpe2lmKGUuc291cmNlPT09cyl7dmFyIHQ9ZS5kYXRhLG49dCYmdC5jaGFubmVsLGk9dCYmdC5yZXNwb25zZUlkLG89dCYmdC5ib2R5LGE9byYmby5tZXRob2Q7aWYobj09PWImJmkmJigiQ3JlYXRlUHJvdmlkZXJBc3luYyI9PT1hfHwiUmVzcG9uc2UiPT09YSkpe1MubG9nTWVzc2FnZSgiUmVjZWl2ZWQgbWVzc2FnZSBmb3IgbWV0aG9kICIrYSk7dmFyIHI9a1tpXTtkZWxldGUga1tpXSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cihvLnJlc3BvbnNlfHx7fSl9LDApfX19ZnVuY3Rpb24gcChlLHQpe3ZhciBuPW5ldyByKGZ1bmN0aW9uKG4pe3ZhciBpPXtjaGFubmVsOmIscmVzcG9uc2VJZDorK3gsYm9keTplfTt0JiYoaS5leHRlbnNpb25JZD10KSxrW2kucmVzcG9uc2VJZF09bixTLmxvZ01lc3NhZ2UoIlNlbmRpbmcgbWVzc2FnZSBmb3IgbWV0aG9kICIrKGV8fHt9KS5tZXRob2R8fCIiKSxzLnBvc3RNZXNzYWdlKGksIioiKX0pO3JldHVybiBuLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIlN1Y2Nlc3MiPT09ZS5zdGF0dXM/ci5yZXNvbHZlKGUucmVzdWx0fHx7fSk6ci5yZWplY3QobmV3IGkuRXJyb3IoZS5jb2RlLGUuZGVzY3JpcHRpb24sZS5leHQpKX0pfWZ1bmN0aW9uIGYoKXtyZXR1cm4gRXx8KHMuYWRkRXZlbnRMaXN0ZW5lciYmcy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixsKSxTLmxvZ01lc3NhZ2UoIkNyZWF0aW5nIENocm9tZUJyb3dzZXJDb3JlIHByb3ZpZGVyIiksRT1wKHttZXRob2Q6IkNyZWF0ZVByb3ZpZGVyQXN5bmMiLHJlc3BvbnNlOntzdGF0dXM6IlN1Y2Nlc3MifX0pLnRoZW4oZykpLEV9ZnVuY3Rpb24gZygpe2Zvcih2YXIgZT1udWxsLHQ9RC5maXJzdENoaWxkO3Q7KSF0LmlkfHxudWxsIT09ZSYmdC5pZCE9PV98fChlPXQuaWQpLEQucmVtb3ZlQ2hpbGQodCksdD1ELmZpcnN0Q2hpbGQ7aWYoIWUpdGhyb3cgbmV3IGkuRXJyb3IoIk5vRXh0ZW5zaW9uIiwiRXh0ZW5zaW9uIGlzIG5vdCBpbnN0YWxsZWQuIixudWxsKTtyZXR1cm4gUy5sb2dEYXRhUG9pbnQoImV4dGVuc2lvbi5pZCIsZSksUy5sb2dNZXNzYWdlKCJVc2luZyBDaHJvbWUgZXh0ZW5zaW9uIHdpdGggaWQgIitlKSxlfWZ1bmN0aW9uIG0oZSl7cmV0dXJuIk9TRXJyb3IiPT09ZS5jb2RlJiZlLmV4dGVybmFsRGF0YSYmZS5leHRlcm5hbERhdGEuZXJyb3I9PT11LkFBRF9CUk9XU0VSQ09SRV9FX0lOVkFMSURfUkVRVUVTVF9NRVRIT0Q/KFMubG9nTWVzc2FnZSgiR2V0Q29va2llcyBtZXRob2Qgbm90IGZvdW5kLCBmYWxsaW5nIGJhY2sgdG8gR2V0Q29va2llIiksZigpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHAoe21ldGhvZDoiR2V0Q29va2llIix1cmk6UH0sZSl9KSk6ci5yZWplY3QoZSl9ZnVuY3Rpb24gdihlKXt2YXIgdD1lLnJlc3BvbnNlfHxbXTtpZih0JiZ0Lmxlbmd0aClmb3IodmFyIG49MCxpPXQubGVuZ3RoO248aTsrK24pe3ZhciBvPW89dFtuXS5kYXRhfHwiIixhPW8uaW5kZXhPZigiOyIpO2EhPT0tMSYmKG89by5zdWJzdHIoMCxhKSksdFtuXS5kYXRhPW8rSX1yZXR1cm4gdH12YXIgaD10aGlzLGI9IjUzZWUyODRkLTkyMGEtNGI1OS05ZDMwLWE2MDMxNWIyNjgzNiIsXz0icHBuYm5wZW9sZ2tpY2dlZ2tia2JqbWhsaWRlb3BpamkiLFM9ZSx3PXQsVD1uLEM9byx5PWEsaz17fSx4PTAsRD1udWxsLFA9bnVsbCxJPW51bGwsRT1udWxsO2guZ2V0Q29va2llc0FzeW5jPWZ1bmN0aW9uKCl7cmV0dXJuIGYoKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBTLmxvZ01lc3NhZ2UoIlB1bGxpbmcgU1NPIGNvb2tpZXMiKSxwKHttZXRob2Q6IkdldENvb2tpZXMiLHVyaTpQfSxlKS50aGVuKG51bGwsbSkudGhlbih2KX0pfSxmdW5jdGlvbigpe2lmKFA9ZC5hcHBlbmRPclJlcGxhY2Uocy5sb2NhdGlvbi5ocmVmLCJzc29fbm9uY2UiLHcpLHkpe3ZhciBlPWQucGFyc2UoUCk7ZS5mcmFnbWVudCYmKGUuZnJhZ21lbnQ9bnVsbCxQPWQuam9pbihlKSl9ST0iOyBwYXRoPS87IGRvbWFpbj0iK1QrKEM/IiI6Ijsgc2VjdXJlIik7dmFyIHQ9ImNoLSIrYjtEPWMuZ2V0RWxlbWVudEJ5SWQodCksRHx8KEQ9Yy5jcmVhdGVFbGVtZW50KCJkaXYiKSxELmlkPXQsYy5ib2R5LmFwcGVuZENoaWxkKEQpKX0oKX12YXIgbz1uKDcpLGE9big5KSxyPW4oMTEpLHM9d2luZG93LGM9cy5kb2N1bWVudCxkPWEuUXVlcnlTdHJpbmcsbD1hLkNvb2tpZXMsdT17QUFEX0JST1dTRVJDT1JFX0VfSU5WQUxJRF9SRVFVRVNUX01FVEhPRDotMjE0NzE4Njk0M307aS5FcnJvcj1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxhPWUscj10LHM9bjtpLmNvZGU9YSxpLmRlc2NyaXB0aW9uPXIsaS5leHRlcm5hbERhdGE9cyxpLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGU9IkNocm9tZUJyb3dzZXJDb3JlIGVycm9yICIrKGF8fCIiKSsiOiAiKyhyfHwiIik7cmV0dXJuIHMmJihlKz0iIChleHQ6ICIrby5zdHJpbmdpZnkocykrIikiKSxlfSxpLnRvQ29va2llU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGU9Ik5BIjtpZihsLmlzQ29va2llU2FmZVZhbHVlKGEpKXtlKz0ifCIrYTsKdmFyIHQ9cz9lbmNvZGVVUklDb21wb25lbnQoby5zdHJpbmdpZnkocykpOm51bGw7dCYmbC5pc0Nvb2tpZVNhZmVWYWx1ZSh0KSYmKGUrPSJ8Iit0KX1yZXR1cm4gZX19LGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7dmFyIGk9big5KSxvPW4oMTEpLGE9d2luZG93LHI9aS5Db29raWVzO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbixpKXtmdW5jdGlvbiBzKGUsdCxuKXt2YXIgaT0obmV3IERhdGUpLmdldFRpbWUoKTtyZXR1cm4gYyhlLHQsaSkudGhlbihmdW5jdGlvbigpe3JldHVybiBkKHQsaSxuKX0pfWZ1bmN0aW9uIGMoZSx0LG4pe3ZhciBpPW5ldyBvKGZ1bmN0aW9uKHQsbil7YS5uYXZpZ2F0b3IubXNMYXVuY2hVcmkoZSx0LG4pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtuKCJ0aW1lb3V0Iil9LHApfSk7cmV0dXJuIGkudGhlbihmdW5jdGlvbigpe3ZhciBlPShuZXcgRGF0ZSkuZ2V0VGltZSgpLW47dS5sb2dEYXRhUG9pbnQoIm1zTGF1bmNoVXJpLnN1Y2Nlc3MubXMiLGUpLHUubG9nTWVzc2FnZSh0KyIgaW5pdGlhdGVkIHN1Y2Nlc3NmdWxseSAodG9vayAiK2UrIiBtcykiKX0sZnVuY3Rpb24oZSl7aWYoInRpbWVvdXQiPT09ZSl1LmxvZ0RhdGFQb2ludCgibXNMYXVuY2hVcmkucmVzcG9uc2UiLGc/InRpbWVvdXQiOiJ0aW1lb3V0LWNvbnRpbnVlIiksdS5sb2dNZXNzYWdlKCIiKTtlbHNle3ZhciBpPShuZXcgRGF0ZSkuZ2V0VGltZSgpLW47dS5sb2dEYXRhUG9pbnQoIm1zTGF1bmNoVXJpLmZhaWx1cmUubXMiLGkpLHUubG9nTWVzc2FnZSh0KyIgd2FzIE5PVCBpbml0aWF0ZWQgc3VjY2Vzc2Z1bGx5ICh0b29rICIraSsiIG1zKSIpfWlmKCJ0aW1lb3V0IiE9PWV8fGcpcmV0dXJuIG8ucmVqZWN0KGV8fCJub0hhbmRsZXIiKX0pfWZ1bmN0aW9uIGQoZSx0LG4pe3JldHVybiBuZXcgbyhmdW5jdGlvbihpLG8pe3ZhciBhPXNldEludGVydmFsKGZ1bmN0aW9uKCl7dmFyIGU9bj9udWxsOnIuZ2V0Q29va2llKCJFU1RTVVNFUkxJU1QiKSxvPXIuZ2V0Q29va2llKCJFU1RTU1NPIik7KGV8fG8pJiYoY2xlYXJJbnRlcnZhbChhKSx1LmxvZ0RhdGFQb2ludCgoZT8iRVNUU1VTRVJMSVNUIjoiRVNUU1NTTyIpKyIuY29va2llLm1zIiwobmV3IERhdGUpLmdldFRpbWUoKS10KSxlPyh1LmxvZ01lc3NhZ2UoIlVzZXJzIGxpc3QgY29va2llIGRldGVjdGVkIiksci5yZW1vdmUoIkVTVFNVU0VSTElTVCIpLGkoe3VzZXJMaXN0OmRlY29kZVVSSUNvbXBvbmVudChlKS5yZXBsYWNlKC9cKy9nLCIgIil9KSk6aSh7cmVsb2FkOiEwfSkpfSwyNTApO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjbGVhckludGVydmFsKGEpLHUubG9nRGF0YVBvaW50KCJUQi5yZXNwb25zZS50aW1lb3V0Lm1zIiwobmV3IERhdGUpLmdldFRpbWUoKS10KSx1LmxvZ01lc3NhZ2UoZSsiIHRpbWVkIG91dC4iKSxvKCJ0aW1lb3V0Iil9LGYpfSl9dmFyIGw9dGhpcyx1PWUscD10LGY9bixnPWk7bC5wdWxsQnJvd3NlclNzb0Nvb2tpZUFzeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBzKGUsImNvb2tpZSBwdWxsIiwhMSl9LGwubG9naW5XaW5kb3dzVXNlckFzeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBzKGUsIldpbmRvd3MgdXNlciBsb2dpbiIsITApfX19LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUsdCl7ZnVuY3Rpb24gaShlLHQsbixpKXt2YXIgbz17dW5zYWZlX3VzZXJuYW1lOmUsdWFpZDp1ZSxpc090aGVySWRwU3VwcG9ydGVkOlEsaXNGZWRlcmF0aW9uRGlzYWJsZWQ6ZmUsY2hlY2tQaG9uZXM6Zi5pc1Bob25lTnVtYmVyKGUpLGlzUmVtb3RlTkdDU3VwcG9ydGVkOmdlLGlzQ29va2llQmFubmVyU2hvd246bWUsaXNGaWRvU3VwcG9ydGVkOm4sb3JpZ2luYWxSZXF1ZXN0OlRlLGNvdW50cnk6SGUsZm9yY2VvdGNsb2dpbjpzZSxvdGNsb2dpbmRpc2FsbG93ZWQ6aGUsaXNFeHRlcm5hbEZlZGVyYXRpb25EaXNhbGxvd2VkOl9lLGlzUmVtb3RlQ29ubmVjdFN1cHBvcnRlZDpXZSxmZWRlcmF0aW9uRmxhZ3M6JGUsaXNTaWdudXA6ZGV9O3JldHVybiBDZSYmKG8uZmxvd1Rva2VuPXQpLGtlJiYoby5jaGVja1Byb29mRm9yQWxpYXNlcz0hMCksYmUmJihvLm5vUGFPdGNEaXNhbGxvd2VkPSEwKSxTZSYmKG8uaXNQYXNzdGhyb3VnaERpc2FsbG93ZWQ9ITApLHdlJiYoby5pc1Bob25lTnVtYmVyU2lnbnVwRGlzYWxsb3dlZD0hMCksWGUmJihvLmlnbm9yZVZpcmFsVXNlcnM9ITApLEtlJiYoaT1pfHx7Y3BhOiIiLGVycjoiQXV0aGVudGljYXRvciBub3QgZ2VuZXJhdGVkLiJ9LG8uY3BhPWkuY3BhLG8uY3BhX2Vycj1pLmVyciksSmUmJihvLmlzQWNjZXNzUGFzc1N1cHBvcnRlZD0hMCksb31mdW5jdGlvbiBhKGUsdCxuKXt2YXIgaT1lLkNyZWRlbnRpYWxzJiZlLkNyZWRlbnRpYWxzLk90Y0xvZ2luRWxpZ2libGVQcm9vZnMsbz1bXTtpZihpJiZkLkFycmF5LmZvckVhY2goaSxmdW5jdGlvbihlKXtpZihlLmlzRGVmYXVsdD09PXQpe3ZhciBuPXtjcmVkVHlwZTptLk9uZVRpbWVDb2RlLHByb29mOmV9O3N3aXRjaChuLnByb29mLmlzRW5jcnlwdGVkPSEwLGUudHlwZSl7Y2FzZSBQUk9PRi5UeXBlLlNNUzpjYXNlIFBST09GLlR5cGUuVm9pY2U6aWYoIWUuaXNWb2ljZU9ubHkpe3ZhciBpPWcuY2xvbmUobik7aS5wcm9vZi5vdGNTZW50JiZjZSYmcWU9PT1QUk9PRi5UeXBlLlZvaWNlJiYoaS5wcm9vZi5vdGNTZW50PSExKSxpLnByb29mLnR5cGU9UFJPT0YuVHlwZS5TTVMsby5wdXNoKGkpfWlmKGUudm9pY2VFbmFibGVkKXt2YXIgYT1nLmNsb25lKG4pOyFhLnByb29mLm90Y1NlbnR8fGNlJiZxZT09PVBST09GLlR5cGUuVm9pY2V8fChhLnByb29mLm90Y1NlbnQ9ITEpLGEucHJvb2YudHlwZT1QUk9PRi5UeXBlLlZvaWNlLG8ucHVzaChhKX1icmVhaztjYXNlIFBST09GLlR5cGUuRW1haWw6by5wdXNoKGcuY2xvbmUobikpfX19KSx0JiYwPT09by5sZW5ndGgmJkwoZSxuKT09PW0uT25lVGltZUNvZGUpe3ZhciBhPWUuQ3JlZGVudGlhbHMmJmUuQ3JlZGVudGlhbHMuSGFzUGFzc3dvcmQscj17Y3JlZFR5cGU6bS5PbmVUaW1lQ29kZSxwcm9vZjp7ZGlzcGxheTplLkRpc3BsYXksZGF0YTpmLmNsZWFuc2VVc2VybmFtZShlLlVzZXJuYW1lKSxvdGNTZW50OiEwLGlzRW5jcnlwdGVkOiExLGlzRGVmYXVsdDohMCxpc05vcGE6IWEsdHlwZTpmLmlzRW1haWxBZGRyZXNzKGUuVXNlcm5hbWUpP1BST09GLlR5cGUuRW1haWw6UFJPT0YuVHlwZS5TTVN9fTtvLnB1c2gocil9cmV0dXJuIG99ZnVuY3Rpb24gYyhlKXtlLnByb29mLnN0cj17fSxnLmV4dGVuZChlLnByb29mLnN0cixqZVtlLnByb29mLnR5cGVdfHx7fSksZy5mb3JFYWNoKGUucHJvb2Yuc3RyLGZ1bmN0aW9uKHQsbil7biYmKGUucHJvb2Yuc3RyW3RdPWYuZm9ybWF0KG4sZS5wcm9vZi5kaXNwbGF5KyJcdTIwMGUiLGUucHJvb2YuY2xlYXJEaWdpdHN8fCIiKSl9KX1mdW5jdGlvbiBFKGUsdCl7dmFyIG49W1pdLmNvbmNhdChlZXx8W10pO3JldHVybiByLmFsbChuKS50aGVuKGZ1bmN0aW9uKG4pe3ZhciBhPW5bMF0scz1uWzFdO3JldHVybiBuZXcgcihmdW5jdGlvbihuLHIpe3ZhciBjPW5ldyBsKHtjaGVja0FwaUNhbmFyeTp4ZX0pO2MuSnNvbihEZSxpKGUsdCxhLHMpLG4scixvLkRlZmF1bHRSZXF1ZXN0VGltZW91dCl9KX0pfWZ1bmN0aW9uIFIoZSl7cmV0dXJuIGUmJkZlLmxhc3RVc2VybmFtZVRyaWVkJiZlLnRvTG93ZXJDYXNlKCk9PT1GZS5sYXN0VXNlcm5hbWVUcmllZC50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIEEoZSx0LG4saSxvKXt2YXIgYT17fSxyPUZlJiZuLkVzdHNQcm9wZXJ0aWVzJiZuLkVzdHNQcm9wZXJ0aWVzLkRlc2t0b3BTc29FbmFibGVkJiYhUihlKSxzPW4uRXJyb3JIUixjPWooZSxuLGkpLGQ9Si5nZXRHY3RTaGFyZWREYXRhKG4saSxvKTtpZihkLnVzZXJuYW1lPWUscz09PWguUFBfRV9JTlZBTElEX1BIT05FTlVNQkVSfHxzPT09aC5QUF9FX0xJQlBIT05FTlVNQkVSSU5URVJPUF9OVU1CRVJQQVJTRV9FWENFUFRJT04pYT1PKHMpO2Vsc2UgaWYocz09PWguUFBfRV9OQU1FX0lOVkFMSUR8fHM9PT1oLlBQX0VfSU5WQUxJREFSRylhPSQobGUuQ1RfUFdEX1NUUl9FcnJvcl9JbnZhbGlkVXNlcm5hbWUpO2Vsc2UgaWYocz09PWguUFBfRV9GRURFUkFUSU9OX0lOTElORUxPR0lOX0RJU0FMTE9XRUQpYT0kKGxlLkNUX1BXRF9TVFJfRXJyb3JfRmVkTm90QWxsb3dlZCwhMCk7ZWxzZSBpZihzPT09aC5QUF9FX0xPR0lOX05PUEFfVVNFUl9QQVNTV09SRF9SRVFVSVJFRClhPSQoZi5mb3JtYXQobGUuQ1RfU1RSX0Vycm9yX1Bhc3N3b3JkUmVxdWlyZWQscC5zdHJpcFF1ZXJ5U3RyaW5nQW5kRnJhZ21lbnQoR2UpKSk7ZWxzZSBpZihuLlJlcXVpcmVzUGhvbmVEaXNhbWJpZ3VhdGlvbilhPXooUy5QaG9uZURpc2FtYmlndWF0aW9uLHtwaG9uZURpc2FtYmlnRXJyb3I6bi5JZkV4aXN0c1Jlc3VsdD09PXcuTm90RXhpc3Q/aC5QUF9FX0RCX01FTUJFUkRPRVNOT1RFWElTVDpudWxsfSk7ZWxzZSBpZihuLklmRXhpc3RzUmVzdWx0PT09dy5Ob3RFeGlzdClhPVUoZSx0LG4saSk7ZWxzZSBpZihuLklmRXhpc3RzUmVzdWx0PT09dy5FeGlzdHNCb3RoSURQcylhPXooUy5JZHBEaXNhbWJpZ3VhdGlvbix7ZGVza3RvcFNzb0VuYWJsZWQ6cixpZHBSZWRpcmVjdFVybDpjLmlkcFJlZGlyZWN0VXJsLGlkcFJlZGlyZWN0UG9zdFBhcmFtczpjLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxpZHBSZWRpcmVjdFByb3ZpZGVyOmMuaWRwUmVkaXJlY3RQcm92aWRlcn0pO2Vsc2UgaWYobi5JZkV4aXN0c1Jlc3VsdD09PXcuRXhpc3RzSW5PdGhlck1pY3Jvc29mdElEUClhPU0oZSk7ZWxzZSBpZighUXx8bi5JZkV4aXN0c1Jlc3VsdCE9PXcuRXJyb3ImJm4uSWZFeGlzdHNSZXN1bHQhPT13LlRocm90dGxlZCYmMD09PShuLlRocm90dGxlU3RhdHVzJlQuTXNhVGhyb3R0bGVkKSlpZihuLlNob3dSZW1vdGVDb25uZWN0KWE9eihTLlJlbW90ZUxvZ2luUG9sbGluZyk7ZWxzZXt2YXIgbD1kLm90Y0NyZWRlbnRpYWwmJmQub3RjQ3JlZGVudGlhbC5wcm9vZi5jbGVhckRpZ2l0czthPVYoZSxyLGMsbixsLGkpfWVsc2UgYT16KFMuSWRwRGlzYW1iaWd1YXRpb24se2hhc0lkcERpc2FtYmlnRXJyb3I6ITAsZGVza3RvcFNzb0VuYWJsZWQ6cixpZHBSZWRpcmVjdFVybDpjLmlkcFJlZGlyZWN0VXJsLGlkcFJlZGlyZWN0UG9zdFBhcmFtczpjLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxpZHBSZWRpcmVjdFByb3ZpZGVyOmMuaWRwUmVkaXJlY3RQcm92aWRlcn0pO3JldHVybiBhLmZsb3dUb2tlbj1uLkZsb3dUb2tlbnx8bnVsbCxhLmJ5cGFzc0NhY2hlfHwodGVbZV09bix0ZVtlXS5GbG93VG9rZW49bnVsbCksYS5zaGFyZWREYXRhPWQsYX1mdW5jdGlvbiBCKGUpe3ZhciB0PXt9O2lmKGUmJmUuZXJyb3Ipc3dpdGNoKGUuZXJyb3IuY29kZSl7Y2FzZSBiLkF1dGhGYWlsdXJlOnQ9JChsZS5DVF9QV0RfU1RSX0Vycm9yX0Zsb3dUb2tlbkV4cGlyZWQpO2JyZWFrO2Nhc2UgXy5QdWJsaWNJZGVudGlmaWVyU2FzQmVnaW5DYWxsTm9uUmV0cmlhYmxlRXJyb3I6Y2FzZSBfLlB1YmxpY0lkZW50aWZpZXJTYXNCZWdpbkNhbGxSZXRyaWFibGVFcnJvcjp0PSQobGUuQ1RfUFdEX1NUUl9FcnJvcl9HZXRDcmVkZW50aWFsVHlwZUVycm9yLCExLCEwKTticmVhaztkZWZhdWx0OnQ9JChsZS5DVF9QV0RfU1RSX0Vycm9yX0dldENyZWRlbnRpYWxUeXBlRXJyb3IpfWVsc2UgdD0kKGxlLkNUX1BXRF9TVFJfRXJyb3JfR2V0Q3JlZGVudGlhbFR5cGVFcnJvcik7cmV0dXJuIHQuZmxvd1Rva2VuPWUuRmxvd1Rva2VufHxudWxsLHR9ZnVuY3Rpb24gTChlLHQpe3ZhciBuPW0uUGFzc3dvcmQsaT1lLkNyZWRlbnRpYWxzO3JldHVybiBpJiYobj1pLlByZWZDcmVkZW50aWFsLG4hPT1tLkZpZG98fHR8fChuPWkuUmVtb3RlTmdjUGFyYW1zJiZpLlJlbW90ZU5nY1BhcmFtcy5TZXNzaW9uSWRlbnRpZmllcj9tLlJlbW90ZU5HQzptLlBhc3N3b3JkKSksbn1mdW5jdGlvbiBGKGUsdCl7dmFyIG49ZS5DcmVkZW50aWFsc3x8e30saT1uLlNhc1BhcmFtcyxvPW4uTGlua2VkSW5QYXJhbXMscj1uLkdpdEh1YlBhcmFtcyxzPW4uR29vZ2xlUGFyYW1zLGw9ZS5Fc3RzUHJvcGVydGllc3x8e30sdT1bXS5jb25jYXQobi5IYXNQYXNzd29yZCYmbC5Eb21haW5UeXBlIT09Qy5GZWRlcmF0ZWQ/e2NyZWRUeXBlOm0uUGFzc3dvcmR9OltdLG4uRmVkZXJhdGlvblJlZGlyZWN0VXJsJiZsLkRvbWFpblR5cGU9PT1DLkZlZGVyYXRlZD97Y3JlZFR5cGU6bS5GZWRlcmF0aW9ufTpbXSxuLkZlZGVyYXRpb25SZWRpcmVjdFVybCYmbC5Eb21haW5UeXBlPT09Qy5DbG91ZEZlZGVyYXRlZD97Y3JlZFR5cGU6bS5DbG91ZEZlZGVyYXRpb259OltdLG4uSGFzUmVtb3RlTkdDP3tjcmVkVHlwZTptLlJlbW90ZU5HQ306W10sbi5IYXNGaWRvJiZ0P3tjcmVkVHlwZTptLkZpZG99OltdLG4uSGFzUGhvbmUmJmk/e2NyZWRUeXBlOm0uUHVibGljSWRlbnRpZmllckNvZGV9OltdLG4uSGFzTGlua2VkSW5GZWQmJm8/e2NyZWRUeXBlOm0uTGlua2VkSW4scmVkaXJlY3RVcmw6by5MaW5rZWRJblJlZGlyZWN0VXJsfTpbXSxuLkhhc0dpdEh1YkZlZCYmcj97Y3JlZFR5cGU6bS5HaXRIdWIscmVkaXJlY3RVcmw6ci5HaXRodWJSZWRpcmVjdFVybH06W10sbi5IYXNHb29nbGVGZWQmJnM/e2NyZWRUeXBlOm0uR29vZ2xlLHJlZGlyZWN0VXJsOnMuR29vZ2xlUmVkaXJlY3RVcmx9OltdLG4uSGFzQWNjZXNzUGFzcz97Y3JlZFR5cGU6bS5BY2Nlc3NQYXNzfTpbXSk7aWYoamVbUFJPT0YuVHlwZS5FbWFpbF0mJmplW1BST09GLlR5cGUuU01TXSYmamVbUFJPT0YuVHlwZS5Wb2ljZV0pe3ZhciBwPWEoZSwhMCx0KTtwLmxlbmd0aD4wJiYoZC5BcnJheS5mb3JFYWNoKHAsYyksdT11LmNvbmNhdChwKSl9cmV0dXJuIHV9ZnVuY3Rpb24gTihlLHQpe3ZhciBuPVtdO2lmKGplW1BST09GLlR5cGUuRW1haWxdJiZqZVtQUk9PRi5UeXBlLlNNU10mJmplW1BST09GLlR5cGUuVm9pY2VdKXt2YXIgaT1hKGUsITEsdCk7aS5sZW5ndGg+MCYmKGQuQXJyYXkuZm9yRWFjaChpLGMpLG49bi5jb25jYXQoaSksZC5BcnJheS5maXJzdChpLGZ1bmN0aW9uKGUpe3JldHVybiFlLnByb29mLmlzTm9wYX0pJiYobj1uLmNvbmNhdCh7Y3JlZFR5cGU6bS5QYXNzd29yZCxpc0RlZmF1bHQ6ITF9KSkpfXJldHVybiBufWZ1bmN0aW9uIE8oZSl7cmV0dXJuIG9lPyQobGUuQ1RfUFdEX1NUUl9FcnJvcl9JbnZhbGlkUGhvbmVOdW1iZXIsITApOnooUy5QaG9uZURpc2FtYmlndWF0aW9uLHtwaG9uZURpc2FtYmlnRXJyb3I6ZX0pfWZ1bmN0aW9uIFUoZSx0LG4saSl7dmFyIG8sYT1XKGUsbikscj1uLkVzdHNQcm9wZXJ0aWVzfHx7fSxzPXIuRG9tYWluVHlwZSYmci5Eb21haW5UeXBlIT09Qy5Vbmtub3duJiZyLkRvbWFpblR5cGUhPT1DLkNvbnN1bWVyO3JldHVybiBuLklzUHJvb2ZGb3JBbGlhcz96KFMuQ29uZmlybVJlY292ZXJVc2VybmFtZSk6UGUmJmEmJksoKT95ZT9IKGUsbik6eihTLkNvbmZpcm1TaWdudXApOihvPXQ/bi5UaHJvdHRsZVN0YXR1cz09PVQuTm90VGhyb3R0bGVkJiZzP2xlLkNUX1BXRF9TVFJfRXJyb3JfVXNlcm5hbWVOb3RFeGlzdF9BbHRlcm5hdGVfVmVyaWZpZWREb21haW46bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0X0FsdGVybmF0ZTpMKG4saSk9PT1tLk9uZVRpbWVDb2RlP24uVGhyb3R0bGVTdGF0dXM9PT1ULk1zYVRocm90dGxlZD9sZS5DVF9QV0RfU1RSX0Vycm9yX1VzZXJuYW1lTm90RXhpc3RzX0VtYWlsT3RwQWxsb3dlZF9Nc2FGYWlsZWQ6bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0c19FbWFpbE90cEFsbG93ZWQ6QWUmJnIuRG9tYWluVHlwZT09PUMuQ29uc3VtZXI/bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0X0NvbnN1bWVyRW1haWw6bi5UaHJvdHRsZVN0YXR1cz09PVQuTm90VGhyb3R0bGVkJiZzP2E/bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0X1ZlcmlmaWVkRG9tYWluX1NpZ251cEFsbG93ZWQ6bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0X1ZlcmlmaWVkRG9tYWluOm4uVGhyb3R0bGVTdGF0dXM9PT1ULk1zYVRocm90dGxlZD9zJiZhP2xlLkNUX1BXRF9TVFJfRXJyb3JfVXNlcm5hbWVOb3RFeGlzdF9WZXJpZmllZERvbWFpbl9Nc2FGYWlsZWRfU2lnbnVwQWxsb3dlZDpzP2xlLkNUX1BXRF9TVFJfRXJyb3JfVXNlcm5hbWVOb3RFeGlzdF9WZXJpZmllZERvbWFpbl9Nc2FGYWlsZWQ6UGUmJiFFZT9sZS5DVF9QV0RfU1RSX0Vycm9yX1VzZXJuYW1lTm90RXhpc3RfR3Vlc3RfU2lnbnVwQWxsb3dlZF9Nc2FGYWlsZWQ6bGUuQ1RfUFdEX1NUUl9FcnJvcl9Vbmtub3duRG9tYWluX01zYUZhaWxlZDpsZS5DVF9QV0RfU1RSX0Vycm9yX1VzZXJuYW1lTm90RXhpc3QsJChmLmZvcm1hdChvLHUuaHRtbEVzY2FwZShmLmV4dHJhY3REb21haW4oZSkpKSwhMCkpfWZ1bmN0aW9uIE0oZSl7dmFyIHQ9cC5hcHBlbmRPclJlcGxhY2UoQmUsInVzZXJuYW1lIixlbmNvZGVVUklDb21wb25lbnQoZSkucmVwbGFjZShuZXcgUmVnRXhwKCInIiwiZyIpLCIlMjciKSksbj1MZT9nLmNsb25lKExlKTpudWxsO3JldHVybiBuJiYobi51bnNhZmVfdXNlcm5hbWU9ZSksWCh0LG4sITApfWZ1bmN0aW9uIFYoZSx0LG4saSxvLGEpe3ZhciByPUwoaSxhKTtpZighYWUmJnQpcmV0dXJuIHplP3ooUy5GZXRjaFNlc3Npb25zUHJvZ3Jlc3Mse3Vuc2FmZV9kZXNrdG9wU3NvRG9tYWluVG9Vc2U6Zi5leHRyYWN0RG9tYWluKGUpLHNlc3Npb25QdWxsVHlwZTp4LkRzc299KTp6KFMuRGVza3RvcFNzb1Byb2dyZXNzLHt1bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlOmYuZXh0cmFjdERvbWFpbihlKX0pO3ZhciBzPXtpZHBSZWRpcmVjdFVybDpuLmlkcFJlZGlyZWN0VXJsLGlkcFJlZGlyZWN0UG9zdFBhcmFtczpuLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxpZHBSZWRpcmVjdFByb3ZpZGVyOm4uaWRwUmVkaXJlY3RQcm92aWRlcn07c3dpdGNoKHIpe2Nhc2UgbS5PbmVUaW1lQ29kZTp2YXIgYz1TLk9uZVRpbWVDb2RlO3JldHVybiByZSYmKGM9bz9TLlByb29mQ29uZmlybWF0aW9uOlMuQ29uZmlybVNlbmQpLHooYyk7Y2FzZSBtLlB1YmxpY0lkZW50aWZpZXJDb2RlOnJldHVybiByZXx8aS5DcmVkZW50aWFscy5TYXNQYXJhbXMmJmkuQ3JlZGVudGlhbHMuU2FzUGFyYW1zLlN1Y2Nlc3M/eihyZT9TLkNvbmZpcm1TZW5kOlMuT25lVGltZUNvZGUpOiQobGUuQ1RfUFdEX1NUUl9FcnJvcl9HZXRDcmVkZW50aWFsVHlwZUVycm9yLCExLCEwKTtjYXNlIG0uRmlkbzpyZXR1cm4geihTLkZpZG8pO2Nhc2UgbS5SZW1vdGVOR0M6dmFyIGQ9aS5DcmVkZW50aWFscy5SZW1vdGVOZ2NQYXJhbXMuRGVmYXVsdFR5cGU9PT12LlB1c2hOb3RpZmljYXRpb247cmV0dXJuIHoocmUmJmQ/Uy5Db25maXJtU2VuZDpTLlJlbW90ZU5HQyxzKTtjYXNlIG0uRmVkZXJhdGlvbjpjYXNlIG0uQ2xvdWRGZWRlcmF0aW9uOnJldHVybiB6KFMuSWRwUmVkaXJlY3Qscyk7Y2FzZSBtLkxpbmtlZEluOmNhc2UgbS5HaXRIdWI6Y2FzZSBtLkdvb2dsZTpyZXR1cm4geihGKGksYSkubGVuZ3RoPjF8fE4oaSxhKS5sZW5ndGg+MD9TLklkcFJlZGlyZWN0U3BlZWRidW1wOlMuSWRwUmVkaXJlY3Qscyk7Y2FzZSBtLkFjY2Vzc1Bhc3M6cmV0dXJuIHooUy5BY2Nlc3NQYXNzKTtjYXNlIG0uTm9QcmVmZXJyZWRDcmVkZW50aWFsOnJldHVybiB6KFMuQ3JlZGVudGlhbFBpY2tlcixzKTtjYXNlIG0uUGFzc3dvcmQ6ZGVmYXVsdDpyZXR1cm4geihTLlBhc3N3b3JkKX19ZnVuY3Rpb24gSChlLHQpe3ZhciBuPXAucmVtb3ZlKEVlLCJ1c2VybmFtZSIpLGk9UmU/Zy5jbG9uZShSZSk6bnVsbDtyZXR1cm4gdCYmdC5JZkV4aXN0c1Jlc3VsdD09PXcuTm90RXhpc3QmJlcoZSx0KSYmKGk/aS51bnNhZmVfdXNlcm5hbWU9ZTpuPXAuYXBwZW5kT3JSZXBsYWNlKG4sInVzZXJuYW1lIixlbmNvZGVVUklDb21wb25lbnQoZSkpKSxYKG4saSl9ZnVuY3Rpb24gaihlLHQsbil7dmFyIGk9e30sbz1MKHQsbiksYT10LkVzdHNQcm9wZXJ0aWVzfHx7fTtpZighdC5DcmVkZW50aWFsc3x8IXQuQ3JlZGVudGlhbHMuRmVkZXJhdGlvblJlZGlyZWN0VXJsJiYhdC5DcmVkZW50aWFscy5MaW5rZWRJblBhcmFtcyYmIXQuQ3JlZGVudGlhbHMuR2l0SHViUGFyYW1zJiYhdC5DcmVkZW50aWFscy5Hb29nbGVQYXJhbXMpcmV0dXJuIGk7c3dpdGNoKG8pe2Nhc2UgbS5SZW1vdGVOR0M6Y2FzZSBtLkZlZGVyYXRpb246Y2FzZSBtLk5vUHJlZmVycmVkQ3JlZGVudGlhbDphJiZhLlNhbWxSZXF1ZXN0JiZhLlJlbGF5U3RhdGU/KGkuaWRwUmVkaXJlY3RVcmw9dC5DcmVkZW50aWFscy5GZWRlcmF0aW9uUmVkaXJlY3RVcmwsaS5pZHBSZWRpcmVjdFBvc3RQYXJhbXM9e1NBTUxSZXF1ZXN0OmEuU2FtbFJlcXVlc3QsUmVsYXlTdGF0ZTphLlJlbGF5U3RhdGUsdW5zYWZlX3VzZXJuYW1lOmV9KTppLmlkcFJlZGlyZWN0VXJsPXEodC5DcmVkZW50aWFscy5GZWRlcmF0aW9uUmVkaXJlY3RVcmwsZSk7YnJlYWs7Y2FzZSBtLkNsb3VkRmVkZXJhdGlvbjppLmlkcFJlZGlyZWN0VXJsPXQuQ3JlZGVudGlhbHMuRmVkZXJhdGlvblJlZGlyZWN0VXJsO2JyZWFrO2Nhc2UgbS5MaW5rZWRJbjppLmlkcFJlZGlyZWN0VXJsPXQuQ3JlZGVudGlhbHMuTGlua2VkSW5QYXJhbXMuTGlua2VkSW5SZWRpcmVjdFVybCxpLmlkcFJlZGlyZWN0UHJvdmlkZXI9eS5MaW5rZWRJbjticmVhaztjYXNlIG0uR2l0SHViOmkuaWRwUmVkaXJlY3RVcmw9dC5DcmVkZW50aWFscy5HaXRIdWJQYXJhbXMuR2l0aHViUmVkaXJlY3RVcmwsaS5pZHBSZWRpcmVjdFByb3ZpZGVyPXkuR2l0SHViO2JyZWFrO2Nhc2UgbS5Hb29nbGU6aS5pZHBSZWRpcmVjdFVybD10LkNyZWRlbnRpYWxzLkdvb2dsZVBhcmFtcy5Hb29nbGVSZWRpcmVjdFVybCxpLmlkcFJlZGlyZWN0UHJvdmlkZXI9eS5Hb29nbGV9cmV0dXJuIGl9ZnVuY3Rpb24gcShlLHQpe2lmKE5lKXt2YXIgbj1wLmFwcGVuZE9yUmVwbGFjZSgiPyIrTmUsIndjdHgiLCJMb2dpbk9wdGlvbnMlM0QzJTI2IitwLmV4dHJhY3QoIndjdHgiLCI/IitOZSkpO249bi5zdWJzdHIoMSksZT1wLmFwcGVuZChlLG4pfWVsc2UgZT1wLmFwcGVuZE9yUmVwbGFjZShlLCJ3Y3R4IiwiTG9naW5PcHRpb25zJTNEMyUyNiIrcC5leHRyYWN0KCJ3Y3R4IixlKSk7cmV0dXJuIGU9cC5hcHBlbmRPclJlcGxhY2UoZSwiY2JjeHQiLGVuY29kZVVSSUNvbXBvbmVudChkZWNvZGVVUklDb21wb25lbnQocC5leHRyYWN0KCJjYmN4dCIpKSkpLGU9cC5hcHBlbmRPclJlcGxhY2UoZSwidXNlcm5hbWUiLGVuY29kZVVSSUNvbXBvbmVudCh0KSksZT1wLmFwcGVuZE9yUmVwbGFjZShlLCJta3QiLGVuY29kZVVSSUNvbXBvbmVudChkZWNvZGVVUklDb21wb25lbnQocC5leHRyYWN0KCJta3QiKSkpKSxlPXAuYXBwZW5kT3JSZXBsYWNlKGUsImxjIixlbmNvZGVVUklDb21wb25lbnQoZGVjb2RlVVJJQ29tcG9uZW50KHAuZXh0cmFjdCgibGMiKSkpKX1mdW5jdGlvbiBHKGUpe3JldHVybiBmLmNsZWFuc2VVc2VybmFtZShlLCEwKX1mdW5jdGlvbiBXKGUsdCl7dmFyIG49SWUmJmYuaXNTa3lwZU5hbWUoZSksaT10LkVzdHNQcm9wZXJ0aWVzfHx7fSxvPWkuRG9tYWluVHlwZSYmaS5Eb21haW5UeXBlIT09Qy5Vbmtub3duJiZpLkRvbWFpblR5cGUhPT1DLkNvbnN1bWVyO3JldHVybiBvP3QuSXNTaWdudXBEaXNhbGxvd2VkPT09ITE6IXQuSXNTaWdudXBEaXNhbGxvd2VkJiYhbn1mdW5jdGlvbiBLKCl7cmV0dXJuIHllfHxrZX1mdW5jdGlvbiB6KGUsdCl7cmV0dXJue2FjdGlvbjpQLlN3aXRjaFZpZXcsdmlld0lkOmUsdmlld1BhcmFtczp0fX1mdW5jdGlvbiAkKGUsdCxuKXtyZXR1cm57YWN0aW9uOlAuU2hvd0Vycm9yLGVycm9yOmUsaXNCbG9ja2luZ0Vycm9yOnQsYnlwYXNzQ2FjaGU6bn19ZnVuY3Rpb24gWChlLHQsbil7cmV0dXJue2FjdGlvbjpQLlJlZGlyZWN0LHJlZGlyZWN0VXJsOmUscmVkaXJlY3RQb3N0UGFyYW1zOnQsaXNJZHBSZWRpcmVjdDpufX12YXIgSj10aGlzLFE9ITEsWT1udWxsLFo9bnVsbCxlZT1udWxsLHRlPXt9LG5lPWUsaWU9MCE9PSh0JkkuQ2hlY2tDdXJyZW50SWRwT25seSksb2U9MCE9PSh0JkkuSXNQaG9uZU51bWJlckZ1bGx5UXVhbGlmaWVkKSxhZT0wIT09KHQmSS5EaXNhYmxlRGVza3RvcFNzb1ByZWZlcnJlZENyZWQpLHJlPTAhPT0odCZJLkRpc2FibGVBdXRvU2VuZCksc2U9MCE9PSh0JkkuRm9yY2VPdGNMb2dpbiksY2U9MCE9PSh0JkkuSXNQb3N0UmVxdWVzdCksZGU9MCE9PSh0JkkuSXNTaWdudXApLGxlPW5lLnN0cix1ZT1uZS5zVW5hdXRoU2Vzc2lvbklELHBlPW5lLmlBbGxvd2VkSWRlbnRpdGllcyxmZT1uZS5mSXNGZWREaXNhYmxlZCxnZT0hIW5lLmZJc1JlbW90ZU5HQ1N1cHBvcnRlZCxtZT0hIW5lLmZTaG93Q29va2llQmFubmVyLHZlPSEhbmUuZklzRmlkb1N1cHBvcnRlZCxoZT1uZS5mSXNPdGNMb2dpbkRpc2FibGVkLGJlPW5lLmZJc05vUGFPdGNEaXNhYmxlZCxfZT0hIW5lLmZJc0V4dGVybmFsRmVkZXJhdGlvbkRpc2FsbG93ZWQsU2U9ISFuZS5mSXNQYXNzdGhyb3VnaERpc2FsbG93ZWQsd2U9ISFuZS5mSXNQaG9uZU51bWJlclNpZ251cERpc2FsbG93ZWQsVGU9bmUuc0N0eCxDZT1uZS5mVXNlRmxvd1Rva2VuQXNDYW5hcnkseWU9bmUuZkRvSWZFeGlzdHMsa2U9bmUuZkNoZWNrUHJvb2ZGb3JBbGlhc2VzLHhlPW5lLmZDaGVja0FwaUNhbmFyeSxEZT1uZS51cmxHZXRDcmVkZW50aWFsVHlwZSxQZT1uZS5mQ0JTaG93U2lnblVwLEllPW5lLmZBbGxvd1NreXBlTmFtZUxvZ2luLEVlPW5lLnVybFNpZ25VcCxSZT1uZS5vU2lnblVwUG9zdFBhcmFtcyxBZT1uZS5mVXNlQ29uc3VtZXJFbWFpbEVycm9yLEJlPW5lLnVybEdvVG9BQURFcnJvcixMZT1uZS5vVXJsT3RoZXJJZHBQb3N0UGFyYW1zLEZlPW5lLmRlc2t0b3BTc29Db25maWcsTmU9bmUuc0ZlZFFTLE9lPW5lLnN0YXRpY1RlbmFudEJyYW5kaW5nLFVlPW5lLmR5bmFtaWNUZW5hbnRCcmFuZGluZyxNZT1uZS5pc0dsb2JhbFRlbmFudCxWZT1uZS5mQ2hlY2tGb3JXaW5kb3dzU2t1LEhlPW5lLmNvdW50cnksamU9bmUuYXJyUHJvb2ZEYXRhfHx7fSxxZT1wYXJzZUludChuZS5zUHJvb2ZUeXBlKSxHZT1uZS51cmxDaGFuZ2VQYXNzd29yZCxXZT0hIW5lLmZBbGxvd1JlbW90ZUNvbm5lY3QsS2U9bmUuZkJpbmRDb29raWVzVXNpbmdQb1AsemU9bmUuZlVzZUZldGNoU2Vzc2lvbnNGb3JEc3NvLCRlPW5lLmlHY3RGZWRlcmF0aW9uRmxhZ3N8fDAsWGU9bmUuZklnbm9yZVZpcmFsVXNlcnMsSmU9bmUuZkFjY2Vzc1Bhc3NTdXBwb3J0ZWQ7Si5zZW5kQXN5bmM9ZnVuY3Rpb24oZSx0KXt2YXIgbj1HKGUpLGk9dGVbbl0/dGVbbl06bnVsbCxvPSEhaSxhPWk/ci5yZXNvbHZlKGkpOkUobix0KTtyZXR1cm4gci5hbGwoW1ksYSxaXSkudGhlbihmdW5jdGlvbihlKXt2YXIgdD1lWzBdLGk9ZVsxXSxhPWVbMl07cmV0dXJuIEEobix0LGksYSxvKX0sQil9LEouZ2V0UmVzdWx0PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gQShHKGUpLCExLHQsbiwhMSl9LEouZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm57Y2FjaGU6dGV9fSxKLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYodGU9ZS5jYWNoZXx8e30pfSxKLmNhY2hlUmVzcG9uc2U9ZnVuY3Rpb24oZSx0KXt0ZVtHKGUpXT10fSxKLmdldFNpZ251cFJlZGlyZWN0R2N0UmVzdWx0PWZ1bmN0aW9uKGUpe3ZhciB0PUcoZSksbj10ZVt0XT90ZVt0XTpudWxsO3JldHVybiBIKHQsbil9LEouZ2V0T3RoZXJJZHBSZWRpcmVjdEdjdFJlc3VsdD1mdW5jdGlvbihlKXtyZXR1cm4gTShHKGUpKX0sSi5nZXRHY3RTaGFyZWREYXRhPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT17fSxvPUwoZSx0KSxhPWUuQ3JlZGVudGlhbHN8fHt9LHI9YS5SZW1vdGVOZ2NQYXJhbXMsYz1hLkZpZG9QYXJhbXMsbD1lLkVzdHNQcm9wZXJ0aWVzfHx7fSx1PXI/ci5EZWZhdWx0VHlwZTpudWxsLHA9cy5sb2FkVGVuYW50QnJhbmRpbmcobC5Vc2VyVGVuYW50QnJhbmRpbmd8fFVlKSxmPXMubG9hZFRlbmFudEJyYW5kaW5nKE9lKTtyZXR1cm4gaS5wcmVmZXJyZWRDcmVkZW50aWFsPW8saS5sb2NhdGlvbj1lLkxvY2F0aW9uLGUuRGlzcGxheSYmKGkuZGlzcGxheU5hbWU9ZS5EaXNwbGF5KSxpLmF2YWlsYWJsZUNyZWRzPUYoZSx0KSxpLmV2aWN0ZWRDcmVkcz1OKGUsdCksbz09PW0uT25lVGltZUNvZGUmJihpLm90Y0NyZWRlbnRpYWw9ZC5BcnJheS5maXJzdChpLmF2YWlsYWJsZUNyZWRzLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNyZWRUeXBlPT09bS5PbmVUaW1lQ29kZSYmZS5wcm9vZi5vdGNTZW50fSksaS51c2VFdmljdGVkQ3JlZGVudGlhbHM9ITEpLGkucmVtb3RlTmdjUGFyYW1zPXtyZXF1ZXN0U2VudDohcmUmJiFuJiZvPT09bS5SZW1vdGVOR0MmJnImJnIuaGFzT3duUHJvcGVydHkoIkVudHJvcHkiKSxzZXNzaW9uSWRlbnRpZmllcjpyP3IuU2Vzc2lvbklkZW50aWZpZXI6bnVsbCxlbnRyb3B5OnI/ci5FbnRyb3B5Om51bGwsZGVmYXVsdFR5cGU6dX0saS5vdGNQYXJhbXM9e3JlcXVlc3RTZW50OihvPT09bS5PbmVUaW1lQ29kZXx8bz09PW0uUHVibGljSWRlbnRpZmllckNvZGUpJiZlLklmRXhpc3RzUmVzdWx0IT09dy5FeGlzdHNCb3RoSURQc30sYyYmYy5BbGxvd0xpc3QmJihpLmZpZG9QYXJhbXM9e2FsbG93TGlzdDpjLkFsbG93TGlzdH0pLGkuY2FsbE1ldGFkYXRhPWwmJmwuQ2FsbE1ldGFkYXRhP2wuQ2FsbE1ldGFkYXRhOnt9LGkudXNlclRlbmFudEJyYW5kaW5nPXMuZ2V0TWVyZ2VkQnJhbmRpbmcoZixwLE1lKSxpfSxmdW5jdGlvbigpe1E9IWllJiZwZT09PWsuQm90aCxZPXIucmVzb2x2ZSghMSksVmUmJkQmJkQuaXNNc2FQcm92aWRlckFsbG93ZWRBc3luYyYmKFk9RC5pc01zYVByb3ZpZGVyQWxsb3dlZEFzeW5jKCkpLFo9dS5pc0ZpZG9TdXBwb3J0ZWRBc3luYyh2ZSksS2UmJm4uZSgxLGZ1bmN0aW9uKCl7dmFyIGU9bigxNzQpO2VlPWUuY29tcHV0ZVBvUEF1dGhlbnRpY2F0b3IoIlBPU1QiLERlKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybntjcGE6ZSxlcnI6bnVsbH19LGZ1bmN0aW9uKGUpe3JldHVybntjcGE6IiIsZXJyOmUubWVzc2FnZX19KX0pfSgpfXZhciBvPW4oNSksYT1uKDE2KSxyPW4oMTEpLHM9bigxOCksYz1uKDkpLGQ9big2KSxsPW4oMTY3KSx1PWMuSGVscGVyLHA9Yy5RdWVyeVN0cmluZyxmPWQuU3RyaW5nLGc9ZC5PYmplY3QsbT1vLkNyZWRlbnRpYWxUeXBlLHY9by5SZW1vdGVOZ2NUeXBlLGg9by5FcnJvcixiPW8uQXBpRXJyb3JDb2RlcyxfPW8uRXN0c0Vycm9yLFM9by5QYWdpbmF0ZWRTdGF0ZSx3PW8uSWZFeGlzdHNSZXN1bHQsVD1vLlRocm90dGxlU3RhdHVzLEM9by5Eb21haW5UeXBlLHk9by5CaW5kUHJvdmlkZXIsaz1hLkFsbG93ZWRJZGVudGl0aWVzVHlwZSx4PW8uU2Vzc2lvblB1bGxGbGFncyxEPW51bGwsUD1pLkdjdFJlc3VsdEFjdGlvbj17U2hvd0Vycm9yOjEsU3dpdGNoVmlldzoyLFJlZGlyZWN0OjN9LEk9aS5HY3RSZXF1ZXN0SGVscGVyRmxhZ3M9e0NoZWNrQ3VycmVudElkcE9ubHk6MSxJc1Bob25lTnVtYmVyRnVsbHlRdWFsaWZpZWQ6MixEaXNhYmxlRGVza3RvcFNzb1ByZWZlcnJlZENyZWQ6NCxEaXNhYmxlQXV0b1NlbmQ6OCxGb3JjZU90Y0xvZ2luOjE2LElzUG9zdFJlcXVlc3Q6MzIsSXNTaWdudXA6NjR9O2UuZXhwb3J0cz1pfSwsZnVuY3Rpb24oZSx0KXt2YXIgbj10LnN0cmluZ1RvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBBcnJheUJ1ZmZlcihlLmxlbmd0aCksbj1uZXcgVWludDhBcnJheSh0KSxpPTAsbz1lLmxlbmd0aDtpPG87KytpKW5baV09ZS5jaGFyQ29kZUF0KGkpO3JldHVybiB0fSxpPXQuYXJyYXlCdWZmZXJUb1N0cmluZz1mdW5jdGlvbihlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG5ldyBVaW50OEFycmF5KGUpKX07dC5iYXNlNjRVcmxTdHJpbmdUb0FycmF5QnVmZmVyPWZ1bmN0aW9uKGUpe3ZhciB0PWUucmVwbGFjZSgvWy1fXS9nLGZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIi0iOnJldHVybiIrIjtjYXNlIl8iOnJldHVybiIvIn19KSxpPWF0b2IodCk7cmV0dXJuIG4oaSl9LHQuYXJyYXlCdWZmZXJUb0Jhc2U2NFVybFN0cmluZz1mdW5jdGlvbihlKXt2YXIgdD1pKGUpLG49YnRvYSh0KTtyZXR1cm4gbyhuKX0sdC5vYmplY3RUb0Jhc2U2NFVybFN0cmluZz1mdW5jdGlvbihlKXtpZihlKXt2YXIgdD1KU09OLnN0cmluZ2lmeShlKSxuPWJ0b2EodCk7cmV0dXJuIG8obil9cmV0dXJuIG51bGx9O3ZhciBvPXQuYmFzZTY0VG9CYXNlNjRVcmxTdHJpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXBsYWNlKC9bK1wvPV0vZyxmdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSIrIjpyZXR1cm4iLSI7Y2FzZSIvIjpyZXR1cm4iXyI7Y2FzZSI9IjpyZXR1cm4iIn19KTtyZXR1cm4gdH19LCxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWlmKHRbbl0ubmFtZT09PWUubmFtZSYmdFtuXS5pZHA9PT1lLmlkcClyZXR1cm4gbjtyZXR1cm4tMX12YXIgbz1uKDYpLGE9bigxNikscj1vLkFycmF5LHM9e21lcmdlU2Vzc2lvbnM6ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPVtdO3JldHVybiByLmZvckVhY2godCxmdW5jdGlvbih0KXt2YXIgYT1pKHQsZSk7YT09PS0xPyh0LmlzV2luZG93c1Nzbz9lLnVuc2hpZnQodCk6ZS5wdXNoKHQpLG8ucHVzaCh0KSk6dC5pc1dpbmRvd3NTc28/KGUuc3BsaWNlKGEsMSksZS51bnNoaWZ0KHQpLG8ucHVzaCh0KSk6biYmKGUuc3BsaWNlKGEsMSksZS5wdXNoKHQpLG8ucHVzaCh0KSl9KSxvfSxwYXJzZU1lQ29udHJvbFNlc3Npb25zOmZ1bmN0aW9uKGUpe3ZhciB0PTEsbj0yO3JldHVybiByLm1hcChlLGZ1bmN0aW9uKGUpe3ZhciBpPWUuZmlyc3ROYW1lLG89ZS5sYXN0TmFtZTtyZXR1cm4gbyYmKGk/aSs9IiAiK286aT1vKSx7aWQ6ZS5zZXNzaW9uSWQsZnVsbE5hbWU6aSxuYW1lOmUubWVtYmVyTmFtZXx8ZS5zaWduSW5OYW1lLGRpc3BsYXlOYW1lOmUubWVtYmVyTmFtZXx8ZS5zaWduSW5OYW1lLGlkcDphLlNlc3Npb25JZHAuTXNhLGlzT3RoZXJJZHA6ITAsaXNTaWduZWRJbjplLmlzU2lnbmVkSW58fGUuYXV0aGVudGljYXRlZFN0YXRlPT09dHx8ZS5hdXRoZW50aWNhdGVkU3RhdGU9PT1uLGlzV2luZG93c1NzbzplLmlzV2luZG93c1Nzb3x8ITEsaXNNZUNvbnRyb2xTZXNzaW9uOiEwLGlzR2l0SHViRmVkOmUuaXNHaXRIdWJGZWR8fCExfX0pfSxwYXJzZUJzc29TZXNzaW9uczpmdW5jdGlvbihlKXtyZXR1cm4gci5tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm57c3NvVW5pcXVlSWQ6ZS5zc29VbmlxdWVJZCxuYW1lOmUubmFtZSxkaXNwbGF5TmFtZTplLmRpc3BsYXlOYW1lLGlkcDphLlNlc3Npb25JZHAuQWFkLHNzb0xpbms6ZS51cmwsaXNXaW5kb3dzU3NvOmUuaXNXaW5kb3dzU3NvLGlzU2lnbmVkSW46ZS5pc1NpZ25lZElufX0pfX07ZS5leHBvcnRzPXN9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3JldHVybiBuKG8oZSkpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGFbZV18fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrZSsiJy4iKX0oKX12YXIgYT17Ii4vc2lnbmluLWZhY2Vib29rLnBuZyI6MTc5LCIuL3NpZ25pbi1naXRodWItd2hpdGUucG5nIjoxODAsIi4vc2lnbmluLWdpdGh1Yi13aGl0ZS5zdmciOjE4MSwiLi9zaWduaW4tZ2l0aHViLnBuZyI6MTgyLCIuL3NpZ25pbi1naXRodWIuc3ZnIjoxODMsIi4vc2lnbmluLWdvb2dsZS5wbmciOjE4NCwiLi9zaWduaW4tZ29vZ2xlLnN2ZyI6MTg1LCIuL3NpZ25pbi1saW5rZWRpbi13aGl0ZS5wbmciOjE4NiwiLi9zaWduaW4tbGlua2VkaW4td2hpdGUuc3ZnIjoxODcsIi4vc2lnbmluLWxpbmtlZGluLnBuZyI6MTg4LCIuL3NpZ25pbi1saW5rZWRpbi5zdmciOjE4OSwiLi9zaWduaW4tbWljcm9zb2Z0LnBuZyI6MTkwLCIuL3NpZ25pbi1taWNyb3NvZnQuc3ZnIjoxOTF9O2kua2V5cz1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhhKX0saS5yZXNvbHZlPW8sZS5leHBvcnRzPWksaS5pZD0xNzh9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9zaWduaW4tZmFjZWJvb2tfMTAyMTUyMzlmZjVmOGEwYzdmNzBjODJkZGRlNzc3ZDIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1naXRodWItd2hpdGVfODA4NGU3ZWY2M2FhOTA5NDRiN2NmM2YyZTZhZjQxOTcucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1naXRodWItd2hpdGVfYmE1NDU0ZTE4NDc4MTZhNzI4MWQxZTg4M2JiMWI4MzUuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1naXRodWJfZTYzZTIxMzI5NzU1ZDk5NGQwNGU5NWEzYmZmMGI3YjYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1naXRodWJfZDU1MWU2MGU2ZWU0ZmM3MjZmNGIyZGFkMTdjYTYwOWYuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1nb29nbGVfNzg2ZmQzODhjZDg5YjgyNzkyNjBmOWRkODVhOTA5ZGYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1nb29nbGVfZGM0YWNkNDA0ZTYxMWY1ZDZhYTI2OWM5ZTFhZDA2YTQuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1saW5rZWRpbi13aGl0ZV81MjYyYTM1ZTBhMzVmMDhmYWVkMzZkOTg0NWYyYjU3NC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvc2lnbmluLWxpbmtlZGluLXdoaXRlX2Q4MWViNDRjZDk3ZDlhYjVkNTJlMWI4ZjYwNmExZmRlLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9zaWduaW4tbGlua2VkaW5fNTMwMTVmYTg3NmM2NzkyZTRlZjA0YzhkZTZkNTE3MzgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3NpZ25pbi1saW5rZWRpbl9mOWUyNDM5ODY3Y2QzZjE5ZWE0NmUxNWI4NTg2ZTU5OC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvc2lnbmluLW1pY3Jvc29mdF80ZDVkOTIwZGI0OGFjYWFhZmVjM2MzZjE2MWE4MjlkMy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvc2lnbmluLW1pY3Jvc29mdF9mOWJlODIxNDQwNjg5NmVkNjlmOWM2MDUxYjEwNDc2NC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KCl7dmFyIGU7cmV0dXJuIFooKT9hLnBhc3N3b3JkVGV4dGJveC52YWx1ZSgpP251bGw6Ui5DVF9QV0RfU1RSX0Vycm9yX01pc3NpbmdQYXNzd29yZDooZT1jfHxudWxsLGM9bnVsbCxlKX1mdW5jdGlvbiBuKCl7dSYmdS5oYW5kbGVPblBhc3N3b3JkVXBkYXRlP3UuaGFuZGxlT25QYXNzd29yZFVwZGF0ZShhLnBhc3N3b3JkVGV4dGJveC52YWx1ZSgpLHIsYS5vblN1Ym1pdFJlYWR5KTphLm9uU3VibWl0UmVhZHkoKX1mdW5jdGlvbiBpKGUpe2EuaXNCYWNrQnV0dG9uVmlzaWJsZShlKSxhLm9uU2V0QmFja0J1dHRvblN0YXRlKEcmJmUpfXZhciBhPXRoaXMscj1lLnNlcnZlckRhdGEsYz1lLnNlcnZlckVycm9yLGQ9ZS5pc0luaXRpYWxWaWV3LHA9ZS51c2VybmFtZSxfPWUuZGlzcGxheU5hbWV8fCIiLFM9ZS5oaXBSZXF1aXJlZEZvclVzZXJuYW1lLHc9ZS5wYXNzd29yZEJyb3dzZXJQcmVmaWxsLFQ9ZS5hdmFpbGFibGVDcmVkc3x8W10sQz1lLmV2aWN0ZWRDcmVkc3x8W10seT1lLmRlZmF1bHRLbXNpVmFsdWUsaz1lLnVzZXJUZW5hbnRCcmFuZGluZyx4PWUuc2Vzc2lvbnMsRD1lLmNhbGxNZXRhZGF0YSxQPWUuZmxvd1Rva2VuLEk9ZS51c2VFdmljdGVkQ3JlZGVudGlhbHMsRT1lLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyxSPXIuc3RyLEE9ci5pTG9naW5Nb2RlLEI9ci51cmxISVBTY3JpcHQsTD1yLnNSZW1vdGVDb25uZWN0QXBwTmFtZSxGPXIuZkFsbG93Q2FuY2VsLE49ci51cmxTd2l0Y2gsTz1yLnVybFNraXBadGQsVT1yLmZMb2NrVXNlcm5hbWUsTT1yLmZTaG93U3dpdGNoVXNlcixWPXIuZlBPU1RfRm9yY2VTaWduaW4sSD1yLnNadGRGcmllbmRseU5hbWUsaj1yLnNadGRUZW5hbnROYW1lLHE9ci5zWnRkVXBuSGludCxHPXIuZlNob3dCdXR0b25zLFc9ci5zRXJyb3JDb2RlLEs9ci5mU2hvd0hpcE9uTmV3Vmlldyx6PXIuZkxvZ1NraXBUb09mZmxpbmVBY2NvdW50QWN0aW9uLCQ9ISFyLmZIaWRlT2ZmbGluZUFjY291bnRXaXRoTm9Ta2lwU3RyaW5nLFg9ITEsSj1udWxsLFE9ITEsWT0hMSxaPW8ub2JzZXJ2YWJsZSghMSk7YS5vblN3aXRjaFZpZXc9cy5jcmVhdGUoKSxhLm9uU3VibWl0UmVhZHk9cy5jcmVhdGUoKSxhLm9uUmVzZXRQYXNzd29yZD1zLmNyZWF0ZSgpLGEub25SZWRpcmVjdD1zLmNyZWF0ZSgpLGEub25TZXRCYWNrQnV0dG9uU3RhdGU9cy5jcmVhdGUoKSxhLm9uU2V0UGVuZGluZ1JlcXVlc3Q9cy5jcmVhdGUoKSxhLm9uVXBkYXRlRmxvd1Rva2VuPXMuY3JlYXRlKCksYS5wYXNzd29yZFRleHRib3g9bmV3IGwoby5wdXJlQ29tcHV0ZWQodCksdyksYS5oaXBJbnRlcmZhY2U9by5vYnNlcnZhYmxlKCksYS5pc0ttc2lDaGVja2VkPW8ub2JzZXJ2YWJsZSh5KSxhLmlzUmVxdWVzdFBlbmRpbmc9by5vYnNlcnZhYmxlKCExKSxhLnVuc2FmZV91c2VybmFtZT1vLm9ic2VydmFibGUoKSxhLnNob3dUaWxlTG9nbz1vLm9ic2VydmFibGUoITEpLGEuaXNCYWNrQnV0dG9uVmlzaWJsZT1vLm9ic2VydmFibGUoITEpLGEuc2Vjb25kYXJ5QnV0dG9uVGV4dD1vLm9ic2VydmFibGUoKSxhLnVzZUV2aWN0ZWRDcmVkZW50aWFscz1vLm9ic2VydmFibGUoSSksYS5zaG93UGFzc3dvcmQ9by5vYnNlcnZhYmxlKCExKSxhLnNob3VsZEhpcEluaXQ9by5vYnNlcnZhYmxlKCExKSxhLnRlbmFudEJyYW5kaW5nPW51bGwsYS51bnNhZmVfZGlzcGxheU5hbWU9bnVsbCxhLnVzZXJuYW1lPXAsYS51bnNhZmVfcGFzc3dvcmRBcmlhTGFiZWw9bnVsbCxhLmhhc1JlbW90ZU5nYz0hMSxhLmF2YWlsYWJsZUNyZWRzPVQsYS5ldmljdGVkQ3JlZHM9QyxhLmFsbG93UGhvbmVEaXNhbWJpZ3VhdGlvbj0hMSxhLnVuc2FmZV9wYWdlRGVzY3JpcHRpb249bnVsbCxhLnVuc2FmZV9wYWdlVGl0bGU9bnVsbCxhLnVuc2FmZV9za2lwWlRETGlua1RleHQ9bnVsbCxhLmlzSW5pdGlhbFZpZXc9ZCxhLnNob3dIaXBPblBhc3N3b3JkVmlldz0hMSxhLnNob3dDaGFuZ2VVc2VyTGluaz0hMSxhLmNhbGxNZXRhZGF0YT1ELGEuZmxvd1Rva2VuPVAsYS5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M9RSxhLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKGUpe2UucmVtb3RlTmdjUGFyYW1zLnJlcXVlc3RTZW50PSExLGUudXNlRXZpY3RlZENyZWRlbnRpYWxzPVF8fGEudXNlRXZpY3RlZENyZWRlbnRpYWxzKCksZS5wYXNzd29yZD1hLnBhc3N3b3JkVGV4dGJveC52YWx1ZSgpLGUuc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjPSExLEomJihlLm90Y0NyZWRlbnRpYWw9Sil9LGEuZ2V0U3RhdGU9ZnVuY3Rpb24oKXt2YXIgZT17aXNLbXNpQ2hlY2tlZDphLmlzS21zaUNoZWNrZWQoKSx1c2VFdmljdGVkQ3JlZGVudGlhbHM6YS51c2VFdmljdGVkQ3JlZGVudGlhbHMoKX07cmV0dXJuIGV9LGEucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKGUpe2UmJihhLmlzS21zaUNoZWNrZWQoZS5pc0ttc2lDaGVja2VkKSxhLnVzZUV2aWN0ZWRDcmVkZW50aWFscyhlLnVzZUV2aWN0ZWRDcmVkZW50aWFscykpfSxhLnNldERlZmF1bHRGb2N1cz1mdW5jdGlvbigpe2EucGFzc3dvcmRUZXh0Ym94LmZvY3VzZWQoITApfSxhLnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3ZhciBlPWEuaGlwSW50ZXJmYWNlKCk7aWYoIVgmJiFhLmlzUmVxdWVzdFBlbmRpbmcoKSl7aWYoWighMCksZSYmZS5lbmFibGVWYWxpZGF0aW9uKCksbnVsbCE9PWEucGFzc3dvcmRUZXh0Ym94LmVycm9yKCkpcmV0dXJuIHZvaWQgYS5zZXREZWZhdWx0Rm9jdXMoKTtpZihlKXtpZihudWxsIT09ZS5nZXRFcnJvcigpKXJldHVybiB2b2lkIGUuZm9jdXMoKTtYPSEwLGUudmVyaWZ5KGZ1bmN0aW9uKCl7WD0hMSxuKCl9KX1lbHNlIFkmJks/YS5vblN3aXRjaFZpZXcoZy5IaXApOm4oKX19LGEuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXthLm9uU3dpdGNoVmlldyhnLlByZXZpb3VzKX0sYS5waG9uZURpc2FtYmlndWF0aW9uX29uQ2xpY2s9ZnVuY3Rpb24oKXthLm9uU3dpdGNoVmlldyhnLlBob25lRGlzYW1iaWd1YXRpb24pfSxhLnJlc2V0UGFzc3dvcmRfb25DbGljaz1mdW5jdGlvbigpe2Eub25SZXNldFBhc3N3b3JkKF8pfSxhLnNlbGVjdEFjY291bnRfb25DbGljaz1mdW5jdGlvbigpe1UmJk4/YS5vblJlZGlyZWN0KE4pOmEub25Td2l0Y2hWaWV3KHgubGVuZ3RoP2cuVGlsZXM6Zy5Vc2VybmFtZSl9LGEuaGlwX29uSGlwTG9hZD1mdW5jdGlvbigpe2EuaXNSZXF1ZXN0UGVuZGluZyghMSksbnVsbCE9PWEucGFzc3dvcmRUZXh0Ym94LmVycm9yKCkmJmEuc2V0RGVmYXVsdEZvY3VzKCl9LGEuc2tpcF9vbkNsaWNrPWZ1bmN0aW9uKCl7dSYmdS5oYW5kbGVPblNraXAmJih1LmhhbmRsZU9uU2tpcChyKSxhLmlzUmVxdWVzdFBlbmRpbmcoITApKX0sYS5zd2l0Y2hUb1JlbW90ZU5HQ19vbkNsaWNrPWZ1bmN0aW9uKCl7YS5vblN3aXRjaFZpZXcoZy5SZW1vdGVOR0MpfSxhLnNraXBadGRfb25DbGljaz1mdW5jdGlvbigpe2Eub25SZWRpcmVjdChPKX0sYS5wcml2YWN5X29uQ2xpY2s9ZnVuY3Rpb24oKXthLm9uU3dpdGNoVmlldyhnLlZpZXdBZ3JlZW1lbnQpfSxhLnRpbGVMb2dvX29uTG9hZD1mdW5jdGlvbigpe2Euc2hvd1RpbGVMb2dvKCEwKSx1JiZ1LmxvZ0V2ZW50JiZ1LmxvZ0V2ZW50KCJJZGVudGl0eS5QYXNzd29yZFZpZXcuQnJhbmRpbmcuVGlsZUxvZ29Mb2FkZWQiKX0sYS5kZXNrdG9wU3NvX29uU3VjY2Vzcz1mdW5jdGlvbigpe2Eub25TdWJtaXRSZWFkeSgpfSxhLnN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGljaz1mdW5jdGlvbigpe1E9ITAsYS5vblN3aXRjaFZpZXcoZy5DcmVkZW50aWFsUGlja2VyKX0sYS5jcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXc9ZnVuY3Rpb24oZSx0LG4pe24mJihKPW4pLGEub25Td2l0Y2hWaWV3KGUsdCl9LGEuY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXthLm9uU2V0UGVuZGluZ1JlcXVlc3QoZSksYS5pc1JlcXVlc3RQZW5kaW5nKGUpfSxhLmNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe2UmJihQPWUsYS5vblVwZGF0ZUZsb3dUb2tlbihlKSl9LGZ1bmN0aW9uKCl7dmFyIGU9Yi5odG1sVW5lc2NhcGUoXyk7aWYoYS51bnNhZmVfdXNlcm5hbWUoYi5odG1sVW5lc2NhcGUocCkpLGEudW5zYWZlX2Rpc3BsYXlOYW1lPW8ub2JzZXJ2YWJsZShlKS5leHRlbmQoe3ByZXZlbnRFeHRlcm5hbFdyaXRlOm51bGx9KSxhLmFsbG93UGhvbmVEaXNhbWJpZ3VhdGlvbj0hVSYmIWYuaXNFbWFpbEFkZHJlc3MoXykmJiFmLmlzU2t5cGVOYW1lKF8pJiZmLmlzUGhvbmVOdW1iZXIoXyksYS5oYXNSZW1vdGVOZ2M9ISFvLnV0aWxzLmFycmF5Rmlyc3QoVCxmdW5jdGlvbihlKXtyZXR1cm4gZS5jcmVkVHlwZT09PXYuUmVtb3RlTkdDfSksWT0hIUImJnA9PT1TLGEuc2hvd0hpcE9uUGFzc3dvcmRWaWV3PVkmJiFLLGEuc2hvd0NoYW5nZVVzZXJMaW5rPU0mJihVJiZOfHxkKSxhLnRlbmFudEJyYW5kaW5nPWssTCYmZD9hLnVuc2FmZV9wYWdlRGVzY3JpcHRpb249Zi5mb3JtYXQoUi5DVF9QV0RfU1RSX1JlbW90ZUNvbm5lY3RfUGFzc3dvcmRQYWdlX0Rlc2MsTCxlKTpBPT09bS5Gb3JjZVNpZ25pbnx8QT09PW0uRm9yY2VTaWduaW5Nb2JpbGV8fEE9PT1tLkZvcmNlU2lnbmluSG9zdHx8Vj9hLnVuc2FmZV9wYWdlRGVzY3JpcHRpb249Vz09PWguU3NvQXJ0aWZhY3RFeHBpcmVkRHVlVG9Db25kaXRpb25hbEFjY2Vzcz9SLldGX1NUUl9BU0xQX0luZm86Zi5mb3JtYXQoUi5XRl9TVFJfRm9yY2VTSV9JbmZvLGUpOlIuQ1RfUFdEX1NUUl9FbnRlclBhc3N3b3JkX0Rlc2MmJihhLnVuc2FmZV9wYWdlRGVzY3JpcHRpb249Zi5mb3JtYXQoUi5DVF9QV0RfU1RSX0VudGVyUGFzc3dvcmRfRGVzYyxlKSkscSYmail7dmFyIHQ9Yi5odG1sVW5lc2NhcGUoaik7YS51bnNhZmVfcGFnZVRpdGxlPUg/Zi5mb3JtYXQoUi5DVF9XaW4xMF9Qd2RXaXRoT3JnRG9tYWluX0FuZEZyaWVuZGx5TmFtZSxiLmh0bWxVbmVzY2FwZShIKSx0KTpmLmZvcm1hdChSLkNUX1dpbjEwX1NUUl9Qd2RfVGl0bGVfV2l0aE9yZ0RvbWFpbix0KSxhLnVuc2FmZV9za2lwWlRETGlua1RleHQ9Zi5mb3JtYXQoUi5DVF9XaW4xMF9TVFJfUHdkX1N0YXJ0T3Zlcl9XaXRoT3JnRG9tYWluLHQpfWVsc2UgYS51bnNhZmVfcGFnZVRpdGxlPVIuQ1RfUFdEX1NUUl9FbnRlcllvdXJQYXNzd29yZF9UaXRsZSxhLnVuc2FmZV9za2lwWlRETGlua1RleHQ9Ui5DVF9XaW4xMF9TVFJfU3RhcnRPdmVyO2lmKGEudW5zYWZlX3Bhc3N3b3JkQXJpYUxhYmVsPWYuZm9ybWF0KFIuQ1RfUFdEX1NUUl9Qd2RUQl9BcmlhTGFiZWwsZSksYS5zaG93SGlwT25QYXNzd29yZFZpZXcmJmEuaXNSZXF1ZXN0UGVuZGluZyghMCksdSl7aWYodS5pbml0aWFsaXplUGFzc3dvcmRWaWV3TW9kZWwmJnUuaW5pdGlhbGl6ZVBhc3N3b3JkVmlld01vZGVsKGEsciksdS5oYW5kbGVCYWNrQnV0dG9uJiZ1LmhhbmRsZUJhY2tCdXR0b24oYS5zZWNvbmRhcnlCdXR0b25fb25DbGljay5iaW5kKGEpKSx1LmxvZ0V2ZW50KXt2YXIgbj1hLnRlbmFudEJyYW5kaW5nJiZhLnRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dD8iMSI6IjAiO3UubG9nRXZlbnQoIklkZW50aXR5LlBhc3N3b3JkVmlldy5CcmFuZGluZy5IYXNCb2lsZXJQbGF0ZVRleHQiLG4pO3ZhciBzPWEudGVuYW50QnJhbmRpbmcmJmEudGVuYW50QnJhbmRpbmcuVGlsZUxvZ28/IjEiOiIwIjtpZih1LmxvZ0V2ZW50KCJJZGVudGl0eS5QYXNzd29yZFZpZXcuQnJhbmRpbmcuSGFzVGlsZUxvZ28iLHMpLHUubG9nRXZlbnQoIklkZW50aXR5LkZsaWdodC5Jc0VuYWJsZWRIaWRlT2ZmbGluZUFjY291bnRXaXRoTm9Ta2lwU3RyaW5nIiwkKSx6KXt2YXIgYz1yLmFyclZhbEVycnMubGVuZ3RoPjA/ci5hcnJWYWxFcnJzWzBdOiIiO3UubG9nRXZlbnQoIklkZW50aXR5Lk9PQkUuTG9naW4uRXJyb3JTa2lwVG9Mb2NhbFZpc2libGUiLCJbRXJyb3JDb2RlXSAiK2MpfX11LnNob3dLZXlib2FyZCYmdS5zaG93S2V5Ym9hcmQoITApfWlmKGEudW5zYWZlX2Rpc3BsYXlOYW1lLnN1YnNjcmliZShmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXthLnBhc3N3b3JkVGV4dGJveC52YWx1ZShudWxsKX0sMCl9KSxkP3UmJnUuaXNCYWNrQnV0dG9uU3VwcG9ydGVkT25Jbml0aWFsVmlldz91LmlzQmFja0J1dHRvblN1cHBvcnRlZE9uSW5pdGlhbFZpZXcocixmdW5jdGlvbihlLHQpe2koZSksdCYmYS5zZWNvbmRhcnlCdXR0b25UZXh0KFIuQ1RfUFdEX1NUUl9DYW5jZWxfQnV0dG9uKX0pOkYmJmkoITApOmkoITApLEImJmEuc2hvd0hpcE9uUGFzc3dvcmRWaWV3KXJldHVybiB2b2lkIGEuc2hvdWxkSGlwSW5pdCghMCl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz1uKDYpLGQ9bigxOTMpLGw9bigxOTQpLHU9bnVsbCxwPXdpbmRvdyxmPWMuU3RyaW5nLGc9YS5QYWdpbmF0ZWRTdGF0ZSxtPWEuTG9naW5Nb2RlLHY9YS5DcmVkZW50aWFsVHlwZSxoPWEuRXN0c0Vycm9yLGI9ci5IZWxwZXI7ZC5hcHBseUV4dGVuZGVycyhvKSxvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXBhZ2luYXRlZC1wYXNzd29yZC12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigxOTUpLHN5bmNocm9ub3VzOiFwLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4ocC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCl7dC5hcHBseUV4dGVuZGVycz1mdW5jdGlvbihlKXtlLmV4dGVuZGVycy5wcmV2ZW50RXh0ZXJuYWxXcml0ZT1mdW5jdGlvbih0KXt2YXIgbj10KCksaT1lLm9ic2VydmFibGUobikuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KSxvPWUucHVyZUNvbXB1dGVkKHtyZWFkOmZ1bmN0aW9uKCl7cmV0dXJuIGkoKX0sd3JpdGU6ZnVuY3Rpb24oZSl7ZSE9PW4mJmkobil9fSkuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KTtyZXR1cm4gb30sZS5leHRlbmRlcnMuZmxvd1Rva2VuVXBkYXRlPWZ1bmN0aW9uKHQsbil7dmFyIGk9ZS5wdXJlQ29tcHV0ZWQoe3JlYWQ6dCx3cml0ZTpmdW5jdGlvbihlKXtlJiYobiYmKG4uc0ZUVGFnJiYobi5zRlRUYWc9bi5zRlRUYWcucmVwbGFjZShuLnNGVCxlKSksbi5zRlQ9ZSksdChlKSl9fSkuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KTtyZXR1cm4gaX19fSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigxKSxvPW4oNiksYT1vLlN0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKGUpe3ZhciB0PW8udmFsdWUucGVlaygpO2UudG9nZ2xlVmlzaWJpbGl0eSghdCkscj1vLnZhbHVlLnN1YnNjcmliZShmdW5jdGlvbih0KXtlLnRvZ2dsZVZpc2liaWxpdHkoIXQpfSl9dmFyIG89dGhpcyxyPW51bGw7by5wbGFjZWhvbGRlclRleHRib3hNZXRob2RzPWkub2JzZXJ2YWJsZSgpLG8udmFsdWU9aS5vYnNlcnZhYmxlKHR8fCIiKSxvLmZvY3VzZWQ9aS5vYnNlcnZhYmxlKCExKS5leHRlbmQoe25vdGlmeToiYWx3YXlzIn0pLG8uZXJyb3I9ZSxvLnRleHRib3hfb25VcGRhdGVGb2N1cz1mdW5jdGlvbihlKXtvLmZvY3VzZWQoZSl9LG8uZ2V0VHJpbW1lZFZhbHVlPWZ1bmN0aW9uKGUpe3ZhciB0PWEudHJpbShvLnZhbHVlKCl8fCIiKTtyZXR1cm4gZSYmZT4wJiYodD10LnN1YnN0cmluZygwLGUpKSx0fSxmdW5jdGlvbigpe28ucGxhY2Vob2xkZXJUZXh0Ym94TWV0aG9kcy5zdWJzY3JpYmUoZnVuY3Rpb24oZSl7ZSYmIXImJm4oZSl9KX0oKX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTYpLG4oMTk4KSxuKDIwMCksIiIpKyIgLS0+PCEtLSAiKyhuLmUoMixmdW5jdGlvbigpe3JldHVybiBuKDIyMCksIiJ9KSwiIikrJyAtLT4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aTEzIGRhdGEtYmluZD0idmFsdWU6IGlzS21zaUNoZWNrZWQoKSA/IDEgOiAwIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWxvZ2luIGRhdGEtYmluZD0idmFsdWU6IHVuc2FmZV91c2VybmFtZSIvPiA8aW5wdXQgdHlwZT10ZXh0IG5hbWU9bG9naW5mbXQgZGF0YS1iaW5kPSJtb3ZlT2ZmU2NyZWVuLCB2YWx1ZTogdW5zYWZlX2Rpc3BsYXlOYW1lIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXR5cGUgZGF0YS1iaW5kPSJ2YWx1ZTogc3ZyLmZVc2VXaXphcmRCZWhhdmlvciA/ICcrbig1KS5Qb3N0VHlwZS5QYXNzd29yZElubGluZSsiIDogIituKDUpLlBvc3RUeXBlLlBhc3N3b3JkKyciLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9TG9naW5PcHRpb25zIGRhdGEtYmluZD0idmFsdWU6IGlzS21zaUNoZWNrZWQoKSA/ICcrbigxNikuTG9naW5PcHRpb24uUmVtZW1iZXJQV0QrIiA6ICIrbigxNikuTG9naW5PcHRpb24uTm90aGluZ0NoZWNrZWQrJyIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1scnQgZGF0YS1iaW5kPSJ2YWx1ZTogY2FsbE1ldGFkYXRhLklzTG9uZ1J1bm5pbmdUcmFuc2FjdGlvbiIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1scnRQYXJ0aXRpb24gZGF0YS1iaW5kPSJ2YWx1ZTogY2FsbE1ldGFkYXRhLkxvbmdSdW5uaW5nVHJhbnNhY3Rpb25QYXJ0aXRpb24iLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aGlzUmVnaW9uIGRhdGEtYmluZD0idmFsdWU6IGNhbGxNZXRhZGF0YS5IaXNSZWdpb24iLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aGlzU2NhbGVVbml0IGRhdGEtYmluZD0idmFsdWU6IGNhbGxNZXRhZGF0YS5IaXNTY2FsZVVuaXQiLz4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz0icm93IHRleHQtdGl0bGUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9QV0RfU1RSX0VudGVyUGFzc3dvcmRfVGl0bGVcJ10iPjwvZGl2PjwhLS0ga28gaWY6IHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyAtLT4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSI+IDxkaXYgaWQ9Y3JlZFZpZXdCcmFuZGluZ0Rlc2MgY2xhc3M9d3JhcC1jb250ZW50IGRhdGEtYmluZD0idGV4dDogc3RyW1wnV0ZfU1RSX0RlZmF1bHRfRGVzY1wnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHVuc2FmZV9wYWdlRGVzY3JpcHRpb24gLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPXBhc3N3b3JkRGVzYyBjbGFzcz13cmFwLWNvbnRlbnQgZGF0YS1iaW5kPSJ0ZXh0OiB1bnNhZmVfcGFnZURlc2NyaXB0aW9uIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC1tZC0yNCI+IDxkaXYgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlPjwhLS0ga28gaWY6IHBhc3N3b3JkVGV4dGJveC5lcnJvciAtLT4gPGRpdiBpZD1wYXNzd29yZEVycm9yIGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciIgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICBodG1sV2l0aEJpbmRpbmdzOiBwYXNzd29yZFRleHRib3guZXJyb3IsXG4gICAgICAgICAgICAgICAgY2hpbGRCaW5kaW5nczogeyBcJ2lkQV9JTF9Gb3Jnb3RQYXNzd29yZDBcJzogeyBocmVmOiBzdnIudXJsUmVzZXRQYXNzd29yZCwgY2xpY2s6IHJlc2V0UGFzc3dvcmRfb25DbGljayB9IH0iPjwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPGRpdiBjbGFzcz1wbGFjZWhvbGRlckNvbnRhaW5lciBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ3BsYWNlaG9sZGVyLXRleHRib3gtZmllbGRcJyxcbiAgICAgICAgICAgIHB1YmxpY01ldGhvZHM6IHBhc3N3b3JkVGV4dGJveC5wbGFjZWhvbGRlclRleHRib3hNZXRob2RzLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIGhpbnRUZXh0OiBzdHJbXCdDVF9QV0RfU1RSX1B3ZFRCX0xhYmVsXCddIH0sXG4gICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgIHVwZGF0ZUZvY3VzOiBwYXNzd29yZFRleHRib3gudGV4dGJveF9vblVwZGF0ZUZvY3VzIH0gfSI+IDxpbnB1dCBuYW1lPXBhc3N3ZCB0eXBlPXBhc3N3b3JkIGlkPWkwMTE4IGF1dG9jb21wbGV0ZT1vZmYgY2xhc3M9Zm9ybS1jb250cm9sIGFyaWEtcmVxdWlyZWQ9dHJ1ZSBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgIHRleHRJbnB1dDogcGFzc3dvcmRUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgIGFyaWFEZXNjcmliZWRCeTogW1xuICAgICAgICAgICAgICAgICAgICBcJ2xvZ2luSGVhZGVyXCcsXG4gICAgICAgICAgICAgICAgICAgIHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyA/IFwnY3JlZFZpZXdCcmFuZGluZ0Rlc2NcJyA6IFwnXCcsXG4gICAgICAgICAgICAgICAgICAgIHVuc2FmZV9wYWdlRGVzY3JpcHRpb24gPyBcJ3Bhc3N3b3JkRGVzY1wnIDogXCdcJ10uam9pbihcJyBcJyksXG4gICAgICAgICAgICAgICAgaGFzRm9jdXNFeDogcGFzc3dvcmRUZXh0Ym94LmZvY3VzZWQoKSAmJiAhc2hvd1Bhc3N3b3JkKCksXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICRwbGFjZWhvbGRlclRleHQsXG4gICAgICAgICAgICAgICAgYXJpYUxhYmVsOiB1bnNhZmVfcGFzc3dvcmRBcmlhTGFiZWwsXG4gICAgICAgICAgICAgICAgbW92ZU9mZlNjcmVlbjogc2hvd1Bhc3N3b3JkLFxuICAgICAgICAgICAgICAgIGNzczogeyBcJ2hhcy1lcnJvclwnOiBwYXNzd29yZFRleHRib3guZXJyb3IgfSIvPjwhLS0ga28gaWY6IHN2ci5mVXNlUGFzc3dvcmRQZWVrICYmIHNob3dQYXNzd29yZCgpIC0tPiA8aW5wdXQgdHlwZT10ZXh0IGF1dG9jb21wbGV0ZT1vZmYgY2xhc3M9Zm9ybS1jb250cm9sIGFyaWEtcmVxdWlyZWQ9dHJ1ZSBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgIHRleHRJbnB1dDogcGFzc3dvcmRUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgIGFyaWFEZXNjcmliZWRCeTogW1xuICAgICAgICAgICAgICAgICAgICBcJ2xvZ2luSGVhZGVyXCcsXG4gICAgICAgICAgICAgICAgICAgIHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyA/IFwnY3JlZFZpZXdCcmFuZGluZ0Rlc2NcJyA6IFwnXCcsXG4gICAgICAgICAgICAgICAgICAgIHVuc2FmZV9wYWdlRGVzY3JpcHRpb24gPyBcJ3Bhc3N3b3JkRGVzY1wnIDogXCdcJ10uam9pbihcJyBcJyksXG4gICAgICAgICAgICAgICAgaGFzRm9jdXNFeDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJHBsYWNlaG9sZGVyVGV4dCxcbiAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHVuc2FmZV9wYXNzd29yZEFyaWFMYWJlbCxcbiAgICAgICAgICAgICAgICBjc3M6IHsgXCdoYXMtZXJyb3JcJzogcGFzc3dvcmRUZXh0Ym94LmVycm9yIH0iLz48IS0tIC9rbyAtLT4gPC9kaXY+PCEtLSBrbyBpZjogc3ZyLmZVc2VQYXNzd29yZFBlZWsgLS0+IDxkaXYgY2xhc3M9ImNoZWNrYm94IG5vLW1hcmdpbi1ib3R0b20iPiA8bGFiZWw+IDxpbnB1dCBpZD1TaG93SGlkZVBhc3N3b3JkQ2hlY2tib3ggdHlwZT1jaGVja2JveCBkYXRhLWJpbmQ9ImNoZWNrZWQ6IHNob3dQYXNzd29yZCwgYXJpYUxhYmVsOiBzdHJbXCdDVF9QV0RfU1RSX1Nob3dQYXNzd29yZEFyaWFMYWJlbFwnXSIvPiA8c3BhbiBpZD1TaG93SGlkZVBhc3N3b3JkTGFiZWwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9QV0RfU1RSX1Nob3dQYXNzd29yZExhYmVsXCddIj48L3NwYW4+IDwvbGFiZWw+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogc2hvdWxkSGlwSW5pdCAtLT4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2hpcC1maWVsZFwnLFxuICAgIHB1YmxpY01ldGhvZHM6IGhpcEludGVyZmFjZSxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc3RyOiBzdHIsXG4gICAgICAgIG9uRGVtYW5kVmVyaWZ5OiB0cnVlLFxuICAgICAgICBoYXNTZXJ2ZXJFcnJvcjogc3ZyLmZISVBFcnJvcixcbiAgICAgICAgdXNlRmFrZTogc3ZyLmZVc2VGYWtlSElQIH0sXG4gICAgZXZlbnQ6IHtcbiAgICAgICAgaGlwTG9hZDogaGlwX29uSGlwTG9hZCB9IH0iPiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBkYXRhLWJpbmQ9ImNzczogeyBcJ3Bvc2l0aW9uLWJ1dHRvbnNcJzogIXRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCB9Ij4gPGRpdj48IS0tIGtvIGlmOiBzdnIuZlNob3dQZXJzaXN0ZW50Q29va2llc1dhcm5pbmcgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPXN3di13YXJuaW5nIGNsYXNzPXdyYXAtY29udGVudCBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX1BXRF9TVFJfUGVyc2lzdGVudENvb2tpZXNfV2FybmluZ1wnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHN2ci5mS01TSUVuYWJsZWQgIT09IGZhbHNlICYmICFzdnIuZlNob3dQZXJzaXN0ZW50Q29va2llc1dhcm5pbmcgJiYgIXRlbmFudEJyYW5kaW5nLktlZXBNZVNpZ25lZEluRGlzYWJsZWQgLS0+IDxkaXYgaWQ9aWRUZF9QV0RfS01TSV9DYiBjbGFzcz0iZm9ybS1ncm91cCBjaGVja2JveCB0ZXh0LWJsb2NrLWJvZHkgbm8tbWFyZ2luLXRvcCIgZGF0YS1iaW5kPSJ2aXNpYmxlOiAhc3ZyLmZMb2NrVXNlcm5hbWUgJiYgIXNob3dIaXBPblBhc3N3b3JkVmlldyI+IDxsYWJlbCBpZD1pZExibF9QV0RfS01TSV9DYj4gPGlucHV0IG5hbWU9S01TSSBpZD1pZENoa0J4X1BXRF9LTVNJMFB3ZCB0eXBlPWNoZWNrYm94IGRhdGEtYmluZD0iY2hlY2tlZDogaXNLbXNpQ2hlY2tlZCwgYXJpYUxhYmVsOiBzdHJbXCdDVF9QV0RfU1RSX0tlZXBNZVNpZ25lZEluQ0JfVGV4dFwnXSIvPiA8c3BhbiBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX1BXRF9TVFJfS2VlcE1lU2lnbmVkSW5DQl9UZXh0XCddIj48L3NwYW4+IDwvbGFiZWw+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBjbGFzcz1jb2wtbWQtMjQ+IDxkaXYgY2xhc3M9InRleHQtMTMgYWN0aW9uLWxpbmtzIj4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8YSBpZD1pZEFfUFdEX0ZvcmdvdFBhc3N3b3JkIHJvbGU9bGluayBocmVmPSMgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9QV0RfU1RSX0ZvcmdvdFB3ZExpbmtfVGV4dFwnXSwgaHJlZjogc3ZyLnVybFJlc2V0UGFzc3dvcmQsIGNsaWNrOiByZXNldFBhc3N3b3JkX29uQ2xpY2siPjwvYT4gPC9kaXY+PCEtLSBrbyBpZjogYWxsb3dQaG9uZURpc2FtYmlndWF0aW9uIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPXN3aXRjaFRvUGhvbmVEaXNhbWJpZ3VhdGlvbiBocmVmPSMgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdXRl9TVFJfVGhpc0lzbnRNeU51bWJlcl9UZXh0XCddLCBjbGljazogcGhvbmVEaXNhbWJpZ3VhdGlvbl9vbkNsaWNrIj48L2E+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IHVzZUV2aWN0ZWRDcmVkZW50aWFscyAtLT48IS0tIGtvIGNvbXBvbmVudDogeyBuYW1lOiAiY3JlZC1zd2l0Y2gtbGluay1jb250cm9sIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNyZWRzOiBhdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBmbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiB7IGNyZWRUeXBlOiAnK24oNSkuQ3JlZGVudGlhbFR5cGUuUGFzc3dvcmQrIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoVmlldzogY3JlZFN3aXRjaExpbmtfb25Td2l0Y2hWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6IGNyZWRTd2l0Y2hMaW5rX29uU2V0UGVuZGluZ1JlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW4gfSB9IC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGV2aWN0ZWRDcmVkcy5sZW5ndGggPiAwIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWV2aWN0ZWRBY2NvdW50IGhyZWY9IyBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX1BXRF9TVFJfU3dpdGNoVG9DcmVkUGlja2VyX0xpbmtfRXZpY3RlZEFjY3QnXSwgY2xpY2s6IHN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGlja1wiPjwvYT4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc2hvd0NoYW5nZVVzZXJMaW5rIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWkxNjY4IGhyZWY9IyBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX0ZFRF9TVFJfQ2hhbmdlVXNlckxpbmtfVGV4dCddLCBjbGljazogc2VsZWN0QWNjb3VudF9vbkNsaWNrXCI+PC9hPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93IGRhdGEtYmluZD1cImNzczogeyAnbW92ZS1idXR0b25zJzogdGVuYW50QnJhbmRpbmcuQm9pbGVyUGxhdGVUZXh0IH1cIj4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Zvb3Rlci1idXR0b25zLWZpZWxkJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uVGV4dDogc3RyWydDVF9QV0RfU1RSX1NpZ25Jbl9CdXR0b24nXSxcbiAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvbkVuYWJsZWQ6ICFpc1JlcXVlc3RQZW5kaW5nKCksXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25FbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBmYWxzZSB9LFxuICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2sgfSB9XCI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogdGVuYW50QnJhbmRpbmcuQm9pbGVyUGxhdGVUZXh0IC0tPiA8ZGl2IGlkPWlkQm9pbGVyUGxhdGVUZXh0IGNsYXNzPVwid3JhcC1jb250ZW50IGJvaWxlcnBsYXRlLXRleHRcIiBkYXRhLWJpbmQ9XCJcbiAgICBodG1sV2l0aE1vZHM6IHRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCxcbiAgICBodG1sTW9kczogeyBmaWx0ZXJMaW5rczogc3ZyLmZJc0hvc3RlZCB9LFxuICAgIGNzczogeyAndHJhbnNwYXJlbnQtbGlnaHRib3gnOiB0ZW5hbnRCcmFuZGluZy5Vc2VUcmFuc3BhcmVudExpZ2h0Qm94IH1cIj48L2Rpdj4gPCEtLSAva28gLS0+IjsKfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXt2YXIgdD10aGlzLG49InBsYWNlaG9sZGVyImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0IiksaT1lLnNlcnZlckRhdGEscz1lLmhpbnRUZXh0LGM9ZS5oaW50Q3NzfHwicGxhY2Vob2xkZXIiLGQ9aS5mSXNIb3N0ZWQ7dC5vblVwZGF0ZUZvY3VzPXIuY3JlYXRlKCksdC5oaW50VGV4dD1zLHQudXNlUGxhY2Vob2xkZXJBdHRyaWJ1dGU9ITEsdC5wbGFjZWhvbGRlclZpc2libGU9by5vYnNlcnZhYmxlKCEwKSx0LmhpbnRDc3M9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gYyYmby51dGlscy5hcnJheUZvckVhY2goYy5zcGxpdCgiICIpLGZ1bmN0aW9uKHQpe2VbdF09ITB9KSxlfSksdC5wbGFjZWhvbGRlclRleHQ9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtpZih0LnVzZVBsYWNlaG9sZGVyQXR0cmlidXRlKXJldHVybiB0LmhpbnRUZXh0fSksdC50b2dnbGVWaXNpYmlsaXR5PWZ1bmN0aW9uKGUpe3QucGxhY2Vob2xkZXJWaXNpYmxlKGUpfSx0LnBsYWNlaG9sZGVyX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uVXBkYXRlRm9jdXMoITApfSxmdW5jdGlvbigpe24mJmEuSGVscGVyLmlzUGxhY2Vob2xkZXJBdHRyaWJ1dGVBbGxvd2VkKGQpJiYodC51c2VQbGFjZWhvbGRlckF0dHJpYnV0ZT0hMCl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoInBsYWNlaG9sZGVyLXRleHRib3gtZmllbGQiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDE5Nyksc3luY2hyb25vdXM6IXMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihzLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9JzwhLS0ga28gd2l0aFByb3BlcnRpZXM6IHsgXCckcGxhY2Vob2xkZXJUZXh0XCc6IHBsYWNlaG9sZGVyVGV4dCB9IC0tPiA8IS0tIGtvIHRlbXBsYXRlOiB7IG5vZGVzOiAkY29tcG9uZW50VGVtcGxhdGVOb2RlcywgZGF0YTogJHBhcmVudCB9IC0tPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IHVzZVBsYWNlaG9sZGVyQXR0cmlidXRlIC0tPiA8ZGl2IGNsYXNzPXBsYWNlaG9sZGVySW5uZXJDb250YWluZXIgZGF0YS1iaW5kPSJ2aXNpYmxlOiBwbGFjZWhvbGRlclZpc2libGUsIGNsaWNrOiBwbGFjZWhvbGRlcl9vbkNsaWNrIj4gPGRpdiBjbGFzcz1wbGFjZWhvbGRlciBhcmlhLWhpZGRlbj10cnVlIGRhdGEtYmluZD0idGV4dDogaGludFRleHQsIGNzczogaGludENzcyI+PC9kaXY+IDwvZGl2PiA8IS0tIC9rbyAtLT4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtlPWV8fHt9O3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLnByaW1hcnlCdXR0b25JZCxjPWUuc2Vjb25kYXJ5QnV0dG9uSWQsZD1lLnByaW1hcnlCdXR0b25UZXh0LGw9ZS5zZWNvbmRhcnlCdXR0b25UZXh0LHU9ZS5pc1ByaW1hcnlCdXR0b25WaXNpYmxlIT09ITEscD1lLmlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZSE9PSExLGY9ZS5pc1ByaW1hcnlCdXR0b25FbmFibGVkIT09ITEsZz1lLmlzU2Vjb25kYXJ5QnV0dG9uRW5hYmxlZCE9PSExLG09ZS5mb2N1c09uUHJpbWFyeUJ1dHRvbnx8ITEsdj1lLmZvY3VzT25TZWNvbmRhcnlCdXR0b258fCExLGg9ZS5wcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnksYj1lLnNlY29uZGFyeUJ1dHRvbkRlc2NyaWJlZEJ5LF89ZS5wcmltYXJ5QnV0dG9uVHlwZXx8InN1Ym1pdCIsUz1lLnJlbW92ZUJvdHRvbU1hcmdpbix3PWUucHJpbWFyeUJ1dHRvblByZXZlbnRUYWJiaW5nfHx7ZGlyZWN0aW9uOiJub25lIn07dC5wcmltYXJ5QnV0dG9uSWQ9aSx0LnNlY29uZGFyeUJ1dHRvbklkPWMsdC5wcmltYXJ5QnV0dG9uVGV4dD1vLm9ic2VydmFibGUoZCksdC5zZWNvbmRhcnlCdXR0b25UZXh0PW8ub2JzZXJ2YWJsZShsKSx0LmlzUHJpbWFyeUJ1dHRvblZpc2libGU9by5vYnNlcnZhYmxlKHUpLHQuaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlPW8ub2JzZXJ2YWJsZShwKSx0LmlzUHJpbWFyeUJ1dHRvbkVuYWJsZWQ9by5vYnNlcnZhYmxlKGYpLHQuaXNTZWNvbmRhcnlCdXR0b25FbmFibGVkPW8ub2JzZXJ2YWJsZShnKSx0LmZvY3VzT25QcmltYXJ5QnV0dG9uPW8ub2JzZXJ2YWJsZShtKSx0LmZvY3VzT25TZWNvbmRhcnlCdXR0b249by5vYnNlcnZhYmxlKHYpLHQuaGFzT25lQnV0dG9uVmlzaWJsZT1vLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPTA7cmV0dXJuIHQuaXNQcmltYXJ5QnV0dG9uVmlzaWJsZSgpJiZlKyssdC5pc1NlY29uZGFyeUJ1dHRvblZpc2libGUoKSYmZSsrLDE9PT1lfSksdC5wcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk9aCx0LnNlY29uZGFyeUJ1dHRvbkRlc2NyaWJlZEJ5PWIsdC5yZW1vdmVCb3R0b21NYXJnaW49Uyx0LnByaW1hcnlCdXR0b25QcmV2ZW50VGFiYmluZz13LHQucHJpbWFyeUJ1dHRvbkF0dHJpYnV0ZXM9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT17aWQ6dC5wcmltYXJ5QnV0dG9uSWR8fCJpZFNJQnV0dG9uOSIsImFyaWEtZGVzY3JpYmVkYnkiOnQucHJpbWFyeUJ1dHRvbkRlc2NyaWJlZEJ5fTtyZXR1cm4gYS5IZWxwZXIuaXNDaGFuZ2luZ0lucHV0VHlwZVN1cHBvcnRlZCgpJiYoZS50eXBlPV8pLGV9KSx0Lm9uUHJpbWFyeUJ1dHRvbkNsaWNrPXIuY3JlYXRlKCksdC5vblNlY29uZGFyeUJ1dHRvbkNsaWNrPXIuY3JlYXRlKCksdC5zZXRUZXh0UHJpbWFyeUJ1dHRvbj1mdW5jdGlvbihlKXt0LnByaW1hcnlCdXR0b25UZXh0KGUpfSx0LnNldFRleHRTZWNvbmRhcnlCdXR0b249ZnVuY3Rpb24oZSl7dC5zZWNvbmRhcnlCdXR0b25UZXh0KGUpfSx0LnNldFZpc2liaWxpdHlQcmltYXJ5QnV0dG9uPWZ1bmN0aW9uKGUpe3QuaXNQcmltYXJ5QnV0dG9uVmlzaWJsZShlKX0sdC5zZXRWaXNpYmlsaXR5U2Vjb25kYXJ5QnV0dG9uPWZ1bmN0aW9uKGUpe3QuaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlKGUpfSx0LnNldEVuYWJsZWRQcmltYXJ5QnV0dG9uPWZ1bmN0aW9uKGUpe3QuaXNQcmltYXJ5QnV0dG9uRW5hYmxlZChlKX0sdC5zZXRFbmFibGVkU2Vjb25kYXJ5QnV0dG9uPWZ1bmN0aW9uKGUpe3QuaXNTZWNvbmRhcnlCdXR0b25FbmFibGVkKGUpfSx0LnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25QcmltYXJ5QnV0dG9uQ2xpY2soKX0sdC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25TZWNvbmRhcnlCdXR0b25DbGljaygpfSxmdW5jdGlvbigpe3MmJnMuaW5pdGlhbGl6ZSYmcy5pbml0aWFsaXplKHQsbixlKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oMTMpLHM9bnVsbCxjPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImZvb3Rlci1idXR0b25zLWZpZWxkIix7dmlld01vZGVsOmksdGVtcGxhdGU6bigxOTkpLHN5bmNocm9ub3VzOiFjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oYy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSc8ZGl2IGNsYXNzPSJjb2wteHMtMjQgbm8tcGFkZGluZy1sZWZ0LXJpZ2h0IGJ1dHRvbi1jb250YWluZXIiIGRhdGEtYmluZD0iXG4gICAgdmlzaWJsZTogaXNQcmltYXJ5QnV0dG9uVmlzaWJsZSgpIHx8IGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZSgpLFxuICAgIGNzczogeyBcJ25vLW1hcmdpbi1ib3R0b21cJzogcmVtb3ZlQm90dG9tTWFyZ2luIH0iPjwhLS0ga28gaWY6IGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZSAtLT4gPGRpdiBjbGFzcz1pbmxpbmUtYmxvY2s+IDxpbnB1dCB0eXBlPWJ1dHRvbiBpZD1pZEJ0bl9CYWNrIGNsYXNzPSJidG4gYnRuLWJsb2NrIiBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgYXR0cjogeyBcJ2lkXCc6IHNlY29uZGFyeUJ1dHRvbklkIHx8IFwnaWRCdG5fQmFja1wnIH0sXG4gICAgICAgICAgICB2YWx1ZTogc2Vjb25kYXJ5QnV0dG9uVGV4dCgpIHx8IHN0cltcJ0NUX0hSRF9TVFJfU3BsaXR0ZXJfQmFja1wnXSxcbiAgICAgICAgICAgIGFyaWFEZXNjcmliZWRCeTogc2Vjb25kYXJ5QnV0dG9uRGVzY3JpYmVkQnksXG4gICAgICAgICAgICBoYXNGb2N1czogZm9jdXNPblNlY29uZGFyeUJ1dHRvbixcbiAgICAgICAgICAgIGNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayxcbiAgICAgICAgICAgIGVuYWJsZTogaXNTZWNvbmRhcnlCdXR0b25FbmFibGVkIi8+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGNsYXNzPWlubGluZS1ibG9jaz48IS0tIHR5cGU9InN1Ym1pdCIgaXMgbmVlZGVkIGluLWFkZGl0aW9uIHRvIFwndHlwZVwnIGluIHByaW1hcnlCdXR0b25BdHRyaWJ1dGVzIG9ic2VydmFibGUgdG8gc3VwcG9ydCBJRTggLS0+IDxpbnB1dCB0eXBlPXN1Ym1pdCBpZD1pZFNJQnV0dG9uOSBjbGFzcz0iYnRuIGJ0bi1ibG9jayBidG4tcHJpbWFyeSIgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgIGF0dHI6IHByaW1hcnlCdXR0b25BdHRyaWJ1dGVzLFxuICAgICAgICAgICAgdmFsdWU6IHByaW1hcnlCdXR0b25UZXh0KCkgfHwgc3RyW1wnQ1RfUFdEX1NUUl9TaWduSW5fQnV0dG9uX05leHRcJ10sXG4gICAgICAgICAgICBoYXNGb2N1czogZm9jdXNPblByaW1hcnlCdXR0b24sXG4gICAgICAgICAgICBjbGljazogcHJpbWFyeUJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgZW5hYmxlOiBpc1ByaW1hcnlCdXR0b25FbmFibGVkLFxuICAgICAgICAgICAgdmlzaWJsZTogaXNQcmltYXJ5QnV0dG9uVmlzaWJsZSxcbiAgICAgICAgICAgIHByZXZlbnRUYWJiaW5nOiBwcmltYXJ5QnV0dG9uUHJldmVudFRhYmJpbmciLz4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXtkLnRocm93VW5oYW5kbGVkRXhjZXB0aW9uT25SZWplY3Rpb24oYy5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSgpLnRoZW4obnVsbCxmdW5jdGlvbigpe3JldHVybiExfSkudGhlbihmdW5jdGlvbihlKXtlJiYoRChDLkNUX1BXRF9TVFJfU3dpdGNoVG9GaWRvX0xpbmspLHAuaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGUoITApKX0pKX1mdW5jdGlvbiBuKCl7dmFyIGU9e3VzZXJuYW1lOmcuY2xlYW5zZVVzZXJuYW1lKGIpLHByb29mRGF0YTp4LnByb29mLmRhdGEscHJvb2ZUeXBlOngucHJvb2YudHlwZSxwdXJwb3NlOngucHJvb2YuaXNOb3BhP3UuUHVycG9zZS5Ob1Bhc3N3b3JkOnUuUHVycG9zZS5PdGNMb2dpbixmbG93VG9rZW46dyxpc0VuY3J5cHRlZDp4LnByb29mLmlzRW5jcnlwdGVkLHN1Y2Nlc3NDYWxsYmFjazppLGZhaWx1cmVDYWxsYmFjazphfTtpZihlLmlzRW5jcnlwdGVkKXN3aXRjaCh4LnByb29mLnR5cGUpe2Nhc2UgUFJPT0YuVHlwZS5FbWFpbDplLnByb29mQ29uZmlybWF0aW9uPXgucHJvb2YuZGlzcGxheTticmVhaztjYXNlIFBST09GLlR5cGUuU01TOmNhc2UgUFJPT0YuVHlwZS5Wb2ljZTplLnByb29mQ29uZmlybWF0aW9uPWcuY2xlYW5zZVVzZXJuYW1lKHgucHJvb2YuZGlzcGxheSkuc2xpY2UoLTQpfXJldHVybiBlfWZ1bmN0aW9uIGkoZSl7cyhlKSxwLm9uU2V0UGVuZGluZ1JlcXVlc3QoITEpLHAub25Td2l0Y2hWaWV3KG0uT25lVGltZUNvZGUsITEseCl9ZnVuY3Rpb24gYShlKXt2YXIgdCxuPWUuZ2V0T3RjU3RhdHVzKCk7c3dpdGNoKHMoZSksbil7Y2FzZSB1LlN0YXR1cy5GVEVycm9yOnQ9Qy5DVF9PVENfU1RSX0Vycm9yX0Zsb3dFeHBpcmVkO2JyZWFrO2RlZmF1bHQ6dD14LnByb29mLnN0ci5DVF9PVENTX1NUUl9FcnJvcl9TZW5kQ29kZVNlcnZlcnx8IiJ9cC5vblNldFBlbmRpbmdSZXF1ZXN0KCExKSxwLmNyZWRMaW5rRXJyb3IodCl9ZnVuY3Rpb24gcyhlKXtlJiYoZS5nZXRGbG93VG9rZW4/KHc9ZS5nZXRGbG93VG9rZW4oKSxwLm9uVXBkYXRlRmxvd1Rva2VuKHcpKTplLkZsb3dUb2tlbiYmKHc9ZS5GbG93VG9rZW4scC5vblVwZGF0ZUZsb3dUb2tlbih3KSkpfXZhciBwPXRoaXMsZj1lLnNlcnZlckRhdGEsYj1lLnVzZXJuYW1lLF89ZS5hdmFpbGFibGVDcmVkc3x8W10sUz1lLmN1cnJlbnRDcmVkfHx7fSx3PWUuZmxvd1Rva2VuLFQ9ZS5zaG93Rm9yZ290VXNlcm5hbWUsQz1mLnN0cix5PWYudXJsRm9yZ290VXNlcm5hbWUsaz1bXSx4PW51bGwsRD1vLm9ic2VydmFibGUoKTtwLm9uU3dpdGNoVmlldz1yLmNyZWF0ZSgpLHAub25SZWRpcmVjdD1yLmNyZWF0ZSgpLHAub25SZWdpc3RlckRpYWxvZz1yLmNyZWF0ZSgpLHAub25VbnJlZ2lzdGVyRGlhbG9nPXIuY3JlYXRlKCkscC5vblNob3dEaWFsb2c9ci5jcmVhdGUoKSxwLm9uU2V0UGVuZGluZ1JlcXVlc3Q9ci5jcmVhdGUoKSxwLm9uVXBkYXRlRmxvd1Rva2VuPXIuY3JlYXRlKCkscC5jcmVkZW50aWFsQ291bnQ9MCxwLnNlbGVjdGVkQ3JlZFR5cGU9bnVsbCxwLnNlbGVjdGVkQ3JlZFNob3duT25seU9uUGlja2VyPSExLHAuc3dpdGNoVG9DcmVkSWQ9bnVsbCxwLnN3aXRjaFRvQ3JlZFRleHQ9bnVsbCxwLnNob3dGb3Jnb3RVc2VybmFtZT1ULHAuaXNVc2VyS25vd249ISFTLmNyZWRUeXBlLHAuZGlzcGxheUhlbHA9IVMuY3JlZFR5cGUscC5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZT1vLm9ic2VydmFibGUoITEpLHAuY3JlZExpbmtFcnJvcj1vLm9ic2VydmFibGUoKSxwLmZpZG9IZWxwX29uQ2xpY2s9ZnVuY3Rpb24oKXtwLm9uU2hvd0RpYWxvZyhoLkZpZG9IZWxwKX0scC52aWV3X29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe3c9ZX0scC5zd2l0Y2hUb0NyZWRQaWNrZXJfb25DbGljaz1mdW5jdGlvbigpe3Aub25Td2l0Y2hWaWV3KG0uQ3JlZGVudGlhbFBpY2tlcil9LHAuc3dpdGNoVG9DcmVkX29uQ2xpY2s9ZnVuY3Rpb24oKXt2YXIgZT14LmNyZWRUeXBlfHx2LlBhc3N3b3JkO3N3aXRjaChwLmNyZWRMaW5rRXJyb3IoIiIpLGUpe2Nhc2Ugdi5PbmVUaW1lQ29kZTppZih4LnByb29mLmNsZWFyRGlnaXRzKXAub25Td2l0Y2hWaWV3KG0uUHJvb2ZDb25maXJtYXRpb24sITEseCk7ZWxzZXt2YXIgdD1uKCksaT1uZXcgbCh0KTtwLm9uU2V0UGVuZGluZ1JlcXVlc3QoITApLGkuc2VuZFJlcXVlc3QoKX1icmVhaztjYXNlIHYuT3RoZXJNaWNyb3NvZnRJZHBGZWRlcmF0aW9uOmNhc2Ugdi5MaW5rZWRJbjpjYXNlIHYuR2l0SHViOmNhc2Ugdi5Hb29nbGU6cC5vblJlZGlyZWN0KHgucmVkaXJlY3RVcmwpO2JyZWFrO2RlZmF1bHQ6cC5vblN3aXRjaFZpZXcoa1tlXS52aWV3SWQpfX0scC5mb3Jnb3RVc2VybmFtZV9vbkNsaWNrPWZ1bmN0aW9uKCl7ZG9jdW1lbnQubG9jYXRpb24uYXNzaWduKHkpfSxmdW5jdGlvbigpe2lmKGtbdi5QYXNzd29yZF09e3ZpZXdJZDptLlBhc3N3b3JkLGNyZWRJZDoiaWRBX1BXRF9Td2l0Y2hUb1Bhc3N3b3JkIixjcmVkVGV4dDpDLkNUX1JOR0NfU1RSX1N3aXRjaFRvUGFzc3dvcmRfTGlua30sa1t2LlJlbW90ZU5HQ109e3ZpZXdJZDptLlJlbW90ZU5HQyxjcmVkSWQ6ImlkQV9QV0RfU3dpdGNoVG9SZW1vdGVOR0MiLGNyZWRUZXh0OkMuQ1RfUFdEX1NUUl9Td2l0Y2hUb1JlbW90ZU5HQ19MaW5rfSxrW3YuRmlkb109e3ZpZXdJZDptLkZpZG8sY3JlZElkOiJpZEFfUFdEX1N3aXRjaFRvRmlkbyIsY3JlZFRleHQ6RH0sa1t2Lk90aGVyTWljcm9zb2Z0SWRwRmVkZXJhdGlvbl09e2NyZWRJZDoidXNlTWljcm9zb2Z0TGluayIsY3JlZFRleHQ6Qy5DVF9QV0RfU1RSX1VzZU1pY3Jvc29mdF9MaW5rfSxrW3YuTGlua2VkSW5dPXtjcmVkSWQ6InVzZUxpbmtlZEluTGluayIsY3JlZFRleHQ6Qy5DVF9QV0RfU1RSX1VzZUxpbmtlZEluX0xpbmt9LGtbdi5HaXRIdWJdPXtjcmVkSWQ6InVzZUdpdEh1YkxpbmsiLGNyZWRUZXh0OkMuQ1RfUFdEX1NUUl9Vc2VHaXRIdWJfTGlua30sa1t2Lkdvb2dsZV09e2NyZWRJZDoidXNlR29vZ2xlTGluayIsY3JlZFRleHQ6Qy5DVF9QV0RfU1RSX1VzZUdvb2dsZV9MaW5rfSxrW3YuRmVkZXJhdGlvbl09e3ZpZXdJZDptLklkcFJlZGlyZWN0LGNyZWRJZDoicmVkaXJlY3RUb0lkcExpbmsiLGNyZWRUZXh0OkMuQ1RfUk5HQ19TVFJfU3dpdGNoVG9GZWRlcmF0ZWRfTGlua30sa1t2LlJlbW90ZUxvZ2luXT17dmlld0lkOm0uUmVtb3RlTG9naW5Qb2xsaW5nLGNyZWRJZDoicmVtb3RlTG9naW5MaW5rIixjcmVkVGV4dDpDLkNUX1BXRF9TVFJfUmVtb3RlTG9naW5MaW5rfSxrW3YuT25lVGltZUNvZGVdPXt2aWV3SWQ6bS5PbmVUaW1lQ29kZSxjcmVkSWQ6Im90Y0xvZ2luTGluayIsY3JlZFRleHQ6Qy5DVF9QV0RfU1RSX1N3aXRjaFRvT1RDX0xpbmt9LGtbdi5BY2Nlc3NQYXNzXT17dmlld0lkOm0uQWNjZXNzUGFzcyxjcmVkSWQ6ImFjY2Vzc1Bhc3NMaW5rIixjcmVkVGV4dDpDLkNUX1BXRF9TVFJfTG9naW5fU3dpdGNoVG9BY2Nlc3NQYXNzTGlua30sRChDLkNUX1BXRF9TVFJfU3dpdGNoVG9GaWRvQ3Jvc3NQbGF0Zm9ybV9MaW5rKSxvLnV0aWxzLmFycmF5Rm9yRWFjaChfLGZ1bmN0aW9uKGUpe2lmKGtbZS5jcmVkVHlwZV0pe3ZhciBuPWUuY3JlZFR5cGU9PT1TLmNyZWRUeXBlLGk9ZS5jcmVkVHlwZT09PXYuT25lVGltZUNvZGUsbz1uJiZpJiZlLnByb29mLmRhdGE9PT1TLnByb29mLmRhdGEsYT1uJiZpJiZlLnByb29mLnR5cGU9PT1TLnByb29mLnR5cGU7KCFufHxpJiYhb3x8aSYmIWEpJiYocC5jcmVkZW50aWFsQ291bnQrKyx4PWUpfWUuY3JlZFR5cGU9PT12LkZpZG8mJnQoKX0pLDE9PT1wLmNyZWRlbnRpYWxDb3VudCYmKHAuc2VsZWN0ZWRDcmVkVHlwZT14LmNyZWRUeXBlLHAuc2VsZWN0ZWRDcmVkU2hvd25Pbmx5T25QaWNrZXI9ISF4LnNob3duT25seU9uUGlja2VyLHAuc3dpdGNoVG9DcmVkSWQ9a1twLnNlbGVjdGVkQ3JlZFR5cGV8fHYuUGFzc3dvcmRdLmNyZWRJZCxwLnN3aXRjaFRvQ3JlZFRleHQ9a1twLnNlbGVjdGVkQ3JlZFR5cGV8fHYuUGFzc3dvcmRdLmNyZWRUZXh0LHAuc2VsZWN0ZWRDcmVkVHlwZT09PXYuT25lVGltZUNvZGUpKXN3aXRjaCh4LnByb29mLnR5cGUpe2Nhc2UgUFJPT0YuVHlwZS5FbWFpbDpwLnN3aXRjaFRvQ3JlZFRleHQ9Zy5mb3JtYXQoQy5DVF9PVENfU1RSX1N3aXRjaFRvT3RjX0VtYWlsTGluayx4LnByb29mLmRpc3BsYXkpO2JyZWFrO2Nhc2UgUFJPT0YuVHlwZS5TTVM6cC5zd2l0Y2hUb0NyZWRUZXh0PWcuZm9ybWF0KEMuQ1RfT1RDX1NUUl9Td2l0Y2hUb090Y19TbXNMaW5rLHgucHJvb2YuZGlzcGxheSk7YnJlYWs7Y2FzZSBQUk9PRi5UeXBlLlZvaWNlOnAuc3dpdGNoVG9DcmVkVGV4dD1nLmZvcm1hdChDLkNUX09UQ19TVFJfU3dpdGNoVG9PdGNfVm9pY2VMaW5rLHgucHJvb2YuZGlzcGxheSl9fSgpfXZhciBvPW4oMSksYT1uKDkpLHI9bigxMykscz1uKDUpLGM9bigyMDEpLGQ9bigxMiksbD1uKDIwMiksdT1uKDIwMykscD1uKDYpLGY9d2luZG93LGc9cC5TdHJpbmcsbT1zLlBhZ2luYXRlZFN0YXRlLHY9cy5DcmVkZW50aWFsVHlwZSxoPXMuRGlhbG9nSWQ7by5jb21wb25lbnRzLnJlZ2lzdGVyKCJjcmVkLXN3aXRjaC1saW5rLWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDIwNCksc3luY2hyb25vdXM6IWYuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihmLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe3ZhciBpPW4oMTApLG89bigxMiksYT1uKDE3NSkscj13aW5kb3cscz1yLm5hdmlnYXRvcixjPSEhci5TZXJ2ZXJEYXRhLmZGaWRvVXNlTmV3RGVmYXVsdHM7dC5tYWtlQ3JlZGVudGlhbD1mdW5jdGlvbihlLHQsbixvLHIsYyxkLGwpe3ZhciB1PVtdO2MmJih1PWMubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOiJwdWJsaWMta2V5IixpZDphLmJhc2U2NFVybFN0cmluZ1RvQXJyYXlCdWZmZXIoZSl9fSkpO3ZhciBwPWkuU3VwcG9ydGVkS2V5QWxnb3JpdGhtcy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6InB1YmxpYy1rZXkiLGFsZzplfX0pLGY9e2NoYWxsZW5nZTphLnN0cmluZ1RvQXJyYXlCdWZmZXIoZSkscnA6e25hbWU6Ik1pY3Jvc29mdCIsaWQ6bH0sdXNlcjp7aWQ6YS5iYXNlNjRVcmxTdHJpbmdUb0FycmF5QnVmZmVyKHQpLG5hbWU6bixkaXNwbGF5TmFtZTpvLGljb246cn0scHViS2V5Q3JlZFBhcmFtczpwLHRpbWVvdXQ6aS5UaW1lb3V0LGV4Y2x1ZGVDcmVkZW50aWFsczp1LGF1dGhlbnRpY2F0b3JTZWxlY3Rpb246e2F1dGhlbnRpY2F0b3JBdHRhY2htZW50OmQscmVxdWlyZVJlc2lkZW50S2V5OiEwLHVzZXJWZXJpZmljYXRpb246InJlcXVpcmVkIn0sYXR0ZXN0YXRpb246ImRpcmVjdCIsZXh0ZW5zaW9uczp7aG1hY0NyZWF0ZVNlY3JldDohMCxjcmVkZW50aWFsUHJvdGVjdGlvblBvbGljeToidXNlclZlcmlmaWNhdGlvbk9wdGlvbmFsIn19O3JldHVybiBzLmNyZWRlbnRpYWxzLmNyZWF0ZSh7cHVibGljS2V5OmZ9KX0sdC5nZXRBc3NlcnRpb249ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPVtdO3QmJihvPXQubWFwKGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOiJwdWJsaWMta2V5IixpZDphLmJhc2U2NFVybFN0cmluZ1RvQXJyYXlCdWZmZXIoZSl9fSkpO3ZhciByPXtjaGFsbGVuZ2U6YS5zdHJpbmdUb0FycmF5QnVmZmVyKGUpLHRpbWVvdXQ6aS5UaW1lb3V0LHJwSWQ6bixhbGxvd0NyZWRlbnRpYWxzOm99O3JldHVybiBjJiYoci51c2VyVmVyaWZpY2F0aW9uPSJyZXF1aXJlZCIpLHMuY3JlZGVudGlhbHMuZ2V0KHtwdWJsaWNLZXk6cn0pfSx0LmlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIG8ubmV3UHJvbWlzZVdpdGhUaW1lb3V0KHIuUHVibGljS2V5Q3JlZGVudGlhbC5pc1VzZXJWZXJpZnlpbmdQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGUsaS5Qcm9taXNlVGltZW91dCwhMSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigyMDMpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGU9e3VzZXJuYW1lOnMscHJvb2ZEYXRhOmMscHJvb2ZUeXBlOmQscHVycG9zZTpsLGZsb3dUb2tlbjp1LGNhbmFyeUZsb3dUb2tlbjpwLGlzRW5jcnlwdGVkOmYsdWlNb2RlOmcsbGNpZDptLHVuYXV0aFNlc3Npb25JZDp2LHByb29mQ29uZmlybWF0aW9uOmgscGhvbmVDb3VudHJ5OmIscGhvbmVDb3VudHJ5Q29kZTpffTtyZXR1cm4gbmV3IGkuUHJvb2YoZSl9ZnVuY3Rpb24gbigpe1MmJlMocil9ZnVuY3Rpb24gbygpe3cmJncocil9dmFyIGE9dGhpcyxyPW51bGwscz1lLnVzZXJuYW1lLGM9ZS5wcm9vZkRhdGEsZD1lLnByb29mVHlwZSxsPWUucHVycG9zZXx8aS5QdXJwb3NlLlBhc3N3b3JkLHU9ZS5mbG93VG9rZW4scD1lLmNhbmFyeUZsb3dUb2tlbixmPWUuaXNFbmNyeXB0ZWQhPT0hMSxnPWUudWlNb2RlLG09ZS5sY2lkLHY9ZS51bmF1dGhTZXNzaW9uSWQsaD1lLnByb29mQ29uZmlybWF0aW9uLGI9ZS5waG9uZUNvdW50cnksXz1lLnBob25lQ291bnRyeUNvZGUsUz1lLnN1Y2Nlc3NDYWxsYmFjayx3PWUuZmFpbHVyZUNhbGxiYWNrO2Euc2VuZFJlcXVlc3Q9ZnVuY3Rpb24oKXt2YXIgZT17ZGF0YTp0KCksb25TZW5kOm4sb25TZW5kRmFpbDpvLG9uRmxvd0V4cGlyZWQ6b307cj1uZXcgaS5SZXF1ZXN0KGUpLHIuc2VuZFJlcXVlc3QoKX19fSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigxNjgpLG89big5KSxhPWkuSGVscGVyLHI9M2U0LHM9dC5Qcm9wZXJ0aWVzPXtTdGF0ZToiU3RhdGUiLFNlc3Npb25Mb29rdXBLZXk6IlNlc3Npb25Mb29rdXBLZXkiLERpc3BsYXlTaWduRm9yVUk6IkRpc3BsYXlTaWduRm9yVUkiLEZsb3dUb2tlbjoiRmxvd1Rva2VuIn0sYz10LlB1cnBvc2U9e1Bhc3N3b3JkOiJlT1RUX09uZVRpbWVQYXNzd29yZCIsUmVtb3RlTkdDOiJlT1RUX1JlbW90ZU5HQyIsTm9QYXNzd29yZDoiZU9UVF9Ob1Bhc3N3b3JkQWNjb3VudExvZ2luQ29kZSIsT3RjTG9naW46ImVPVFRfT3RjTG9naW4iLFhib3hSZW1vdGVDb25uZWN0OiJSZW1vdGVTaWduSW5XaXRoVXNlckNvZGUifSxkPXQuQ2hhbm5lbD17QXV0aGVudGljYXRvcjoiQXV0aGVudGljYXRvciIsTW9iaWxlU21zOiJTTVMiLEVtYWlsQWRkcmVzczoiRW1haWwiLFZvaWNlQ2FsbDoiVm9pY2UiLFB1c2hOb3RpZmljYXRpb25zOiJQdXNoTm90aWZpY2F0aW9ucyJ9LGw9dC5UeXBlPXtFbWFpbEFkZHJlc3M6IkFsdEVtYWlsIixFbWFpbEFkZHJlc3NFbmNyeXB0ZWQ6IkFsdEVtYWlsRSIsTW9iaWxlOiJNb2JpbGVOdW0iLE1vYmlsZUVuY3J5cHRlZDoiTW9iaWxlTnVtRSIsU2Vzc2lvbkFwcHJvdmVyOiJTQVBJZCJ9O3QuRXZlbnQ9e09uU2VuZDoib3Rjc2VuZCIsT25TZW5kRmFpbDoib3Rjc2VuZGZhaWxlZCIsT25GbG93RXhwaXJlZDoib3RjZmxvd2V4cGlyZWQifTt2YXIgdT10LlJlcXVlc3RQYXJhbT17VXNlcm5hbWU6ImxvZ2luIixQdXJwb3NlOiJwdXJwb3NlIixGbG93VG9rZW46ImZsb3d0b2tlbiIsQ2FuYXJ5Rmxvd1Rva2VuOiJjYW5hcnlGbG93VG9rZW4iLENoYW5uZWw6ImNoYW5uZWwiLFVJTW9kZToiVUlNb2RlIixQaG9uZUNvdW50cnk6Ik1vYmlsZUNvdW50cnkiLFBob25lQ291bnRyeUNvZGU6Ik1vYmlsZUNDIixVbmF1dGhTZXNzaW9uSWQ6InVhaWQiLFByb29mQ29uZmlybWF0aW9uOiJQcm9vZkNvbmZpcm1hdGlvbiJ9LHA9dC5TdGF0dXM9e05vbmU6MCxFcnJvcjoyMDAsU3VjY2VzczoyMDEsSElQRXJyb3I6MjAyLEZURXJyb3I6MjAzLElucHV0RXJyb3I6MjA0LERlc3RpbmF0aW9uRXJyb3I6MjA1LFRpbWVvdXQ6MzAwfSxmPXQuUHJvb2ZUeXBlVG9DaGFubmVsPWZ1bmN0aW9uKGUpe3ZhciB0PW51bGw7c3dpdGNoKGUpe2Nhc2UgUFJPT0YuVHlwZS5TTVM6dD1kLk1vYmlsZVNtczticmVhaztjYXNlIFBST09GLlR5cGUuVm9pY2U6dD1kLlZvaWNlQ2FsbDticmVhaztjYXNlIFBST09GLlR5cGUuRW1haWw6Y2FzZSBQUk9PRi5UeXBlLkFsdEVtYWlsOnQ9ZC5FbWFpbEFkZHJlc3M7YnJlYWs7Y2FzZSBQUk9PRi5UeXBlLlRPVFBBdXRoZW50aWNhdG9yVjI6dD1kLlB1c2hOb3RpZmljYXRpb25zfXJldHVybiB0fSxnPXQuUHJvb2ZUeXBlVG9PdGNUeXBlPWZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbDtzd2l0Y2goZSl7Y2FzZSBQUk9PRi5UeXBlLlZvaWNlOmNhc2UgUFJPT0YuVHlwZS5TTVM6bj10P2wuTW9iaWxlRW5jcnlwdGVkOmwuTW9iaWxlO2JyZWFrO2Nhc2UgUFJPT0YuVHlwZS5FbWFpbDpjYXNlIFBST09GLlR5cGUuQWx0RW1haWw6bj10P2wuRW1haWxBZGRyZXNzRW5jcnlwdGVkOmwuRW1haWxBZGRyZXNzO2JyZWFrO2Nhc2UgUFJPT0YuVHlwZS5UT1RQQXV0aGVudGljYXRvclYyOm49bC5TZXNzaW9uQXBwcm92ZXJ9cmV0dXJuIG59O3QuUHJvb2Y9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWUudXNlcm5hbWV8fCIiLGk9ZS5mbG93VG9rZW58fCIiLG89ZS5wdXJwb3NlfHxjLlBhc3N3b3JkLGE9ZS5wcm9vZlR5cGUscj1lLnByb29mRGF0YXx8IiIscz1lLmlzRW5jcnlwdGVkLGQ9ZS51aU1vZGUsbD1lLmxjaWQscD1lLnBob25lQ291bnRyeXx8IiIsbT1lLnBob25lQ291bnRyeUNvZGV8fCIiLHY9ZS51bmF1dGhTZXNzaW9uSWQsaD1lLnByb29mQ29uZmlybWF0aW9uLGI9ZS5jYW5hcnlGbG93VG9rZW47dFt1LlVzZXJuYW1lXT1uLHRbdS5GbG93VG9rZW5dPWksdFt1LlB1cnBvc2VdPW8sdFt1LkNoYW5uZWxdPWYoYSksdFtnKGEscyldPXIsZCYmKHRbdS5VSU1vZGVdPWQpLGwmJih0LmxjaWQ9bCksc3x8YSE9PVBST09GLlR5cGUuU01TJiZhIT09UFJPT0YuVHlwZS5Wb2ljZXx8KHRbdS5QaG9uZUNvdW50cnldPXAsdFt1LlBob25lQ291bnRyeUNvZGVdPW0pLHYmJih0W3UuVW5hdXRoU2Vzc2lvbklkXT12KSxoJiYodFt1LlByb29mQ29uZmlybWF0aW9uXT1oKSxiJiYodFt1LkNhbmFyeUZsb3dUb2tlbl09Yil9LHQuUmVxdWVzdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe3ZhciB0PSExLG49bC5nZXRSZXNwb25zZUpzb24oKTttPW5bcy5GbG93VG9rZW5dfHwiIixuW3MuU3RhdGVdPyh1PW5bcy5TdGF0ZV0sZj1uW3MuU2Vzc2lvbkxvb2t1cEtleV18fCIiLGc9bltzLkRpc3BsYXlTaWduRm9yVUldfHwiIix0PXUhPT1wLlN1Y2Nlc3MpOih1PXAuRXJyb3IsZj0iIixnPSIiLHQ9ITApLHQ/dT09PXAuRlRFcnJvcj9fKGUsbCk6YihlLGwpOmgoZSl9ZnVuY3Rpb24gbigpe209IiIsdT1wLkVycm9yLGY9IiIsZz0iIixiKGwpfWZ1bmN0aW9uIGMoKXt1PXAuVGltZW91dCxmPSIiLGc9IiIsbT0iIixiKGwpfXZhciBkPSJHZXRPbmVUaW1lQ29kZS5zcmYiLGw9dGhpcyx1PXAuTm9uZSxmPSIiLGc9IiIsbT0iIix2PWUuZGF0YSxoPWUub25TZW5kLGI9ZS5vblNlbmRGYWlsLF89ZS5vbkZsb3dFeHBpcmVkLFM9ZS50aW1lb3V0fHxyO2wuZ2V0T3RjU3RhdHVzPWZ1bmN0aW9uKCl7cmV0dXJuIGwuaXNDb21wbGV0ZSgpP3U6cC5Ob25lfSxsLmdldFNlc3Npb25LZXk9ZnVuY3Rpb24oKXtyZXR1cm4gbC5pc0NvbXBsZXRlKCk/ZjoiIn0sbC5nZXREaXNwbGF5U2lnbj1mdW5jdGlvbigpe3JldHVybiBsLmlzQ29tcGxldGUoKT9nOiIifSxsLmdldEZsb3dUb2tlbj1mdW5jdGlvbigpe3JldHVybiBsLmlzQ29tcGxldGUoKT9tOiIifSxmdW5jdGlvbigpe3ZhciBlPWQscj1vLlF1ZXJ5U3RyaW5nLmV4dHJhY3QoIm1rdCIpO3ImJihlPW8uUXVlcnlTdHJpbmcuYWRkSWZOb3RFeGlzdChlLCJta3QiLHIpKTt2YXIgcz1vLlF1ZXJ5U3RyaW5nLmV4dHJhY3QoImxjIik7cyYmKGU9by5RdWVyeVN0cmluZy5hZGRJZk5vdEV4aXN0KGUsImxjIixzKSk7dmFyIHU9e3RhcmdldFVybDplLHJlcXVlc3RUeXBlOmkuUmVxdWVzdFR5cGUuUG9zdCxkYXRhOmEuZ2VuZXJhdGVSZXF1ZXN0U3RyaW5nKHYpLGlzQXN5bmM6ITAsdGltZW91dDpTLHN1Y2Nlc3NDYWxsYmFjazp0LGZhaWx1cmVDYWxsYmFjazpuLHRpbWVvdXRDYWxsYmFjazpjfTtpLkhhbmRsZXIuY2FsbChsLHUpfSgpfX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNSksIiIpKyIgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD48IS0tIGtvIGlmOiBjcmVkZW50aWFsQ291bnQgPiAxIHx8IChjcmVkZW50aWFsQ291bnQgPT09IDEgJiYgKHNob3dGb3Jnb3RVc2VybmFtZSB8fCBzZWxlY3RlZENyZWRTaG93bk9ubHlPblBpY2tlcikpIC0tPiA8YSBpZD1pZEFfUFdEX1N3aXRjaFRvQ3JlZFBpY2tlciBocmVmPSMgZGF0YS1iaW5kPVwiXG4gICAgICAgIHRleHQ6IGlzVXNlcktub3duID8gc3RyWydDVF9QV0RfU1RSX1N3aXRjaFRvQ3JlZFBpY2tlcl9MaW5rJ10gOiBzdHJbJ0NUX1BXRF9TVFJfU3dpdGNoVG9DcmVkUGlja2VyX0xpbmtfTm9Vc2VyJ10sXG4gICAgICAgIGNsaWNrOiBzd2l0Y2hUb0NyZWRQaWNrZXJfb25DbGlja1wiPjwvYT48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBjcmVkZW50aWFsQ291bnQgPT09IDEgJiYgIShzaG93Rm9yZ290VXNlcm5hbWUgfHwgc2VsZWN0ZWRDcmVkU2hvd25Pbmx5T25QaWNrZXIpIC0tPiA8YSBocmVmPSMgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICBhdHRyOiB7ICdpZCc6IHN3aXRjaFRvQ3JlZElkIH0sXG4gICAgICAgICAgICB0ZXh0OiBzd2l0Y2hUb0NyZWRUZXh0LFxuICAgICAgICAgICAgY2xpY2s6IHN3aXRjaFRvQ3JlZF9vbkNsaWNrXCI+PC9hPjwhLS0ga28gaWY6IGRpc3BsYXlIZWxwICYmIHNlbGVjdGVkQ3JlZFR5cGUgPT09ICIrbig1KS5DcmVkZW50aWFsVHlwZS5GaWRvKycgLS0+PCEtLSBrbyBjb21wb25lbnQ6IHsgbmFtZTogXCdmaWRvLWhlbHAtYnV0dG9uLWNvbnRyb2xcJyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGU6IGlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCkgfSxcbiAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICByZWdpc3RlckRpYWxvZzogb25SZWdpc3RlckRpYWxvZyxcbiAgICAgICAgICAgICAgICAgICAgdW5yZWdpc3RlckRpYWxvZzogb25VbnJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICAgICAgICAgICAgICBzaG93RGlhbG9nOiBvblNob3dEaWFsb2cgfSB9IC0tPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGNyZWRlbnRpYWxDb3VudCA9PT0gMCAmJiBzaG93Rm9yZ290VXNlcm5hbWUgLS0+IDxhIGlkPWZvcmdvdFVzZXJuYW1lIGRhdGEtYmluZD0iXG4gICAgICAgIGhyZWY6IHN2ci51cmxGb3Jnb3RVc2VybmFtZSxcbiAgICAgICAgdGV4dDogc3RyW1wnV0ZfU1RSX0ZvcmdvdFVzZXJuYW1lTGlua19UZXh0XCddIj48L2E+PCEtLSAva28gLS0+IDwvZGl2PjwhLS0ga28gaWY6IGNyZWRMaW5rRXJyb3IgLS0+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciBjb2wtbWQtMjQgYWxlcnQtbWFyZ2luLWJvdHRvbSIgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlIGRhdGEtYmluZD0idGV4dDogY3JlZExpbmtFcnJvciI+PC9kaXY+IDwvZGl2PiA8IS0tIC9rbyAtLT4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXt2YXIgdD10aGlzLG49ZS5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZTt0Lm9uUmVnaXN0ZXJEaWFsb2c9ci5jcmVhdGUoKSx0Lm9uVW5yZWdpc3RlckRpYWxvZz1yLmNyZWF0ZSgpLHQub25TaG93RGlhbG9nPXIuY3JlYXRlKCksdC5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZT1uLHQuaGFzRm9jdXM9by5vYnNlcnZhYmxlKCExKSx0LmZpZG9IZWxwX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uU2hvd0RpYWxvZyhkLkZpZG9IZWxwKS50aGVuKGZ1bmN0aW9uKCl7dC5oYXNGb2N1cyghMCl9KX19dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPW4oNSksYz13aW5kb3csZD1zLkRpYWxvZ0lkO28uY29tcG9uZW50cy5yZWdpc3RlcigiZmlkby1oZWxwLWJ1dHRvbi1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyMDYpLHN5bmNocm9ub3VzOiFjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oYy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMDcpLG4oMjA5KSwiIikrIiAtLT4gPHNwYW4gY2xhc3M9aGVscC1idXR0b24gcm9sZT1idXR0b24gdGFiaW5kZXg9MCBkYXRhLWJpbmQ9XCJcbiAgICBjbGljazogZmlkb0hlbHBfb25DbGljayxcbiAgICBwcmVzc0VudGVyOiBmaWRvSGVscF9vbkNsaWNrLFxuICAgIGhhc0ZvY3VzOiBoYXNGb2N1cyxcbiAgICBhcmlhTGFiZWw6IGlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlID8gc3RyWydDVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9IZWxwX0Rlc2NfRmlkbyddIDogc3RyWydDVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9IZWxwX0Rlc2NfRmlkb0Nyb3NzUGxhdGZvcm0nXVwiPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDIxNikrIiBzdmdzcmM9IituKDIxNykrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+IDxpbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyMTgpKyIgc3Znc3JjPSIrbigyMTkpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPiA8L3NwYW4+IDxkaXYgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdmaWRvLWhlbHAtZGlhbG9nLWNvbnRlbnQtY29udHJvbCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIGlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlOiBpc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSB9LFxuICAgIGV2ZW50OiB7XG4gICAgICAgIHJlZ2lzdGVyRGlhbG9nOiBvblJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICB1bnJlZ2lzdGVyRGlhbG9nOiBvblVucmVnaXN0ZXJEaWFsb2cgfSB9XCI+IDwvZGl2PiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUsdCxuKXt2YXIgaT10aGlzLG89ZS5oYXNEYXJrQmFja2dyb3VuZDtpLmlzSGlnaENvbnRyYXN0QmxhY2tUaGVtZT0hMSxpLmlzSGlnaENvbnRyYXN0V2hpdGVUaGVtZT0hMSxpLmhhc0RhcmtCYWNrZ3JvdW5kPW8saS5saWdodEltYWdlTm9kZT10LGkuZGFya0ltYWdlTm9kZT1uLGZ1bmN0aW9uKCl7dmFyIGU9cy5pc0hpZ2hDb250cmFzdCgpO2lmKGUpe3ZhciB0PXMuZ2V0SGlnaENvbnRyYXN0VGhlbWUoKTtpLmlzSGlnaENvbnRyYXN0QmxhY2tUaGVtZT0iYmxhY2siPT09dCxpLmlzSGlnaENvbnRyYXN0V2hpdGVUaGVtZT0id2hpdGUiPT09dH19KCl9dmFyIG89bigxKSxhPW4oOSkscj13aW5kb3cscz1hLkhlbHBlcixjPTE7by5jb21wb25lbnRzLnJlZ2lzdGVyKCJhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wiLHt2aWV3TW9kZWw6e2NyZWF0ZVZpZXdNb2RlbDpmdW5jdGlvbihlLHQpe3ZhciBuPW8udXRpbHMuYXJyYXlGaWx0ZXIodC50ZW1wbGF0ZU5vZGVzLGZ1bmN0aW9uKGUpe3JldHVybiBlLm5vZGVUeXBlPT09Y30pO3JldHVybiBuZXcgaShlLG5bMF0sblsxXSl9fSx0ZW1wbGF0ZTpuKDIwOCksc3luY2hyb25vdXM6IXIuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihyLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSI8IS0tIGtvIGlmOiAoaXNIaWdoQ29udHJhc3RCbGFja1RoZW1lIHx8IGhhc0RhcmtCYWNrZ3JvdW5kIHx8IHN2ci5mSGFzQmFja2dyb3VuZENvbG9yKSAmJiAhaXNIaWdoQ29udHJhc3RXaGl0ZVRoZW1lIC0tPiA8IS0tIGtvIHRlbXBsYXRlOiB7IG5vZGVzOiBbbGlnaHRJbWFnZU5vZGVdLCBkYXRhOiAkcGFyZW50IH0gLS0+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogKGlzSGlnaENvbnRyYXN0V2hpdGVUaGVtZSB8fCAoIWhhc0RhcmtCYWNrZ3JvdW5kICYmICFzdnIuZkhhc0JhY2tncm91bmRDb2xvcikpICYmICFpc0hpZ2hDb250cmFzdEJsYWNrVGhlbWUgLS0+IDwhLS0ga28gdGVtcGxhdGU6IHsgbm9kZXM6IFtkYXJrSW1hZ2VOb2RlXSwgZGF0YTogJHBhcmVudCB9IC0tPjwhLS0gL2tvIC0tPiA8IS0tIC9rbyAtLT4ifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXt2YXIgdD10aGlzLG49ZS5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZTt0LmlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlPW4sdC5vblJlZ2lzdGVyRGlhbG9nPXIuY3JlYXRlKCksdC5vblVucmVnaXN0ZXJEaWFsb2c9ci5jcmVhdGUoKX12YXIgbz1uKDEpLGE9big5KSxyPW4oMTMpLHM9d2luZG93O28uY29tcG9uZW50cy5yZWdpc3RlcigiZmlkby1oZWxwLWRpYWxvZy1jb250ZW50LWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDIxMCksc3luY2hyb25vdXM6IXMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihzLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksbigyMTEpLCIiKSsiIC0tPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZGlhbG9nLWNvbnRlbnQtY29udHJvbCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIGRpYWxvZ0lkOiAiK24oNSkuRGlhbG9nSWQuRmlkb0hlbHArIixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgbGFiZWxsZWRCeTogJ2ZpZG9EaWFsb2dUaXRsZScsXG4gICAgICAgICAgICBkZXNjcmliZWRCeTogJ2ZpZG9EaWFsb2dEZXNjIGZpZG9EaWFsb2dEZXNjMicsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uUHJldmVudFRhYmJpbmc6IHsgZGlyZWN0aW9uOiAnZG93bicgfSxcbiAgICAgICAgICAgIGlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlOiBpc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSB9IH0sXG4gICAgZXZlbnQ6IHtcbiAgICAgICAgcmVnaXN0ZXJEaWFsb2c6IG9uUmVnaXN0ZXJEaWFsb2csXG4gICAgICAgIHVucmVnaXN0ZXJEaWFsb2c6IG9uVW5yZWdpc3RlckRpYWxvZyB9IH1cIj4gPGRpdiBpZD1maWRvRGlhbG9nVGl0bGUgY2xhc3M9XCJyb3cgdGV4dC10aXRsZVwiPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDIxMikrIiBzdmdzcmM9IituKDIxMykrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+IDxpbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyMTQpKyIgc3Znc3JjPSIrbigyMTUpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPiA8c3BhbiBkYXRhLWJpbmQ9XCJ0ZXh0OiBpc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSA/IHN0clsnQ1RfUFdEX1NUUl9Td2l0Y2hUb0ZpZG9fTGluayddIDogc3RyWydDVF9QV0RfU1RSX1N3aXRjaFRvRmlkb0Nyb3NzUGxhdGZvcm1fTGluayddXCI+PC9zcGFuPiA8L2Rpdj4gPGRpdiBpZD1maWRvRGlhbG9nRGVzYyBjbGFzcz1cInJvdyB0ZXh0LWJvZHkgbm8tbWFyZ2luLXRvcFwiIGRhdGEtYmluZD1cIlxuICAgICAgICB0ZXh0OiBpc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSA/IHN0clsnQ1RfU1RSX0ZpZG9EaWFsb2dfRGVzYyddIDogc3RyWydDVF9TVFJfRmlkb0RpYWxvZ19EZXNjX0Nyb3NzUGxhdGZvcm0nXVwiPiA8L2Rpdj4gPGRpdiBpZD1maWRvRGlhbG9nRGVzYzIgY2xhc3M9XCJyb3cgdGV4dC1ib2R5XCIgZGF0YS1iaW5kPVwiXG4gICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IGh0bWxbJ0NUX1NUUl9GaWRvRGlhbG9nX0Rlc2MyJ10sXG4gICAgICAgIGNoaWxkQmluZGluZ3M6IHtcbiAgICAgICAgICAgICdmaWRvSGVscExpbmsnOiB7XG4gICAgICAgICAgICAgICAgaHJlZjogc3ZyLnVybEZpZG9IZWxwLFxuICAgICAgICAgICAgICAgIHByZXZlbnRUYWJiaW5nOiB7IGRpcmVjdGlvbjogJ3VwJyB9LFxuICAgICAgICAgICAgICAgIGF0dHI6IHsgJ3RhcmdldCc6ICdfYmxhbmsnIH0gfSB9XCI+IDwvZGl2PiA8L2Rpdj4ifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlLHQpe3ZhciBuPXRoaXMsaT1lLmRpYWxvZ0lkLG89ZS5kYXRhLGE9dDtuLm9uUmVnaXN0ZXJEaWFsb2c9ci5jcmVhdGUoKSxuLm9uVW5yZWdpc3RlckRpYWxvZz1yLmNyZWF0ZSgpLG4uZGlzcG9zZT1mdW5jdGlvbigpe24ub25VbnJlZ2lzdGVyRGlhbG9nKGkpfSxmdW5jdGlvbigpe24ub25SZWdpc3RlckRpYWxvZyhpLHt0ZW1wbGF0ZU5vZGVzOmEsZGF0YTpvfSl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImRpYWxvZy1jb250ZW50LWNvbnRyb2wiLHt2aWV3TW9kZWw6e2NyZWF0ZVZpZXdNb2RlbDpmdW5jdGlvbihlLHQpe3JldHVybiBuZXcgaShlLHQudGVtcGxhdGVOb2Rlcyl9fSx0ZW1wbGF0ZToiPCEtLSAtLT4iLHN5bmNocm9ub3VzOiFzLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4ocy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9maWRvX3doaXRlXzQ2MzFhMTUzNzMyM2JlMzZjNzZhYTVjMTNiM2M5ZWRkLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9maWRvX3doaXRlXzJmMGVjNTU3YTVjNDU4MGVlZGM1OGY2NGExOTQ2YTAwLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9maWRvX2VlYjA5N2NlZmI1ZjA4OTE3YzQ4ZmFmZjg2ZTk0NWFlLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9maWRvXzQ5OGE0ZDdiYjk4NGU1NDM2YTUyYzhiNTJmM2FiMGY3LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kb2N1bWVudGF0aW9uX3doaXRlX2YxZDc2ZjU5Zjg3ZWU3MTY3OTE4NzNiZWFhNTZmNDJiLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kb2N1bWVudGF0aW9uX3doaXRlX2M4YzNmMGM4NzZhYzI4NjE0ZDFkMGMyMDY4Mjg5MjM3LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kb2N1bWVudGF0aW9uXzk2MjhlMjJhNmJmYjFlZGM1OWU4MTA2NGE2NjZiNjE0LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kb2N1bWVudGF0aW9uX2JjYjRkMWRjNGVhZTY0ZjBiMmIyNTM4MjA5ZDg0MzVhLnN2ZyJ9LCwsLCwsZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBMKCk/bigpOm51bGx9ZnVuY3Rpb24gbigpe3ZhciBlPXcucHJvb2ZDb25maXJtYXRpb25UZXh0Ym94LnZhbHVlKCl8fCIiLHQ9dy5vdGNDcmVkZW50aWFsKCk7aWYoZSYmKGU9bS50cmltKGUpKSwiIj09PWUpcmV0dXJuIHQucHJvb2Yuc3RyLkNUX09UQ1NfU1RSX0Vycm9yX0ludmFsaWRQcm9vZkNvbmZpcm1hdGlvbjtpZigiMCI9PT1lKXJldHVybiBudWxsO2lmKHQucHJvb2YudHlwZT09PVBST09GLlR5cGUuRW1haWwpe2lmKCFtLmlzRW1haWxBZGRyZXNzKGUpfHxlLnN1YnN0cmluZygwLDIpLnRvTG93ZXJDYXNlKCkhPT10LnByb29mLmNsZWFyRGlnaXRzLnRvTG93ZXJDYXNlKCkpcmV0dXJuIHQucHJvb2Yuc3RyLkNUX09UQ1NfU1RSX0Vycm9yX0ludmFsaWRQcm9vZkNvbmZpcm1hdGlvbn1lbHNlIGlmKGlzTmFOKGUpfHxlLmxlbmd0aCE9PXIuUGhvbmVOdW1iZXJDb25maXJtYXRpb25MZW5ndGh8fGUuc3Vic3RyaW5nKGUubGVuZ3RoLTIpIT09dC5wcm9vZi5jbGVhckRpZ2l0cylyZXR1cm4gdC5wcm9vZi5zdHIuQ1RfT1RDU19TVFJfRXJyb3JfSW52YWxpZFByb29mQ29uZmlybWF0aW9uO3JldHVybiBudWxsfWZ1bmN0aW9uIGkoKXtpZighdy5pc1JlcXVlc3RQZW5kaW5nKCkpe1MoITApO3ZhciBlPWEoKSx0PW5ldyBwKGUpO3Quc2VuZFJlcXVlc3QoKX19ZnVuY3Rpb24gYSgpe3ZhciBlPXcub3RjQ3JlZGVudGlhbCgpLHQ9dy5wcm9vZkNvbmZpcm1hdGlvblRleHRib3gudmFsdWUoKSxuPXt1c2VybmFtZTptLmNsZWFuc2VVc2VybmFtZShDKSxwcm9vZkRhdGE6ZS5wcm9vZi5kYXRhLHByb29mVHlwZTplLnByb29mLnR5cGUscHVycG9zZTplLnByb29mLmlzTm9wYT9zLlB1cnBvc2UuTm9QYXNzd29yZDpzLlB1cnBvc2UuT3RjTG9naW4sZmxvd1Rva2VuOlAsc3VjY2Vzc0NhbGxiYWNrOmcsZmFpbHVyZUNhbGxiYWNrOmh9O3JldHVybiB0JiYobi5wcm9vZkNvbmZpcm1hdGlvbj10KSxufWZ1bmN0aW9uIGcoZSl7YihlKSxTKCExKSx3Lm9uU3dpdGNoVmlldyh2Lk9uZVRpbWVDb2RlKX1mdW5jdGlvbiBoKGUpe3ZhciB0LG49ITAsaT1lLmdldE90Y1N0YXR1cygpLG89dy5vdGNDcmVkZW50aWFsKCk7c3dpdGNoKGIoZSksUyghMSksaSl7Y2FzZSBzLlN0YXR1cy5GVEVycm9yOnQ9RS5DVF9PVENfU1RSX0Vycm9yX0Zsb3dFeHBpcmVkO2JyZWFrO2Nhc2Ugcy5TdGF0dXMuSW5wdXRFcnJvcjpuPSExLHQ9by5wcm9vZi5zdHIuQ1RfT1RDU19TVFJfRXJyb3JfSW52YWxpZFByb29mQ29uZmlybWF0aW9uO2JyZWFrO2RlZmF1bHQ6dD1vLnByb29mLnN0ci5DVF9PVENTX1NUUl9FcnJvcl9TZW5kQ29kZVNlcnZlcnx8IiJ9bj93LnByb29mQ29uZmlybWF0aW9uVGV4dGJveC5lcnJvci5zZXROb25CbG9ja2luZ0Vycm9yKHQpOncucHJvb2ZDb25maXJtYXRpb25UZXh0Ym94LmVycm9yLnNldEJsb2NraW5nRXJyb3IodCl9ZnVuY3Rpb24gYihlKXtpZihlKXt2YXIgdD1lLmdldEZsb3dUb2tlbiYmZS5nZXRGbG93VG9rZW4oKXx8ZS5GbG93VG9rZW47Xyh0KX19ZnVuY3Rpb24gXyhlKXtlJiYoUD1lLHcub25VcGRhdGVGbG93VG9rZW4oUCksdy5jcmVkU3dpdGNoTGlua01ldGhvZHMoKSYmdy5jcmVkU3dpdGNoTGlua01ldGhvZHMoKS52aWV3X29uVXBkYXRlRmxvd1Rva2VuKGUpKX1mdW5jdGlvbiBTKGUpe3cub25TZXRQZW5kaW5nUmVxdWVzdChlKSx3LmlzUmVxdWVzdFBlbmRpbmcoZSl9dmFyIHc9dGhpcyxUPWUuc2VydmVyRGF0YSxDPWUudXNlcm5hbWUseT1lLmF2YWlsYWJsZUNyZWRzfHxbXSxrPWUuZXZpY3RlZENyZWRzfHxbXSx4PWUuY3VycmVudENyZWQsRD1lLmlzSW5pdGlhbFZpZXcsUD1lLmZsb3dUb2tlbixJPWUudXNlRXZpY3RlZENyZWRlbnRpYWxzLEU9VC5zdHIsUj1ULmZTaG93QnV0dG9ucyxBPW51bGwsQj0hMSxMPW8ub2JzZXJ2YWJsZSghMSk7dy5vblJlZGlyZWN0PWQuY3JlYXRlKCksdy5vblN3aXRjaFZpZXc9ZC5jcmVhdGUoKSx3Lm9uVXBkYXRlRmxvd1Rva2VuPWQuY3JlYXRlKCksdy5vblNldEJhY2tCdXR0b25TdGF0ZT1kLmNyZWF0ZSgpLHcub25TZXRQZW5kaW5nUmVxdWVzdD1kLmNyZWF0ZSgpLHcuZmxvd1Rva2VuPVAsdy5hdmFpbGFibGVDcmVkcz15LHcuZXZpY3RlZENyZWRzPWssdy51c2VybmFtZT1DLHcuaXNJbml0aWFsVmlldz1ELHcucHJvb2ZDb25maXJtYXRpb25UZXh0Ym94PW5ldyBsKHUuZXJyb3JDb21wdXRlZCh0KSksdy5vdGNDcmVkZW50aWFsPW8ub2JzZXJ2YWJsZSh4KSx3LmNyZWRTd2l0Y2hMaW5rTWV0aG9kcz1vLm9ic2VydmFibGUoKSx3LmlzUmVxdWVzdFBlbmRpbmc9by5vYnNlcnZhYmxlKCExKSx3LnVzZUV2aWN0ZWRDcmVkZW50aWFscz1vLm9ic2VydmFibGUoSSksdy5wcm9vZkNvbmZpcm1hdGlvblRpdGxlPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIHcub3RjQ3JlZGVudGlhbCgpLnByb29mLnN0ci5DVF9PVENTX1NUUl9Qcm9vZkNvbmZpcm1hdGlvblRpdGxlfSksdy5wcm9vZkNvbmZpcm1hdGlvbkRlc2M9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gdy5vdGNDcmVkZW50aWFsKCkucHJvb2Yuc3RyLkNUX09UQ1NfU1RSX1Byb29mQ29uZmlybWF0aW9uRGVzY30pLHcucHJvb2ZDb25maXJtYXRpb25IaW50PW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIHcub3RjQ3JlZGVudGlhbCgpLnByb29mLnN0ci5DVF9PVENTX1NUUl9Qcm9vZkNvbmZpcm1hdGlvbl9UQkhpbnR9KSx3LnByb29mQ29uZmlybWF0aW9uQXR0cj1vLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPXcub3RjQ3JlZGVudGlhbCgpLnByb29mLnR5cGUsdD17bWF4bGVuZ3RoOmU9PT1QUk9PRi5UeXBlLkVtYWlsP3IuVXNlcm5hbWVNYXhMZW5ndGg6ci5QaG9uZU51bWJlckNvbmZpcm1hdGlvbkxlbmd0aH07cmV0dXJuIGMuSGVscGVyLmlzQ2hhbmdpbmdJbnB1dFR5cGVTdXBwb3J0ZWQoKSYmKHQudHlwZT1lPT09UFJPT0YuVHlwZS5FbWFpbD8iZW1haWwiOiJ0ZWwiKSx0fSksdy5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLmZsb3dUb2tlbj1QLGUucHJvb2ZDb25maXJtYXRpb249dy5wcm9vZkNvbmZpcm1hdGlvblRleHRib3gudmFsdWUoKSxlLnVzZUV2aWN0ZWRDcmVkZW50aWFscz1CfHx3LnVzZUV2aWN0ZWRDcmVkZW50aWFscygpLEEmJihlLm90Y0NyZWRlbnRpYWw9QSl9LHcuZ2V0U3RhdGU9ZnVuY3Rpb24oKXt2YXIgZT17c2F2ZWRDcmVkOncub3RjQ3JlZGVudGlhbCgpLHByb29mQ29uZmlybWF0aW9uOncucHJvb2ZDb25maXJtYXRpb25UZXh0Ym94LnZhbHVlKCksdXNlRXZpY3RlZENyZWRlbnRpYWxzOncudXNlRXZpY3RlZENyZWRlbnRpYWxzKCl9O3JldHVybiBlfSx3LnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYody5vdGNDcmVkZW50aWFsKGUuc2F2ZWRDcmVkKSx3LnByb29mQ29uZmlybWF0aW9uVGV4dGJveC52YWx1ZShlLnByb29mQ29uZmlybWF0aW9uKSx3LnVzZUV2aWN0ZWRDcmVkZW50aWFscyhlLnVzZUV2aWN0ZWRDcmVkZW50aWFscykpfSx3LnNldERlZmF1bHRGb2N1cz1mdW5jdGlvbigpe3cucHJvb2ZDb25maXJtYXRpb25UZXh0Ym94LmZvY3VzZWQoITApfSx3LnN1Ym1pdD1mdW5jdGlvbigpe3JldHVybiBMKCEwKSx3LnByb29mQ29uZmlybWF0aW9uVGV4dGJveC5lcnJvci5pc0Jsb2NraW5nKCk/dm9pZCB3LnNldERlZmF1bHRGb2N1cygpOnZvaWQgaSgpfSx3LnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3cuc3VibWl0KCl9LHcuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXt3Lm9uU3dpdGNoVmlldyh2LlByZXZpb3VzKX0sdy5zd2l0Y2hUb090Y19vbkNsaWNrPWZ1bmN0aW9uKCl7dy5wcm9vZkNvbmZpcm1hdGlvblRleHRib3gudmFsdWUoIiIpLHcub25Td2l0Y2hWaWV3KHYuT25lVGltZUNvZGUpfSx3LnByaXZhY3lfb25DbGljaz1mdW5jdGlvbigpe3cub25Td2l0Y2hWaWV3KHYuVmlld0FncmVlbWVudCl9LHcudG91X29uQ2xpY2s9ZnVuY3Rpb24oKXt3Lm9uU3dpdGNoVmlldyh2LlRlcm1zT2ZVc2UpfSx3LnN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGljaz1mdW5jdGlvbigpe0I9ITAsdy5vblN3aXRjaFZpZXcodi5DcmVkZW50aWFsUGlja2VyKX0sdy5jcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXc9ZnVuY3Rpb24oZSx0LG4pe24mJihBPW4pLHcub25Td2l0Y2hWaWV3KGUsdCl9LHcuY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXtTKGUpfSx3LmNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe18oZSl9LGZ1bmN0aW9uKCl7ZiYmKGYuaGFuZGxlQmFja0J1dHRvbiYmZi5oYW5kbGVCYWNrQnV0dG9uKHcuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2suYmluZCh3KSksZi5zaG93S2V5Ym9hcmQmJmYuc2hvd0tleWJvYXJkKCEwKSksdy5vblNldEJhY2tCdXR0b25TdGF0ZShSJiYhRCl9KCl9dmFyIG89bigxKSxhPW4oNikscj1uKDUpLHM9bigyMDMpLGM9big5KSxkPW4oMTMpLGw9bigxOTQpLHU9bigyMjYpLHA9bigyMDIpLGY9bnVsbCxnPXdpbmRvdyxtPWEuU3RyaW5nLHY9ci5QYWdpbmF0ZWRTdGF0ZTtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXByb29mLWNvbmZpcm1hdGlvbi12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyMjcpLHN5bmNocm9ub3VzOiFnLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGMuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEpO3QuZXJyb3JDb21wdXRlZD1mdW5jdGlvbihlKXt2YXIgdD1pLm9ic2VydmFibGUoKSxuPWkub2JzZXJ2YWJsZSgpLG89aS5wdXJlQ29tcHV0ZWQoZSkuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KSxhPWkucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7aWYobygpKXJldHVybiBvKCk7aWYodCgpKXt2YXIgZT10KCk7cmV0dXJuIHQobnVsbCksZX1yZXR1cm4gbnVsbH0pO3JldHVybiBpLnV0aWxzLmV4dGVuZChpLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe2lmKGEoKSlyZXR1cm4gYSgpO2lmKG4oKSl7dmFyIGU9bigpO3JldHVybiBuKG51bGwpLGV9cmV0dXJuIG51bGx9KSx7aXNCbG9ja2luZzpmdW5jdGlvbigpe3JldHVybiBudWxsIT09YSgpfSxzZXRCbG9ja2luZ0Vycm9yOmZ1bmN0aW9uKGUpe3QoZSl9LHNldE5vbkJsb2NraW5nRXJyb3I6ZnVuY3Rpb24oZSl7bihlKX0sc2V0RXJyb3I6ZnVuY3Rpb24oZSxpKXtpP3QoZSk6bihlKX0sY2xlYXJOb25CbG9ja2luZ0Vycm9yOmZ1bmN0aW9uKCl7bihudWxsKSxuLnZhbHVlSGFzTXV0YXRlZCgpfX0pfX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5NiksbigyMDApLG4oMTk4KSwiIikrJyAtLT4gPGRpdiBpZD1wcm9vZkNvbmZpcm1hdGlvblRpdGxlIGNsYXNzPSJyb3cgdGV4dC10aXRsZSIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9InRleHQ6IHByb29mQ29uZmlybWF0aW9uVGl0bGUiPjwvZGl2PiA8ZGl2IGNsYXNzPSJyb3cgZm9ybS1ncm91cCI+IDxkaXYgaWQ9cHJvb2ZDb25maXJtYXRpb25EZXNjIGNsYXNzPWZvcm0tZ3JvdXAgZGF0YS1iaW5kPSJ0ZXh0OiBwcm9vZkNvbmZpcm1hdGlvbkRlc2MiPjwvZGl2PiA8ZGl2IHJvbGU9YWxlcnQgYXJpYS1saXZlPWFzc2VydGl2ZT48IS0tIGtvIGlmOiBwcm9vZkNvbmZpcm1hdGlvblRleHRib3guZXJyb3IgLS0+IDxkaXYgaWQ9cHJvb2ZDb25maXJtYXRpb25FcnJvck1zZyBjbGFzcz0iYWxlcnQgYWxlcnQtZXJyb3IiPiA8c3BhbiBkYXRhLWJpbmQ9InRleHQ6IHByb29mQ29uZmlybWF0aW9uVGV4dGJveC5lcnJvciI+PC9zcGFuPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9cGxhY2Vob2xkZXJDb250YWluZXIgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdwbGFjZWhvbGRlci10ZXh0Ym94LWZpZWxkXCcsXG4gICAgICAgIHB1YmxpY01ldGhvZHM6IHByb29mQ29uZmlybWF0aW9uVGV4dGJveC5wbGFjZWhvbGRlclRleHRib3hNZXRob2RzLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgIGhpbnRUZXh0OiBwcm9vZkNvbmZpcm1hdGlvbkhpbnQoKSB9LFxuICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgdXBkYXRlRm9jdXM6IHByb29mQ29uZmlybWF0aW9uVGV4dGJveC50ZXh0Ym94X29uVXBkYXRlRm9jdXMgfSB9Ij48IS0tIFNldCBhdHRyIGJpbmRpbmcgYmVmb3JlIGhhc0ZvY3VzRXggdG8gcHJldmVudCBOYXJyYXRvciBmcm9tIGxvc2luZyBmb2N1cyAtLT4gPGlucHV0IGlkPXByb29mQ29uZmlybWF0aW9uVGV4dCBhdXRvY29tcGxldGU9b2ZmIG5hbWU9UHJvb2ZDb25maXJtYXRpb24gY2xhc3M9Zm9ybS1jb250cm9sIHR5cGU9dGV4dCBhcmlhLXJlcXVpcmVkPXRydWUgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgIGF0dHI6IHByb29mQ29uZmlybWF0aW9uQXR0cixcbiAgICAgICAgICAgIGNzczogeyBcJ2hhcy1lcnJvclwnOiBwcm9vZkNvbmZpcm1hdGlvblRleHRib3guZXJyb3IgfSxcbiAgICAgICAgICAgIHRleHRJbnB1dDogcHJvb2ZDb25maXJtYXRpb25UZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgYXJpYUxhYmVsOiBwcm9vZkNvbmZpcm1hdGlvbkhpbnQsXG4gICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6IFwncHJvb2ZDb25maXJtYXRpb25UaXRsZSBwcm9vZkNvbmZpcm1hdGlvbkRlc2NcJyxcbiAgICAgICAgICAgIGhhc0ZvY3VzRXg6IHByb29mQ29uZmlybWF0aW9uVGV4dGJveC5mb2N1c2VkLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICRwbGFjZWhvbGRlclRleHQiLz4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXBvc2l0aW9uLWJ1dHRvbnM+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPWNvbC1tZC0yND4gPGRpdiBjbGFzcz10ZXh0LTEzPjwhLS0ga28gaWZub3Q6IHVzZUV2aWN0ZWRDcmVkZW50aWFscyAtLT48IS0tIGtvIGNvbXBvbmVudDogeyBuYW1lOiAiY3JlZC1zd2l0Y2gtbGluay1jb250cm9sIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1YmxpY01ldGhvZHM6IGNyZWRTd2l0Y2hMaW5rTWV0aG9kcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IGF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb3dUb2tlbjogZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiBvdGNDcmVkZW50aWFsKCkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoVmlldzogY3JlZFN3aXRjaExpbmtfb25Td2l0Y2hWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFBlbmRpbmdSZXF1ZXN0OiBjcmVkU3dpdGNoTGlua19vblNldFBlbmRpbmdSZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW4gfSB9IC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGV2aWN0ZWRDcmVkcy5sZW5ndGggPiAwIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWV2aWN0ZWRBY2NvdW50IGhyZWY9IyBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX1BXRF9TVFJfU3dpdGNoVG9DcmVkUGlja2VyX0xpbmtfRXZpY3RlZEFjY3RcJ10sIGNsaWNrOiBzd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2siPjwvYT4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9cHJvb2ZDb25maXJtYXRpb25Ub2dnbGUgaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfT1RDX1NUUl9IYXZlQ29kZVwnXSwgY2xpY2s6IHN3aXRjaFRvT3RjX29uQ2xpY2siPjwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uVGV4dDogc3RyW1wnQ1RfU1RSX0NvbmZpcm1TZW5kX090Y19TZW5kQ29kZVwnXSxcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KCl7dmFyIGU7aWYoIXkoKSlyZXR1cm4gZT14fHxudWxsLHg9bnVsbCxlO3ZhciB0PXcuY29kZVRleHRib3gudmFsdWUoKTtyZXR1cm4gdD8iMCI9PT10fHx3Lm90Y0NyZWRlbnRpYWwoKS5jcmVkVHlwZSE9PWIuT25lVGltZUNvZGV8fCFpc05hTih0KSYmdC5sZW5ndGg9PT1hLk9uZVRpbWVDb2RlTWF4TGVuZ3RoP0MoKT9DKCk6bnVsbDpWLkNUX09UQ19TVFJfRXJyb3JfT1RDSW52YWxpZDpWLkNUX09UQ19TVFJfRXJyb3JfRW1wdHlDb2RlfWZ1bmN0aW9uIG4oKXt2YXIgZT17Rmxvd1Rva2VuOmllKCksQ3R4OlcsQWRkaXRpb25hbEF1dGhEYXRhOnYudHJpbSh3LmNvZGVUZXh0Ym94LnZhbHVlKCkpfTt3LnNlbmRpbmcoITApO3ZhciB0PW5ldyBmO3QuSnNvbihHLGUsaSxpLGEuRGVmYXVsdFJlcXVlc3RUaW1lb3V0KTsKfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIHcuc2VuZGluZyghMSksZS5GbG93VG9rZW4mJlMoZS5GbG93VG9rZW4pLGUuU2FzUGFyYW1zJiZlLlNhc1BhcmFtcy5TdWNjZXNzPyhuZT1lLlRlbmFudFBpY2tlckJyYW5kaW5nfHxbXSx2b2lkKG5lLmxlbmd0aD4xP3cub25Td2l0Y2hWaWV3KGguVGVuYW50RGlzYW1iaWd1YXRpb24pOncub25TdWJtaXRSZWFkeSgpKSk6KEMoVi5DVF9PVENfU1RSX0Vycm9yX0NvZGVJbmNvcnJlY3QpLCExKX1mdW5jdGlvbiByKCl7WCYmKFQ9c2V0VGltZW91dChmdW5jdGlvbigpe3cuc2hvd1Jlc2VuZENvZGUoITApfSxKKSl9ZnVuY3Rpb24gYygpe2lmKHcuc2hvd1Jlc2VuZENvZGUoKXx8IUYpaWYody5zaG93UmVzZW5kQ29kZSghMSksRj0hMCxaKXt2YXIgZT1udWxsO3N3aXRjaCh3LnByb29mVHlwZSgpKXtjYXNlIFBST09GLlR5cGUuU01TOmU9bC5DaGFubmVsLk1vYmlsZVNtczticmVhaztjYXNlIFBST09GLlR5cGUuVm9pY2U6ZT1sLkNoYW5uZWwuVm9pY2VDYWxsO2JyZWFrO2Nhc2UgUFJPT0YuVHlwZS5FbWFpbDpkZWZhdWx0OmU9bC5DaGFubmVsLkVtYWlsQWRkcmVzc312YXIgdD17Q2hhbm5lbDplLE9yaWdpbmFsUmVxdWVzdDpXLEZsb3dUb2tlbjppZSgpfSxuPW5ldyBmKHtjaGVja0FwaUNhbmFyeTohMH0pO24uSnNvbihLLHQscCxwLGEuRGVmYXVsdFJlcXVlc3RUaW1lb3V0KX1lbHNle3ZhciBpPXt1c2VybmFtZTp2LmNsZWFuc2VVc2VybmFtZShQKSxwcm9vZkRhdGE6dy5wcm9vZkRhdGEoKSxwcm9vZlR5cGU6dy5wcm9vZlR5cGUoKSxwdXJwb3NlOncudXNlTm9QYXNzd29yZFR5cGVzKCk/bC5QdXJwb3NlLk5vUGFzc3dvcmQ6bC5QdXJwb3NlLk90Y0xvZ2luLGZsb3dUb2tlbjppZSgpLGlzRW5jcnlwdGVkOncuaXNQcm9vZkVuY3J5cHRlZCgpLHVuYXV0aFNlc3Npb25JZDp6LGxjaWQ6JCxzdWNjZXNzQ2FsbGJhY2s6cCxmYWlsdXJlQ2FsbGJhY2s6cH07aS5pc0VuY3J5cHRlZCYmKGkucHJvb2ZDb25maXJtYXRpb249dy5wcm9vZkNvbmZpcm1hdGlvbigpKTt2YXIgbz1uZXcgdShpKTtvLnNlbmRSZXF1ZXN0KCl9fWZ1bmN0aW9uIHAoZSl7bShlKSxyKCl9ZnVuY3Rpb24gbShlKXtpZihlKXt2YXIgdD1lLmdldEZsb3dUb2tlbj9lLmdldEZsb3dUb2tlbigpOmUuRmxvd1Rva2VuO1ModCl9fWZ1bmN0aW9uIFMoZSl7ZSYmKGllKGUpLHcub25VcGRhdGVGbG93VG9rZW4oZSksdy5jcmVkU3dpdGNoTGlua01ldGhvZHMoKSYmdy5jcmVkU3dpdGNoTGlua01ldGhvZHMoKS52aWV3X29uVXBkYXRlRmxvd1Rva2VuKGUpKX12YXIgdz10aGlzLFQ9bnVsbCxDPW8ub2JzZXJ2YWJsZSgpLHk9by5vYnNlcnZhYmxlKCExKSxrPWUuc2VydmVyRGF0YSx4PWUuc2VydmVyRXJyb3IsRD1lLmlzSW5pdGlhbFZpZXcsUD1lLnVzZXJuYW1lLEk9ZS5kaXNwbGF5TmFtZSxFPWUuZGVmYXVsdEttc2lWYWx1ZSxSPWUucHJlZmVycmVkQ3JlZGVudGlhbCxBPWUuYXZhaWxhYmxlQ3JlZHN8fFtdLEI9ZS5ldmljdGVkQ3JlZHN8fFtdLEw9ZS5jdXJyZW50Q3JlZHx8e30sRj1lLm90Y1BhcmFtcy5yZXF1ZXN0U2VudCxOPWUuZmxvd1Rva2VuLE89ZS5wcm9vZkNvbmZpcm1hdGlvbixVPWUudXNlRXZpY3RlZENyZWRlbnRpYWxzLE09ZS5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2MsVj1rLnN0cixIPWsuZkxvY2tVc2VybmFtZSxqPWsudXJsU3dpdGNoLHE9ay5mU2hvd1N3aXRjaFVzZXIsRz1rLnVybFBJQUVuZEF1dGgsVz1rLnNDdHgsSz1rLnVybEdldE9uZVRpbWVDb2RlLHo9ay5zVW5hdXRoU2Vzc2lvbklELCQ9ay5pUmVxdWVzdExDSUQsWD1rLmZFbmFibGVTaG93UmVzZW5kQ29kZSxKPWsuaVNob3dSZXNlbmRDb2RlRGVsYXl8fDllNCxRPWsuZlNob3dCdXR0b25zLFk9ay5hcnJQcm9vZkRhdGF8fHt9LFo9ISFLLGVlPW51bGwsdGU9ITEsbmU9bnVsbCxpZT1vLm9ic2VydmFibGUoTikuZXh0ZW5kKHtmbG93VG9rZW5VcGRhdGU6a30pO3cub25Td2l0Y2hWaWV3PXMuY3JlYXRlKCksdy5vblN1Ym1pdFJlYWR5PXMuY3JlYXRlKCksdy5vblJlZGlyZWN0PXMuY3JlYXRlKCksdy5vblVwZGF0ZUZsb3dUb2tlbj1zLmNyZWF0ZSgpLHcub25TZXRCYWNrQnV0dG9uU3RhdGU9cy5jcmVhdGUoKSx3Lm9uU2V0UGVuZGluZ1JlcXVlc3Q9cy5jcmVhdGUoKSx3LnVuc2FmZV91c2VybmFtZT1udWxsLHcub3RjSW5wdXROYW1lPW51bGwsdy5zaG93Q2hhbmdlVXNlckxpbms9ITEsdy5hbGxvd1Bob25lRGlzYW1iaWd1YXRpb249ITEsdy5vdGNNYXhMZW5ndGg9MCx3LnVzZXJuYW1lPVAsdy5mbG93VG9rZW49Tix3LmlzSW5pdGlhbFZpZXc9RCx3LmF2YWlsYWJsZUNyZWRzPUEsdy5ldmljdGVkQ3JlZHM9Qix3LnByZWZlcnJlZENyZWRlbnRpYWw9Uix3LmVuYWJsZVNob3dSZXNlbmRDb2RlPVgsdy5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M9TSx3LmNvZGVUZXh0Ym94PW5ldyBkKG8ucHVyZUNvbXB1dGVkKHQpKSx3LmlzS21zaUNoZWNrZWQ9by5vYnNlcnZhYmxlKEUpLHcub3RjQ3JlZGVudGlhbD1vLm9ic2VydmFibGUoTCksdy5wcm9vZkNvbmZpcm1hdGlvbj1vLm9ic2VydmFibGUoTyksdy5zaG93UmVzZW5kQ29kZT1vLm9ic2VydmFibGUoITEpLHcudW5zYWZlX2Rpc3BsYXlOYW1lPW8ub2JzZXJ2YWJsZSgpLHcuY3JlZFN3aXRjaExpbmtNZXRob2RzPW8ub2JzZXJ2YWJsZSgpLHcuaXNSZXF1ZXN0UGVuZGluZz1vLm9ic2VydmFibGUoITEpLHcudXNlRXZpY3RlZENyZWRlbnRpYWxzPW8ub2JzZXJ2YWJsZShVKSx3LnNlbmRpbmc9by5vYnNlcnZhYmxlKCExKSx3LnVuc2FmZV9wYWdlRGVzY3JpcHRpb249by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13Lm90Y0NyZWRlbnRpYWwoKSx0PXcucHJvb2ZDb25maXJtYXRpb24oKSxuPXYuZm9ybWF0KFYuQ1RfT1RDX1NUUl9FbnRlckNvZGVfRGVzYyx3LnVuc2FmZV9kaXNwbGF5TmFtZSgpKTtyZXR1cm4gZS5jcmVkVHlwZT09PWIuT25lVGltZUNvZGUmJihuPWUucHJvb2YuY2xlYXJEaWdpdHMmJiF0P3YuZm9ybWF0KFYuQ1RfT1RDX1NUUl9FbnRlckNvZGVfRGVzYyxlLnByb29mLmRpc3BsYXkpOmUucHJvb2YuY2xlYXJEaWdpdHM/di5mb3JtYXQoWVtlLnByb29mLnR5cGVdLkNUX09UQ0NfU1RSX1Byb29mRGVzY3JpcHRpb25NYXRjaCx0KTplLnByb29mLnN0ci5DVF9PVENDX1NUUl9Qcm9vZkRlc2NyaXB0aW9uKSxufSksdy51c2VOb1Bhc3N3b3JkVHlwZXM9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13Lm90Y0NyZWRlbnRpYWwoKTtyZXR1cm4gZS5jcmVkVHlwZT09PWIuT25lVGltZUNvZGU/ZS5wcm9vZi5pc05vcGE6IW8udXRpbHMuYXJyYXlGaXJzdChBLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNyZWRUeXBlPT09Yi5QYXNzd29yZH0pfSksdy5wcm9vZlR5cGU9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13Lm90Y0NyZWRlbnRpYWwoKTtyZXR1cm4gZS5jcmVkVHlwZT09PWIuT25lVGltZUNvZGU/ZS5wcm9vZi50eXBlOnYuaXNFbWFpbEFkZHJlc3MoUCk/UFJPT0YuVHlwZS5FbWFpbDpQUk9PRi5UeXBlLlNNU30pLHcucHJvb2ZEYXRhPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7dmFyIGU9dy5vdGNDcmVkZW50aWFsKCk7cmV0dXJuIGUuY3JlZFR5cGU9PT1iLk9uZVRpbWVDb2RlP2UucHJvb2YuZGF0YTp2LmNsZWFuc2VVc2VybmFtZShQKX0pLHcuaXNQcm9vZkVuY3J5cHRlZD1vLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPXcub3RjQ3JlZGVudGlhbCgpO3JldHVybiBlLmNyZWRUeXBlPT09Yi5PbmVUaW1lQ29kZSYmZS5wcm9vZi5pc0VuY3J5cHRlZH0pLHcuZGlzcG9zZT1mdW5jdGlvbigpe2NsZWFyVGltZW91dChUKX0sdy5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLmZsb3dUb2tlbj1pZSgpLGUudXNlRXZpY3RlZENyZWRlbnRpYWxzPXRlfHx3LnVzZUV2aWN0ZWRDcmVkZW50aWFscygpLGUudGVuYW50TGlzdD1uZSxlLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYz0hMSxlZSYmKGUub3RjQ3JlZGVudGlhbD1lZSl9LHcuZ2V0U3RhdGU9ZnVuY3Rpb24oKXt2YXIgZT17c2F2ZWRDcmVkOncub3RjQ3JlZGVudGlhbCgpLHByZWZlcnJlZENyZWQ6Uixwcm9vZkNvbmZpcm1hdGlvbjp3LnByb29mQ29uZmlybWF0aW9uKCksaXNLbXNpQ2hlY2tlZDp3LmlzS21zaUNoZWNrZWQoKSx1c2VFdmljdGVkQ3JlZGVudGlhbHM6dy51c2VFdmljdGVkQ3JlZGVudGlhbHMoKX07cmV0dXJuIGV9LHcucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKGUpe2UmJihSPWUucHJlZmVycmVkQ3JlZCx3LmlzS21zaUNoZWNrZWQoZS5pc0ttc2lDaGVja2VkKSx3Lm90Y0NyZWRlbnRpYWwoZS5zYXZlZENyZWQpLHcucHJvb2ZDb25maXJtYXRpb24oZS5wcm9vZkNvbmZpcm1hdGlvbiksdy51c2VFdmljdGVkQ3JlZGVudGlhbHMoZS51c2VFdmljdGVkQ3JlZGVudGlhbHMpLGUuc2F2ZWRDcmVkLmNyZWRUeXBlPT09Yi5PbmVUaW1lQ29kZSYmUiE9PWIuUHVibGljSWRlbnRpZmllckNvZGUmJihGPSEwKSl9LHcuc2V0RGVmYXVsdEZvY3VzPWZ1bmN0aW9uKCl7dy5jb2RlVGV4dGJveC5mb2N1c2VkKCEwKX0sdy5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtpZih5KCEwKSxDKG51bGwpLG51bGwhPT13LmNvZGVUZXh0Ym94LmVycm9yKCkpcmV0dXJuIHZvaWQgdy5zZXREZWZhdWx0Rm9jdXMoKTtpZihHJiZSPT09Yi5QdWJsaWNJZGVudGlmaWVyQ29kZSl7aWYody5zZW5kaW5nKCkpcmV0dXJuO24oKX1lbHNlIHcub25TdWJtaXRSZWFkeSgpfSx3LnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dy5vblN3aXRjaFZpZXcoaC5QcmV2aW91cyl9LHcucGhvbmVEaXNhbWJpZ3VhdGlvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dy5vblN3aXRjaFZpZXcoaC5QaG9uZURpc2FtYmlndWF0aW9uKX0sdy5yZXNlbmRDb2RlX29uQ2xpY2s9ZnVuY3Rpb24oKXt3LmNvZGVUZXh0Ym94LnZhbHVlKCIiKSxDKG51bGwpLGMoKX0sdy5zd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2s9ZnVuY3Rpb24oKXt0ZT0hMCx3Lm9uU3dpdGNoVmlldyhoLkNyZWRlbnRpYWxQaWNrZXIpfSx3LmNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldz1mdW5jdGlvbihlLHQsbil7biYmKGVlPW4pLHcub25Td2l0Y2hWaWV3KGUsdCl9LHcuY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXt3Lm9uU2V0UGVuZGluZ1JlcXVlc3QoZSksdy5pc1JlcXVlc3RQZW5kaW5nKGUpfSx3LmNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe1MoZSl9LGZ1bmN0aW9uKCl7aWYody51bnNhZmVfZGlzcGxheU5hbWUoXy5odG1sVW5lc2NhcGUoSSkpLHcudW5zYWZlX3VzZXJuYW1lPV8uaHRtbFVuZXNjYXBlKFApLHcuc2hvd0NoYW5nZVVzZXJMaW5rPUgmJmomJnEsdy5vdGNNYXhMZW5ndGg9YS5PbmVUaW1lQ29kZURlZmF1bHRMZW5ndGgsdy5hbGxvd1Bob25lRGlzYW1iaWd1YXRpb249IUgmJiF2LmlzRW1haWxBZGRyZXNzKEkpJiYhdi5pc1NreXBlTmFtZShJKSYmdi5pc1Bob25lTnVtYmVyKEkpLFI9PT1iLlB1YmxpY0lkZW50aWZpZXJDb2RlKXcub3RjSW5wdXROYW1lPSJwaW90YyI7ZWxzZXtpZih3Lm90Y0NyZWRlbnRpYWwoKS5jcmVkVHlwZT09PWIuT25lVGltZUNvZGUmJihGPSEwLHcub3RjTWF4TGVuZ3RoPWEuT25lVGltZUNvZGVNYXhMZW5ndGgsIXcub3RjQ3JlZGVudGlhbCgpLnByb29mLmNsZWFyRGlnaXRzJiZ3LmlzUHJvb2ZFbmNyeXB0ZWQoKSkpc3dpdGNoKHcub3RjQ3JlZGVudGlhbCgpLnByb29mLnR5cGUpe2Nhc2UgUFJPT0YuVHlwZS5FbWFpbDp3LnByb29mQ29uZmlybWF0aW9uKHcub3RjQ3JlZGVudGlhbCgpLnByb29mLmRpc3BsYXkpO2JyZWFrO2Nhc2UgUFJPT0YuVHlwZS5TTVM6Y2FzZSBQUk9PRi5UeXBlLlZvaWNlOncucHJvb2ZDb25maXJtYXRpb24odi5jbGVhbnNlVXNlcm5hbWUody5vdGNDcmVkZW50aWFsKCkucHJvb2YuZGlzcGxheSkuc2xpY2UoLTQpKX13Lm90Y0lucHV0TmFtZT13LnVzZU5vUGFzc3dvcmRUeXBlcygpPyJucG90YyI6Im90YyJ9ZyYmKGcuaW5pdGlhbGl6ZU9UQ1ZpZXdNb2RlbCYmZy5pbml0aWFsaXplT1RDVmlld01vZGVsKHcsayksZy5oYW5kbGVCYWNrQnV0dG9uJiZnLmhhbmRsZUJhY2tCdXR0b24ody5zZWNvbmRhcnlCdXR0b25fb25DbGljay5iaW5kKHcpKSxnLnNob3dLZXlib2FyZCYmZy5zaG93S2V5Ym9hcmQoITApKSx3Lm9uU2V0QmFja0J1dHRvblN0YXRlKFEmJiFEKSxGfHxjKCkscigpLHcuc2V0RGVmYXVsdEZvY3VzKCl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz1uKDYpLGQ9bigxOTQpLGw9bigyMDMpLHU9bigyMDIpLHA9bigxOTMpLGY9bigxNjcpLGc9bnVsbCxtPXdpbmRvdyx2PWMuU3RyaW5nLGg9YS5QYWdpbmF0ZWRTdGF0ZSxiPWEuQ3JlZGVudGlhbFR5cGUsXz1yLkhlbHBlcjtwLmFwcGx5RXh0ZW5kZXJzKG8pLG8uY29tcG9uZW50cy5yZWdpc3RlcigibG9naW4tcGFnaW5hdGVkLW90Yy12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyMjkpLHN5bmNocm9ub3VzOiFtLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4obS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTYpLG4oMjAwKSxuKDE5OCksIiIpKycgLS0+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWkxMyBkYXRhLWJpbmQ9InZhbHVlOiBpc0ttc2lDaGVja2VkKCkgPyAxIDogMCIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1sb2dpbiBkYXRhLWJpbmQ9InZhbHVlOiB1bnNhZmVfdXNlcm5hbWUiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9bG9naW5mbXQgZGF0YS1iaW5kPSJ2YWx1ZTogdW5zYWZlX2Rpc3BsYXlOYW1lIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXR5cGUgZGF0YS1iaW5kPSJ2YWx1ZTogdXNlTm9QYXNzd29yZFR5cGVzKCkgPyAnK24oNSkuUG9zdFR5cGUuT3RjTm9QYXNzd29yZCsiIDogIituKDUpLlBvc3RUeXBlLk9UQysnIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPUxvZ2luT3B0aW9ucyBkYXRhLWJpbmQ9InZhbHVlOiBpc0ttc2lDaGVja2VkKCkgPyAnK24oMTYpLkxvZ2luT3B0aW9uLlJlbWVtYmVyUFdEKyIgOiAiK24oMTYpLkxvZ2luT3B0aW9uLk5vdGhpbmdDaGVja2VkKyJcIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBkYXRhLWJpbmQ9XCJhdHRyOiB7IG5hbWU6IGlzUHJvb2ZFbmNyeXB0ZWQoKSA/ICdTZW50UHJvb2ZJREUnIDogJ1NlbnRQcm9vZklEJyB9LCB2YWx1ZTogcHJvb2ZEYXRhXCIvPjwhLS0ga28gaWY6IHByZWZlcnJlZENyZWRlbnRpYWwgPT09ICIrbig1KS5DcmVkZW50aWFsVHlwZS5QdWJsaWNJZGVudGlmaWVyQ29kZSsnIC0tPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1wdXJwb3NlIHZhbHVlPVB1YmxpY0lkZW50aWZpZXJBdXRoIC8+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogcHJvb2ZDb25maXJtYXRpb24gLS0+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPVByb29mQ29uZmlybWF0aW9uIGRhdGEtYmluZD0idmFsdWU6IHByb29mQ29uZmlybWF0aW9uIi8+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogb3RjQ3JlZGVudGlhbCgpLnByb29mICYmIG90Y0NyZWRlbnRpYWwoKS5wcm9vZi50eXBlIC0tPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1Qcm9vZlR5cGUgZGF0YS1iaW5kPSJ2YWx1ZTogb3RjQ3JlZGVudGlhbCgpLnByb29mLnR5cGUiLz48IS0tIC9rbyAtLT4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz0icm93IHRleHQtdGl0bGUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9PVENfU1RSX0VudGVyQ29kZV9UaXRsZVwnXSI+PC9kaXY+PCEtLSBrbyBpZjogc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjIC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5Ij4gPGRpdiBpZD1jcmVkVmlld0JyYW5kaW5nRGVzYyBjbGFzcz13cmFwLWNvbnRlbnQgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdXRl9TVFJfRGVmYXVsdF9EZXNjXCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9dGV4dC1ib2R5PiA8c3BhbiBpZD1vdGNEZXNjIGRhdGEtYmluZD0idGV4dDogdW5zYWZlX3BhZ2VEZXNjcmlwdGlvbiI+PC9zcGFuPjwhLS0ga28gaWY6IGFsbG93UGhvbmVEaXNhbWJpZ3VhdGlvbiAtLT4gPHNwYW4+PGEgaWQ9c3dpdGNoVG9QaG9uZURpc2FtYmlndWF0aW9uIGhyZWY9IyBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ1dGX1NUUl9UaGlzSXNudE15TnVtYmVyX1RleHRcJ10sIGNsaWNrOiBwaG9uZURpc2FtYmlndWF0aW9uX29uQ2xpY2siPjwvYT48L3NwYW4+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IHJvbGU9YWxlcnQgYXJpYS1saXZlPWFzc2VydGl2ZT48IS0tIGtvIGlmOiBjb2RlVGV4dGJveC5lcnJvciAtLT4gPGRpdiBpZD1pZFRkX09UQ19FcnJvcl9Db250ZW50PiA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciIgaWQ9aWRUZF9PVENDX0Vycm9yX09UQyBkYXRhLWJpbmQ9Imh0bWw6IGNvZGVUZXh0Ym94LmVycm9yIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGNsYXNzPXRleHRib3ggaWQ9aWREaXZfT1RDQ19PVENUYj4gPGRpdiBzdHlsZT13aWR0aDoxMDAlO3Bvc2l0aW9uOnJlbGF0aXZlPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwncGxhY2Vob2xkZXItdGV4dGJveC1maWVsZFwnLFxuICAgICAgICAgICAgcHVibGljTWV0aG9kczogY29kZVRleHRib3gucGxhY2Vob2xkZXJUZXh0Ym94TWV0aG9kcyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBoaW50VGV4dDogc3RyW1wnQ1RfT1RDX1NUUl9FbnRlckNvZGVfVGl0bGVcJ10gfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgdXBkYXRlRm9jdXM6IGNvZGVUZXh0Ym94LnRleHRib3hfb25VcGRhdGVGb2N1cyB9IH0iPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxpbnB1dCBuYW1lPW90YyBpZD1pZFR4dEJ4X09UQ19QYXNzd29yZCBjbGFzcz1mb3JtLWNvbnRyb2wgdHlwZT10ZWwgYXV0b2NvbXBsZXRlPW9mZiBhcmlhLXJlcXVpcmVkPXRydWUgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgYXR0cjogeyBuYW1lOiBvdGNJbnB1dE5hbWUsIG1heGxlbmd0aDogb3RjTWF4TGVuZ3RoIH0sXG4gICAgICAgICAgICAgICAgICAgIGNzczogeyBcJ2hhcy1lcnJvclwnOiBjb2RlVGV4dGJveC5lcnJvciB9LFxuICAgICAgICAgICAgICAgICAgICB0ZXh0SW5wdXQ6IGNvZGVUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0cltcJ0NUX09UQ19TVFJfRW50ZXJDb2RlX0FyaWFMYWJlbFwnXSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYURlc2NyaWJlZEJ5OiBbXCdsb2dpbkhlYWRlclwnLCBzaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2MgPyBcJ2NyZWRWaWV3QnJhbmRpbmdEZXNjXCcgOiBcJ1wnLCBcJ290Y0Rlc2NcJ10uam9pbihcJyBcJyksXG4gICAgICAgICAgICAgICAgICAgIGhhc0ZvY3VzRXg6IGNvZGVUZXh0Ym94LmZvY3VzZWQsXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAkcGxhY2Vob2xkZXJUZXh0Ii8+IDwvZGl2PjwhLS0ga28gaWY6IGVuYWJsZVNob3dSZXNlbmRDb2RlIC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1jYXB0aW9uIj4gPGRpdiBpZD1yZXNlbmRDb2RlVGV4dCBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlOiBzaG93UmVzZW5kQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogaHRtbFtcJ0NUX09UQ19TVFJfUmVzZW5kQ29kZVwnXSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRCaW5kaW5nczogeyBcJ3Jlc2VuZENvZGVMaW5rXCc6IHsgY2xpY2s6IHJlc2VuZENvZGVfb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cG9zaXRpb24tYnV0dG9ucz4gPGRpdj48IS0tIGtvIGlmOiBzdnIuZktNU0lFbmFibGVkICE9PSBmYWxzZSAtLT4gPGRpdiBkYXRhLWJpbmQ9ImNzczogeyBcJ2FjdGlvbi1saW5rc1wnOiAhc2hvd0NoYW5nZVVzZXJMaW5rIH0iPiA8ZGl2IGlkPWlkVGRfUFdEX0tNU0lfQ2IgY2xhc3M9ImZvcm0tZ3JvdXAgY2hlY2tib3ggdGV4dC1ibG9jay1ib2R5IG5vLW1hcmdpbi10b3AiIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgdmlzaWJsZTogIXN2ci5mTG9ja1VzZXJuYW1lIj4gPGxhYmVsIGlkPWlkTGJsX1BXRF9LTVNJX0NiPiA8aW5wdXQgbmFtZT1LTVNJIGlkPWlkQ2hrQnhfUFdEX0tNU0kwUHdkIHR5cGU9Y2hlY2tib3ggZGF0YS1iaW5kPSJjaGVja2VkOiBpc0ttc2lDaGVja2VkLCBhcmlhTGFiZWw6IHN0cltcJ0NUX1BXRF9TVFJfS2VlcE1lU2lnbmVkSW5DQl9UZXh0XCddIi8+IDxzcGFuIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9LZWVwTWVTaWduZWRJbkNCX1RleHRcJ10iPjwvc3Bhbj4gPC9sYWJlbD4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBjbGFzcz1jb2wtbWQtMjQ+IDxkaXYgY2xhc3M9dGV4dC0xMyBkYXRhLWJpbmQ9ImNzczogeyBcJ2FjdGlvbi1saW5rc1wnOiBzaG93Q2hhbmdlVXNlckxpbmsgfSI+PCEtLSBrbyBpZm5vdDogdXNlRXZpY3RlZENyZWRlbnRpYWxzIC0tPjwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICJjcmVkLXN3aXRjaC1saW5rLWNvbnRyb2wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1YmxpY01ldGhvZHM6IGNyZWRTd2l0Y2hMaW5rTWV0aG9kcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNyZWRzOiBhdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBmbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiBvdGNDcmVkZW50aWFsKCkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2hWaWV3OiBjcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRmxvd1Rva2VuOiBjcmVkU3dpdGNoTGlua19vblVwZGF0ZUZsb3dUb2tlbiB9IH0gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZXZpY3RlZENyZWRzLmxlbmd0aCA+IDAgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9ZXZpY3RlZEFjY291bnQgaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9Td2l0Y2hUb0NyZWRQaWNrZXJfTGlua19FdmljdGVkQWNjdFwnXSwgY2xpY2s6IHN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGljayI+PC9hPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzaG93Q2hhbmdlVXNlckxpbmsgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9aTE2NjggaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfRkVEX1NUUl9DaGFuZ2VVc2VyTGlua19UZXh0XCddLCBocmVmOiBzdnIudXJsU3dpdGNoIj48L2E+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdmb290ZXItYnV0dG9ucy1maWVsZFwnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBzdHJbXCdDVF9QV0RfU1RSX1NpZ25Jbl9CdXR0b25cJ10sXG4gICAgICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IGZhbHNlIH0sXG4gICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25DbGljazogcHJpbWFyeUJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLmRpc3BsYXlOYW1lLGE9ZS5pc0luaXRpYWxWaWV3LHI9bi5zdHIscz1uLnVybFNpZ25VcCxkPW4ub1NpZ25VcFBvc3RQYXJhbXMsZz1uLmZBbGxvd0NhbmNlbDt0Lm9uU3dpdGNoVmlldz1jLmNyZWF0ZSgpLHQub25SZWRpcmVjdD1jLmNyZWF0ZSgpLHQuaXNJbml0aWFsVmlldz1hLHQuaXNCYWNrQnV0dG9uVmlzaWJsZT1vLm9ic2VydmFibGUoITEpLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7fSx0LnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3ZhciBlPXMsbj1kO24/bi51c2VybmFtZT1pOmU9dS5hcHBlbmRPclJlcGxhY2UoZSwidXNlcm5hbWUiLGVuY29kZVVSSUNvbXBvbmVudChpKSksZT11LmFwcGVuZE9yUmVwbGFjZShlLCJtbmMiLCIwIiksdC5vblJlZGlyZWN0KGUsbil9LHQuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uU3dpdGNoVmlldyhsLlByZXZpb3VzKX0sZnVuY3Rpb24oKXtpPXAudHJpbShpKSx0LmRlc2NyaXB0aW9uPXAuZm9ybWF0KHIuV0ZfU1RSX0NvbmZpcm1fU2lnbnVwX0Rlc2MsaSksYT9mJiZmLmlzQmFja0J1dHRvblN1cHBvcnRlZE9uSW5pdGlhbFZpZXc/Zi5pc0JhY2tCdXR0b25TdXBwb3J0ZWRPbkluaXRpYWxWaWV3KG4sZnVuY3Rpb24oZSl7dC5pc0JhY2tCdXR0b25WaXNpYmxlKGUpfSk6ZyYmdC5pc0JhY2tCdXR0b25WaXNpYmxlKCEwKTp0LmlzQmFja0J1dHRvblZpc2libGUoITApfSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big5KSxzPW4oNiksYz1uKDEzKSxkPXdpbmRvdyxsPWEuUGFnaW5hdGVkU3RhdGUsdT1yLlF1ZXJ5U3RyaW5nLHA9cy5TdHJpbmcsZj1udWxsO28uY29tcG9uZW50cy5yZWdpc3RlcigibG9naW4tY29uZmlybS1zaWdudXAtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjMxKSxzeW5jaHJvbm91czohZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxyLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGQuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSwiIikrJyAtLT4gPGRpdiBpZD1jb25maXJtU2lnbnVwSGVhZGVyIGNsYXNzPSJyb3cgdGV4dC10aXRsZSIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ1dGX1NUUl9Db25maXJtX1NpZ251cF9UaXRsZVwnXSI+PC9kaXY+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPWNvbmZpcm1TaWdudXBEZXNjcmlwdGlvbiBjbGFzcz13cmFwLWNvbnRlbnQgZGF0YS1iaW5kPSJ0ZXh0OiBkZXNjcmlwdGlvbiI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyxcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBzdHJbXCdXRl9TVFJfQ29uZmlybV9TaWdudXBfQnV0dG9uXCddLFxuICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk6IFwnY29uZmlybVNpZ251cEhlYWRlciBjb25maXJtU2lnbnVwRGVzY3JpcHRpb25cJyxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyAmJiBpc0JhY2tCdXR0b25WaXNpYmxlKCkgfSxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25DbGljazogcHJpbWFyeUJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfSI+IDwvZGl2PiA8L2Rpdj4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXt2YXIgdD10aGlzLG49ZS5zZXJ2ZXJEYXRhLGk9ZS5kaXNwbGF5TmFtZSxhPWUuaXNJbml0aWFsVmlldyxyPW4udXJsU2lnblVwLHM9bi5vU2lnblVwUG9zdFBhcmFtcyxkPW4udXJsRm9yZ290VXNlcm5hbWUsZz1uLnN0cixtPW4uZkFsbG93Q2FuY2VsO3Qub25Td2l0Y2hWaWV3PWMuY3JlYXRlKCksdC5vblJlZGlyZWN0PWMuY3JlYXRlKCksdC5kZXNjcmlwdGlvbj1udWxsLHQuaXNJbml0aWFsVmlldz1hLHQuaXNCYWNrQnV0dG9uVmlzaWJsZT1vLm9ic2VydmFibGUoITEpLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7fSx0LnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3ZhciBlPXUuYXBwZW5kT3JSZXBsYWNlKGQsIm1uIixlbmNvZGVVUklDb21wb25lbnQoaSkpO2U9dS5hcHBlbmRPclJlcGxhY2UoZSwidW5yIiwiMCIpLHQub25SZWRpcmVjdChlKX0sdC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KGwuUHJldmlvdXMpfSx0LnNpZ251cF9vbkNsaWNrPWZ1bmN0aW9uKCl7dmFyIGU9cixuPXM7bj9uLnVzZXJuYW1lPWk6ZT11LmFwcGVuZE9yUmVwbGFjZShlLCJ1c2VybmFtZSIsZW5jb2RlVVJJQ29tcG9uZW50KGkpKSxlPXUuYXBwZW5kT3JSZXBsYWNlKGUsIm1uYyIsIjAiKSxlPXUuYXBwZW5kT3JSZXBsYWNlKGUsInVuciIsIjAiKSx0Lm9uUmVkaXJlY3QoZSxuKX0sZnVuY3Rpb24oKXtpPXAudHJpbShpKSx0LmRlc2NyaXB0aW9uPXAuZm9ybWF0KGcuV0ZfU1RSX0NvbmZpcm1fUmVjb3Zlcl9Vc2VybmFtZV9EZXNjLGkpLGE/ZiYmZi5pc0JhY2tCdXR0b25TdXBwb3J0ZWRPbkluaXRpYWxWaWV3P2YuaXNCYWNrQnV0dG9uU3VwcG9ydGVkT25Jbml0aWFsVmlldyhuLGZ1bmN0aW9uKGUpe3QuaXNCYWNrQnV0dG9uVmlzaWJsZShlKX0pOm0mJnQuaXNCYWNrQnV0dG9uVmlzaWJsZSghMCk6dC5pc0JhY2tCdXR0b25WaXNpYmxlKCEwKX0oKX12YXIgbz1uKDEpLGE9big1KSxyPW4oOSkscz1uKDYpLGM9bigxMyksZD13aW5kb3csbD1hLlBhZ2luYXRlZFN0YXRlLHU9ci5RdWVyeVN0cmluZyxwPXMuU3RyaW5nLGY9bnVsbDtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWNvbmZpcm0tcmVjb3Zlci11c2VybmFtZS12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyMzMpLHN5bmNocm9ub3VzOiFkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTgpLCIiKSsnIC0tPiA8ZGl2IGlkPWNvbmZpcm1SZWNvdmVyVXNlcm5hbWVIZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnV0ZfU1RSX0NvbmZpcm1fUmVjb3Zlcl9Vc2VybmFtZV9UaXRsZVwnXSI+PC9kaXY+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPWNvbmZpcm1SZWNvdmVyVXNlcm5hbWVEZXNjcmlwdGlvbiBjbGFzcz13cmFwLWNvbnRlbnQgZGF0YS1iaW5kPSJ0ZXh0OiBkZXNjcmlwdGlvbiI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5Ij4gPGRpdiBpZD1jb25maXJtUmVjb3ZlclVzZXJuYW1lSW5zdHJ1Y3Rpb24gY2xhc3M9d3JhcC1jb250ZW50IGRhdGEtYmluZD0idGV4dDogc3RyW1wnV0ZfU1RSX0NvbmZpcm1fUmVjb3Zlcl9Vc2VybmFtZV9JbnN0cnVjdGlvblwnXSI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXBvc2l0aW9uLWJ1dHRvbnM+IDxkaXYgY2xhc3M9cm93PjwhLS0ga28gaWY6IHN2ci5mQ0JTaG93U2lnblVwIC0tPiA8ZGl2IGNsYXNzPSJ0ZXh0LTEzIGFjdGlvbi1saW5rcyBmb3JtLWdyb3VwIj4gPGEgaWQ9c2lnbnVwIGRhdGEtYmluZD0idGV4dDogc3RyW1wnV0ZfU1RSX0NvbmZpcm1fUmVjb3Zlcl9Vc2VybmFtZV9TaWdudXBfTGlua1wnXSwgaHJlZjogc3ZyLnVybFNpZ25VcCwgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfU2lnbnVwTGlua19BcmlhTGFiZWxfVGV4dFwnXSwgY2xpY2s6IHNpZ251cF9vbkNsaWNrIj4gPC9hPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkRlc2NyaWJlZEJ5OiBcJ2NvbmZpcm1SZWNvdmVyVXNlcm5hbWVIZWFkZXIgY29uZmlybVJlY292ZXJVc2VybmFtZURlc2NyaXB0aW9uIGNvbmZpcm1SZWNvdmVyVXNlcm5hbWVJbnN0cnVjdGlvblwnLFxuICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uVGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9TaWduSW5fQnV0dG9uX05leHRcJ10sXG4gICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgJiYgaXNCYWNrQnV0dG9uVmlzaWJsZSgpIH0sXG4gICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayxcbiAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoZSx0KXt2YXIgbj1hLnBhcnNlKHQpO3MuaGVhZGVyVGV4dChuLmhlYWRlcikscy5jb250ZW50SHRtbChuLmh0bWwpfWZ1bmN0aW9uIG4oKXtzLmxvYWRGYWlsZWQoITApfWZ1bmN0aW9uIGkoKXt2YXIgZT11LmFkZElmTm90RXhpc3QoZiwiY29tbWFuZCIsbCksaT17dGFyZ2V0VXJsOmUscmVxdWVzdFR5cGU6ci5SZXF1ZXN0VHlwZS5Qb3N0LGlzQXN5bmM6ITAsdGltZW91dDoxZTQscmVzcG9uc2VUeXBlOiIiLHN1Y2Nlc3NDYWxsYmFjazp0LGZhaWx1cmVDYWxsYmFjazpuLHRpbWVvdXRDYWxsYmFjazpufSxvPW5ldyByLkhhbmRsZXIoaSk7by5zZW5kUmVxdWVzdCgpfXZhciBzPXRoaXMsZD1lLnNlcnZlckRhdGEsbD1lLmNvbW1hbmQ7cy5vblN3aXRjaFZpZXc9Yy5jcmVhdGUoKTt2YXIgZj1kLnVybEFjY291bnRRdWVyeTtzLmhlYWRlclRleHQ9by5vYnNlcnZhYmxlKCkscy5jb250ZW50SHRtbD1vLm9ic2VydmFibGUoKSxzLmxvYWRGYWlsZWQ9by5vYnNlcnZhYmxlKCExKSxzLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKCl7fSxzLmdldFN0YXRlPWZ1bmN0aW9uKCl7aWYocy5jb250ZW50SHRtbCgpJiZzLmhlYWRlclRleHQoKSl7dmFyIGU9e2hlYWRlclRleHQ6cy5oZWFkZXJUZXh0KCksY29udGVudEh0bWw6cy5jb250ZW50SHRtbCgpfTtyZXR1cm4gZX1yZXR1cm4gbnVsbH0scy5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oZSl7ZSYmZS5oZWFkZXJUZXh0JiZlLmhlYWRlclRleHQuY29udGVudEh0bWw/KHMuaGVhZGVyVGV4dChlLmhlYWRlclRleHQpLHMuY29udGVudEh0bWwoZS5jb250ZW50SHRtbCkpOmkoKX0scy5idXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Mub25Td2l0Y2hWaWV3KHAuUHJldmlvdXMpfX12YXIgbz1uKDEpLGE9big3KSxyPW4oMTY4KSxzPW4oOSksYz1uKDEzKSxkPW4oNSksbD13aW5kb3csdT1zLlF1ZXJ5U3RyaW5nLHA9ZC5QYWdpbmF0ZWRTdGF0ZTtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWxlYXJuLW1vcmUtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjM1KSxzeW5jaHJvbm91czohbC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxzLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGwuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSxuKDIzNiksIiIpKycgLS0+PCEtLSBrbyBpZm5vdDogY29udGVudEh0bWwgLS0+PCEtLSBrbyBpZjogbG9hZEZhaWxlZCAtLT4gPGRpdiBjbGFzcz0idGV4dC1zdWJ0aXRsZSBuby1tYXJnaW4tdG9wIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnTU9CSUxFX1NUUl9TaWduSW5fTVNBY2N0SGVscEhlYWRpbmdcJ10iPjwvZGl2PiA8ZGl2IGNsYXNzPXRleHQtYm9keSBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ01PQklMRV9TVFJfU2lnbkluX01TQWNjdEhlbHBEZXNjXCddIj48L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmbm90OiBsb2FkRmFpbGVkIC0tPiA8ZGl2IGNsYXNzPSJyb3cgcHJvZ3Jlc3MtY29udGFpbmVyIj4gPGRpdiBjbGFzcz1wcm9ncmVzcyByb2xlPXByb2dyZXNzYmFyIHRhYmluZGV4PS0xIGRhdGEtYmluZD0iY29tcG9uZW50OiBcJ21hcmNoaW5nLWFudHMtY29udHJvbFwnLCBoYXNGb2N1czogdHJ1ZSwgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogY29udGVudEh0bWwgLS0+IDxkaXYgYXJpYS1saXZlPWFzc2VydGl2ZT4gPGRpdiBjbGFzcz0idGV4dC1zdWJ0aXRsZSBuby1tYXJnaW4tdG9wIG5vLW91dGxpbmUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgdGFiaW5kZXg9LTEgZGF0YS1iaW5kPSJ0ZXh0OiBoZWFkZXJUZXh0LCBoYXNGb2N1czogc3ZyLmZJc0hvc3RlZCI+PC9kaXY+IDxkaXYgZGF0YS1iaW5kPSJcbiAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogY29udGVudEh0bWwsXG4gICAgICAgIGNoaWxkQmluZGluZ3M6IHtcbiAgICAgICAgICAgIFwnaWRBX01TQWNjTGVhcm5Nb3JlXCc6IHtcbiAgICAgICAgICAgICAgICBocmVmOiBzdnIudXJsTVNBY2NvdW50SGVscCxcbiAgICAgICAgICAgICAgICB2aXNpYmxlOiAhc3ZyLmZJc0hvc3RlZCxcbiAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0cltcJ01PQklMRV9TVFJfU2lnbkluX01TQWNjdEhlbHBIZWFkaW5nXCddLFxuICAgICAgICAgICAgICAgIGhhc0ZvY3VzOiAhc3ZyLmZJc0hvc3RlZCB9IH0iPjwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1wb3NpdGlvbi1idXR0b25zPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uVGV4dDogc3RyW1wnTU9CSUxFX1NUUl9TaWduSW5fTVNBY2N0SGVscERvbmVfQnV0dG9uXCddLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogdHJ1ZSB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogYnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaSgpe3ZhciBlPXRoaXM7ZS51c2VDc3NBbmltYXRpb249ITEsZnVuY3Rpb24oKXtzLmlzQ1NTQW5pbWF0aW9uU3VwcG9ydGVkKCkmJiFzLmlzSGlnaENvbnRyYXN0KCkmJihlLnVzZUNzc0FuaW1hdGlvbj0hMCl9KCl9dmFyIG89bigxKSxhPW4oOSkscj13aW5kb3cscz1hLkhlbHBlcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoIm1hcmNoaW5nLWFudHMtY29udHJvbCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjM3KSxzeW5jaHJvbm91czohci5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKHIuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyl9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksIiIpKyIgLS0+PCEtLSBrbyBpZjogdXNlQ3NzQW5pbWF0aW9uIC0tPiA8ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZm5vdDogdXNlQ3NzQW5pbWF0aW9uIC0tPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBzcmM9IituKDIzOCkrIiAvPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHNyYz0iK24oMjM5KSsiIC8+PCEtLSAva28gLS0+IDwhLS0gL2tvIC0tPiJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9tYXJjaGluZ19hbnRzX3doaXRlXzE2NmRlNTM0NzEyNjUyNTNhYjNhNDU2ZGVmZTZkYTIzLmdpZiJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9tYXJjaGluZ19hbnRzX2I1NDBhOGU1MTgwMzcxOTJlMzJjNGZlNThiZjJkYmFiLmdpZiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1uLnVybE1zYVJlc2V0UGFzc3dvcmQsbz1uLnVybFJlc2V0UGFzc3dvcmQ7dC5vblN3aXRjaFZpZXc9ci5jcmVhdGUoKSx0Lm9uUmVkaXJlY3Q9ci5jcmVhdGUoKSx0LnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKCl7fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7fSx0LnJlc3RvcmVTdGF0ZT1mdW5jdGlvbigpe30sdC5idXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KGQuUHJldmlvdXMpfSx0Lm1zYVRpbGVfb25DbGljaz1mdW5jdGlvbigpe3Qub25SZWRpcmVjdChpKX0sdC5hYWRUaWxlX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uUmVkaXJlY3Qobyl9fXZhciBvPW4oMSksYT1uKDkpLHI9bigxMykscz1uKDUpLGM9d2luZG93LGQ9cy5QYWdpbmF0ZWRTdGF0ZTtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXJlc2V0LXBhc3N3b3JkLXNwbGl0dGVyLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDI0MSksc3luY2hyb25vdXM6IWMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5OCksIiIpKycgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfU1RSX1Jlc2V0UGFzc3dvcmRTcGxpdHRlclRpdGxlXCddIj48L2Rpdj4gPGRpdiBjbGFzcz0icm93IGZvcm0tZ3JvdXAiIHJvbGU9bGlzdGJveD4gPGRpdiBjbGFzcz0icm93IHRpbGUiPiA8ZGl2IGlkPWFhZFJlc2V0VGlsZSBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iYXJpYURlc2NyaWJlZEJ5OiBcJ2xvZ2luSGVhZGVyXCcsIGNsaWNrOiBhYWRUaWxlX29uQ2xpY2ssIGhhc0ZvY3VzOiB0cnVlLCBwcmVzc0VudGVyOiBhYWRUaWxlX29uQ2xpY2siPiA8ZGl2IGNsYXNzPXRhYmxlLXJvdz4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0aWxlLWltZyI+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPScrbigyNDIpKyIgc3Znc3JjPSIrbigyNDMpKycgZGF0YS1iaW5kPWltZ1NyYyAvPiA8L2Rpdj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudCI+IDxkaXYgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1NwbGl0dGVyX0FhZFRpbGVfVGl0bGVcJ10iPjwvZGl2PiA8ZGl2IGlkPWFhZFRpdGxlSGludD48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1NwbGl0dGVyX0FhZFRpbGVfSGludFwnXSI+PC9zbWFsbD48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBpZD1tc2FSZXNldFRpbGUgY2xhc3M9dGFibGUgdGFiaW5kZXg9MCByb2xlPW9wdGlvbiBkYXRhLWJpbmQ9ImNsaWNrOiBtc2FUaWxlX29uQ2xpY2ssIHByZXNzRW50ZXI6IG1zYVRpbGVfb25DbGljayI+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDI0NCkrIiBzdmdzcmM9IituKDI0NSkrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50Ij4gPGRpdiBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX0hSRF9TVFJfU3BsaXR0ZXJfTXNhVGlsZV9UaXRsZVwnXSI+PC9kaXY+IDxkaXYgaWQ9bXNhVGlsZUhpbnQ+PHNtYWxsIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfSFJEX1NUUl9TcGxpdHRlcl9Nc2FUaWxlX0hpbnRcJ10iPjwvc21hbGw+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0icm93IHBvc2l0aW9uLWJ1dHRvbnMiPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICByZW1vdmVCb3R0b21NYXJnaW46IHRydWUsXG4gICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IGZhbHNlLFxuICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHRydWUgfSxcbiAgICBldmVudDoge1xuICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogYnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfYWNjb3VudF9hYWRfOWRjODhlN2IwZGZlNDE3Y2ZjNTk2MTIzODE3Mjg2OTgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl9hY2NvdW50X2FhZF85ZGU3MGQxYzUxOTFkMTg1MmEwZDVhYWMyOGI0NGE2Yy5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX2FjY291bnRfbXNhXzRlMzYxOWE0OTlmZDc0YzBjNjZkNTIxNTUxNGI1NjZhLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfYWNjb3VudF9tc2FfMmQ4Zjg2MDU5YmUxNzY4MzM4OTcwOTllZTZkZGVkZWIuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe1AudGl0bGUoJC5DVF9STkdDX1NUUl9Qb2xsaW5nX1RpdGxlKSxQLnNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlKCkuc3RhcnRQb2xsaW5nKFAuc2Vzc2lvbklkZW50aWZpZXIoKSl9ZnVuY3Rpb24gbigpe1AudGl0bGUoIiIpLFAuZXJyb3IobnVsbCksUC5zZXNzaW9uUG9sbGluZ0ludGVyZmFjZSgpLnN0b3BQb2xsaW5nKCksTz90KCk6YygpLE89ITF9ZnVuY3Rpb24gaShlKXtQLnNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlKCkuc2V0UG9sbGluZ0VuZFRpbWUoKSx3KGUpLFAuZXJyb3IoKSYmbigpfWZ1bmN0aW9uIGMoKXtpZighUC5pc1JlcXVlc3RQZW5kaW5nKCkpaWYoUC5kaXNwbGF5U2lnbihudWxsKSxEKCEwKSxpZSl7dmFyIGU9e0NoYW5uZWw6ci5DaGFubmVsLkF1dGhlbnRpY2F0b3IsT3JpZ2luYWxSZXF1ZXN0Om5lLEZsb3dUb2tlbjpzZSgpLE9sZERldmljZUNvZGU6UC5zZXNzaW9uSWRlbnRpZmllcigpfSx0PW5ldyBhKHtjaGVja0FwaUNhbmFyeTohMH0pO3QuSnNvbih0ZSxlLGQscCxzLkRlZmF1bHRSZXF1ZXN0VGltZW91dCl9ZWxzZXt2YXIgbj17dXNlcm5hbWU6di5jbGVhbnNlVXNlcm5hbWUoTCkscHJvb2ZUeXBlOlBST09GLlR5cGUuVE9UUEF1dGhlbnRpY2F0b3JWMixwdXJwb3NlOnIuUHVycG9zZS5SZW1vdGVOR0MsZmxvd1Rva2VuOlAuc2Vzc2lvbklkZW50aWZpZXIoKSx1bmF1dGhTZXNzaW9uSWQ6SixsY2lkOlgsc3VjY2Vzc0NhbGxiYWNrOmYsZmFpbHVyZUNhbGxiYWNrOm19O1EmJihuLmNhbmFyeUZsb3dUb2tlbj1zZSgpKTt2YXIgaT1uZXcgdShuKTtpLnNlbmRSZXF1ZXN0KCl9fWZ1bmN0aW9uIGQoZSl7ayhlLkZsb3dUb2tlbikseChlLlJlbW90ZU5nY1BhcmFtcyksRCghMSksdCgpfWZ1bmN0aW9uIHAoZSl7ZSYmayhlLkZsb3dUb2tlbiksRCghMSksUC50aXRsZSgkLkNUX1JOR0NfU1RSX0Vycm9yX1RpdGxlX1NlbmRGYWlsKSxQLmVycm9yKCQuQ1RfUk5HQ19TVFJfRXJyb3JfU2VuZEZhaWwpfWZ1bmN0aW9uIGYoZSl7ayhlLmdldEZsb3dUb2tlbigpKSxQLmRpc3BsYXlTaWduKGUuZ2V0RGlzcGxheVNpZ24oKSksRCghMSksdCgpfWZ1bmN0aW9uIG0oZSl7ZSYmayhlLmdldEZsb3dUb2tlbigpKSxEKCExKSxQLnRpdGxlKCQuQ1RfUk5HQ19TVFJfRXJyb3JfVGl0bGVfU2VuZEZhaWwpLFAuZXJyb3IoJC5DVF9STkdDX1NUUl9FcnJvcl9TZW5kRmFpbCl9ZnVuY3Rpb24gdyhlKXtzd2l0Y2goZSl7Y2FzZSBiLlFyQ29kZTpDKCk7YnJlYWs7Y2FzZSBiLkxpc3RTZXNzaW9uczp5KCk7YnJlYWs7ZGVmYXVsdDpUKCl9fWZ1bmN0aW9uIFQoKXtJKGIuUHVzaE5vdGlmaWNhdGlvbil9ZnVuY3Rpb24gQygpe0koYi5RckNvZGUpLFAucXJDb2RlR2VuZXJhdGVkKCEwKX1mdW5jdGlvbiB5KCl7SShiLkxpc3RTZXNzaW9ucyl9ZnVuY3Rpb24gayhlKXtlJiYoc2UoZSksUC5vblVwZGF0ZUZsb3dUb2tlbihlKSxQLmNyZWRTd2l0Y2hMaW5rTWV0aG9kcygpJiZQLmNyZWRTd2l0Y2hMaW5rTWV0aG9kcygpLnZpZXdfb25VcGRhdGVGbG93VG9rZW4oZSkpfWZ1bmN0aW9uIHgoZSl7ZSYmKFAuc2Vzc2lvbklkZW50aWZpZXIoZS5TZXNzaW9uSWRlbnRpZmllciksUC5kaXNwbGF5U2lnbihlLkVudHJvcHkpLHcoZS5EZWZhdWx0VHlwZSksUC5vblVwZGF0ZVJlbW90ZU5nY1BhcmFtcyhlLlNlc3Npb25JZGVudGlmaWVyLGUuRW50cm9weSxlLkRlZmF1bHRUeXBlKSl9ZnVuY3Rpb24gRChlKXtQLmlzUmVxdWVzdFBlbmRpbmcoZSksUC5vblNldEJhY2tCdXR0b25TdGF0ZShaJiYhQiYmIWUpfXZhciBQPXRoaXMsST1vLm9ic2VydmFibGUoKSxFPSJpZFNJQnV0dG9uOSIsUj0ic2xrIixBPWUuc2VydmVyRGF0YSxCPWUuaXNJbml0aWFsVmlldyxMPWUudXNlcm5hbWUsRj1lLmRpc3BsYXlOYW1lLE49ZS5kZWZhdWx0S21zaVZhbHVlLE89ZS5yZW1vdGVOZ2NQYXJhbXMucmVxdWVzdFNlbnQsVT1lLnJlbW90ZU5nY1BhcmFtcy5zZXNzaW9uSWRlbnRpZmllcixNPWUucmVtb3RlTmdjUGFyYW1zLmVudHJvcHl8fG51bGwsVj1lLnJlbW90ZU5nY1BhcmFtcy5kZWZhdWx0VHlwZXx8Yi5QdXNoTm90aWZpY2F0aW9uLEg9ZS5zZXNzaW9ucyxqPWUuZmxvd1Rva2VuLHE9ZS5hdmFpbGFibGVDcmVkc3x8W10sRz1lLmV2aWN0ZWRDcmVkc3x8W10sVz1lLmlkcFJlZGlyZWN0VXJsLEs9ZS51c2VFdmljdGVkQ3JlZGVudGlhbHMsej1lLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYywkPUEuc3RyLFg9QS5pUmVxdWVzdExDSUQsSj1BLnNVbmF1dGhTZXNzaW9uSUQsUT1BLmZVc2VGbG93VG9rZW5Bc0NhbmFyeSxZPUEuc1Nlc3Npb25JZGVudGlmaWVyTmFtZXx8UixaPUEuZlNob3dCdXR0b25zLGVlPUEuaVJlbW90ZU5nY1BvbGxpbmdUeXBlfHxfLkltYWdlLHRlPUEudXJsR2V0T25lVGltZUNvZGUsbmU9QS5zQ3R4LGllPSEhdGUsb2U9bnVsbCxhZT0hMSxyZT0hMSxzZT1vLm9ic2VydmFibGUoaikuZXh0ZW5kKHtmbG93VG9rZW5VcGRhdGU6QX0pO1Aub25Td2l0Y2hWaWV3PWwuY3JlYXRlKCksUC5vblJlZGlyZWN0PWwuY3JlYXRlKCksUC5vblN1Ym1pdFJlYWR5PWwuY3JlYXRlKCksUC5vblVwZGF0ZUZsb3dUb2tlbj1sLmNyZWF0ZSgpLFAub25VcGRhdGVSZW1vdGVOZ2NQYXJhbXM9bC5jcmVhdGUoKSxQLm9uU2V0QmFja0J1dHRvblN0YXRlPWwuY3JlYXRlKCksUC5lcnJvcj1vLm9ic2VydmFibGUobnVsbCksUC5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksUC5pc0ttc2lDaGVja2VkPW8ub2JzZXJ2YWJsZShOKSxQLnNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlPW8ub2JzZXJ2YWJsZShudWxsKSxQLmRpc3BsYXlTaWduPW8ub2JzZXJ2YWJsZShNKSxQLnRpdGxlPW8ub2JzZXJ2YWJsZSgiIiksUC5xckNvZGVHZW5lcmF0ZWQ9by5vYnNlcnZhYmxlKCExKSxQLmlzQmFja0J1dHRvblZpc2libGU9by5vYnNlcnZhYmxlKCExKSxQLnNlc3Npb25JZGVudGlmaWVyPW8ub2JzZXJ2YWJsZShVKSxQLmNyZWRTd2l0Y2hMaW5rTWV0aG9kcz1vLm9ic2VydmFibGUoKSxQLnVzZUV2aWN0ZWRDcmVkZW50aWFscz1vLm9ic2VydmFibGUoSyksUC5zZXNzaW9uSWRlbnRpZmllck5hbWU9WSxQLnVuc2FmZV91c2VybmFtZT1udWxsLFAudXNlcm5hbWU9TCxQLnVuc2FmZV9kaXNwbGF5TmFtZT1udWxsLFAuaXNJbml0aWFsVmlldz1CLFAuZGVmYXVsdFJlbW90ZU5nY1R5cGU9VixQLnBvbGxpbmdUeXBlPWVlLFAuYXZhaWxhYmxlQ3JlZHM9cSxQLmV2aWN0ZWRDcmVkcz1HLFAuaXNGZWRlcmF0ZWRVc2VyPSEhVyxQLmZsb3dUb2tlbj1qLFAuc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjPXosUC5pc1B1c2hOb3RpZmljYXRpb249by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gSSgpPT09Yi5QdXNoTm90aWZpY2F0aW9ufSksUC5pc1FyQ29kZT1vLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBJKCk9PT1iLlFyQ29kZX0pLFAuaXNMaXN0U2Vzc2lvbnM9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gSSgpPT09Yi5MaXN0U2Vzc2lvbnN9KSxQLnVuc2FmZV9wb2xsaW5nRGVzY3JpcHRpb249by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gUC5pc1B1c2hOb3RpZmljYXRpb24oKT9QLmlzUmVxdWVzdFBlbmRpbmcoKT8kLldGX1NUUl9Qcm9ncmVzc1RleHQ6UC5kaXNwbGF5U2lnbigpPyQuQ1RfUk5HQ19TVFJfUG9sbGluZ19QYWdlRGVzY3JpcHRpb25fVW5mYW1pbGlhckRldmljZTokLkNUX1JOR0NfU1RSX1BvbGxpbmdfUGFnZURlc2NyaXB0aW9uOlAuaXNRckNvZGUoKT92LmZvcm1hdCgkLkNUX1JOR0NfU1RSX1FSX1BhZ2VEZXNjcmlwdGlvbixQLnVuc2FmZV9kaXNwbGF5TmFtZSk6UC5pc0xpc3RTZXNzaW9ucygpP1AuZGlzcGxheVNpZ24oKT92LmZvcm1hdCgkLkNUX1JOR0NfU1RSX0xTX1BhZ2VEZXNjcmlwdGlvbl9VbmZhbWlsaWFyRGV2aWNlLFAudW5zYWZlX2Rpc3BsYXlOYW1lKTp2LmZvcm1hdCgkLkNUX1JOR0NfU1RSX0xTX1BhZ2VEZXNjcmlwdGlvbixQLnVuc2FmZV9kaXNwbGF5TmFtZSk6dm9pZCAwfSksUC5pc1ByaW1hcnlCdXR0b25WaXNpYmxlPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIFomJiEhUC5lcnJvcigpJiYhUC5pc1JlcXVlc3RQZW5kaW5nKCl9KSxQLmlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZT1vLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBaJiYhQiYmIVAuaXNSZXF1ZXN0UGVuZGluZygpfSksUC5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLmZsb3dUb2tlbj1zZSgpLGUudXNlRXZpY3RlZENyZWRlbnRpYWxzPXJlfHxQLnVzZUV2aWN0ZWRDcmVkZW50aWFscygpLGUuc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjPSExLG9lJiYoZS5vdGNDcmVkZW50aWFsPW9lKX0sUC5nZXRTdGF0ZT1mdW5jdGlvbigpe3ZhciBlPXtpc0ttc2lDaGVja2VkOlAuaXNLbXNpQ2hlY2tlZCgpLGVycm9yOlAuZXJyb3IoKSx0aXRsZTpQLnRpdGxlKCkscmVtb3RlTmdjVHlwZTpJKCksdXNlRXZpY3RlZENyZWRlbnRpYWxzOlAudXNlRXZpY3RlZENyZWRlbnRpYWxzKCl9O3JldHVybiBlfSxQLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYoUC5pc0ttc2lDaGVja2VkKGUuaXNLbXNpQ2hlY2tlZCksUC5lcnJvcihlLmVycm9yKSxQLnRpdGxlKGUudGl0bGUpLFAudXNlRXZpY3RlZENyZWRlbnRpYWxzKGUudXNlRXZpY3RlZENyZWRlbnRpYWxzKSx3KGUucmVtb3RlTmdjVHlwZSksbnVsbD09PVAuZXJyb3IoKSYmKGFlPSEwLFAub25Td2l0Y2hWaWV3KGguUHJldmlvdXMpKSl9LFAuc2Vzc2lvblBvbGxpbmdGaWVsZF9vbkxvYWQ9ZnVuY3Rpb24oKXthZXx8bigpfSxQLnNlc3Npb25Qb2xsaW5nRmllbGRfb25TZXNzaW9uVGltZU91dD1mdW5jdGlvbigpe1AuaXNQdXNoTm90aWZpY2F0aW9uKCk/KFAudGl0bGUoJC5DVF9STkdDX1NUUl9UaW1lT3V0X1RpdGxlKSxQLmVycm9yKHYuZm9ybWF0KCQuQ1RfUk5HQ19TVFJfVGltZU91dF9QYWdlRGVzY3JpcHRpb24sRikpKTpQLmlzUXJDb2RlKCk/KFAudGl0bGUoJC5DVF9STkdDX1NUUl9RUl9UaW1lb3V0X1RpdGxlKSxQLmVycm9yKHYuZm9ybWF0KCQuQ1RfUk5HQ19TVFJfUVJfVGltZW91dF9QYWdlRGVzY3JpcHRpb24sRikpKTpQLmlzTGlzdFNlc3Npb25zKCkmJihQLnRpdGxlKCQuQ1RfUk5HQ19TVFJfTFNfVGltZW91dF9UaXRsZSksUC5lcnJvcih2LmZvcm1hdCgkLkNUX1JOR0NfU1RSX0xTX1RpbWVvdXRfUGFnZURlc2NyaXB0aW9uLEYpKSl9LFAuc2Vzc2lvblBvbGxpbmdGaWVsZF9vblNlc3Npb25EZW5pZWQ9ZnVuY3Rpb24oKXtQLnRpdGxlKCQuQ1RfUk5HQ19TVFJfRGVuaWVkX1RpdGxlKSxQLmVycm9yKHYuZm9ybWF0KCQuQ1RfUk5HQ19TVFJfRGVuaWVkX1BhZ2VEZXNjcmlwdGlvbixGKSl9LFAuc2Vzc2lvblBvbGxpbmdGaWVsZF9vblNlc3Npb25BcHByb3ZlZD1mdW5jdGlvbigpe1AudGl0bGUoIiIpLEQoITApLFAub25TdWJtaXRSZWFkeSghMCk7dmFyIGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoRSk7ZSYmZS5jbGljaygpfSxQLnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe24oKX0sUC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe1Aub25Td2l0Y2hWaWV3KGguUHJldmlvdXMpfSxQLnN3aXRjaFRvUG9sbGluZ19vbkNsaWNrPWZ1bmN0aW9uKCl7aShQLmRlZmF1bHRSZW1vdGVOZ2NUeXBlKX0sUC5zd2l0Y2hUb1FyQ29kZV9vbkNsaWNrPWZ1bmN0aW9uKCl7aShiLlFyQ29kZSl9LFAuc3dpdGNoVG9QYXNzd29yZF9vbkNsaWNrPWZ1bmN0aW9uKCl7UC5vblN3aXRjaFZpZXcoaC5QYXNzd29yZCl9LFAuc3dpdGNoVG9PdGhlcklkcF9vbkNsaWNrPWZ1bmN0aW9uKCl7UC5vblN3aXRjaFZpZXcoaC5JZHBSZWRpcmVjdCl9LFAuc2VsZWN0QWNjb3VudF9vbkNsaWNrPWZ1bmN0aW9uKCl7UC5vblN3aXRjaFZpZXcoSC5sZW5ndGg/aC5UaWxlczpoLlVzZXJuYW1lKX0sUC5zd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2s9ZnVuY3Rpb24oKXtyZT0hMCxQLm9uU3dpdGNoVmlldyhoLkNyZWRlbnRpYWxQaWNrZXIpfSxQLmNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldz1mdW5jdGlvbihlLHQsbil7biYmKG9lPW4pLFAub25Td2l0Y2hWaWV3KGUsdCl9LFAuY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXtQLmlzUmVxdWVzdFBlbmRpbmcoZSl9LFAuY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW49ZnVuY3Rpb24oZSl7ayhlKX0sZnVuY3Rpb24oKXtQLnVuc2FmZV9kaXNwbGF5TmFtZT1TLmh0bWxVbmVzY2FwZShGKSxQLnVuc2FmZV91c2VybmFtZT1TLmh0bWxVbmVzY2FwZShMKSxQLnRpdGxlKCQuQ1RfUk5HQ19TVFJfUG9sbGluZ19UaXRsZSksdyhWKSxEKCExKSxnJiYoZy5pbml0aWFsaXplUmVtb3RlTkdDVmlld01vZGVsJiZnLmluaXRpYWxpemVSZW1vdGVOR0NWaWV3TW9kZWwoUCxBKSxnLmhhbmRsZUJhY2tCdXR0b24mJmcuaGFuZGxlQmFja0J1dHRvbihQLnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrLmJpbmQoUCkpKSxCJiZnJiZnLmlzQmFja0J1dHRvblN1cHBvcnRlZE9uSW5pdGlhbFZpZXc/Zy5pc0JhY2tCdXR0b25TdXBwb3J0ZWRPbkluaXRpYWxWaWV3KEEsZnVuY3Rpb24oZSl7UC5pc0JhY2tCdXR0b25WaXNpYmxlKGUpfSk6UC5pc0JhY2tCdXR0b25WaXNpYmxlKCEwKX0oKX12YXIgbz1uKDEpLGE9bigxNjcpLHI9bigyMDMpLHM9big1KSxjPW4oNiksZD1uKDkpLGw9bigxMyksdT1uKDIwMikscD1uKDI0NyksZj1uKDE5MyksZz1udWxsLG09d2luZG93LHY9Yy5TdHJpbmcsaD1zLlBhZ2luYXRlZFN0YXRlLGI9cy5SZW1vdGVOZ2NUeXBlLF89cy5TZXNzaW9uUG9sbGluZ1R5cGUsUz1kLkhlbHBlcjtwLmFwcGx5RXh0ZW5zaW9ucyhvKSxmLmFwcGx5RXh0ZW5kZXJzKG8pLG8uY29tcG9uZW50cy5yZWdpc3RlcigibG9naW4tcmVtb3RlLW5nYy12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyNDkpLHN5bmNocm9ub3VzOiFtLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGQuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4obS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDI0OCk7dC5hcHBseUV4dGVuc2lvbnM9ZnVuY3Rpb24oZSl7ZS5iaW5kaW5nSGFuZGxlcnMucXJDb2RlPXtpbml0OmZ1bmN0aW9uKHQsbil7dmFyIG89ZS51bndyYXAobigpKTtuZXcgaSh0LmlkLG8pfX19fSxmdW5jdGlvbihlLHQsbil7dmFyIGk7IWZ1bmN0aW9uKHQsbil7ZS5leHBvcnRzPW4oKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5tb2RlPWwuTU9ERV84QklUX0JZVEUsdGhpcy5kYXRhPWUsdGhpcy5wYXJzZWREYXRhPVtdO2Zvcih2YXIgdD0wLG49dGhpcy5kYXRhLmxlbmd0aDt0PG47dCsrKXt2YXIgaT1bXSxvPXRoaXMuZGF0YS5jaGFyQ29kZUF0KHQpO28+NjU1MzY/KGlbMF09MjQwfCgxODM1MDA4Jm8pPj4+MTgsaVsxXT0xMjh8KDI1ODA0OCZvKT4+PjEyLGlbMl09MTI4fCg0MDMyJm8pPj4+NixpWzNdPTEyOHw2MyZvKTpvPjIwNDg/KGlbMF09MjI0fCg2MTQ0MCZvKT4+PjEyLGlbMV09MTI4fCg0MDMyJm8pPj4+NixpWzJdPTEyOHw2MyZvKTpvPjEyOD8oaVswXT0xOTJ8KDE5ODQmbyk+Pj42LAppWzFdPTEyOHw2MyZvKTppWzBdPW8sdGhpcy5wYXJzZWREYXRhLnB1c2goaSl9dGhpcy5wYXJzZWREYXRhPUFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sdGhpcy5wYXJzZWREYXRhKSx0aGlzLnBhcnNlZERhdGEubGVuZ3RoIT10aGlzLmRhdGEubGVuZ3RoJiYodGhpcy5wYXJzZWREYXRhLnVuc2hpZnQoMTkxKSx0aGlzLnBhcnNlZERhdGEudW5zaGlmdCgxODcpLHRoaXMucGFyc2VkRGF0YS51bnNoaWZ0KDIzOSkpfWZ1bmN0aW9uIHQoZSx0KXt0aGlzLnR5cGVOdW1iZXI9ZSx0aGlzLmVycm9yQ29ycmVjdExldmVsPXQsdGhpcy5tb2R1bGVzPW51bGwsdGhpcy5tb2R1bGVDb3VudD0wLHRoaXMuZGF0YUNhY2hlPW51bGwsdGhpcy5kYXRhTGlzdD1bXX1mdW5jdGlvbiBuKGUsdCl7aWYodm9pZCAwPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoZS5sZW5ndGgrIi8iK3QpO2Zvcih2YXIgbj0wO248ZS5sZW5ndGgmJjA9PWVbbl07KW4rKzt0aGlzLm51bT1uZXcgQXJyYXkoZS5sZW5ndGgtbit0KTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoLW47aSsrKXRoaXMubnVtW2ldPWVbaStuXX1mdW5jdGlvbiBvKGUsdCl7dGhpcy50b3RhbENvdW50PWUsdGhpcy5kYXRhQ291bnQ9dH1mdW5jdGlvbiBhKCl7dGhpcy5idWZmZXI9W10sdGhpcy5sZW5ndGg9MH1mdW5jdGlvbiByKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR9ZnVuY3Rpb24gcygpe3ZhciBlPSExLHQ9bmF2aWdhdG9yLnVzZXJBZ2VudDtpZigvYW5kcm9pZC9pLnRlc3QodCkpe2U9ITA7dmFyIG49dC50b1N0cmluZygpLm1hdGNoKC9hbmRyb2lkIChbMC05XVwuWzAtOV0pL2kpO24mJm5bMV0mJihlPXBhcnNlRmxvYXQoblsxXSkpfXJldHVybiBlfWZ1bmN0aW9uIGMoZSx0KXtmb3IodmFyIG49MSxpPWQoZSksbz0wLGE9di5sZW5ndGg7bzw9YTtvKyspe3ZhciByPTA7c3dpdGNoKHQpe2Nhc2UgdS5MOnI9dltvXVswXTticmVhaztjYXNlIHUuTTpyPXZbb11bMV07YnJlYWs7Y2FzZSB1LlE6cj12W29dWzJdO2JyZWFrO2Nhc2UgdS5IOnI9dltvXVszXX1pZihpPD1yKWJyZWFrO24rK31pZihuPnYubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiVG9vIGxvbmcgZGF0YSIpO3JldHVybiBufWZ1bmN0aW9uIGQoZSl7dmFyIHQ9ZW5jb2RlVVJJKGUpLnRvU3RyaW5nKCkucmVwbGFjZSgvXCVbMC05YS1mQS1GXXsyfS9nLCJhIik7cmV0dXJuIHQubGVuZ3RoKyh0Lmxlbmd0aCE9ZT8zOjApfWUucHJvdG90eXBlPXtnZXRMZW5ndGg6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucGFyc2VkRGF0YS5sZW5ndGh9LHdyaXRlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLG49dGhpcy5wYXJzZWREYXRhLmxlbmd0aDt0PG47dCsrKWUucHV0KHRoaXMucGFyc2VkRGF0YVt0XSw4KX19LHQucHJvdG90eXBlPXthZGREYXRhOmZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBlKHQpO3RoaXMuZGF0YUxpc3QucHVzaChuKSx0aGlzLmRhdGFDYWNoZT1udWxsfSxpc0Rhcms6ZnVuY3Rpb24oZSx0KXtpZihlPDB8fHRoaXMubW9kdWxlQ291bnQ8PWV8fHQ8MHx8dGhpcy5tb2R1bGVDb3VudDw9dCl0aHJvdyBuZXcgRXJyb3IoZSsiLCIrdCk7cmV0dXJuIHRoaXMubW9kdWxlc1tlXVt0XX0sZ2V0TW9kdWxlQ291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2R1bGVDb3VudH0sbWFrZTpmdW5jdGlvbigpe3RoaXMubWFrZUltcGwoITEsdGhpcy5nZXRCZXN0TWFza1BhdHRlcm4oKSl9LG1ha2VJbXBsOmZ1bmN0aW9uKGUsbil7dGhpcy5tb2R1bGVDb3VudD00KnRoaXMudHlwZU51bWJlcisxNyx0aGlzLm1vZHVsZXM9bmV3IEFycmF5KHRoaXMubW9kdWxlQ291bnQpO2Zvcih2YXIgaT0wO2k8dGhpcy5tb2R1bGVDb3VudDtpKyspe3RoaXMubW9kdWxlc1tpXT1uZXcgQXJyYXkodGhpcy5tb2R1bGVDb3VudCk7Zm9yKHZhciBvPTA7bzx0aGlzLm1vZHVsZUNvdW50O28rKyl0aGlzLm1vZHVsZXNbaV1bb109bnVsbH10aGlzLnNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwwKSx0aGlzLnNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4odGhpcy5tb2R1bGVDb3VudC03LDApLHRoaXMuc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybigwLHRoaXMubW9kdWxlQ291bnQtNyksdGhpcy5zZXR1cFBvc2l0aW9uQWRqdXN0UGF0dGVybigpLHRoaXMuc2V0dXBUaW1pbmdQYXR0ZXJuKCksdGhpcy5zZXR1cFR5cGVJbmZvKGUsbiksdGhpcy50eXBlTnVtYmVyPj03JiZ0aGlzLnNldHVwVHlwZU51bWJlcihlKSxudWxsPT10aGlzLmRhdGFDYWNoZSYmKHRoaXMuZGF0YUNhY2hlPXQuY3JlYXRlRGF0YSh0aGlzLnR5cGVOdW1iZXIsdGhpcy5lcnJvckNvcnJlY3RMZXZlbCx0aGlzLmRhdGFMaXN0KSksdGhpcy5tYXBEYXRhKHRoaXMuZGF0YUNhY2hlLG4pfSxzZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPS0xO248PTc7bisrKWlmKCEoZStuPD0tMXx8dGhpcy5tb2R1bGVDb3VudDw9ZStuKSlmb3IodmFyIGk9LTE7aTw9NztpKyspdCtpPD0tMXx8dGhpcy5tb2R1bGVDb3VudDw9dCtpfHwoMDw9biYmbjw9NiYmKDA9PWl8fDY9PWkpfHwwPD1pJiZpPD02JiYoMD09bnx8Nj09bil8fDI8PW4mJm48PTQmJjI8PWkmJmk8PTQ/dGhpcy5tb2R1bGVzW2Urbl1bdCtpXT0hMDp0aGlzLm1vZHVsZXNbZStuXVt0K2ldPSExKX0sZ2V0QmVzdE1hc2tQYXR0ZXJuOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPTAsdD0wLG49MDtuPDg7bisrKXt0aGlzLm1ha2VJbXBsKCEwLG4pO3ZhciBpPWYuZ2V0TG9zdFBvaW50KHRoaXMpOygwPT1ufHxlPmkpJiYoZT1pLHQ9bil9cmV0dXJuIHR9LGNyZWF0ZU1vdmllQ2xpcDpmdW5jdGlvbihlLHQsbil7dmFyIGk9ZS5jcmVhdGVFbXB0eU1vdmllQ2xpcCh0LG4pLG89MTt0aGlzLm1ha2UoKTtmb3IodmFyIGE9MDthPHRoaXMubW9kdWxlcy5sZW5ndGg7YSsrKWZvcih2YXIgcj1hKm8scz0wO3M8dGhpcy5tb2R1bGVzW2FdLmxlbmd0aDtzKyspe3ZhciBjPXMqbyxkPXRoaXMubW9kdWxlc1thXVtzXTtkJiYoaS5iZWdpbkZpbGwoMCwxMDApLGkubW92ZVRvKGMsciksaS5saW5lVG8oYytvLHIpLGkubGluZVRvKGMrbyxyK28pLGkubGluZVRvKGMscitvKSxpLmVuZEZpbGwoKSl9cmV0dXJuIGl9LHNldHVwVGltaW5nUGF0dGVybjpmdW5jdGlvbigpe2Zvcih2YXIgZT04O2U8dGhpcy5tb2R1bGVDb3VudC04O2UrKyludWxsPT10aGlzLm1vZHVsZXNbZV1bNl0mJih0aGlzLm1vZHVsZXNbZV1bNl09ZSUyPT0wKTtmb3IodmFyIHQ9ODt0PHRoaXMubW9kdWxlQ291bnQtODt0KyspbnVsbD09dGhpcy5tb2R1bGVzWzZdW3RdJiYodGhpcy5tb2R1bGVzWzZdW3RdPXQlMj09MCl9LHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPWYuZ2V0UGF0dGVyblBvc2l0aW9uKHRoaXMudHlwZU51bWJlciksdD0wO3Q8ZS5sZW5ndGg7dCsrKWZvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW3RdLG89ZVtuXTtpZihudWxsPT10aGlzLm1vZHVsZXNbaV1bb10pZm9yKHZhciBhPS0yO2E8PTI7YSsrKWZvcih2YXIgcj0tMjtyPD0yO3IrKylhPT0tMnx8Mj09YXx8cj09LTJ8fDI9PXJ8fDA9PWEmJjA9PXI/dGhpcy5tb2R1bGVzW2krYV1bbytyXT0hMDp0aGlzLm1vZHVsZXNbaSthXVtvK3JdPSExfX0sc2V0dXBUeXBlTnVtYmVyOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1mLmdldEJDSFR5cGVOdW1iZXIodGhpcy50eXBlTnVtYmVyKSxuPTA7bjwxODtuKyspe3ZhciBpPSFlJiYxPT0odD4+biYxKTt0aGlzLm1vZHVsZXNbTWF0aC5mbG9vcihuLzMpXVtuJTMrdGhpcy5tb2R1bGVDb3VudC04LTNdPWl9Zm9yKHZhciBuPTA7bjwxODtuKyspe3ZhciBpPSFlJiYxPT0odD4+biYxKTt0aGlzLm1vZHVsZXNbbiUzK3RoaXMubW9kdWxlQ291bnQtOC0zXVtNYXRoLmZsb29yKG4vMyldPWl9fSxzZXR1cFR5cGVJbmZvOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXRoaXMuZXJyb3JDb3JyZWN0TGV2ZWw8PDN8dCxpPWYuZ2V0QkNIVHlwZUluZm8obiksbz0wO288MTU7bysrKXt2YXIgYT0hZSYmMT09KGk+Pm8mMSk7bzw2P3RoaXMubW9kdWxlc1tvXVs4XT1hOm88OD90aGlzLm1vZHVsZXNbbysxXVs4XT1hOnRoaXMubW9kdWxlc1t0aGlzLm1vZHVsZUNvdW50LTE1K29dWzhdPWF9Zm9yKHZhciBvPTA7bzwxNTtvKyspe3ZhciBhPSFlJiYxPT0oaT4+byYxKTtvPDg/dGhpcy5tb2R1bGVzWzhdW3RoaXMubW9kdWxlQ291bnQtby0xXT1hOm88OT90aGlzLm1vZHVsZXNbOF1bMTUtby0xKzFdPWE6dGhpcy5tb2R1bGVzWzhdWzE1LW8tMV09YX10aGlzLm1vZHVsZXNbdGhpcy5tb2R1bGVDb3VudC04XVs4XT0hZX0sbWFwRGF0YTpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0tMSxpPXRoaXMubW9kdWxlQ291bnQtMSxvPTcsYT0wLHI9dGhpcy5tb2R1bGVDb3VudC0xO3I+MDtyLT0yKWZvcig2PT1yJiZyLS07Oyl7Zm9yKHZhciBzPTA7czwyO3MrKylpZihudWxsPT10aGlzLm1vZHVsZXNbaV1bci1zXSl7dmFyIGM9ITE7YTxlLmxlbmd0aCYmKGM9MT09KGVbYV0+Pj5vJjEpKTt2YXIgZD1mLmdldE1hc2sodCxpLHItcyk7ZCYmKGM9IWMpLHRoaXMubW9kdWxlc1tpXVtyLXNdPWMsby0tLG89PS0xJiYoYSsrLG89Nyl9aWYoaSs9bixpPDB8fHRoaXMubW9kdWxlQ291bnQ8PWkpe2ktPW4sbj0tbjticmVha319fX0sdC5QQUQwPTIzNix0LlBBRDE9MTcsdC5jcmVhdGVEYXRhPWZ1bmN0aW9uKGUsbixpKXtmb3IodmFyIHI9by5nZXRSU0Jsb2NrcyhlLG4pLHM9bmV3IGEsYz0wO2M8aS5sZW5ndGg7YysrKXt2YXIgZD1pW2NdO3MucHV0KGQubW9kZSw0KSxzLnB1dChkLmdldExlbmd0aCgpLGYuZ2V0TGVuZ3RoSW5CaXRzKGQubW9kZSxlKSksZC53cml0ZShzKX1mb3IodmFyIGw9MCxjPTA7YzxyLmxlbmd0aDtjKyspbCs9cltjXS5kYXRhQ291bnQ7aWYocy5nZXRMZW5ndGhJbkJpdHMoKT44KmwpdGhyb3cgbmV3IEVycm9yKCJjb2RlIGxlbmd0aCBvdmVyZmxvdy4gKCIrcy5nZXRMZW5ndGhJbkJpdHMoKSsiPiIrOCpsKyIpIik7Zm9yKHMuZ2V0TGVuZ3RoSW5CaXRzKCkrNDw9OCpsJiZzLnB1dCgwLDQpO3MuZ2V0TGVuZ3RoSW5CaXRzKCklOCE9MDspcy5wdXRCaXQoITEpO2Zvcig7Oyl7aWYocy5nZXRMZW5ndGhJbkJpdHMoKT49OCpsKWJyZWFrO2lmKHMucHV0KHQuUEFEMCw4KSxzLmdldExlbmd0aEluQml0cygpPj04KmwpYnJlYWs7cy5wdXQodC5QQUQxLDgpfXJldHVybiB0LmNyZWF0ZUJ5dGVzKHMscil9LHQuY3JlYXRlQnl0ZXM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9MCxvPTAsYT0wLHI9bmV3IEFycmF5KHQubGVuZ3RoKSxzPW5ldyBBcnJheSh0Lmxlbmd0aCksYz0wO2M8dC5sZW5ndGg7YysrKXt2YXIgZD10W2NdLmRhdGFDb3VudCxsPXRbY10udG90YWxDb3VudC1kO289TWF0aC5tYXgobyxkKSxhPU1hdGgubWF4KGEsbCkscltjXT1uZXcgQXJyYXkoZCk7Zm9yKHZhciB1PTA7dTxyW2NdLmxlbmd0aDt1KyspcltjXVt1XT0yNTUmZS5idWZmZXJbdStpXTtpKz1kO3ZhciBwPWYuZ2V0RXJyb3JDb3JyZWN0UG9seW5vbWlhbChsKSxnPW5ldyBuKHJbY10scC5nZXRMZW5ndGgoKS0xKSxtPWcubW9kKHApO3NbY109bmV3IEFycmF5KHAuZ2V0TGVuZ3RoKCktMSk7Zm9yKHZhciB1PTA7dTxzW2NdLmxlbmd0aDt1Kyspe3ZhciB2PXUrbS5nZXRMZW5ndGgoKS1zW2NdLmxlbmd0aDtzW2NdW3VdPXY+PTA/bS5nZXQodik6MH19Zm9yKHZhciBoPTAsdT0wO3U8dC5sZW5ndGg7dSsrKWgrPXRbdV0udG90YWxDb3VudDtmb3IodmFyIGI9bmV3IEFycmF5KGgpLF89MCx1PTA7dTxvO3UrKylmb3IodmFyIGM9MDtjPHQubGVuZ3RoO2MrKyl1PHJbY10ubGVuZ3RoJiYoYltfKytdPXJbY11bdV0pO2Zvcih2YXIgdT0wO3U8YTt1KyspZm9yKHZhciBjPTA7Yzx0Lmxlbmd0aDtjKyspdTxzW2NdLmxlbmd0aCYmKGJbXysrXT1zW2NdW3VdKTtyZXR1cm4gYn07Zm9yKHZhciBsPXtNT0RFX05VTUJFUjoxLE1PREVfQUxQSEFfTlVNOjIsTU9ERV84QklUX0JZVEU6NCxNT0RFX0tBTkpJOjh9LHU9e0w6MSxNOjAsUTozLEg6Mn0scD17UEFUVEVSTjAwMDowLFBBVFRFUk4wMDE6MSxQQVRURVJOMDEwOjIsUEFUVEVSTjAxMTozLFBBVFRFUk4xMDA6NCxQQVRURVJOMTAxOjUsUEFUVEVSTjExMDo2LFBBVFRFUk4xMTE6N30sZj17UEFUVEVSTl9QT1NJVElPTl9UQUJMRTpbW10sWzYsMThdLFs2LDIyXSxbNiwyNl0sWzYsMzBdLFs2LDM0XSxbNiwyMiwzOF0sWzYsMjQsNDJdLFs2LDI2LDQ2XSxbNiwyOCw1MF0sWzYsMzAsNTRdLFs2LDMyLDU4XSxbNiwzNCw2Ml0sWzYsMjYsNDYsNjZdLFs2LDI2LDQ4LDcwXSxbNiwyNiw1MCw3NF0sWzYsMzAsNTQsNzhdLFs2LDMwLDU2LDgyXSxbNiwzMCw1OCw4Nl0sWzYsMzQsNjIsOTBdLFs2LDI4LDUwLDcyLDk0XSxbNiwyNiw1MCw3NCw5OF0sWzYsMzAsNTQsNzgsMTAyXSxbNiwyOCw1NCw4MCwxMDZdLFs2LDMyLDU4LDg0LDExMF0sWzYsMzAsNTgsODYsMTE0XSxbNiwzNCw2Miw5MCwxMThdLFs2LDI2LDUwLDc0LDk4LDEyMl0sWzYsMzAsNTQsNzgsMTAyLDEyNl0sWzYsMjYsNTIsNzgsMTA0LDEzMF0sWzYsMzAsNTYsODIsMTA4LDEzNF0sWzYsMzQsNjAsODYsMTEyLDEzOF0sWzYsMzAsNTgsODYsMTE0LDE0Ml0sWzYsMzQsNjIsOTAsMTE4LDE0Nl0sWzYsMzAsNTQsNzgsMTAyLDEyNiwxNTBdLFs2LDI0LDUwLDc2LDEwMiwxMjgsMTU0XSxbNiwyOCw1NCw4MCwxMDYsMTMyLDE1OF0sWzYsMzIsNTgsODQsMTEwLDEzNiwxNjJdLFs2LDI2LDU0LDgyLDExMCwxMzgsMTY2XSxbNiwzMCw1OCw4NiwxMTQsMTQyLDE3MF1dLEcxNToxMzM1LEcxODo3OTczLEcxNV9NQVNLOjIxNTIyLGdldEJDSFR5cGVJbmZvOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lPDwxMDtmLmdldEJDSERpZ2l0KHQpLWYuZ2V0QkNIRGlnaXQoZi5HMTUpPj0wOyl0Xj1mLkcxNTw8Zi5nZXRCQ0hEaWdpdCh0KS1mLmdldEJDSERpZ2l0KGYuRzE1KTtyZXR1cm4oZTw8MTB8dCleZi5HMTVfTUFTS30sZ2V0QkNIVHlwZU51bWJlcjpmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZTw8MTI7Zi5nZXRCQ0hEaWdpdCh0KS1mLmdldEJDSERpZ2l0KGYuRzE4KT49MDspdF49Zi5HMTg8PGYuZ2V0QkNIRGlnaXQodCktZi5nZXRCQ0hEaWdpdChmLkcxOCk7cmV0dXJuIGU8PDEyfHR9LGdldEJDSERpZ2l0OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wOzAhPWU7KXQrKyxlPj4+PTE7cmV0dXJuIHR9LGdldFBhdHRlcm5Qb3NpdGlvbjpmdW5jdGlvbihlKXtyZXR1cm4gZi5QQVRURVJOX1BPU0lUSU9OX1RBQkxFW2UtMV19LGdldE1hc2s6ZnVuY3Rpb24oZSx0LG4pe3N3aXRjaChlKXtjYXNlIHAuUEFUVEVSTjAwMDpyZXR1cm4odCtuKSUyPT0wO2Nhc2UgcC5QQVRURVJOMDAxOnJldHVybiB0JTI9PTA7Y2FzZSBwLlBBVFRFUk4wMTA6cmV0dXJuIG4lMz09MDtjYXNlIHAuUEFUVEVSTjAxMTpyZXR1cm4odCtuKSUzPT0wO2Nhc2UgcC5QQVRURVJOMTAwOnJldHVybihNYXRoLmZsb29yKHQvMikrTWF0aC5mbG9vcihuLzMpKSUyPT0wO2Nhc2UgcC5QQVRURVJOMTAxOnJldHVybiB0Km4lMit0Km4lMz09MDtjYXNlIHAuUEFUVEVSTjExMDpyZXR1cm4odCpuJTIrdCpuJTMpJTI9PTA7Y2FzZSBwLlBBVFRFUk4xMTE6cmV0dXJuKHQqbiUzKyh0K24pJTIpJTI9PTA7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoImJhZCBtYXNrUGF0dGVybjoiK2UpfX0sZ2V0RXJyb3JDb3JyZWN0UG9seW5vbWlhbDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IG4oWzFdLDApLGk9MDtpPGU7aSsrKXQ9dC5tdWx0aXBseShuZXcgbihbMSxnLmdleHAoaSldLDApKTtyZXR1cm4gdH0sZ2V0TGVuZ3RoSW5CaXRzOmZ1bmN0aW9uKGUsdCl7aWYoMTw9dCYmdDwxMClzd2l0Y2goZSl7Y2FzZSBsLk1PREVfTlVNQkVSOnJldHVybiAxMDtjYXNlIGwuTU9ERV9BTFBIQV9OVU06cmV0dXJuIDk7Y2FzZSBsLk1PREVfOEJJVF9CWVRFOnJldHVybiA4O2Nhc2UgbC5NT0RFX0tBTkpJOnJldHVybiA4O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJtb2RlOiIrZSl9ZWxzZSBpZih0PDI3KXN3aXRjaChlKXtjYXNlIGwuTU9ERV9OVU1CRVI6cmV0dXJuIDEyO2Nhc2UgbC5NT0RFX0FMUEhBX05VTTpyZXR1cm4gMTE7Y2FzZSBsLk1PREVfOEJJVF9CWVRFOnJldHVybiAxNjtjYXNlIGwuTU9ERV9LQU5KSTpyZXR1cm4gMTA7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoIm1vZGU6IitlKX1lbHNle2lmKCEodDw0MSkpdGhyb3cgbmV3IEVycm9yKCJ0eXBlOiIrdCk7c3dpdGNoKGUpe2Nhc2UgbC5NT0RFX05VTUJFUjpyZXR1cm4gMTQ7Y2FzZSBsLk1PREVfQUxQSEFfTlVNOnJldHVybiAxMztjYXNlIGwuTU9ERV84QklUX0JZVEU6cmV0dXJuIDE2O2Nhc2UgbC5NT0RFX0tBTkpJOnJldHVybiAxMjtkZWZhdWx0OnRocm93IG5ldyBFcnJvcigibW9kZToiK2UpfX19LGdldExvc3RQb2ludDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5nZXRNb2R1bGVDb3VudCgpLG49MCxpPTA7aTx0O2krKylmb3IodmFyIG89MDtvPHQ7bysrKXtmb3IodmFyIGE9MCxyPWUuaXNEYXJrKGksbykscz0tMTtzPD0xO3MrKylpZighKGkrczwwfHx0PD1pK3MpKWZvcih2YXIgYz0tMTtjPD0xO2MrKylvK2M8MHx8dDw9bytjfHwwPT1zJiYwPT1jfHxyPT1lLmlzRGFyayhpK3MsbytjKSYmYSsrO2E+NSYmKG4rPTMrYS01KX1mb3IodmFyIGk9MDtpPHQtMTtpKyspZm9yKHZhciBvPTA7bzx0LTE7bysrKXt2YXIgZD0wO2UuaXNEYXJrKGksbykmJmQrKyxlLmlzRGFyayhpKzEsbykmJmQrKyxlLmlzRGFyayhpLG8rMSkmJmQrKyxlLmlzRGFyayhpKzEsbysxKSYmZCsrLDAhPWQmJjQhPWR8fChuKz0zKX1mb3IodmFyIGk9MDtpPHQ7aSsrKWZvcih2YXIgbz0wO288dC02O28rKyllLmlzRGFyayhpLG8pJiYhZS5pc0RhcmsoaSxvKzEpJiZlLmlzRGFyayhpLG8rMikmJmUuaXNEYXJrKGksbyszKSYmZS5pc0RhcmsoaSxvKzQpJiYhZS5pc0RhcmsoaSxvKzUpJiZlLmlzRGFyayhpLG8rNikmJihuKz00MCk7Zm9yKHZhciBvPTA7bzx0O28rKylmb3IodmFyIGk9MDtpPHQtNjtpKyspZS5pc0RhcmsoaSxvKSYmIWUuaXNEYXJrKGkrMSxvKSYmZS5pc0RhcmsoaSsyLG8pJiZlLmlzRGFyayhpKzMsbykmJmUuaXNEYXJrKGkrNCxvKSYmIWUuaXNEYXJrKGkrNSxvKSYmZS5pc0RhcmsoaSs2LG8pJiYobis9NDApO2Zvcih2YXIgbD0wLG89MDtvPHQ7bysrKWZvcih2YXIgaT0wO2k8dDtpKyspZS5pc0RhcmsoaSxvKSYmbCsrO3ZhciB1PU1hdGguYWJzKDEwMCpsL3QvdC01MCkvNTtyZXR1cm4gbis9MTAqdX19LGc9e2dsb2c6ZnVuY3Rpb24oZSl7aWYoZTwxKXRocm93IG5ldyBFcnJvcigiZ2xvZygiK2UrIikiKTtyZXR1cm4gZy5MT0dfVEFCTEVbZV19LGdleHA6ZnVuY3Rpb24oZSl7Zm9yKDtlPDA7KWUrPTI1NTtmb3IoO2U+PTI1NjspZS09MjU1O3JldHVybiBnLkVYUF9UQUJMRVtlXX0sRVhQX1RBQkxFOm5ldyBBcnJheSgyNTYpLExPR19UQUJMRTpuZXcgQXJyYXkoMjU2KX0sbT0wO208ODttKyspZy5FWFBfVEFCTEVbbV09MTw8bTtmb3IodmFyIG09ODttPDI1NjttKyspZy5FWFBfVEFCTEVbbV09Zy5FWFBfVEFCTEVbbS00XV5nLkVYUF9UQUJMRVttLTVdXmcuRVhQX1RBQkxFW20tNl1eZy5FWFBfVEFCTEVbbS04XTtmb3IodmFyIG09MDttPDI1NTttKyspZy5MT0dfVEFCTEVbZy5FWFBfVEFCTEVbbV1dPW07bi5wcm90b3R5cGU9e2dldDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5udW1bZV19LGdldExlbmd0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm51bS5sZW5ndGh9LG11bHRpcGx5OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgQXJyYXkodGhpcy5nZXRMZW5ndGgoKStlLmdldExlbmd0aCgpLTEpLGk9MDtpPHRoaXMuZ2V0TGVuZ3RoKCk7aSsrKWZvcih2YXIgbz0wO288ZS5nZXRMZW5ndGgoKTtvKyspdFtpK29dXj1nLmdleHAoZy5nbG9nKHRoaXMuZ2V0KGkpKStnLmdsb2coZS5nZXQobykpKTtyZXR1cm4gbmV3IG4odCwwKX0sbW9kOmZ1bmN0aW9uKGUpe2lmKHRoaXMuZ2V0TGVuZ3RoKCktZS5nZXRMZW5ndGgoKTwwKXJldHVybiB0aGlzO2Zvcih2YXIgdD1nLmdsb2codGhpcy5nZXQoMCkpLWcuZ2xvZyhlLmdldCgwKSksaT1uZXcgQXJyYXkodGhpcy5nZXRMZW5ndGgoKSksbz0wO288dGhpcy5nZXRMZW5ndGgoKTtvKyspaVtvXT10aGlzLmdldChvKTtmb3IodmFyIG89MDtvPGUuZ2V0TGVuZ3RoKCk7bysrKWlbb11ePWcuZ2V4cChnLmdsb2coZS5nZXQobykpK3QpO3JldHVybiBuZXcgbihpLDApLm1vZChlKX19LG8uUlNfQkxPQ0tfVEFCTEU9W1sxLDI2LDE5XSxbMSwyNiwxNl0sWzEsMjYsMTNdLFsxLDI2LDldLFsxLDQ0LDM0XSxbMSw0NCwyOF0sWzEsNDQsMjJdLFsxLDQ0LDE2XSxbMSw3MCw1NV0sWzEsNzAsNDRdLFsyLDM1LDE3XSxbMiwzNSwxM10sWzEsMTAwLDgwXSxbMiw1MCwzMl0sWzIsNTAsMjRdLFs0LDI1LDldLFsxLDEzNCwxMDhdLFsyLDY3LDQzXSxbMiwzMywxNSwyLDM0LDE2XSxbMiwzMywxMSwyLDM0LDEyXSxbMiw4Niw2OF0sWzQsNDMsMjddLFs0LDQzLDE5XSxbNCw0MywxNV0sWzIsOTgsNzhdLFs0LDQ5LDMxXSxbMiwzMiwxNCw0LDMzLDE1XSxbNCwzOSwxMywxLDQwLDE0XSxbMiwxMjEsOTddLFsyLDYwLDM4LDIsNjEsMzldLFs0LDQwLDE4LDIsNDEsMTldLFs0LDQwLDE0LDIsNDEsMTVdLFsyLDE0NiwxMTZdLFszLDU4LDM2LDIsNTksMzddLFs0LDM2LDE2LDQsMzcsMTddLFs0LDM2LDEyLDQsMzcsMTNdLFsyLDg2LDY4LDIsODcsNjldLFs0LDY5LDQzLDEsNzAsNDRdLFs2LDQzLDE5LDIsNDQsMjBdLFs2LDQzLDE1LDIsNDQsMTZdLFs0LDEwMSw4MV0sWzEsODAsNTAsNCw4MSw1MV0sWzQsNTAsMjIsNCw1MSwyM10sWzMsMzYsMTIsOCwzNywxM10sWzIsMTE2LDkyLDIsMTE3LDkzXSxbNiw1OCwzNiwyLDU5LDM3XSxbNCw0NiwyMCw2LDQ3LDIxXSxbNyw0MiwxNCw0LDQzLDE1XSxbNCwxMzMsMTA3XSxbOCw1OSwzNywxLDYwLDM4XSxbOCw0NCwyMCw0LDQ1LDIxXSxbMTIsMzMsMTEsNCwzNCwxMl0sWzMsMTQ1LDExNSwxLDE0NiwxMTZdLFs0LDY0LDQwLDUsNjUsNDFdLFsxMSwzNiwxNiw1LDM3LDE3XSxbMTEsMzYsMTIsNSwzNywxM10sWzUsMTA5LDg3LDEsMTEwLDg4XSxbNSw2NSw0MSw1LDY2LDQyXSxbNSw1NCwyNCw3LDU1LDI1XSxbMTEsMzYsMTJdLFs1LDEyMiw5OCwxLDEyMyw5OV0sWzcsNzMsNDUsMyw3NCw0Nl0sWzE1LDQzLDE5LDIsNDQsMjBdLFszLDQ1LDE1LDEzLDQ2LDE2XSxbMSwxMzUsMTA3LDUsMTM2LDEwOF0sWzEwLDc0LDQ2LDEsNzUsNDddLFsxLDUwLDIyLDE1LDUxLDIzXSxbMiw0MiwxNCwxNyw0MywxNV0sWzUsMTUwLDEyMCwxLDE1MSwxMjFdLFs5LDY5LDQzLDQsNzAsNDRdLFsxNyw1MCwyMiwxLDUxLDIzXSxbMiw0MiwxNCwxOSw0MywxNV0sWzMsMTQxLDExMyw0LDE0MiwxMTRdLFszLDcwLDQ0LDExLDcxLDQ1XSxbMTcsNDcsMjEsNCw0OCwyMl0sWzksMzksMTMsMTYsNDAsMTRdLFszLDEzNSwxMDcsNSwxMzYsMTA4XSxbMyw2Nyw0MSwxMyw2OCw0Ml0sWzE1LDU0LDI0LDUsNTUsMjVdLFsxNSw0MywxNSwxMCw0NCwxNl0sWzQsMTQ0LDExNiw0LDE0NSwxMTddLFsxNyw2OCw0Ml0sWzE3LDUwLDIyLDYsNTEsMjNdLFsxOSw0NiwxNiw2LDQ3LDE3XSxbMiwxMzksMTExLDcsMTQwLDExMl0sWzE3LDc0LDQ2XSxbNyw1NCwyNCwxNiw1NSwyNV0sWzM0LDM3LDEzXSxbNCwxNTEsMTIxLDUsMTUyLDEyMl0sWzQsNzUsNDcsMTQsNzYsNDhdLFsxMSw1NCwyNCwxNCw1NSwyNV0sWzE2LDQ1LDE1LDE0LDQ2LDE2XSxbNiwxNDcsMTE3LDQsMTQ4LDExOF0sWzYsNzMsNDUsMTQsNzQsNDZdLFsxMSw1NCwyNCwxNiw1NSwyNV0sWzMwLDQ2LDE2LDIsNDcsMTddLFs4LDEzMiwxMDYsNCwxMzMsMTA3XSxbOCw3NSw0NywxMyw3Niw0OF0sWzcsNTQsMjQsMjIsNTUsMjVdLFsyMiw0NSwxNSwxMyw0NiwxNl0sWzEwLDE0MiwxMTQsMiwxNDMsMTE1XSxbMTksNzQsNDYsNCw3NSw0N10sWzI4LDUwLDIyLDYsNTEsMjNdLFszMyw0NiwxNiw0LDQ3LDE3XSxbOCwxNTIsMTIyLDQsMTUzLDEyM10sWzIyLDczLDQ1LDMsNzQsNDZdLFs4LDUzLDIzLDI2LDU0LDI0XSxbMTIsNDUsMTUsMjgsNDYsMTZdLFszLDE0NywxMTcsMTAsMTQ4LDExOF0sWzMsNzMsNDUsMjMsNzQsNDZdLFs0LDU0LDI0LDMxLDU1LDI1XSxbMTEsNDUsMTUsMzEsNDYsMTZdLFs3LDE0NiwxMTYsNywxNDcsMTE3XSxbMjEsNzMsNDUsNyw3NCw0Nl0sWzEsNTMsMjMsMzcsNTQsMjRdLFsxOSw0NSwxNSwyNiw0NiwxNl0sWzUsMTQ1LDExNSwxMCwxNDYsMTE2XSxbMTksNzUsNDcsMTAsNzYsNDhdLFsxNSw1NCwyNCwyNSw1NSwyNV0sWzIzLDQ1LDE1LDI1LDQ2LDE2XSxbMTMsMTQ1LDExNSwzLDE0NiwxMTZdLFsyLDc0LDQ2LDI5LDc1LDQ3XSxbNDIsNTQsMjQsMSw1NSwyNV0sWzIzLDQ1LDE1LDI4LDQ2LDE2XSxbMTcsMTQ1LDExNV0sWzEwLDc0LDQ2LDIzLDc1LDQ3XSxbMTAsNTQsMjQsMzUsNTUsMjVdLFsxOSw0NSwxNSwzNSw0NiwxNl0sWzE3LDE0NSwxMTUsMSwxNDYsMTE2XSxbMTQsNzQsNDYsMjEsNzUsNDddLFsyOSw1NCwyNCwxOSw1NSwyNV0sWzExLDQ1LDE1LDQ2LDQ2LDE2XSxbMTMsMTQ1LDExNSw2LDE0NiwxMTZdLFsxNCw3NCw0NiwyMyw3NSw0N10sWzQ0LDU0LDI0LDcsNTUsMjVdLFs1OSw0NiwxNiwxLDQ3LDE3XSxbMTIsMTUxLDEyMSw3LDE1MiwxMjJdLFsxMiw3NSw0NywyNiw3Niw0OF0sWzM5LDU0LDI0LDE0LDU1LDI1XSxbMjIsNDUsMTUsNDEsNDYsMTZdLFs2LDE1MSwxMjEsMTQsMTUyLDEyMl0sWzYsNzUsNDcsMzQsNzYsNDhdLFs0Niw1NCwyNCwxMCw1NSwyNV0sWzIsNDUsMTUsNjQsNDYsMTZdLFsxNywxNTIsMTIyLDQsMTUzLDEyM10sWzI5LDc0LDQ2LDE0LDc1LDQ3XSxbNDksNTQsMjQsMTAsNTUsMjVdLFsyNCw0NSwxNSw0Niw0NiwxNl0sWzQsMTUyLDEyMiwxOCwxNTMsMTIzXSxbMTMsNzQsNDYsMzIsNzUsNDddLFs0OCw1NCwyNCwxNCw1NSwyNV0sWzQyLDQ1LDE1LDMyLDQ2LDE2XSxbMjAsMTQ3LDExNyw0LDE0OCwxMThdLFs0MCw3NSw0Nyw3LDc2LDQ4XSxbNDMsNTQsMjQsMjIsNTUsMjVdLFsxMCw0NSwxNSw2Nyw0NiwxNl0sWzE5LDE0OCwxMTgsNiwxNDksMTE5XSxbMTgsNzUsNDcsMzEsNzYsNDhdLFszNCw1NCwyNCwzNCw1NSwyNV0sWzIwLDQ1LDE1LDYxLDQ2LDE2XV0sby5nZXRSU0Jsb2Nrcz1mdW5jdGlvbihlLHQpe3ZhciBuPW8uZ2V0UnNCbG9ja1RhYmxlKGUsdCk7aWYodm9pZCAwPT1uKXRocm93IG5ldyBFcnJvcigiYmFkIHJzIGJsb2NrIEAgdHlwZU51bWJlcjoiK2UrIi9lcnJvckNvcnJlY3RMZXZlbDoiK3QpO2Zvcih2YXIgaT1uLmxlbmd0aC8zLGE9W10scj0wO3I8aTtyKyspZm9yKHZhciBzPW5bMypyKzBdLGM9blszKnIrMV0sZD1uWzMqcisyXSxsPTA7bDxzO2wrKylhLnB1c2gobmV3IG8oYyxkKSk7cmV0dXJuIGF9LG8uZ2V0UnNCbG9ja1RhYmxlPWZ1bmN0aW9uKGUsdCl7c3dpdGNoKHQpe2Nhc2UgdS5MOnJldHVybiBvLlJTX0JMT0NLX1RBQkxFWzQqKGUtMSkrMF07Y2FzZSB1Lk06cmV0dXJuIG8uUlNfQkxPQ0tfVEFCTEVbNCooZS0xKSsxXTtjYXNlIHUuUTpyZXR1cm4gby5SU19CTE9DS19UQUJMRVs0KihlLTEpKzJdO2Nhc2UgdS5IOnJldHVybiBvLlJTX0JMT0NLX1RBQkxFWzQqKGUtMSkrM107ZGVmYXVsdDpyZXR1cm59fSxhLnByb3RvdHlwZT17Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0PU1hdGguZmxvb3IoZS84KTtyZXR1cm4gMT09KHRoaXMuYnVmZmVyW3RdPj4+Ny1lJTgmMSl9LHB1dDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0wO248dDtuKyspdGhpcy5wdXRCaXQoMT09KGU+Pj50LW4tMSYxKSl9LGdldExlbmd0aEluQml0czpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aH0scHV0Qml0OmZ1bmN0aW9uKGUpe3ZhciB0PU1hdGguZmxvb3IodGhpcy5sZW5ndGgvOCk7dGhpcy5idWZmZXIubGVuZ3RoPD10JiZ0aGlzLmJ1ZmZlci5wdXNoKDApLGUmJih0aGlzLmJ1ZmZlclt0XXw9MTI4Pj4+dGhpcy5sZW5ndGglOCksdGhpcy5sZW5ndGgrK319O3ZhciB2PVtbMTcsMTQsMTEsN10sWzMyLDI2LDIwLDE0XSxbNTMsNDIsMzIsMjRdLFs3OCw2Miw0NiwzNF0sWzEwNiw4NCw2MCw0NF0sWzEzNCwxMDYsNzQsNThdLFsxNTQsMTIyLDg2LDY0XSxbMTkyLDE1MiwxMDgsODRdLFsyMzAsMTgwLDEzMCw5OF0sWzI3MSwyMTMsMTUxLDExOV0sWzMyMSwyNTEsMTc3LDEzN10sWzM2NywyODcsMjAzLDE1NV0sWzQyNSwzMzEsMjQxLDE3N10sWzQ1OCwzNjIsMjU4LDE5NF0sWzUyMCw0MTIsMjkyLDIyMF0sWzU4Niw0NTAsMzIyLDI1MF0sWzY0NCw1MDQsMzY0LDI4MF0sWzcxOCw1NjAsMzk0LDMxMF0sWzc5Miw2MjQsNDQyLDMzOF0sWzg1OCw2NjYsNDgyLDM4Ml0sWzkyOSw3MTEsNTA5LDQwM10sWzEwMDMsNzc5LDU2NSw0MzldLFsxMDkxLDg1Nyw2MTEsNDYxXSxbMTE3MSw5MTEsNjYxLDUxMV0sWzEyNzMsOTk3LDcxNSw1MzVdLFsxMzY3LDEwNTksNzUxLDU5M10sWzE0NjUsMTEyNSw4MDUsNjI1XSxbMTUyOCwxMTkwLDg2OCw2NThdLFsxNjI4LDEyNjQsOTA4LDY5OF0sWzE3MzIsMTM3MCw5ODIsNzQyXSxbMTg0MCwxNDUyLDEwMzAsNzkwXSxbMTk1MiwxNTM4LDExMTIsODQyXSxbMjA2OCwxNjI4LDExNjgsODk4XSxbMjE4OCwxNzIyLDEyMjgsOTU4XSxbMjMwMywxODA5LDEyODMsOTgzXSxbMjQzMSwxOTExLDEzNTEsMTA1MV0sWzI1NjMsMTk4OSwxNDIzLDEwOTNdLFsyNjk5LDIwOTksMTQ5OSwxMTM5XSxbMjgwOSwyMjEzLDE1NzksMTIxOV0sWzI5NTMsMjMzMSwxNjYzLDEyNzNdXSxoPWZ1bmN0aW9uKCl7dmFyIGU9ZnVuY3Rpb24oZSx0KXt0aGlzLl9lbD1lLHRoaXMuX2h0T3B0aW9uPXR9O3JldHVybiBlLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSx0KXt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixlKTtmb3IodmFyIGkgaW4gdCl0Lmhhc093blByb3BlcnR5KGkpJiZuLnNldEF0dHJpYnV0ZShpLHRbaV0pO3JldHVybiBufXZhciBuPXRoaXMuX2h0T3B0aW9uLGk9dGhpcy5fZWwsbz1lLmdldE1vZHVsZUNvdW50KCk7TWF0aC5mbG9vcihuLndpZHRoL28pLE1hdGguZmxvb3Iobi5oZWlnaHQvbyk7dGhpcy5jbGVhcigpO3ZhciBhPXQoInN2ZyIse3ZpZXdCb3g6IjAgMCAiK1N0cmluZyhvKSsiICIrU3RyaW5nKG8pLHdpZHRoOiIxMDAlIixoZWlnaHQ6IjEwMCUiLGZpbGw6bi5jb2xvckxpZ2h0fSk7YS5zZXRBdHRyaWJ1dGVOUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy8iLCJ4bWxuczp4bGluayIsImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiKSxpLmFwcGVuZENoaWxkKGEpLGEuYXBwZW5kQ2hpbGQodCgicmVjdCIse2ZpbGw6bi5jb2xvckxpZ2h0LHdpZHRoOiIxMDAlIixoZWlnaHQ6IjEwMCUifSkpLGEuYXBwZW5kQ2hpbGQodCgicmVjdCIse2ZpbGw6bi5jb2xvckRhcmssd2lkdGg6IjEiLGhlaWdodDoiMSIsaWQ6InRlbXBsYXRlIn0pKTtmb3IodmFyIHI9MDtyPG87cisrKWZvcih2YXIgcz0wO3M8bztzKyspaWYoZS5pc0RhcmsocixzKSl7dmFyIGM9dCgidXNlIix7eDpTdHJpbmcocykseTpTdHJpbmcocil9KTtjLnNldEF0dHJpYnV0ZU5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiwiaHJlZiIsIiN0ZW1wbGF0ZSIpLGEuYXBwZW5kQ2hpbGQoYyl9fSxlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe2Zvcig7dGhpcy5fZWwuaGFzQ2hpbGROb2RlcygpOyl0aGlzLl9lbC5yZW1vdmVDaGlsZCh0aGlzLl9lbC5sYXN0Q2hpbGQpfSxlfSgpLGI9InN2ZyI9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpLF89Yj9oOnIoKT9mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt0aGlzLl9lbEltYWdlLnNyYz10aGlzLl9lbENhbnZhcy50b0RhdGFVUkwoImltYWdlL3BuZyIpLHRoaXMuX2VsSW1hZ2Uuc3R5bGUuZGlzcGxheT0iYmxvY2siLHRoaXMuX2VsQ2FudmFzLnN0eWxlLmRpc3BsYXk9Im5vbmUifWZ1bmN0aW9uIHQoZSx0KXt2YXIgbj10aGlzO2lmKG4uX2ZGYWlsPXQsbi5fZlN1Y2Nlc3M9ZSxudWxsPT09bi5fYlN1cHBvcnREYXRhVVJJKXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKSxvPWZ1bmN0aW9uKCl7bi5fYlN1cHBvcnREYXRhVVJJPSExLG4uX2ZGYWlsJiZuLl9mRmFpbC5jYWxsKG4pfSxhPWZ1bmN0aW9uKCl7bi5fYlN1cHBvcnREYXRhVVJJPSEwLG4uX2ZTdWNjZXNzJiZuLl9mU3VjY2Vzcy5jYWxsKG4pfTtyZXR1cm4gaS5vbmFib3J0PW8saS5vbmVycm9yPW8saS5vbmxvYWQ9YSx2b2lkKGkuc3JjPSJkYXRhOmltYWdlL2dpZjtiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFVQUFBQUZDQVlBQUFDTmJ5YmxBQUFBSEVsRVFWUUkxMlA0Ly84L3czOEdJQVhESUJLRTBESHhnbGpOQkFBTzlUWEwwWTRPSHdBQUFBQkpSVTVFcmtKZ2dnPT0iKX1uLl9iU3VwcG9ydERhdGFVUkk9PT0hMCYmbi5fZlN1Y2Nlc3M/bi5fZlN1Y2Nlc3MuY2FsbChuKTpuLl9iU3VwcG9ydERhdGFVUkk9PT0hMSYmbi5fZkZhaWwmJm4uX2ZGYWlsLmNhbGwobil9aWYodGhpcy5fYW5kcm9pZCYmdGhpcy5fYW5kcm9pZDw9Mi4xKXt2YXIgbj0xL3dpbmRvdy5kZXZpY2VQaXhlbFJhdGlvLGk9Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJELnByb3RvdHlwZS5kcmF3SW1hZ2U7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJELnByb3RvdHlwZS5kcmF3SW1hZ2U9ZnVuY3Rpb24oZSx0LG8sYSxyLHMsYyxkLGwpe2lmKCJub2RlTmFtZSJpbiBlJiYvaW1nL2kudGVzdChlLm5vZGVOYW1lKSlmb3IodmFyIHU9YXJndW1lbnRzLmxlbmd0aC0xO3U+PTE7dS0tKWFyZ3VtZW50c1t1XT1hcmd1bWVudHNbdV0qbjtlbHNlInVuZGVmaW5lZCI9PXR5cGVvZiBkJiYoYXJndW1lbnRzWzFdKj1uLGFyZ3VtZW50c1syXSo9bixhcmd1bWVudHNbM10qPW4sYXJndW1lbnRzWzRdKj1uKTtpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19dmFyIG89ZnVuY3Rpb24oZSx0KXt0aGlzLl9iSXNQYWludGVkPSExLHRoaXMuX2FuZHJvaWQ9cygpLHRoaXMuX2h0T3B0aW9uPXQsdGhpcy5fZWxDYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIiksdGhpcy5fZWxDYW52YXMud2lkdGg9dC53aWR0aCx0aGlzLl9lbENhbnZhcy5oZWlnaHQ9dC5oZWlnaHQsZS5hcHBlbmRDaGlsZCh0aGlzLl9lbENhbnZhcyksdGhpcy5fZWw9ZSx0aGlzLl9vQ29udGV4dD10aGlzLl9lbENhbnZhcy5nZXRDb250ZXh0KCIyZCIpLHRoaXMuX2JJc1BhaW50ZWQ9ITEsdGhpcy5fZWxJbWFnZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKSx0aGlzLl9lbEltYWdlLmFsdD0iU2NhbiBtZSEiLHRoaXMuX2VsSW1hZ2Uuc3R5bGUuZGlzcGxheT0ibm9uZSIsdGhpcy5fZWwuYXBwZW5kQ2hpbGQodGhpcy5fZWxJbWFnZSksdGhpcy5fYlN1cHBvcnREYXRhVVJJPW51bGx9O3JldHVybiBvLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VsSW1hZ2Usbj10aGlzLl9vQ29udGV4dCxpPXRoaXMuX2h0T3B0aW9uLG89ZS5nZXRNb2R1bGVDb3VudCgpLGE9aS53aWR0aC9vLHI9aS5oZWlnaHQvbyxzPU1hdGgucm91bmQoYSksYz1NYXRoLnJvdW5kKHIpO3Quc3R5bGUuZGlzcGxheT0ibm9uZSIsdGhpcy5jbGVhcigpO2Zvcih2YXIgZD0wO2Q8bztkKyspZm9yKHZhciBsPTA7bDxvO2wrKyl7dmFyIHU9ZS5pc0RhcmsoZCxsKSxwPWwqYSxmPWQqcjtuLnN0cm9rZVN0eWxlPXU/aS5jb2xvckRhcms6aS5jb2xvckxpZ2h0LG4ubGluZVdpZHRoPTEsbi5maWxsU3R5bGU9dT9pLmNvbG9yRGFyazppLmNvbG9yTGlnaHQsbi5maWxsUmVjdChwLGYsYSxyKSxuLnN0cm9rZVJlY3QoTWF0aC5mbG9vcihwKSsuNSxNYXRoLmZsb29yKGYpKy41LHMsYyksbi5zdHJva2VSZWN0KE1hdGguY2VpbChwKS0uNSxNYXRoLmNlaWwoZiktLjUscyxjKX10aGlzLl9iSXNQYWludGVkPSEwfSxvLnByb3RvdHlwZS5tYWtlSW1hZ2U9ZnVuY3Rpb24oKXt0aGlzLl9iSXNQYWludGVkJiZ0LmNhbGwodGhpcyxlKX0sby5wcm90b3R5cGUuaXNQYWludGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JJc1BhaW50ZWR9LG8ucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fb0NvbnRleHQuY2xlYXJSZWN0KDAsMCx0aGlzLl9lbENhbnZhcy53aWR0aCx0aGlzLl9lbENhbnZhcy5oZWlnaHQpLHRoaXMuX2JJc1BhaW50ZWQ9ITF9LG8ucHJvdG90eXBlLnJvdW5kPWZ1bmN0aW9uKGUpe3JldHVybiBlP01hdGguZmxvb3IoMWUzKmUpLzFlMzplfSxvfSgpOmZ1bmN0aW9uKCl7dmFyIGU9ZnVuY3Rpb24oZSx0KXt0aGlzLl9lbD1lLHRoaXMuX2h0T3B0aW9uPXR9O3JldHVybiBlLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLl9odE9wdGlvbixuPXRoaXMuX2VsLGk9ZS5nZXRNb2R1bGVDb3VudCgpLG89TWF0aC5mbG9vcih0LndpZHRoL2kpLGE9TWF0aC5mbG9vcih0LmhlaWdodC9pKSxyPVsnPHRhYmxlIHN0eWxlPSJib3JkZXI6MDtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ij4nXSxzPTA7czxpO3MrKyl7ci5wdXNoKCI8dHI+Iik7Zm9yKHZhciBjPTA7YzxpO2MrKylyLnB1c2goJzx0ZCBzdHlsZT0iYm9yZGVyOjA7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO3BhZGRpbmc6MDttYXJnaW46MDt3aWR0aDonK28rInB4O2hlaWdodDoiK2ErInB4O2JhY2tncm91bmQtY29sb3I6IisoZS5pc0RhcmsocyxjKT90LmNvbG9yRGFyazp0LmNvbG9yTGlnaHQpKyc7Ij48L3RkPicpO3IucHVzaCgiPC90cj4iKX1yLnB1c2goIjwvdGFibGU+Iiksbi5pbm5lckhUTUw9ci5qb2luKCIiKTt2YXIgZD1uLmNoaWxkTm9kZXNbMF0sbD0odC53aWR0aC1kLm9mZnNldFdpZHRoKS8yLHU9KHQuaGVpZ2h0LWQub2Zmc2V0SGVpZ2h0KS8yO2w+MCYmdT4wJiYoZC5zdHlsZS5tYXJnaW49dSsicHggIitsKyJweCIpfSxlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuX2VsLmlubmVySFRNTD0iIn0sZX0oKTtyZXR1cm4gaT1mdW5jdGlvbihlLHQpe2lmKHRoaXMuX2h0T3B0aW9uPXt3aWR0aDoyNTYsaGVpZ2h0OjI1Nix0eXBlTnVtYmVyOjQsY29sb3JEYXJrOiIjMDAwMDAwIixjb2xvckxpZ2h0OiIjZmZmZmZmIixjb3JyZWN0TGV2ZWw6dS5IfSwic3RyaW5nIj09dHlwZW9mIHQmJih0PXt0ZXh0OnR9KSx0KWZvcih2YXIgbiBpbiB0KXRoaXMuX2h0T3B0aW9uW25dPXRbbl07InN0cmluZyI9PXR5cGVvZiBlJiYoZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChlKSksdGhpcy5faHRPcHRpb24udXNlU1ZHJiYoXz1oKSx0aGlzLl9hbmRyb2lkPXMoKSx0aGlzLl9lbD1lLHRoaXMuX29RUkNvZGU9bnVsbCx0aGlzLl9vRHJhd2luZz1uZXcgXyh0aGlzLl9lbCx0aGlzLl9odE9wdGlvbiksdGhpcy5faHRPcHRpb24udGV4dCYmdGhpcy5tYWtlQ29kZSh0aGlzLl9odE9wdGlvbi50ZXh0KX0saS5wcm90b3R5cGUubWFrZUNvZGU9ZnVuY3Rpb24oZSl7dGhpcy5fb1FSQ29kZT1uZXcgdChjKGUsdGhpcy5faHRPcHRpb24uY29ycmVjdExldmVsKSx0aGlzLl9odE9wdGlvbi5jb3JyZWN0TGV2ZWwpLHRoaXMuX29RUkNvZGUuYWRkRGF0YShlKSx0aGlzLl9vUVJDb2RlLm1ha2UoKSx0aGlzLl9lbC50aXRsZT1lLHRoaXMuX29EcmF3aW5nLmRyYXcodGhpcy5fb1FSQ29kZSksdGhpcy5tYWtlSW1hZ2UoKX0saS5wcm90b3R5cGUubWFrZUltYWdlPWZ1bmN0aW9uKCl7ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMuX29EcmF3aW5nLm1ha2VJbWFnZSYmKCF0aGlzLl9hbmRyb2lkfHx0aGlzLl9hbmRyb2lkPj0zKSYmdGhpcy5fb0RyYXdpbmcubWFrZUltYWdlKCl9LGkucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fb0RyYXdpbmcuY2xlYXIoKX0saS5Db3JyZWN0TGV2ZWw9dSxpfSl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMzYpLG4oMTk4KSxuKDI1MCksbigyNTMpLG4oMjAwKSwiIikrJyAtLT4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aTEzIGRhdGEtYmluZD0idmFsdWU6IGlzS21zaUNoZWNrZWQoKSA/IDEgOiAwIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXNsayBkYXRhLWJpbmQ9InZhbHVlOiBzZXNzaW9uSWRlbnRpZmllciwgYXR0cjogeyBuYW1lOiBzZXNzaW9uSWRlbnRpZmllck5hbWUgfSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT11YWlkIGRhdGEtYmluZD0idmFsdWU6IHN2ci5zVW5hdXRoU2Vzc2lvbklEIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWxvZ2luIGRhdGEtYmluZD0idmFsdWU6IHVuc2FmZV91c2VybmFtZSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1sb2dpbmZtdCBkYXRhLWJpbmQ9InZhbHVlOiB1bnNhZmVfZGlzcGxheU5hbWUiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9dHlwZSB2YWx1ZT0iJytuKDUpLlBvc3RUeXBlLlJlbW90ZU5HQysnIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPUxvZ2luT3B0aW9ucyBkYXRhLWJpbmQ9InZhbHVlOiBpc0ttc2lDaGVja2VkKCkgPyAnK24oMTYpLkxvZ2luT3B0aW9uLlJlbWVtYmVyUFdEKyIgOiAiK24oMTYpLkxvZ2luT3B0aW9uLk5vdGhpbmdDaGVja2VkKyciLz48IS0tIGtvIGlmOiB0aXRsZSAtLT4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz0icm93IHRleHQtdGl0bGUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiB0aXRsZSI+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjIC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5Ij4gPGRpdiBpZD1jcmVkVmlld0JyYW5kaW5nRGVzYyBjbGFzcz13cmFwLWNvbnRlbnQgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdXRl9TVFJfRGVmYXVsdF9EZXNjXCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZXJyb3IgLS0+IDxkaXYgY2xhc3M9c2VjdGlvbj4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8ZGl2IGlkPWlkRGl2X1JlbW90ZU5HQ19QYWdlRGVzY3JpcHRpb24gZGF0YS1iaW5kPSJ0ZXh0OiBlcnJvciIgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5Ij4gPC9kaXY+PCEtLSBrbyBpZjogaXNQdXNoTm90aWZpY2F0aW9uIC0tPiA8ZGl2IGlkPWlkRGl2X1JlbW90ZU5HQ19QYWdlRGVzY3JpcHRpb24yIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUk5HQ19TVFJfUmVzZW5kTm90aWZpY2F0aW9uX1RleHRcJ10iIGNsYXNzPSJyb3cgdGV4dC1ib2R5IHRleHQtYmxvY2stYm9keSI+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZm5vdDogZXJyb3IgLS0+PCEtLSBrbyBpZjogaXNQdXNoTm90aWZpY2F0aW9uKCkgfHwgaXNMaXN0U2Vzc2lvbnMoKSAtLT48IS0tIGtvIGlmOiBpc1JlcXVlc3RQZW5kaW5nIC0tPiA8ZGl2IGNsYXNzPSJyb3cgcHJvZ3Jlc3MtY29udGFpbmVyIj4gPGRpdiBjbGFzcz1wcm9ncmVzcyByb2xlPXByb2dyZXNzYmFyIHRhYmluZGV4PS0xIGRhdGEtYmluZD0iY29tcG9uZW50OiBcJ21hcmNoaW5nLWFudHMtY29udHJvbFwnLCBoYXNGb2N1czogdHJ1ZSwgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZm5vdDogaXNSZXF1ZXN0UGVuZGluZyAtLT4gPGRpdiBjbGFzcz1zZWN0aW9uPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5Ij4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ3Byb29mLWltYWdlLWNvbnRyb2xcJywgcGFyYW1zOiB7IHR5cGU6IFBST09GLlR5cGUuVE9UUEF1dGhlbnRpY2F0b3JWMiwgc21hbGw6IHRydWUsIGFuaW1hdGU6IHRydWUgfSB9Ij48L2Rpdj4gPGRpdiBpZD1pZERpdl9SZW1vdGVOR0NfUG9sbGluZ0Rlc2NyaXB0aW9uIGNsYXNzPSJ0ZXh0LWJsb2NrLWJvZHkgb3ZlcmZsb3ctaGlkZGVuIiByb2xlPWFsZXJ0IGFyaWEtbGl2ZT1hc3NlcnRpdmUgYXJpYS1hdG9taWM9dHJ1ZSBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9wb2xsaW5nRGVzY3JpcHRpb24iPjwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZGlzcGxheVNpZ24oKSAmJiAhaXNSZXF1ZXN0UGVuZGluZygpIC0tPiA8ZGl2IGNsYXNzPXNlY3Rpb24+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPWlkUmVtb3RlTkdDX0Rpc3BsYXlTaWduIGNsYXNzPWRpc3BsYXlTaWduIGRhdGEtYmluZD0idGV4dDogZGlzcGxheVNpZ24iPjwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogcXJDb2RlR2VuZXJhdGVkIC0tPiA8ZGl2IGRhdGEtYmluZD0idmlzaWJsZTogaXNRckNvZGUiPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxkaXYgaWQ9aWREaXZfUmVtb3RlTkdDX1FSX1BhZ2VEZXNjcmlwdGlvbiBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9wb2xsaW5nRGVzY3JpcHRpb24iIGNsYXNzPSJyb3cgdGV4dC1ib2R5IHRleHQtYmxvY2stYm9keSI+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0icm93IGZvcm0tZ3JvdXAiPiA8c3BhbiBpZD1pZFNwYW5fUmVtb3RlTkdDX1FyQ29kZSBjbGFzcz1hbGlnbi1jZW50ZXIgZGF0YS1iaW5kPSJxckNvZGU6IHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBcJ01TQS1OR0MtVVNJRDpcJyArIHN2ci5zVW5hdXRoU2Vzc2lvbklELFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxOTYsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxOTYsXG4gICAgICAgICAgICAgICAgY29ycmVjdExldmVsOiAnK24oMjQ4KS5Db3JyZWN0TGV2ZWwuSCsnIH0iPjwvc3Bhbj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPiA8ZGl2IGRhdGEtYmluZD0iY3NzOiB7IFwncG9zaXRpb24tYnV0dG9uc1wnOiAhaXNSZXF1ZXN0UGVuZGluZygpICYmIGlzUHJpbWFyeUJ1dHRvblZpc2libGUoKSB9Ij4gPGRpdj48IS0tIGtvIGlmbm90OiBlcnJvciAtLT4gPGRpdiBkYXRhLWJpbmQ9ImlmOiBzdnIuZktNU0lFbmFibGVkICE9PSBmYWxzZSwgdmlzaWJsZTogIWlzUmVxdWVzdFBlbmRpbmcoKSI+IDxkaXYgaWQ9aWRUZF9QV0RfS01TSV9DYiBjbGFzcz0iZm9ybS1ncm91cCBjaGVja2JveCB0ZXh0LWJsb2NrLWJvZHkgbm8tbWFyZ2luLXRvcCIgZGF0YS1iaW5kPSJ2aXNpYmxlOiAhc3ZyLmZMb2NrVXNlcm5hbWUiPiA8bGFiZWwgaWQ9aWRMYmxfUFdEX0tNU0lfQ2I+IDxpbnB1dCBuYW1lPUtNU0kgaWQ9aWRDaGtCeF9QV0RfS01TSTBQd2QgdHlwZT1jaGVja2JveCBkYXRhLWJpbmQ9ImNoZWNrZWQ6IGlzS21zaUNoZWNrZWQsIGFyaWFMYWJlbDogc3RyW1wnQ1RfUFdEX1NUUl9LZWVwTWVTaWduZWRJbkNCX1RleHRcJ10iLz4gPHNwYW4gZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9QV0RfU1RSX0tlZXBNZVNpZ25lZEluQ0JfVGV4dFwnXSI+PC9zcGFuPiA8L2xhYmVsPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPWNvbC1tZC0yND4gPGRpdiBjbGFzcz0idGV4dC0xMyBhY3Rpb24tbGlua3MiPjwhLS0ga28gaWZub3Q6IGlzUmVxdWVzdFBlbmRpbmcgLS0+PCEtLSBrbyBpZm5vdDogdXNlRXZpY3RlZENyZWRlbnRpYWxzIC0tPjwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICJjcmVkLXN3aXRjaC1saW5rLWNvbnRyb2wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWNNZXRob2RzOiBjcmVkU3dpdGNoTGlua01ldGhvZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IGF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBmbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Q3JlZDogeyBjcmVkVHlwZTogJytuKDUpLkNyZWRlbnRpYWxUeXBlLlJlbW90ZU5HQysiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaFZpZXc6IGNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6IGNyZWRTd2l0Y2hMaW5rX29uU2V0UGVuZGluZ1JlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46IGNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuIH0gfSAtLT48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBldmljdGVkQ3JlZHMubGVuZ3RoID4gMCAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8YSBpZD1ldmljdGVkQWNjb3VudCBocmVmPSMgZGF0YS1iaW5kPVwidGV4dDogc3RyWydDVF9QV0RfU1RSX1N3aXRjaFRvQ3JlZFBpY2tlcl9MaW5rX0V2aWN0ZWRBY2N0J10sIGNsaWNrOiBzd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2tcIj48L2E+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHN2ci5mUXJDb2RlRW5hYmxlZCAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPjwhLS0ga28gaWY6IGlzUHVzaE5vdGlmaWNhdGlvbiAtLT4gPGEgaWQ9aWRBX1N3aXRjaFRvUVJDb2RlIGhyZWY9IyBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX1JOR0NfU1RSX1N3aXRjaFRvUXJDb2RlX0xpbmsnXSwgY2xpY2s6IHN3aXRjaFRvUXJDb2RlX29uQ2xpY2tcIj48L2E+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogaXNRckNvZGUgLS0+IDxhIGlkPWlkQV9Td2l0Y2hUb1BvbGxpbmcgaHJlZj0jIGRhdGEtYmluZD1cInRleHQ6IHN0clsnQ1RfUk5HQ19TVFJfU3dpdGNoVG9Qb2xsaW5nX0xpbmsnXSwgY2xpY2s6IHN3aXRjaFRvUG9sbGluZ19vbkNsaWNrXCI+PC9hPjwhLS0gL2tvIC0tPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25EZXNjcmliZWRCeTogW1xuICAgICAgICAgICAgICAgIHRpdGxlID8gJ2xvZ2luSGVhZGVyJyA6ICcnLFxuICAgICAgICAgICAgICAgIHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyA/ICdjcmVkVmlld0JyYW5kaW5nRGVzYycgOiAnJyxcbiAgICAgICAgICAgICAgICBlcnJvciA/ICdpZERpdl9SZW1vdGVOR0NfUGFnZURlc2NyaXB0aW9uJyA6ICcnXS5qb2luKCcgJyksXG4gICAgICAgICAgICBmb2N1c09uUHJpbWFyeUJ1dHRvbjogaXNQcmltYXJ5QnV0dG9uVmlzaWJsZSgpLFxuICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogaXNQcmltYXJ5QnV0dG9uVmlzaWJsZSgpLFxuICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBmYWxzZSB9LFxuICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2sgfSB9XCI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxzcGFuIGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnc2Vzc2lvbi1wb2xsaW5nLWNvbnRyb2wnLFxuICAgIHB1YmxpY01ldGhvZHM6IHNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlLFxuICAgIHBhcmFtczoge1xuICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgIHBvbGxpbmdJbnRlcnZhbDogc3ZyLmlQb2xsaW5nSW50ZXJ2YWwsXG4gICAgICAgIHBvbGxpbmdUaW1lb3V0OiBzdnIuaVBvbGxpbmdUaW1lb3V0LFxuICAgICAgICBzZXNzaW9uSWRlbnRpZmllcjogc2Vzc2lvbklkZW50aWZpZXIucGVlaygpLFxuICAgICAgICBzZXNzaW9uSWRlbnRpZmllclR5cGU6ICdOR0MnLFxuICAgICAgICBwb2xsaW5nVHlwZTogcG9sbGluZ1R5cGUgfSxcbiAgICBldmVudDoge1xuICAgICAgICBsb2FkOiBzZXNzaW9uUG9sbGluZ0ZpZWxkX29uTG9hZCxcbiAgICAgICAgc2Vzc2lvblRpbWVvdXQ6IHNlc3Npb25Qb2xsaW5nRmllbGRfb25TZXNzaW9uVGltZU91dCxcbiAgICAgICAgc2Vzc2lvbkRlbmllZDogc2Vzc2lvblBvbGxpbmdGaWVsZF9vblNlc3Npb25EZW5pZWQsXG4gICAgICAgIHNlc3Npb25BcHByb3ZlZDogc2Vzc2lvblBvbGxpbmdGaWVsZF9vblNlc3Npb25BcHByb3ZlZCB9IH1cIj4gPC9zcGFuPiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZT1hLnBvbGxJbWFnZS5nZXRJbWFnZSgpO2lmKCFlKXJldHVybiExO2EucG9sbEltYWdlLnNob3coKTt2YXIgdD1lLndpZHRoLG49ZS5oZWlnaHQ7aWYoYS5wb2xsSW1hZ2UuaGlkZSgpLG49PT1kLkhlaWdodC5QZW5kaW5nKXtpZih0PT09ZC5XaWR0aC5JbnZhbGlkKXRocm93IG5ldyBoKCJpbnZhbGlkU2Vzc2lvbiIpfWVsc2UgaWYobj09PWQuSGVpZ2h0LkNvbXBsZXRlKXtpZih0PT09ZC5XaWR0aC5BcHByb3ZlZClyZXR1cm4hMDtpZih0PT09ZC5XaWR0aC5EZW5pZWQpdGhyb3cgbmV3IGIoImRlbmllZCIpfXJldHVybiExfWZ1bmN0aW9uIG4oZSl7aWYoIWUpdGhyb3cgbmV3IGgoIm5vUmVzcG9uc2UiKTtzd2l0Y2goZS5BdXRob3JpemF0aW9uU3RhdGUpe2Nhc2UgZi5QZW5kaW5nOnJldHVybiExO2Nhc2UgZi5BcHByb3ZlZDpyZXR1cm4hMDtjYXNlIGYuRGVjbGluZWQ6dGhyb3cgbmV3IGIoImRlbmllZCIpO2Nhc2UgZi5JbnZhbGlkOmRlZmF1bHQ6dGhyb3cgbmV3IGgoImludmFsaWRTZXNzaW9uIil9fWZ1bmN0aW9uIGkoKXtpZihhLnVzZUpzb25Qb2xsaW5nKXt2YXIgZT1uZXcgcChmdW5jdGlvbihlLHQpe3ZhciBuPXtEZXZpY2VDb2RlOnd9LGk9Zy5hcHBlbmRPclJlcGxhY2UoRCwiY29kZSIsdyksbz1uZXcgcih7Y2hlY2tBcGlDYW5hcnk6SSxub3RpZnlPbkNsaWVudEFib3J0OiEwfSk7by5Kc29uKGksbixlLHQscy5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpfSk7cmV0dXJuIGUudGhlbihuLGZ1bmN0aW9uKGUpe3ZhciB0PWUuZXJyb3J8fHtpc0ZhdGFsOiEwLGNvZGU6ImdldFNlc3Npb25TdGF0ZUVycm9yIn07aWYoIXQuaXNGYXRhbCl0aHJvdyBuZXcgaCh0LmNvZGUpO3Rocm93IG5ldyBiKHQuY29kZSl9KX12YXIgaT1uZXcgcChmdW5jdGlvbihlLHQpe3ZhciBuPXYuZ2V0Q3VycmVudFRpbWUoKSxpPWcuYXBwZW5kT3JSZXBsYWNlKEQsInNsayIsdyk7aT1nLmFwcGVuZE9yUmVwbGFjZShpLCJkdCIsbiksaT1nLmFwcGVuZE9yUmVwbGFjZShpLCJ1YWlkIixQKSx5JiYoaT1nLmFwcGVuZE9yUmVwbGFjZShpLCJzbGt0Iix5KSksYS5wb2xsSW1hZ2UucmVzb2x2ZVByb21pc2U9ZSxhLnBvbGxJbWFnZS5yZWplY3RQcm9taXNlPXQsYS5wb2xsSW1hZ2UuaWQoImlSZXRyaWV2ZWRTdGF0ZSIrbiksYS5wb2xsSW1hZ2Uuc3JjKGkpLGEucG9sbEltYWdlLnJlc2V0KCl9KTtyZXR1cm4gaS50aGVuKHQpfXZhciBhPXRoaXMsZD17V2lkdGg6e0FwcHJvdmVkOjEsSW52YWxpZDoyLERlbmllZDoyfSxIZWlnaHQ6e1BlbmRpbmc6MSxDb21wbGV0ZToyfX0sZj17UGVuZGluZzowLERlY2xpbmVkOjEsQXBwcm92ZWQ6MixJbnZhbGlkOjN9LF89bnVsbCxTPWUuc2VydmVyRGF0YSx3PWUuc2Vzc2lvbklkZW50aWZpZXIsVD1lLnBvbGxpbmdJbnRlcnZhbD8xZTMqZS5wb2xsaW5nSW50ZXJ2YWw6NWUzLEM9ZS5wb2xsaW5nVGltZW91dD8xZTMqZS5wb2xsaW5nVGltZW91dDo2ZTQseT1lLnNlc3Npb25JZGVudGlmaWVyVHlwZSxrPWUucG9sbGluZ1R5cGUseD1TLmlNYXhQb2xsRXJyb3JzfHw1LEQ9Uy51cmxTZXNzaW9uU3RhdGUsUD1TLnNVbmF1dGhTZXNzaW9uSUQsST1TLmZDaGVja0FwaUNhbmFyeSE9PSExO2Eub25TZXNzaW9uVGltZW91dD1jLmNyZWF0ZSgpLGEub25TZXNzaW9uRGVuaWVkPWMuY3JlYXRlKCksYS5vblNlc3Npb25BcHByb3ZlZD1jLmNyZWF0ZSgpLGEudXNlSnNvblBvbGxpbmc9az09PW0uSnNvbixhLnBvbGxJbWFnZT17cmVzb2x2ZVByb21pc2U6bnVsbCxyZWplY3RQcm9taXNlOm51bGwsaWQ6by5vYnNlcnZhYmxlKCksc3JjOm8ub2JzZXJ2YWJsZSgpLHdpZHRoOm8ub2JzZXJ2YWJsZSgpLGhlaWdodDpvLm9ic2VydmFibGUoKSx2aXNpYmxlOm8ub2JzZXJ2YWJsZSghMSksdmlzaWJpbGl0eTpvLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBhLnBvbGxJbWFnZS52aXNpYmxlKCk/ImhpZGRlbiI6IiJ9KSxzaG93OmZ1bmN0aW9uKCl7YS5wb2xsSW1hZ2UudmlzaWJsZSghMCl9LGhpZGU6ZnVuY3Rpb24oKXthLnBvbGxJbWFnZS52aXNpYmxlKCExKX0sZ2V0SW1hZ2U6by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXtyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYS5wb2xsSW1hZ2UuaWQoKSl9KSxyZXNldDpmdW5jdGlvbigpe2EucG9sbEltYWdlLndpZHRoKG51bGwpLGEucG9sbEltYWdlLmhlaWdodChudWxsKX19LGEuZGlzcG9zZT1mdW5jdGlvbigpe2Euc3RvcFBvbGxpbmcoKX0sYS5zdGFydFBvbGxpbmc9ZnVuY3Rpb24oZSl7ZSYmKHc9ZSksYS5zdG9wUG9sbGluZygpLGwudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbihfLnBvbGxBc3luYygpLnRoZW4oYS5vblNlc3Npb25BcHByb3ZlZCxmdW5jdGlvbihlKXtlIGluc3RhbmNlb2YgYiYmImRlbmllZCI9PT1lLmVycm9yQ29kZT9hLm9uU2Vzc2lvbkRlbmllZCgpOmEub25TZXNzaW9uVGltZW91dCgpfSkpfSxhLnN0b3BQb2xsaW5nPWZ1bmN0aW9uKCl7Xy5zdG9wUG9sbGluZygpLGEudXNlSnNvblBvbGxpbmd8fGEucG9sbEltYWdlLmhpZGUoKX0sYS5ldnRfUG9sbGluZ0ltYWdlX29ubG9hZD1mdW5jdGlvbigpe2EucG9sbEltYWdlLnJlc29sdmVQcm9taXNlKCl9LGEuZXZ0X1BvbGxpbmdJbWFnZV9vbmVycm9yPWZ1bmN0aW9uKCl7YS5wb2xsSW1hZ2UucmVqZWN0UHJvbWlzZSgpfSxmdW5jdGlvbigpe189bmV3IHUoe2FwaVJlcXVlc3RDYWxsQmFjazppLHBvbGxpbmdJbnRlcnZhbE1pbGxpc2Vjb25kczpULG1heFBvbGxFcnJvcnM6eCxwb2xsaW5nVGltZW91dE1pbGxpc2Vjb25kczpDfSl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDE2Nykscz1uKDUpLGM9bigxMyksZD1uKDYpLGw9bigxMiksdT1uKDI1MSkscD1uKDExKSxmPXdpbmRvdyxnPWEuUXVlcnlTdHJpbmcsbT1zLlNlc3Npb25Qb2xsaW5nVHlwZSx2PWQuRGF0ZVRpbWUsaD11LlJldHJ5YWJsZUVycm9yLGI9dS5Ob25SZXRyeWFibGVFcnJvcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoInNlc3Npb24tcG9sbGluZy1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyNTIpLHN5bmNocm9ub3VzOiFmLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZi5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gbmV3IGEoZnVuY3Rpb24oZSx0KXt2YXIgYT1NYXRoLmZsb29yKHMvMTApLHY9ITE7Zj1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3ZhciBhPXIuZ2V0Q3VycmVudFRpbWUoKTshdiYmYT49bSYmKHY9ITAsbT1hK3AscCo9YyxvKCkudGhlbihmdW5jdGlvbih0KXt0JiYobi5zdG9wUG9sbGluZygpLGUoITApKSx2PSExfSxmdW5jdGlvbihlKXt2YXIgbz1lIGluc3RhbmNlb2YgaS5SZXRyeWFibGVFcnJvcjsoIW98fCsrdT49ZCkmJih1Pj1kJiYoZT1uZXcgaS5Ob25SZXRyeWFibGVFcnJvcigibWF4UmV0cnlhYmxlRXJyb3JzIikpLG4uc3RvcFBvbGxpbmcoKSx0KGUpKSx2PSExfSkpfSxhKSxnPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuLnN0b3BQb2xsaW5nKCksdChuZXcgaS5Ob25SZXRyeWFibGVFcnJvcigidGltZW91dCIpKX0sbCl9KX12YXIgbj10aGlzLG89ZS5hcGlSZXF1ZXN0Q2FsbEJhY2sscz1lLnBvbGxpbmdJbnRlcnZhbE1pbGxpc2Vjb25kc3x8MWUzLGM9ZS5wb2xsaW5nQmFja29mZkludGVydmFsfHwxLGQ9ZS5tYXhQb2xsRXJyb3JzfHw1LGw9ZS5wb2xsaW5nVGltZW91dE1pbGxpc2Vjb25kc3x8NmU0LHU9MCxwPTAsZj1udWxsLGc9bnVsbCxtPW51bGw7bi5wb2xsQXN5bmM9ZnVuY3Rpb24oKXtyZXR1cm4gdT0wLHA9cyxtPXIuZ2V0Q3VycmVudFRpbWUoKStwLHQoKX0sbi5zdG9wUG9sbGluZz1mdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwoZiksY2xlYXJUaW1lb3V0KGcpLGY9bnVsbCxnPW51bGx9fXZhciBvPW4oNiksYT1uKDExKSxyPW8uRGF0ZVRpbWU7aS5SZXRyeWFibGVFcnJvcj1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7bi5uYW1lPSJSZXRyeWFibGVFcnJvciIsbi5lcnJvckNvZGU9ZSxuLmVycm9yRGF0YT10LG4ubWVzc2FnZT0iUmV0cnlhYmxlIHBvbGxpbmcgZXJyb3I6ICIrZSxuLnN0YWNrPShuZXcgRXJyb3IpLnN0YWNrfSxpLlJldHJ5YWJsZUVycm9yLnByb3RvdHlwZT1uZXcgRXJyb3IsaS5Ob25SZXRyeWFibGVFcnJvcj1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7bi5uYW1lPSJOb25SZXRyeWFibGVFcnJvciIsbi5lcnJvckNvZGU9ZSxuLmVycm9yRGF0YT10LG4ubWVzc2FnZT0iTm9uLXJldHJ5YWJsZSBwb2xsaW5nIGVycm9yOiAiK2Usbi5zdGFjaz0obmV3IEVycm9yKS5zdGFja30saS5Ob25SZXRyeWFibGVFcnJvci5wcm90b3R5cGU9bmV3IEVycm9yLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0nPCEtLSBrbyBpZm5vdDogdXNlSnNvblBvbGxpbmcgLS0+IDxpbWcgZGF0YS1iaW5kPSJcbiAgICBhdHRyOlxuICAgIHtcbiAgICAgICAgaWQ6IHBvbGxJbWFnZS5pZCxcbiAgICAgICAgc3JjOiBwb2xsSW1hZ2Uuc3JjLFxuICAgICAgICB3aWR0aDogcG9sbEltYWdlLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHBvbGxJbWFnZS5oZWlnaHRcbiAgICB9LFxuICAgIHZpc2libGU6IHBvbGxJbWFnZS52aXNpYmxlLFxuICAgIHN0eWxlOiB7IHZpc2liaWxpdHk6IHBvbGxJbWFnZS52aXNpYmlsaXR5IH0sXG4gICAgZXZlbnQ6XG4gICAge1xuICAgICAgICBsb2FkOiBldnRfUG9sbGluZ0ltYWdlX29ubG9hZCxcbiAgICAgICAgZXJyb3I6IGV2dF9Qb2xsaW5nSW1hZ2Vfb25lcnJvclxuICAgIH0iLz4gPCEtLSAva28gLS0+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxuPWUudHlwZSxpPWUuc21hbGwsbz1lLmFuaW1hdGU7dC50eXBlPW4sdC5zbWFsbD1pLHQuYW5pbWF0ZT1vfXZhciBvPW4oMSksYT1uKDkpLHI9d2luZG93O28uY29tcG9uZW50cy5yZWdpc3RlcigicHJvb2YtaW1hZ2UtY29udHJvbCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjU0KSxzeW5jaHJvbm91czohci5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKHIuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyl9KX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksIiIpKyIgLS0+PCEtLSBrbyBpZjogdHlwZSA9PT0gUFJPT0YuVHlwZS5FbWFpbCAtLT48IS0tIGtvIGNvbXBvbmVudDogJ2FjY2Vzc2libGUtaW1hZ2UtY29udHJvbCcgLS0+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNTUpKyIgc3Znc3JjPSIrbigyNTYpKyIgZGF0YS1iaW5kPVwiaW1nU3JjLCBjc3M6IHsgJ3NtYWxsJzogc21hbGwgfVwiLz4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDI1NykrIiBzdmdzcmM9IituKDI1OCkrIiBkYXRhLWJpbmQ9XCJpbWdTcmMsIGNzczogeyAnc21hbGwnOiBzbWFsbCB9XCIvPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHR5cGUgPT09IFBST09GLlR5cGUuU01TIHx8IHR5cGUgPT09IFBST09GLlR5cGUuVHdvV2F5U01TIHx8IHR5cGUgPT09IFBST09GLlR5cGUuVHdvV2F5U01TQWx0ZXJuYXRlTW9iaWxlIC0tPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDI1OSkrIiBzdmdzcmM9IituKDI2MCkrIiBkYXRhLWJpbmQ9XCJpbWdTcmMsIGNzczogeyAnc21hbGwnOiBzbWFsbCwgJ2FuaW1hdGUtcHVsc2UnOiBhbmltYXRlIH1cIi8+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNjEpKyIgc3Znc3JjPSIrbigyNjIpKyIgZGF0YS1iaW5kPVwiaW1nU3JjLCBjc3M6IHsgJ3NtYWxsJzogc21hbGwsICdhbmltYXRlLXB1bHNlJzogYW5pbWF0ZSB9XCIvPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHR5cGUgPT09IFBST09GLlR5cGUuVm9pY2UgfHwgdHlwZSA9PT0gUFJPT0YuVHlwZS5Ud29XYXlWb2ljZSB8fCB0eXBlID09PSBQUk9PRi5UeXBlLlR3b1dheVZvaWNlQWx0ZXJuYXRlTW9iaWxlIHx8IHR5cGUgPT09IFBST09GLlR5cGUuVHdvV2F5Vm9pY2VPZmZpY2UgLS0+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMjYzKSsiIHN2Z3NyYz0iK24oMjY0KSsiIGRhdGEtYmluZD1cImltZ1NyYywgY3NzOiB7ICdzbWFsbCc6IHNtYWxsLCAnYW5pbWF0ZS1wdWxzZSc6IGFuaW1hdGUgfVwiLz4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDI2NSkrIiBzdmdzcmM9IituKDI2NikrIiBkYXRhLWJpbmQ9XCJpbWdTcmMsIGNzczogeyAnc21hbGwnOiBzbWFsbCwgJ2FuaW1hdGUtcHVsc2UnOiBhbmltYXRlIH1cIi8+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogdHlwZSA9PT0gUFJPT0YuVHlwZS5UT1RQQXV0aGVudGljYXRvclYyIC0tPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDI2NykrIiBzdmdzcmM9IituKDI2OCkrIiBkYXRhLWJpbmQ9XCJpbWdTcmMsIGNzczogeyAnc21hbGwnOiBzbWFsbCwgJ2FuaW1hdGUtcHVsc2UnOiBhbmltYXRlIH1cIi8+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNjkpKyIgc3Znc3JjPSIrbigyNzApKyIgZGF0YS1iaW5kPVwiaW1nU3JjLCBjc3M6IHsgJ3NtYWxsJzogc21hbGwsICdhbmltYXRlLXB1bHNlJzogYW5pbWF0ZSB9XCIvPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHR5cGUgPT09IFBST09GLlR5cGUuVE9UUEF1dGhlbnRpY2F0b3IgLS0+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMjcxKSsiIHN2Z3NyYz0iK24oMjcyKSsiIGRhdGEtYmluZD1cImltZ1NyYywgY3NzOiB7ICdzbWFsbCc6IHNtYWxsIH1cIi8+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNzMpKyIgc3Znc3JjPSIrbigyNzQpKyIgZGF0YS1iaW5kPVwiaW1nU3JjLCBjc3M6IHsgJ3NtYWxsJzogc21hbGwgfVwiLz48IS0tIC9rbyAtLT4gPCEtLSAva28gLS0+IjsKfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9lbWFpbF93aGl0ZV83MWRjNjI3YzU0YThlYWE1OWNlMWUyOWYwMjEzZWQwNC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9lbWFpbF93aGl0ZV9kOWFlYTcyNTI0YzljNDA3NWQ4NDc4NWI2NWRiMTRjMy5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9lbWFpbF85ZTc2NmY1NGI2ODdjYTliYTBhNjM0OTU2OGQzOGQ4Mi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9lbWFpbF81OTc1OWI4MGUyNGE4OWM4Y2QwMjliMTQ3MDBlNjQ2ZC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9zbXNfd2hpdGVfMzAyZGM5ZGVjYmRmYWU4ZWFlM2M2YTI1YjE3MzMyYzQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl92ZXJpZnlfc21zX3doaXRlX2FiNmQ1ODNkMDUzNTU5MTIyYjAwZmM1YTdlZGVkZjBlLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfdmVyaWZ5X3Ntc19iMTVkZGE4ODllOTgwM2U5ZDZiZWZkNjAwMDBmYWRmOC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9zbXNfMjdhNmQxOGI1NmY0NjgxODQyMGU2MGE3NzNjMzZkNGUuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl92ZXJpZnlfY2FsbF93aGl0ZV85M2Y0YmY5ZmJjNGM2NzRkMGFhZWFjNTEyYTJhZjE1OC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9jYWxsX3doaXRlX2VhZTlkMmQ3MmNjYTk1ODc0Y2U4ZDJkMTVjZWM1YWJkLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfdmVyaWZ5X2NhbGxfM2ZiOWM3ZTg3YzA0ZmY4ZjU2ZGQ2MWVmOGI3NDhjMDIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl92ZXJpZnlfY2FsbF9mZTg3NDk2Y2M3YTQ0NDEyZjc4OTNhNzIwOTljMTIwYS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9hdXRoZW50aWNhdG9yX3doaXRlXzkwOGE2NjEyNDc3MGFjZmNjYTAxMWMxOTc2MjYyODQ5LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfdmVyaWZ5X2F1dGhlbnRpY2F0b3Jfd2hpdGVfNDI4NzMzMWFmYjM0MWU5YzUxNmJhNDBhMWUyMjI4YzEuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl92ZXJpZnlfYXV0aGVudGljYXRvcl85NDJhYzcxZjc3Y2IwNDAwNGIwYWIyNTk1MGUxNzBiNS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9hdXRoZW50aWNhdG9yX2YwN2FmYjI3YWQ1MTBkYzc4NWE5NGU4MDJlM2Q3ZjczLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfdmVyaWZ5X2NvZGVfd2hpdGVfODY5ZTM3ZTM4NmI2MWJkMWVjMjY0M2JmZWQ2YjAxZTQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl92ZXJpZnlfY29kZV93aGl0ZV85MmY0MTExZGZhZGY0MWExMDYwZTkwOGYxMGNmMmViZi5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX3ZlcmlmeV9jb2RlX2VhMDE0YjIyNGViMWMwNGFjMmY3Y2I4NWM0M2NjMDM0LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfdmVyaWZ5X2NvZGVfZjdhYjY5N2U2NWI4M2NlOTg3MGE0NzM2MDg1ZGVlZWMuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe3JldHVybiB5KCk/bigpOm51bGx9ZnVuY3Rpb24gbigpe3ZhciBlPWsoKTtyZXR1cm4gZSYmIVMuaXNFbWFpbEFkZHJlc3MoZSkmJlMuaXNQaG9uZU51bWJlcihlKSYmZS5tYXRjaChhLlJlZ2V4LlBob25lTnVtYmVyVmFsaWRhdGlvbik/bnVsbDpMLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZFBob25lRm9ybWF0dGluZ31mdW5jdGlvbiBpKCl7dmFyIGU9di5jb3VudHJ5KCksdD12Lm51bWJlclRleHRib3gudmFsdWUoKTtyZXR1cm4gZSYmdCYmKHQ9Uy50cmltKHQpLHQ9IisiKygiKyI9PT10LmNoYXJBdCgwKT8iIjplLnByZWZpeCkrdC5yZXBsYWNlKC9cRCsvZywiIikpLHR9ZnVuY3Rpb24gcihlKXt2Lm9uUmVkaXJlY3QoZS5yZWRpcmVjdFVybCxlLnJlZGlyZWN0UG9zdFBhcmFtcyxlLmlzSWRwUmVkaXJlY3QpfWZ1bmN0aW9uIGYoZSl7di5pc1JlcXVlc3RQZW5kaW5nKGUpLHYub25TZXRQZW5kaW5nUmVxdWVzdChlKX12YXIgdj10aGlzLEM9bnVsbCx5PW8ub2JzZXJ2YWJsZSghMSksaz1vLnB1cmVDb21wdXRlZChpKSx4PW51bGwsRD17fSxQPWUuc2VydmVyRGF0YSxJPWUuaXNJbml0aWFsVmlldyxFPWUudXNlcm5hbWUsUj1lLmxvY2F0aW9uLEE9ZS5waG9uZURpc2FtYmlnRXJyb3IsQj1lLmZsb3dUb2tlbixMPVAuc3RyLEY9UC5zU01TQ3RyeVBob25lRGF0YSxOPVJ8fFAuc1ByZWZTTVNDb3VudHJ5LE89UC5mQ2hlY2tQcm9vZkZvckFsaWFzZXMsVT1QLmZVc2VJbmxpbmVQaG9uZU51bWJlcixNPVAuZklzUGhvbmVOdW1iZXJTaWdudXBEaXNhbGxvd2VkLFY9by5vYnNlcnZhYmxlKEIpLmV4dGVuZCh7Zmxvd1Rva2VuVXBkYXRlOlB9KTt2Lm9uU3dpdGNoVmlldz1sLmNyZWF0ZSgpLHYub25SZWRpcmVjdD1sLmNyZWF0ZSgpLHYub25TZXRQZW5kaW5nUmVxdWVzdD1sLmNyZWF0ZSgpLHYuY291bnRyeT1vLm9ic2VydmFibGUoKSx2Lm51bWJlclRleHRib3g9bmV3IGcodS5lcnJvckNvbXB1dGVkKHQpLEUpLHYuaXNSZXF1ZXN0UGVuZGluZz1vLm9ic2VydmFibGUoITEpLHYuaXNEcm9wRG93bkZvY3VzZWQ9by5vYnNlcnZhYmxlKCExKSx2LmlzSW5pdGlhbFZpZXc9SSx2LnVzZUlubGluZVBob25lTnVtYmVyPSExLHYuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oZSl7ZS5mbG93VG9rZW49VigpLGUudXNlcm5hbWU9aygpLGUuZGlzcGxheU5hbWU9di5udW1iZXJUZXh0Ym94LnZhbHVlKCksZS5wYXNzd29yZEJyb3dzZXJQcmVmaWxsPW51bGwsZS5waG9uZURpc2FtYmlnRXJyb3I9bnVsbCxvLnV0aWxzLmV4dGVuZChlLEQpfSx2LmdldFN0YXRlPWZ1bmN0aW9uKCl7dmFyIGU9e3Vuc2FmZV9udW1iZXI6di5udW1iZXJUZXh0Ym94LnZhbHVlKCksY291bnRyeTp2LmNvdW50cnkoKSxnY3RSZXF1ZXN0SGVscGVyU3RhdGU6eC5nZXRTdGF0ZSgpfTtyZXR1cm4gZX0sdi5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oZSl7ZSYmKHgucmVzdG9yZVN0YXRlKGUuZ2N0UmVxdWVzdEhlbHBlclN0YXRlKSx2LmNvdW50cnkocC5IZWxwZXJzLmdldERlZmF1bHRDb3VudHJ5KHYuY291bnRyaWVzLGUuY291bnRyeS5pc298fE4pKSx2Lm51bWJlclRleHRib3gudmFsdWUoZS51bnNhZmVfbnVtYmVyKSl9LHYuc2V0RGVmYXVsdEZvY3VzPWZ1bmN0aW9uKCl7di5udW1iZXJUZXh0Ym94LmZvY3VzZWQoITApfSx2LmdldENvdW50cnlOYW1lPWZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWUrKGUucHJlZml4PyIgXHUyMDBmKFx1MjAwZSsiK2UucHJlZml4KyIpIjoiIil9LHYucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7aWYoeSghMCksdi5udW1iZXJUZXh0Ym94LmVycm9yLmlzQmxvY2tpbmcoKSlyZXR1cm4gdm9pZCB2LnNldERlZmF1bHRGb2N1cygpO3ZhciBlPWsoKSx0PWU9PT1DJiZBO2lmKCF0fHxBIT09aC5QUF9FX0lOVkFMSURfUEhPTkVOVU1CRVImJkEhPT1oLlBQX0VfTElCUEhPTkVOVU1CRVJJTlRFUk9QX05VTUJFUlBBUlNFX0VYQ0VQVElPTil7aWYodCYmQT09PWguUFBfRV9EQl9NRU1CRVJET0VTTk9URVhJU1QmJiFPKXt2YXIgbj17SWZFeGlzdHNSZXN1bHQ6Yi5Ob3RFeGlzdH07TSYmKG4uSXNTaWdudXBEaXNhbGxvd2VkPSEwKSx4LmNhY2hlUmVzcG9uc2UoZSxuKX19ZWxzZSB4LmNhY2hlUmVzcG9uc2UoZSx7RXJyb3JIUjpBfSk7ZighMCksYy50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKHguc2VuZEFzeW5jKGUsVigpKS50aGVuKGZ1bmN0aW9uKGUpe3N3aXRjaChmKCExKSxlLmZsb3dUb2tlbiYmVihlLmZsb3dUb2tlbiksZS5hY3Rpb24pe2Nhc2Ugdy5TaG93RXJyb3I6di5udW1iZXJUZXh0Ym94LmVycm9yLnNldEVycm9yKGUuZXJyb3IsZS5pc0Jsb2NraW5nRXJyb3IpLHYuc2V0RGVmYXVsdEZvY3VzKCk7YnJlYWs7Y2FzZSB3LlN3aXRjaFZpZXc6RD1vLnV0aWxzLmV4dGVuZChlLnNoYXJlZERhdGEsZS52aWV3UGFyYW1zfHx7fSksdi5vblN3aXRjaFZpZXcoZS52aWV3SWQpO2JyZWFrO2Nhc2Ugdy5SZWRpcmVjdDpyKGUpfX0pKX0sdi5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Yub25Td2l0Y2hWaWV3KF8uUHJldmlvdXMpfSx2LnNpZ251cF9vbkNsaWNrPWZ1bmN0aW9uKCl7cih4LmdldFNpZ251cFJlZGlyZWN0R2N0UmVzdWx0KGsoKSkpfSx2Lm90aGVySWRwTG9naW5fb25DbGljaz1mdW5jdGlvbigpe3IoeC5nZXRPdGhlcklkcFJlZGlyZWN0R2N0UmVzdWx0KGsoKSkpfSx2LnByaXZhY3lfb25DbGljaz1mdW5jdGlvbigpe3Yub25Td2l0Y2hWaWV3KF8uVmlld0FncmVlbWVudCl9LHYudG91X29uQ2xpY2s9ZnVuY3Rpb24oKXt2Lm9uU3dpdGNoVmlldyhfLlRlcm1zT2ZVc2UpfSx2LnNraXBfb25DbGljaz1mdW5jdGlvbigpe20mJm0uaGFuZGxlT25Ta2lwJiYobS5oYW5kbGVPblNraXAoUCksZighMCkpfSxmdW5jdGlvbigpe3g9bmV3IHMoUCxULkNoZWNrQ3VycmVudElkcE9ubHl8VC5Jc1Bob25lTnVtYmVyRnVsbHlRdWFsaWZpZWQpLHYudXNlSW5saW5lUGhvbmVOdW1iZXI9VSYmIWQuSGVscGVyLmlzSUVPbGRlclRoYW4oNyksdi5jb3VudHJpZXM9cC5IZWxwZXJzLnBhcnNlQ291bnRyeUxpc3QoRiwhMCksdi5jb3VudHJ5KHAuSGVscGVycy5nZXREZWZhdWx0Q291bnRyeSh2LmNvdW50cmllcyxOKSksQz1rKCksbSYmKG0uaGFuZGxlQmFja0J1dHRvbiYmbS5oYW5kbGVCYWNrQnV0dG9uKHYuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2suYmluZCh2KSksbS5zaG93S2V5Ym9hcmQmJm0uc2hvd0tleWJvYXJkKCEwKSl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDYpLHM9bigxNzMpLGM9bigxMiksZD1uKDkpLGw9bigxMyksdT1uKDIyNikscD1uKDI3NiksZj1uKDE5MyksZz1uKDE5NCksbT1udWxsLHY9d2luZG93LGg9YS5FcnJvcixiPWEuSWZFeGlzdHNSZXN1bHQsXz1hLlBhZ2luYXRlZFN0YXRlLFM9ci5TdHJpbmcsdz1zLkdjdFJlc3VsdEFjdGlvbixUPXMuR2N0UmVxdWVzdEhlbHBlckZsYWdzO2YuYXBwbHlFeHRlbmRlcnMobyksby5jb21wb25lbnRzLnJlZ2lzdGVyKCJsb2dpbi1waG9uZS1kaXNhbWJpZ3VhdGlvbi12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyNzcpLHN5bmNocm9ub3VzOiF2LlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGQuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4odi5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDYpLG89IlVTIixhPSJKUCIscj1pLlN0cmluZyxzPWkuT2JqZWN0LGM9aS5BcnJheSxkPXQuQ291bnRyeT1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxvPSJeKFtcXChcXClcXC0gXFwqXFwuIy9cXFtcXF1dKjBbXFwoXFwpXFwtIFxcKlxcLiMvXFxbXFxdXSopezF9KFtcXChcXClcXC0gXFwqXFwuIy9cXFtcXF1dKlsxLTldW1xcKFxcKVxcLSBcXCpcXC4jL1xcW1xcXV0qKXsxfShbXFwoXFwpXFwtIFxcKlxcLiMvXFxbXFxdXSpcXGRbXFwoXFwpXFwtIFxcKlxcLiMvXFxbXFxdXSopezIsMTh9JCIscj0iXihbXFwoXFwpXFwtIFxcKlxcLiMvXFxbXFxdXSpbMS05XVtcXChcXClcXC0gXFwqXFwuIy9cXFtcXF1dKil7MX0oW1xcKFxcKVxcLSBcXCpcXC4jL1xcW1xcXV0qXFxkW1xcKFxcKVxcLSBcXCpcXC4jL1xcW1xcXV0qKXszLDE5fSQiLHM9Il5bQS1aYS16MC05Xy4tXStAKFtBLVphLXowLTlfLV0rXFwuKStbQS1aYS16MC05XSskIjtpLmlzbz1lLGkubmFtZT10LGkucHJlZml4PW4saS5waG9uZT1udWxsLGkudXNlcm5hbWU9bnVsbCxpLnN0cmluZ3M9W10saS5Db250ZW50PW51bGwsaS52YWxpZGF0ZT1mdW5jdGlvbihlKXtpZihlKXtpZihlLm1hdGNoKG8pKXJldHVybiEwO2lmKGUubWF0Y2gocikpcmV0dXJuITA7aWYoaS5pc289PT1hJiZlLm1hdGNoKHMpKXJldHVybiEwfXJldHVybiExfX07dC5IZWxwZXJzPXtwYXJzZUNvdW50cnlMaXN0OmZ1bmN0aW9uKGUsdCl7dmFyIG49W107cmV0dXJuIHMuZm9yRWFjaChyLmRvdWJsZVNwbGl0KGUsIiEhISIsIn4iLCEwKSxmdW5jdGlvbihlLGkpe24ucHVzaChuZXcgZChlLGlbMF0sdHx8ZSE9PWE/aVsxXToiIikpfSksbn0sZ2V0RGVmYXVsdENvdW50cnk6ZnVuY3Rpb24oZSx0KXt0PSh0fHwiIikudG9VcHBlckNhc2UoKTt2YXIgbj1udWxsLGk9Yy5maXJzdChlLGZ1bmN0aW9uKGUpe3JldHVybiBlLmlzby50b1VwcGVyQ2FzZSgpPT09dHx8KGUuaXNvPT09byYmKG49ZSksITEpfSk7cmV0dXJuIGl8fG59fX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5NiksbigyMDcpLG4oMTk4KSwiIikrIiAtLT4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz1cInJvdyB0ZXh0LXRpdGxlXCIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX1NUUl9QaG9uZURpc2FtYmlndWF0aW9uX1RpdGxlJ11cIj48L2Rpdj4gPGRpdiBjbGFzcz1cInJvdyB0ZXh0LWJvZHlcIj4gPGxhYmVsIGlkPWxvZ2luRGVzY3JpcHRpb24gZm9yPXBob25lQ291bnRyeSBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX1NUUl9Db3VudHJ5Q29kZUVycm9yJ11cIj48L2xhYmVsPiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlPjwhLS0ga28gaWY6IG51bWJlclRleHRib3guZXJyb3IgLS0+IDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1lcnJvciBjb2wtbWQtMjRcIiBpZD11c2VybmFtZUVycm9yIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogbnVtYmVyVGV4dGJveC5lcnJvcixcbiAgICAgICAgICAgIGNoaWxkQmluZGluZ3M6IHtcbiAgICAgICAgICAgICAgICAnaWRBX1BXRF9TaWduVXAnOiB7IGhyZWY6IHN2ci51cmxTaWduVXAsIGNsaWNrOiBzaWdudXBfb25DbGljayB9LFxuICAgICAgICAgICAgICAgICdvdGhlcklkcExvZ2luJzogeyBocmVmOiBzdnIudXJsR29Ub0FBREVycm9yLCBjbGljazogb3RoZXJJZHBMb2dpbl9vbkNsaWNrIH0gfVwiPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgZGF0YS1iaW5kPVwiY3NzOiB7ICdmb3JtLWdyb3VwIGNvbC14cy0yNCc6IHVzZUlubGluZVBob25lTnVtYmVyIH1cIj48IS0tIGtvIGlmOiB1c2VJbmxpbmVQaG9uZU51bWJlciAtLT4gPGRpdiBjbGFzcz1cInBob25lQ291bnRyeUJveCBjb2wteHMtNVwiPiA8bGFiZWwgZm9yPXBob25lQ291bnRyeSBhcmlhLWhpZGRlbj10cnVlIGNsYXNzPXBob25lQ291bnRyeUNvZGUgZGF0YS1iaW5kPVwidGV4dDogJ1x1MjAwZSsnICsgY291bnRyeSgpLnByZWZpeCwgY3NzOiB7ICdoYXNGb2N1cyc6IGlzRHJvcERvd25Gb2N1c2VkLCAnaGFzLWVycm9yJzogbnVtYmVyVGV4dGJveC5lcnJvciB9XCI+PC9sYWJlbD48IS0tIGtvIGNvbXBvbmVudDogJ2FjY2Vzc2libGUtaW1hZ2UtY29udHJvbCcgLS0+IDxpbWcgY2xhc3M9ZG93bkFycm93IHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMjc4KSsiIHN2Z3NyYz0iK24oMjc5KSsiIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyBjbGFzcz1kb3duQXJyb3cgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyODApKyIgc3Znc3JjPSIrbigyODEpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPiA8c2VsZWN0IGlkPXBob25lQ291bnRyeSBjbGFzcz1cImZvcm0tY29udHJvbCBwaG9uZUNvdW50cnlcIiBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogY291bnRyaWVzLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zVGV4dDogZ2V0Q291bnRyeU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjb3VudHJ5LFxuICAgICAgICAgICAgICAgICAgICBoYXNGb2N1czogaXNEcm9wRG93bkZvY3VzZWQsXG4gICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogc3RyWydDVF9TVFJfUGhvbmVDb3VudHJ5Q29kZV9BcmlhTGFiZWwnXVwiPiA8L3NlbGVjdD4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZm5vdDogdXNlSW5saW5lUGhvbmVOdW1iZXIgLS0+IDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGNvbC1tZC0yNFwiPiA8c2VsZWN0IGlkPXBob25lQ291bnRyeSBjbGFzcz1mb3JtLWNvbnRyb2wgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IGNvdW50cmllcyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uc1RleHQ6IGdldENvdW50cnlOYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY291bnRyeSxcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXM6IGlzRHJvcERvd25Gb2N1c2VkLFxuICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0clsnQ1RfU1RSX1Bob25lQ291bnRyeUNvZGVfQXJpYUxhYmVsJ11cIj4gPC9zZWxlY3Q+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGRhdGEtYmluZD1cImNzczogeyAnZm9ybS1ncm91cCBjb2wteHMtMjQnOiAhdXNlSW5saW5lUGhvbmVOdW1iZXIsICdwaG9uZU51bWJlciBjb2wteHMtMTknOiB1c2VJbmxpbmVQaG9uZU51bWJlciB9XCI+IDxkaXYgY2xhc3M9cGxhY2Vob2xkZXJDb250YWluZXIgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdwbGFjZWhvbGRlci10ZXh0Ym94LWZpZWxkJyxcbiAgICAgICAgICAgICAgICBwdWJsaWNNZXRob2RzOiBudW1iZXJUZXh0Ym94LnBsYWNlaG9sZGVyVGV4dGJveE1ldGhvZHMsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgaGludFRleHQ6IHN0clsnQ1RfT1RDX1NUUl9TTVNUZXh0Ym94X0xhYmVsMiddIH0sXG4gICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRm9jdXM6IG51bWJlclRleHRib3gudGV4dGJveF9vblVwZGF0ZUZvY3VzIH0gfVwiPiA8aW5wdXQgdHlwZT10ZWwgbmFtZT1sb2dpbmZtdCBpZD1pMDExNiBtYXhsZW5ndGg9MTEzIGxhbmc9ZW4gY2xhc3M9XCJmb3JtLWNvbnRyb2wgbHRyX292ZXJyaWRlXCIgYXJpYS1yZXF1aXJlZD10cnVlIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgICAgICAgICBjc3M6IHsgJ2hhcy1lcnJvcic6IG51bWJlclRleHRib3guZXJyb3IgfSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dElucHV0OiBudW1iZXJUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0clsnQ1RfT1RDX1NUUl9TTVNUZXh0Ym94X0FyaWFMYWJlbCddLFxuICAgICAgICAgICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6ICdsb2dpbkhlYWRlciBsb2dpbkRlc2NyaXB0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXNFeDogbnVtYmVyVGV4dGJveC5mb2N1c2VkLFxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJHBsYWNlaG9sZGVyVGV4dFwiLz4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9XCJyb3cgcG9zaXRpb24tYnV0dG9uc1wiPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgIHJlbW92ZUJvdHRvbU1hcmdpbjogdHJ1ZSxcbiAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvbkVuYWJsZWQ6ICFpc1JlcXVlc3RQZW5kaW5nKCksXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zICYmICghaXNJbml0aWFsVmlldyB8fCAhIXN2ci5mQWxsb3dDYW5jZWwpIH0sXG4gICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayxcbiAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayB9IH1cIj4gPC9kaXY+IDwvZGl2PiJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kcm9wZG93bl9jYXJldF93aGl0ZV80MGEyODhhMzE1ZTQyZDU5YWY5Yzc5MThlNzFiZTRmMy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvZHJvcGRvd25fY2FyZXRfd2hpdGVfNzk4OWQyMTQ0ZGY4YTc5NTdjZDQ0OTRjNTFlOWYxYjYuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2Ryb3Bkb3duX2NhcmV0X2U5ZGRlZTc0MjE3YmEzYmY1Mzc4ZGNmZjQwMjhmNGEwLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9kcm9wZG93bl9jYXJldF8yOTc0OTk4YzZiMzIyMGI2NWFhMTM3ZjRiMDhmNTdmOC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KCl7dmFyIGU9Zi50cmltKHYpLHQ9ci5RdWVyeVN0cmluZy5hcHBlbmRPclJlcGxhY2UoaywidXNlcm5hbWUiLGVuY29kZVVSSUNvbXBvbmVudChlKSksbj14P2cuY2xvbmUoeCk6bnVsbDtuJiYobi51c2VybmFtZT1lKSxpLm9uUmVkaXJlY3QodCxuLCEwKX1mdW5jdGlvbiBuKCl7aWYoaClvPSEwLGE9aCxzPWIsaS5vblN3aXRjaFZpZXcodS5JZHBSZWRpcmVjdCk7ZWxzZSBpZihDKWw9Zi5leHRyYWN0RG9tYWluKGkuZGlzcGxheU5hbWUpLGkub25Td2l0Y2hWaWV3KFA/dS5GZXRjaFNlc3Npb25zUHJvZ3Jlc3M6dS5EZXNrdG9wU3NvUHJvZ3Jlc3MpO2Vsc2Ugc3dpdGNoKF8pe2Nhc2UgcC5GaWRvOmkub25Td2l0Y2hWaWV3KHUuRmlkbyk7YnJlYWs7Y2FzZSBwLk9uZVRpbWVDb2RlOmNhc2UgcC5QdWJsaWNJZGVudGlmaWVyQ29kZTppLm9uU3dpdGNoVmlldyh1Lk9uZVRpbWVDb2RlKTticmVhaztjYXNlIHAuUmVtb3RlTkdDOmkub25Td2l0Y2hWaWV3KHUuUmVtb3RlTkdDKTticmVhaztjYXNlIHAuUGFzc3dvcmQ6ZGVmYXVsdDppLm9uU3dpdGNoVmlldyh1LlBhc3N3b3JkKX19dmFyIGk9dGhpcyxvPSExLGE9bnVsbCxzPW51bGwsbD0iIixtPWUuc2VydmVyRGF0YSx2PWUuZGlzcGxheU5hbWUsaD1lLmlkcFJlZGlyZWN0VXJsLGI9ZS5pZHBSZWRpcmVjdFBvc3RQYXJhbXMsXz1lLnByZWZlcnJlZENyZWRlbnRpYWwsUz1lLmhhc0luaXRpYWxFcnJvcix3PWUuaXNJbml0aWFsVmlldyxUPWUuc2Vzc2lvbnMsQz1lLmRlc2t0b3BTc29FbmFibGVkLHk9bS5zdHIsaz1tLnVybEdvVG9BQURFcnJvcix4PW0ub1VybE90aGVySWRwUG9zdFBhcmFtcyxEPW0uZlN3aXRjaERpc2FtYmlnLFA9bS5mVXNlRmV0Y2hTZXNzaW9uc0ZvckRzc287aS5vblN3aXRjaFZpZXc9Yy5jcmVhdGUoKSxpLm9uUmVkaXJlY3Q9Yy5jcmVhdGUoKSxpLmRpc3BsYXlOYW1lPXYsaS5wYWdlRGVzY3JpcHRpb249bnVsbCxpLmlzSW5pdGlhbFZpZXc9dyxpLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKGUpe28mJihlLmlkcFJlZGlyZWN0VXJsPWEsZS5pZHBSZWRpcmVjdFBvc3RQYXJhbXM9cyksZS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlPWx9LGkuZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0saS5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oKXt9LGkuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtpLm9uU3dpdGNoVmlldyh1LlByZXZpb3VzKX0saS5za2lwX29uQ2xpY2s9ZnVuY3Rpb24oKXtkJiZkLmhhbmRsZU9uU2tpcCYmZC5oYW5kbGVPblNraXAobSl9LGkucHJpdmFjeV9vbkNsaWNrPWZ1bmN0aW9uKCl7aS5vblN3aXRjaFZpZXcodS5WaWV3QWdyZWVtZW50KX0saS5hYWRUaWxlX29uQ2xpY2s9ZnVuY3Rpb24oKXsoRD9uOnQpKCl9LGkubXNhVGlsZV9vbkNsaWNrPWZ1bmN0aW9uKCl7KEQ/dDpuKSgpfSxpLnNlbGVjdEFjY291bnRfb25DbGljaz1mdW5jdGlvbigpe2kub25Td2l0Y2hWaWV3KFQubGVuZ3RoP3UuVGlsZXM6dS5Vc2VybmFtZSl9LGZ1bmN0aW9uKCl7aS5wYWdlRGVzY3JpcHRpb249Uz95LkNUX0hSRF9TVFJfU3BsaXR0ZXJfRXJyb3JfSGVhZGluZ3x8eS5DVF9IUkRfU1RSX1NwbGl0dGVyX0hlYWRpbmc6eS5DVF9IUkRfU1RSX1NwbGl0dGVyX0hlYWRpbmd9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9big2KSxjPW4oMTMpLGQ9bnVsbCxsPXdpbmRvdyx1PWEuUGFnaW5hdGVkU3RhdGUscD1hLkNyZWRlbnRpYWxUeXBlLGY9cy5TdHJpbmcsZz1zLk9iamVjdDtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWlkcC1kaXNhbWJpZ3VhdGlvbi12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyODMpLHN5bmNocm9ub3VzOiFsLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4obC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTgpLCIiKSsnIC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5IHRleHQtYmxvY2stYm9keSI+IDxkaXYgaWQ9bG9naW5EZXNjcmlwdGlvbiBkYXRhLWJpbmQ9InRleHQ6IHBhZ2VEZXNjcmlwdGlvbiI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXAgcm9sZT1saXN0Ym94PiA8ZGl2IGNsYXNzPSJyb3cgdGlsZSI+IDxkaXYgaWQ9YWFkVGlsZSBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iaGFzRm9jdXM6IHRydWUsIGNsaWNrOiBhYWRUaWxlX29uQ2xpY2ssIHByZXNzRW50ZXI6IGFhZFRpbGVfb25DbGljayI+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDI0MikrIiBzdmdzcmM9IituKDI0MykrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50Ij4gPGRpdiBpZD1hYWRUaWxlVGl0bGUgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1NwbGl0dGVyX0FhZFRpbGVfVGl0bGVcJ10iPjwvZGl2PiA8ZGl2IGlkPWFhZFRpdGxlSGludD48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1NwbGl0dGVyX0FhZFRpbGVfSGludFwnXSI+PC9zbWFsbD48L2Rpdj4gPGRpdj48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBkaXNwbGF5TmFtZSI+PC9zbWFsbD48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBpZD1tc2FUaWxlIGNsYXNzPXRhYmxlIHRhYmluZGV4PTAgcm9sZT1vcHRpb24gZGF0YS1iaW5kPSJjbGljazogbXNhVGlsZV9vbkNsaWNrLCBwcmVzc0VudGVyOiBtc2FUaWxlX29uQ2xpY2siPiA8ZGl2IGNsYXNzPXRhYmxlLXJvdz4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0aWxlLWltZyI+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPScrbigyNDQpKyIgc3Znc3JjPSIrbigyNDUpKycgZGF0YS1iaW5kPWltZ1NyYyAvPiA8L2Rpdj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudCI+IDxkaXYgaWQ9bXNhVGlsZVRpdGxlIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfSFJEX1NUUl9TcGxpdHRlcl9Nc2FUaWxlX1RpdGxlXCddIj48L2Rpdj4gPGRpdiBpZD1tc2FUaWxlSGludD48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1NwbGl0dGVyX01zYVRpbGVfSGludFwnXSI+PC9zbWFsbD48L2Rpdj4gPGRpdj48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBkaXNwbGF5TmFtZSI+PC9zbWFsbD48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXBvc2l0aW9uLWJ1dHRvbnM+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPWNvbC1tZC0yND4gPGRpdiBjbGFzcz0idGV4dC0xMyBhY3Rpb24tbGlua3MiPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXAgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogaHRtbFtcJ0NUX0hSRF9TVFJfU3BsaXR0ZXJfUmVuYW1lXCddLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZEJpbmRpbmdzOiB7IFwnaURpc2FtYmlnUmVuYW1lTGlua1wnOiB7IGhyZWY6IHN2ci51cmxEaXNhbWJpZ1JlbmFtZSB9IH0iPiA8L2Rpdj48IS0tIGtvIGlmOiBzdnIuZlNob3dTd2l0Y2hVc2VyICYmIGlzSW5pdGlhbFZpZXcgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9aTE2NjggaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfRkVEX1NUUl9DaGFuZ2VVc2VyTGlua19UZXh0XCddLCBjbGljazogc2VsZWN0QWNjb3VudF9vbkNsaWNrIj48L2E+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zICYmICghaXNJbml0aWFsVmlldyB8fCAhIXN2ci5mQWxsb3dDYW5jZWwpIH0sXG4gICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLmlkcFJlZGlyZWN0VXJsLG89ZS5pZHBSZWRpcmVjdFBvc3RQYXJhbXMsYT1lLmlkcFJlZGlyZWN0UHJvdmlkZXIscj1uLnN0cixkPW4udXJsTGlua2VkSW5GZWQscD1uLnVybEdpdEh1YkZlZCxmPW4udXJsR29vZ2xlRmVkLGc9bnVsbDt0LnRpdGxlPW51bGwsdC5vblN3aXRjaFZpZXc9cy5jcmVhdGUoKSx0Lm9uUmVkaXJlY3Q9cy5jcmVhdGUoKSx0LnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKCl7fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LmNhbmNlbFJlZGlyZWN0X29uQ2xpY2s9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZyksdC5vblN3aXRjaFZpZXcobC5QcmV2aW91cyl9LGZ1bmN0aW9uKCl7dmFyIGU9aSxuPW8scz1yLkNUX0hSRF9TVFJfUmVkaXJlY3RfVGl0bGU7c3dpdGNoKGEpe2Nhc2UgdS5MaW5rZWRJbjplPWV8fGQsbj1udWxsLHM9ci5DVF9IUkRfU1RSX1JlZGlyZWN0X1RpdGxlX0xpbmtlZEluO2JyZWFrO2Nhc2UgdS5HaXRIdWI6ZT1lfHxwLG49bnVsbCxzPXIuQ1RfSFJEX1NUUl9SZWRpcmVjdF9UaXRsZV9HaXRIdWI7YnJlYWs7Y2FzZSB1Lkdvb2dsZTplPWV8fGYsbj1udWxsLHM9ci5DVF9IUkRfU1RSX1JlZGlyZWN0X1RpdGxlX0dvb2dsZX10LnRpdGxlPXMsZz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YyYmYy5zZXRCYWNrTmF2aWdhdGlvbkNoZWNrcG9pbnRCZWZvcmVSZWRpcmVjdCYmYy5zZXRCYWNrTmF2aWdhdGlvbkNoZWNrcG9pbnRCZWZvcmVSZWRpcmVjdCgpLHQub25SZWRpcmVjdChlLG4sITAsITApfSwyZTMpfSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big5KSxzPW4oMTMpLGM9bnVsbCxkPXdpbmRvdyxsPWEuUGFnaW5hdGVkU3RhdGUsdT1hLkJpbmRQcm92aWRlcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWlkcC1yZWRpcmVjdC12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyODUpLHN5bmNocm9ub3VzOiFkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMzYpLCIiKSsnIC0tPiA8ZGl2IGlkPWxvZ2luSGVhZGVyIGNsYXNzPSJyb3cgdGV4dC10aXRsZSIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9InRleHQ6IHRpdGxlIj48L2Rpdj4gPGRpdiBjbGFzcz0icm93IHByb2dyZXNzLWNvbnRhaW5lciI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj48L2Rpdj4gPC9kaXY+IDxhIGlkPWFhZFJlZGlyZWN0Q2FuY2VsIGhyZWY9IyBkYXRhLWJpbmQ9IlxuICAgIHRleHQ6IHN0cltcJ0NUX0hSRF9TVFJfUmVkaXJlY3RfQ2FuY2VsXCddLFxuICAgIGFyaWFEZXNjcmliZWRCeTogXCdsb2dpbkhlYWRlclwnLFxuICAgIGNsaWNrOiBjYW5jZWxSZWRpcmVjdF9vbkNsaWNrLFxuICAgIGhhc0ZvY3VzOiB0cnVlIj48L2E+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxuPWUuc2VydmVyRGF0YSxpPWUuaWRwUmVkaXJlY3RVcmwsYT1lLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxyPWUuaWRwUmVkaXJlY3RQcm92aWRlcixkPWUuaXNJbml0aWFsVmlldyxmPWUuYXZhaWxhYmxlQ3JlZHN8fFtdLGc9ZS5ldmljdGVkQ3JlZHN8fFtdLG09ZS5mbG93VG9rZW4sdj1lLnVzZXJuYW1lLGg9ZS51c2VFdmljdGVkQ3JlZGVudGlhbHMsYj1lLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyxfPW4uc3RyLFM9bi51cmxMaW5rZWRJbkZlZCx3PW4udXJsR2l0SHViRmVkLFQ9bi51cmxHb29nbGVGZWQsQz1uLmZTaG93QnV0dG9ucyx5PW4uZkFsbG93Q2FuY2VsLGs9bnVsbCx4PW51bGwsRD1udWxsLFA9ITE7dC50aXRsZT1udWxsLHQuZGVzY3JpcHRpb249bnVsbCx0LmN1cnJlbnRDcmVkPW51bGwsdC5hdmFpbGFibGVDcmVkcz1mLHQuZXZpY3RlZENyZWRzPWcsdC5mbG93VG9rZW49bSx0LnVzZXJuYW1lPXYsdC5pc0luaXRpYWxWaWV3PWQsdC5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M9Yix0LnVzZUV2aWN0ZWRDcmVkZW50aWFscz1vLm9ic2VydmFibGUoaCksdC5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksdC5vblN3aXRjaFZpZXc9cy5jcmVhdGUoKSx0Lm9uUmVkaXJlY3Q9cy5jcmVhdGUoKSx0Lm9uU2V0QmFja0J1dHRvblN0YXRlPXMuY3JlYXRlKCksdC5vblNldFBlbmRpbmdSZXF1ZXN0PXMuY3JlYXRlKCksdC5vblVwZGF0ZUZsb3dUb2tlbj1zLmNyZWF0ZSgpLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oZSl7ZS5yZW1vdGVOZ2NQYXJhbXMucmVxdWVzdFNlbnQ9ITEsZS51c2VFdmljdGVkQ3JlZGVudGlhbHM9UHx8dC51c2VFdmljdGVkQ3JlZGVudGlhbHMoKSxlLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYz0hMSxEJiYoZS5vdGNDcmVkZW50aWFsPUQpfSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7dmFyIGU9e3VzZUV2aWN0ZWRDcmVkZW50aWFsczp0LnVzZUV2aWN0ZWRDcmVkZW50aWFscygpfTtyZXR1cm4gZX0sdC5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oZSl7ZSYmdC51c2VFdmljdGVkQ3JlZGVudGlhbHMoZS51c2VFdmljdGVkQ3JlZGVudGlhbHMpfSx0LmNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldz1mdW5jdGlvbihlLG4saSl7aSYmKEQ9aSksdC5vblN3aXRjaFZpZXcoZSxuKX0sdC5jcmVkU3dpdGNoTGlua19vblNldFBlbmRpbmdSZXF1ZXN0PWZ1bmN0aW9uKGUpe3Qub25TZXRQZW5kaW5nUmVxdWVzdChlKSx0LmlzUmVxdWVzdFBlbmRpbmcoZSl9LHQuY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW49ZnVuY3Rpb24oZSl7ZSYmKG09ZSx0Lm9uVXBkYXRlRmxvd1Rva2VuKGUpKX0sdC5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtjJiZjLnNldEJhY2tOYXZpZ2F0aW9uQ2hlY2twb2ludEJlZm9yZVJlZGlyZWN0JiZjLnNldEJhY2tOYXZpZ2F0aW9uQ2hlY2twb2ludEJlZm9yZVJlZGlyZWN0KCksdC5vblJlZGlyZWN0KGsseCwhMCwhMSl9LHQuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uU3dpdGNoVmlldyhwLlByZXZpb3VzKX0sdC5zd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2s9ZnVuY3Rpb24oKXtQPSEwLHQub25Td2l0Y2hWaWV3KHAuQ3JlZGVudGlhbFBpY2tlcil9LHQucHJpdmFjeV9vbkNsaWNrPWZ1bmN0aW9uKCl7dC5vblN3aXRjaFZpZXcocC5WaWV3QWdyZWVtZW50KX0sdC50b3Vfb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KHAuVGVybXNPZlVzZSl9LGZ1bmN0aW9uKCl7dmFyIGU9Xy5DVF9IUkRfU1RSX1JlZGlyZWN0X1RpdGxlLG49bnVsbCxvPXUuRmVkZXJhdGlvbjtzd2l0Y2goaz1pLHg9YSxyKXtjYXNlIGwuTGlua2VkSW46az1rfHxTLHg9bnVsbCxlPV8uQ1RfSFJEX1NUUl9SZWRpcmVjdF9UaXRsZV9Nb3JlT3B0aW9uc19MaW5rZWRJbixuPV8uQ1RfSFJEX1NUUl9SZWRpcmVjdF9EZXNjX0xpbmtlZEluLG89dS5MaW5rZWRJbjticmVhaztjYXNlIGwuR2l0SHViOms9a3x8dyx4PW51bGwsZT1fLkNUX0hSRF9TVFJfUmVkaXJlY3RfVGl0bGVfTW9yZU9wdGlvbnNfR2l0SHViLG49Xy5DVF9IUkRfU1RSX1JlZGlyZWN0X0Rlc2NfR2l0SHViLG89dS5HaXRIdWI7YnJlYWs7Y2FzZSBsLkdvb2dsZTprPWt8fFQseD1udWxsLGU9Xy5DVF9IUkRfU1RSX1JlZGlyZWN0X1RpdGxlX01vcmVPcHRpb25zX0dvb2dsZSxuPV8uQ1RfSFJEX1NUUl9SZWRpcmVjdF9EZXNjX0dvb2dsZSxvPXUuR29vZ2xlfXQudGl0bGU9ZSx0LmRlc2NyaXB0aW9uPW4sdC5jdXJyZW50Q3JlZD1vLHQub25TZXRCYWNrQnV0dG9uU3RhdGUoQyYmKCFkfHx5KSl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz1udWxsLGQ9d2luZG93LGw9YS5CaW5kUHJvdmlkZXIsdT1hLkNyZWRlbnRpYWxUeXBlLHA9YS5QYWdpbmF0ZWRTdGF0ZTtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWlkcC1yZWRpcmVjdC1zcGVlZGJ1bXAtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjg3KSxzeW5jaHJvbm91czohZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxyLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGQuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSxuKDIwMCksIiIpKycgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogdGl0bGUiPjwvZGl2PjwhLS0ga28gaWY6IHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyAtLT4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSI+IDxkaXYgaWQ9Y3JlZFZpZXdCcmFuZGluZ0Rlc2MgY2xhc3M9d3JhcC1jb250ZW50IGRhdGEtYmluZD0idGV4dDogc3RyW1wnV0ZfU1RSX0RlZmF1bHRfRGVzY1wnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGRlc2NyaXB0aW9uIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxkaXYgaWQ9bG9naW5EZXNjcmlwdGlvbiBjbGFzcz0icm93IHRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHkiIGRhdGEtYmluZD0idGV4dDogZGVzY3JpcHRpb24iPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9cG9zaXRpb24tYnV0dG9ucz4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgY2xhc3M9Y29sLW1kLTI0PiA8ZGl2IGNsYXNzPSJ0ZXh0LTEzIGFjdGlvbi1saW5rcyI+PCEtLSBrbyBpZm5vdDogdXNlRXZpY3RlZENyZWRlbnRpYWxzIC0tPjwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICJjcmVkLXN3aXRjaC1saW5rLWNvbnRyb2wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogYXZhaWxhYmxlQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBmbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENyZWQ6IHsgY3JlZFR5cGU6IGN1cnJlbnRDcmVkIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoVmlldzogY3JlZFN3aXRjaExpbmtfb25Td2l0Y2hWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFBlbmRpbmdSZXF1ZXN0OiBjcmVkU3dpdGNoTGlua19vblNldFBlbmRpbmdSZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW4gfSB9IC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGV2aWN0ZWRDcmVkcy5sZW5ndGggPiAwIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWV2aWN0ZWRBY2NvdW50IGhyZWY9IyBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX1BXRF9TVFJfU3dpdGNoVG9DcmVkUGlja2VyX0xpbmtfRXZpY3RlZEFjY3RcJ10sIGNsaWNrOiBzd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2siPjwvYT4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkRlc2NyaWJlZEJ5OiBbXCdsb2dpbkhlYWRlclwnLCBzaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2MgPyBcJyBjcmVkVmlld0JyYW5kaW5nRGVzY1wnIDogXCdcJywgZGVzY3JpcHRpb24gPyBcJyBsb2dpbkRlc2NyaXB0aW9uXCcgOiBcJ1wnXS5qb2luKFwnIFwnKSB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLmFncmVlbWVudFR5cGU7dC5vblN3aXRjaFZpZXc9ci5jcmVhdGUoKSx0LmFncmVlbWVudFR5cGU9bix0LnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKCl7fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LmFncmVlbWVudENvbnRyb2xfb25CYWNrPWZ1bmN0aW9uKCl7dC5vblN3aXRjaFZpZXcobC5QcmV2aW91cyl9LGZ1bmN0aW9uKCl7YyYmYy5oYW5kbGVCYWNrQnV0dG9uJiZjLmhhbmRsZUJhY2tCdXR0b24odC5hZ3JlZW1lbnRDb250cm9sX29uQmFjay5iaW5kKHQpKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oMTMpLHM9big1KSxjPW51bGwsZD13aW5kb3csbD1zLlBhZ2luYXRlZFN0YXRlO28uY29tcG9uZW50cy5yZWdpc3RlcigibG9naW4tdmlldy1hZ3JlZW1lbnQtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMjg5KSxzeW5jaHJvbm91czohZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGQuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMjkwKSwiIikrJyAtLT48IS0tIGtvIGNvbXBvbmVudDogeyBuYW1lOiAidmlldy1hZ3JlZW1lbnQtY29udHJvbCIsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgYWdyZWVtZW50VHlwZTogYWdyZWVtZW50VHlwZVxuICAgIH0sXG4gICAgZXZlbnQ6IHtcbiAgICAgICAgYnV0dG9uQ2xpY2s6IGFncmVlbWVudENvbnRyb2xfb25CYWNrIH0gfSAtLT4gPCEtLSAva28gLS0+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdChlLHQpe3Iuc2Vjb25kYXJ5QnV0dG9uRGVzY3JpYmVkQnkoImlkRGl2X2lBZ3JlZW1lbnQiKSxyLmFncmVlbWVudEh0bWwodCl9ZnVuY3Rpb24gbigpe3Iuc2Vjb25kYXJ5QnV0dG9uRGVzY3JpYmVkQnkoImlkRGl2X2lBZ3JlZW1lbnQiKSxyLmRvd25sb2FkRXJyb3IoITApfWZ1bmN0aW9uIGkoKXt2YXIgZT17dGFyZ2V0VXJsOmMscmVxdWVzdFR5cGU6YS5SZXF1ZXN0VHlwZS5HZXQsaXNBc3luYzohMCx0aW1lb3V0OjFlNCxyZXNwb25zZVR5cGU6InRleHQiLHN1Y2Nlc3NDYWxsYmFjazp0LGZhaWx1cmVDYWxsYmFjazpuLHRpbWVvdXRDYWxsYmFjazpufSxpPW5ldyBhLkhhbmRsZXIoZSk7aS5zZW5kUmVxdWVzdCgpfXZhciByPXRoaXMsYz1udWxsLGQ9ZS5zZXJ2ZXJEYXRhLGw9ZS5hZ3JlZW1lbnRUeXBlLHU9ZC5zdHIsZz1kLnVybEhvc3RlZFByaXZhY3lMaW5rLG09ZC51cmxIb3N0ZWRUT1VMaW5rLHY9ZC51cmxJbXByZXNzdW07ci5vbkJ1dHRvbkNsaWNrPXMuY3JlYXRlKCksci5hZ3JlZW1lbnRIdG1sPW8ub2JzZXJ2YWJsZSgpLHIuZG93bmxvYWRFcnJvcj1vLm9ic2VydmFibGUoITEpLHIuc2Vjb25kYXJ5QnV0dG9uRGVzY3JpYmVkQnk9by5vYnNlcnZhYmxlKCksci5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Iub25CdXR0b25DbGljaygpfSxmdW5jdGlvbigpe2w9PT1wLkltcHJlc3N1bT9yLmFncmVlbWVudEh0bWwoZi5mb3JtYXQodS5DVF9TVFJfVmlld0FncmVlbWVudF9FeHRlcm5hbExpbmssdikpOihjPWw9PT1wLlByaXZhY3k/ZzptLGkoKSl9KCl9dmFyIG89bigxKSxhPW4oMTY4KSxyPW4oOSkscz1uKDEzKSxjPW4oNSksZD1uKDYpLGw9bigyOTEpLHU9d2luZG93LHA9Yy5BZ3JlZW1lbnRUeXBlLGY9ZC5TdHJpbmc7bC5hcHBseUV4dGVuc2lvbnMobyksby5jb21wb25lbnRzLnJlZ2lzdGVyKCJ2aWV3LWFncmVlbWVudC1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyOTIpLHN5bmNocm9ub3VzOiF1LlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4odS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDYpLG89aS5TdHJpbmc7dC5hcHBseUV4dGVuc2lvbnM9ZnVuY3Rpb24oZSl7ZS5iaW5kaW5nSGFuZGxlcnMuYWNjZXNzaWJsZUh0bWw9e2luaXQ6ZnVuY3Rpb24odCxuKXt2YXIgaT1vLnRyaW0oZS51bndyYXAobigpKSksYT0nPHAgaWQ9ImFncmVlbWVudFRpdGxlIiB0YWJpbmRleD0iLTEiPicscj0nPHAgdGFiaW5kZXg9Ii0xIj4nLHM9IjwvcD4iLGM9Lyg/OlxyXG58XHJ8XG4pL2csZD1uZXcgUmVnRXhwKHIrcywiZyIpLGw9YStpK3M7bD1sLnJlcGxhY2UoYyxzK3IpLGw9bC5yZXBsYWNlKGQsIiIpLHQuaW5uZXJIVE1MPWx9fX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMzYpLG4oMTk4KSwiIikrJyAtLT4gPGRpdiBjbGFzcz1zZWN0aW9uPjwhLS0ga28gaWZub3Q6IGFncmVlbWVudEh0bWwoKSB8fCBkb3dubG9hZEVycm9yKCkgLS0+IDxkaXYgY2xhc3M9InJvdyBwcm9ncmVzcy1jb250YWluZXIiPiA8ZGl2IGNsYXNzPXByb2dyZXNzIHJvbGU9YWxlcnQgdGFiaW5kZXg9LTEgZGF0YS1iaW5kPSJjb21wb25lbnQ6IFwnbWFyY2hpbmctYW50cy1jb250cm9sXCcsIGFyaWFMYWJlbDogc3RyW1wnV0ZfU1RSX1Byb2dyZXNzVGV4dFwnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGRvd25sb2FkRXJyb3IgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGlkPWVycm9yIGFyaWEtcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlIGFyaWEtcmVsZXZhbnQ9dGV4dCBhcmlhLWF0b21pYz10cnVlIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfU1RSX1ZpZXdBZ3JlZW1lbnRFcnJvclwnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGNsYXNzPSJyb3cgYWdyZWVtZW50LWJ1dHRvbnMiPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBmb2N1c09uU2Vjb25kYXJ5QnV0dG9uOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkRlc2NyaWJlZEJ5OiBzZWNvbmRhcnlCdXR0b25EZXNjcmliZWRCeSgpLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2PjwhLS0ga28gaWY6IGFncmVlbWVudEh0bWwgLS0+IDxwcmUgY2xhc3M9InRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHkgYWdyZWVtZW50LWxheW91dCIgaWQ9aWREaXZfaUFncmVlbWVudCByb2xlPWFsZXJ0IGRhdGEtYmluZD0iYWNjZXNzaWJsZUh0bWw6IGFncmVlbWVudEh0bWwiPjwvcHJlPiA8ZGl2IGNsYXNzPSJyb3cgYWdyZWVtZW50LWJ1dHRvbnMiPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25EZXNjcmliZWRCeTogc2Vjb25kYXJ5QnV0dG9uRGVzY3JpYmVkQnkoKSxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfSI+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe2lmKCF3LmlzUmVxdWVzdFBlbmRpbmcoKSl7cighMCk7dmFyIGU9bS5jbGVhbnNlVXNlcm5hbWUoQSk7aWYoWCl7dmFyIHQ9e0NoYW5uZWw6dGUoKT09PVBST09GLlR5cGUuRW1haWw/bC5DaGFubmVsLkVtYWlsQWRkcmVzczpsLkNoYW5uZWwuTW9iaWxlU21zLE9yaWdpbmFsUmVxdWVzdDpHLEZsb3dUb2tlbjpaKCl9LG89bmV3IGEoe2NoZWNrQXBpQ2FuYXJ5OiEwfSk7by5Kc29uKHEsdCxuLGksZC5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpfWVsc2V7dmFyIHM9e3VzZXJuYW1lOmUscHJvb2ZEYXRhOm5lKCkscHJvb2ZUeXBlOnRlKCkscHVycG9zZTplZSgpP2wuUHVycG9zZS5Ob1Bhc3N3b3JkOmwuUHVycG9zZS5PdGNMb2dpbixmbG93VG9rZW46WigpLGlzRW5jcnlwdGVkOmllKCksdW5hdXRoU2Vzc2lvbklkOlUsbGNpZDpNLHN1Y2Nlc3NDYWxsYmFjazpuLGZhaWx1cmVDYWxsYmFjazppfTtpZihzLmlzRW5jcnlwdGVkKXN3aXRjaCh0ZSgpKXtjYXNlIFBST09GLlR5cGUuRW1haWw6cy5wcm9vZkNvbmZpcm1hdGlvbj13LmN1cnJlbnRDcmVkKCkucHJvb2YuZGlzcGxheTticmVhaztjYXNlIFBST09GLlR5cGUuU01TOmNhc2UgUFJPT0YuVHlwZS5Wb2ljZTpzLnByb29mQ29uZmlybWF0aW9uPW0uY2xlYW5zZVVzZXJuYW1lKHcuY3VycmVudENyZWQoKS5wcm9vZi5kaXNwbGF5KS5zbGljZSgtNCl9dmFyIGM9bmV3IHUocyk7Yy5zZW5kUmVxdWVzdCgpfX19ZnVuY3Rpb24gbihlKXtyZXR1cm4geSE9PWguUHVibGljSWRlbnRpZmllckNvZGV8fGUuU2FzUGFyYW1zJiZlLlNhc1BhcmFtcy5TdWNjZXNzPyhzKGUpLHIoITEpLHZvaWQgdy5vblN3aXRjaFZpZXcodi5PbmVUaW1lQ29kZSkpOmkoZSl9ZnVuY3Rpb24gaShlKXtzKGUpLHIoITEpLHcuaGFzU2VuZENvZGVFcnJvcighMCksdy5wcmltYXJ5QnV0dG9uVGV4dChMLkNUX1BXRF9TVFJfU2lnbkluX0J1dHRvbl9OZXh0KX1mdW5jdGlvbiByKGUpe3cub25TZXRQZW5kaW5nUmVxdWVzdChlKSx3LmlzUmVxdWVzdFBlbmRpbmcoZSl9ZnVuY3Rpb24gcyhlKXtpZihlKXt2YXIgdD1lLmdldEZsb3dUb2tlbj9lLmdldEZsb3dUb2tlbigpOmUuRmxvd1Rva2VuO3AodCl9fWZ1bmN0aW9uIHAoZSl7ZSYmKFooZSksdy5vblVwZGF0ZUZsb3dUb2tlbihlKSx3LmNyZWRTd2l0Y2hMaW5rTWV0aG9kcygpJiZ3LmNyZWRTd2l0Y2hMaW5rTWV0aG9kcygpLnZpZXdfb25VcGRhdGVGbG93VG9rZW4oZSkpfWZ1bmN0aW9uIGcoZSl7dmFyIHQ9bnVsbDtzd2l0Y2goeSl7Y2FzZSBoLlJlbW90ZU5HQzp0PSQ9PT1fLlNzb0FydGlmYWN0RXhwaXJlZER1ZVRvQ29uZGl0aW9uYWxBY2Nlc3M/TC5DVF9TVFJfQ29uZmlybVNlbmRfUmVtb3RlTmdjX0FTTFA6Sj9MLkNUX1NUUl9Db25maXJtU2VuZF9SZW1vdGVOZ2NfRm9yY2VTaWduaW46TC5DVF9TVFJfQ29uZmlybVNlbmRfUmVtb3RlTmdjO2JyZWFrO2Nhc2UgaC5PbmVUaW1lQ29kZTpjYXNlIGguUHVibGljSWRlbnRpZmllckNvZGU6dD0kPT09Xy5Tc29BcnRpZmFjdEV4cGlyZWREdWVUb0NvbmRpdGlvbmFsQWNjZXNzP0wuQ1RfU1RSX0NvbmZpcm1TZW5kX090Y19BU0xQOko/TC5DVF9TVFJfQ29uZmlybVNlbmRfT3RjX0ZvcmNlU2lnbmluOmU/TC5DVF9TVFJfQ29uZmlybVNlbmRfT3RjX0VtYWlsOkYuQ1RfU1RSX0NvbmZpcm1TZW5kX090Y31yZXR1cm4gdH12YXIgdz10aGlzLFQ9ZS5zZXJ2ZXJEYXRhLEM9ZS5pc0luaXRpYWxWaWV3LHk9ZS5wcmVmZXJyZWRDcmVkZW50aWFsLGs9ZS5zZXNzaW9ucyx4PWUuZmxvd1Rva2VuLEQ9ZS5hdmFpbGFibGVDcmVkc3x8W10sUD1lLmV2aWN0ZWRDcmVkc3x8W10sST1lLnVzZUV2aWN0ZWRDcmVkZW50aWFscyxFPWUuY3VycmVudENyZWR8fHt9LFI9ZS5pZHBSZWRpcmVjdFVybCxBPWUuZGlzcGxheU5hbWUsQj1lLnVzZXJuYW1lLEw9VC5zdHIsRj1ULmh0bWwsTj1ULmlMb2dpbk1vZGUsTz1ULmZQT1NUX0ZvcmNlU2lnbmluLFU9VC5zVW5hdXRoU2Vzc2lvbklELE09VC5pUmVxdWVzdExDSUQsVj1ULmZMb2NrVXNlcm5hbWUsSD1ULnVybFN3aXRjaCxqPVQuZlNob3dTd2l0Y2hVc2VyLHE9VC51cmxHZXRPbmVUaW1lQ29kZSxHPVQuc0N0eCxXPVQuc1p0ZFRlbmFudE5hbWUsSz1ULmZTaG93QnV0dG9ucyx6PSEhVC5mQWxsb3dDYW5jZWwsJD1ULnNFcnJvckNvZGUsWD0hIXEsSj0hMSxRPSExLFk9bnVsbCxaPW8ub2JzZXJ2YWJsZSh4KS5leHRlbmQoe2Zsb3dUb2tlblVwZGF0ZTpUfSksZWU9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13LmN1cnJlbnRDcmVkKCk7cmV0dXJuIGUuY3JlZFR5cGU9PT1oLk9uZVRpbWVDb2RlP2UucHJvb2YuaXNOb3BhOiFvLnV0aWxzLmFycmF5Rmlyc3QoRCxmdW5jdGlvbihlKXtyZXR1cm4gZS5jcmVkVHlwZT09PWguUGFzc3dvcmR9KX0pLHRlPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7dmFyIGU9dy5jdXJyZW50Q3JlZCgpO3JldHVybiBlLmNyZWRUeXBlPT09aC5PbmVUaW1lQ29kZT9lLnByb29mLnR5cGU6bS5pc0VtYWlsQWRkcmVzcyhCKT9QUk9PRi5UeXBlLkVtYWlsOlBST09GLlR5cGUuU01TfSksbmU9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13LmN1cnJlbnRDcmVkKCk7cmV0dXJuIGUuY3JlZFR5cGU9PT1oLk9uZVRpbWVDb2RlP2UucHJvb2YuZGF0YTpCfSksaWU9by5wdXJlQ29tcHV0ZWQoZnVuY3Rpb24oKXt2YXIgZT13LmN1cnJlbnRDcmVkKCk7cmV0dXJuIGUuY3JlZFR5cGU9PT1oLk9uZVRpbWVDb2RlJiZlLnByb29mLmlzRW5jcnlwdGVkfSk7dy5vblN3aXRjaFZpZXc9Yy5jcmVhdGUoKSx3Lm9uUmVkaXJlY3Q9Yy5jcmVhdGUoKSx3Lm9uU2V0QmFja0J1dHRvblN0YXRlPWMuY3JlYXRlKCksdy5vblNldFBlbmRpbmdSZXF1ZXN0PWMuY3JlYXRlKCksdy5vblVwZGF0ZUZsb3dUb2tlbj1jLmNyZWF0ZSgpLHcuaGFzUmVtb3RlTmdjPSExLHcuYXZhaWxhYmxlQ3JlZHM9RCx3LmV2aWN0ZWRDcmVkcz1QLHcuc2hvd0NoYW5nZVVzZXJMaW5rPSExLHcuaXNJbml0aWFsVmlldz1DLHcuaXNGZWRlcmF0ZWRVc2VyPSEhUix3LnVuc2FmZV9wYWdlVGl0bGU9bnVsbCx3LnByZWZlcnJlZENyZWRlbnRpYWw9eSx3LmZsb3dUb2tlbj14LHcudXNlcm5hbWU9Qix3LmNyZWRTd2l0Y2hMaW5rTWV0aG9kcz1vLm9ic2VydmFibGUoKSx3LmN1cnJlbnRDcmVkPW8ub2JzZXJ2YWJsZSgpLHcucHJpbWFyeUJ1dHRvblRleHQ9by5vYnNlcnZhYmxlKG51bGwpLHcuaXNSZXF1ZXN0UGVuZGluZz1vLm9ic2VydmFibGUoITEpLHcuaGFzU2VuZENvZGVFcnJvcj1vLm9ic2VydmFibGUoITEpLHcudXNlRXZpY3RlZENyZWRlbnRpYWxzPW8ub2JzZXJ2YWJsZShJKSx3LmRlc2NyaXB0aW9uPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7dmFyIGU9dy5jdXJyZW50Q3JlZCgpLHQ9dy5oYXNTZW5kQ29kZUVycm9yKCksbj10ZSgpPT09UFJPT0YuVHlwZS5FbWFpbDtyZXR1cm4gZS5jcmVkVHlwZT09PWguT25lVGltZUNvZGU/dD9uP0wuQ1RfU1RSX0NvbmZpcm1TZW5kX090Y19TZW5kRXJyb3JfRW1haWw6TC5DVF9TVFJfQ29uZmlybVNlbmRfT3RjX1NlbmRFcnJvcjptLmZvcm1hdChnKG4pLGUucHJvb2YuZGlzcGxheSk6bS5mb3JtYXQoZyhuKSxTLmh0bWxFc2NhcGUoQSkpfSksdy5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLmZsb3dUb2tlbj1aKCksZS51c2VFdmljdGVkQ3JlZGVudGlhbHM9UXx8dy51c2VFdmljdGVkQ3JlZGVudGlhbHMoKSxZJiYoZS5vdGNDcmVkZW50aWFsPVkpfSx3LmdldFN0YXRlPWZ1bmN0aW9uKCl7dmFyIGU9e3NhdmVkQ3JlZDp3LmN1cnJlbnRDcmVkKCksdXNlRXZpY3RlZENyZWRlbnRpYWxzOncudXNlRXZpY3RlZENyZWRlbnRpYWxzKCl9O3JldHVybiBlfSx3LnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYody5jdXJyZW50Q3JlZChlLnNhdmVkQ3JlZCksdy51c2VFdmljdGVkQ3JlZGVudGlhbHMoZS51c2VFdmljdGVkQ3JlZGVudGlhbHMpKX0sdy5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtzd2l0Y2goeSl7Y2FzZSBoLlJlbW90ZU5HQzp3Lm9uU3dpdGNoVmlldyh2LlJlbW90ZU5HQyk7YnJlYWs7Y2FzZSBoLk9uZVRpbWVDb2RlOmNhc2UgaC5QdWJsaWNJZGVudGlmaWVyQ29kZTp0KCl9fSx3LnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dy5vblN3aXRjaFZpZXcodi5QcmV2aW91cyl9LHcucHJpdmFjeV9vbkNsaWNrPWZ1bmN0aW9uKCl7dy5vblN3aXRjaFZpZXcodi5WaWV3QWdyZWVtZW50KX0sdy50b3Vfb25DbGljaz1mdW5jdGlvbigpe3cub25Td2l0Y2hWaWV3KHYuVGVybXNPZlVzZSl9LHcucGhvbmVEaXNhbWJpZ3VhdGlvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dy5vblN3aXRjaFZpZXcodi5QaG9uZURpc2FtYmlndWF0aW9uKX0sdy5zd2l0Y2hUb1Bhc3N3b3JkX29uQ2xpY2s9ZnVuY3Rpb24oKXt3Lm9uU3dpdGNoVmlldyh2LlBhc3N3b3JkKX0sdy5zd2l0Y2hUb090aGVySWRwX29uQ2xpY2s9ZnVuY3Rpb24oKXt3Lm9uU3dpdGNoVmlldyh2LklkcFJlZGlyZWN0KX0sdy5zZWxlY3RBY2NvdW50X29uQ2xpY2s9ZnVuY3Rpb24oKXtWJiZIP3cub25SZWRpcmVjdChIKTp3Lm9uU3dpdGNoVmlldyhrLmxlbmd0aD92LlRpbGVzOnYuVXNlcm5hbWUpfSx3LnN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGljaz1mdW5jdGlvbigpe1E9ITAsdy5vblN3aXRjaFZpZXcodi5DcmVkZW50aWFsUGlja2VyKX0sdy5jcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXc9ZnVuY3Rpb24oZSx0LG4pe24mJihZPW4pLHcub25Td2l0Y2hWaWV3KGUsdCl9LHcuY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXtyKGUpfSx3LmNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe3AoZSl9LGZ1bmN0aW9uKCl7dmFyIGU9bnVsbDtzd2l0Y2goSj1OPT09Yi5Gb3JjZVNpZ25pbnx8Tj09PWIuRm9yY2VTaWduaW5Nb2JpbGV8fE49PT1iLkZvcmNlU2lnbmluSG9zdHx8Tyx3LnNob3dDaGFuZ2VVc2VyTGluaz1qJiYoViYmSHx8Qyksdy51bnNhZmVfcGFnZVRpdGxlPVc/bS5mb3JtYXQoTC5DVF9XaW4xMF9TVFJfVXNlcm5hbWVfVGl0bGVfV2l0aE9yZ0RvbWFpbixTLmh0bWxVbmVzY2FwZShXKSk6TC5XRl9TVFJfSGVhZGVyRGVmYXVsdF9UaXRsZV9XaXRoX0JyYW5kLHkpe2Nhc2UgaC5SZW1vdGVOR0M6dy5oYXNSZW1vdGVOZ2M9ITAsZT1MLkNUX1NUUl9Db25maXJtU2VuZF9SZW1vdGVOZ2NfU2VuZE5vdGlmaWNhdGlvbix3LmN1cnJlbnRDcmVkKHtjcmVkVHlwZTpoLlJlbW90ZU5HQ30pO2JyZWFrO2Nhc2UgaC5PbmVUaW1lQ29kZTpjYXNlIGguUHVibGljSWRlbnRpZmllckNvZGU6ZT1MLkNUX1NUUl9Db25maXJtU2VuZF9PdGNfU2VuZENvZGUsdy5jdXJyZW50Q3JlZChFKX13LnByaW1hcnlCdXR0b25UZXh0KGUpLHcub25TZXRCYWNrQnV0dG9uU3RhdGUoSyYmKCFDfHx6KSksZiYmZi5zaG93S2V5Ym9hcmQmJmYuc2hvd0tleWJvYXJkKCExKX0oKX12YXIgbz1uKDEpLGE9bigxNjcpLHI9big5KSxzPW4oNiksYz1uKDEzKSxkPW4oNSksbD1uKDIwMyksdT1uKDIwMikscD1uKDE5MyksZj1udWxsLGc9d2luZG93LG09cy5TdHJpbmcsdj1kLlBhZ2luYXRlZFN0YXRlLGg9ZC5DcmVkZW50aWFsVHlwZSxiPWQuTG9naW5Nb2RlLF89ZC5Fc3RzRXJyb3IsUz1yLkhlbHBlcjsKcC5hcHBseUV4dGVuZGVycyhvKSxvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWNvbmZpcm0tc2VuZC12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyOTQpLHN5bmNocm9ub3VzOiFnLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMzYpLG4oMTk4KSxuKDIwMCksbigyOTUpLCIiKSsnIC0tPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnaGVhZGVyLWNvbnRyb2xcJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICB0aXRsZTogc3RyW1wnV0ZfU1RSX0hlYWRlckRlZmF1bHRfVGl0bGVcJ10gfSB9Ij4gPC9kaXY+PCEtLSBrbyBpZjogaXNSZXF1ZXN0UGVuZGluZyAtLT4gPGRpdiBjbGFzcz0icm93IHByb2dyZXNzLWNvbnRhaW5lciI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciB0YWJpbmRleD0tMSBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgaGFzRm9jdXM6IHRydWUsIGFyaWFMYWJlbDogc3RyW1wnV0ZfU1RSX1Byb2dyZXNzVGV4dFwnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IGlzUmVxdWVzdFBlbmRpbmcgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHkiIGRhdGEtYmluZD0iXG4gICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IGRlc2NyaXB0aW9uLFxuICAgICAgICBjaGlsZEJpbmRpbmdzOiB7IFwncGhvbmVEaXNhbWJpZ0xpbmtcJzogeyBjbGljazogcGhvbmVEaXNhbWJpZ3VhdGlvbl9vbkNsaWNrIH0gfSI+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1wb3NpdGlvbi1idXR0b25zPiA8ZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBjbGFzcz1jb2wtbWQtMjQ+IDxkaXYgY2xhc3M9InRleHQtMTMgYWN0aW9uLWxpbmtzIj48IS0tIGtvIGlmbm90OiB1c2VFdmljdGVkQ3JlZGVudGlhbHMgLS0+PCEtLSBrbyBjb21wb25lbnQ6IHsgbmFtZTogImNyZWQtc3dpdGNoLWxpbmstY29udHJvbCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHVibGljTWV0aG9kczogY3JlZFN3aXRjaExpbmtNZXRob2RzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IGF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IGZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENyZWQ6IGN1cnJlbnRDcmVkKCkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2hWaWV3OiBjcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRmxvd1Rva2VuOiBjcmVkU3dpdGNoTGlua19vblVwZGF0ZUZsb3dUb2tlbiB9IH0gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZXZpY3RlZENyZWRzLmxlbmd0aCA+IDAgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9ZXZpY3RlZEFjY291bnQgaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9Td2l0Y2hUb0NyZWRQaWNrZXJfTGlua19FdmljdGVkQWNjdFwnXSwgY2xpY2s6IHN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGljayI+PC9hPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzaG93Q2hhbmdlVXNlckxpbmsgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9aTE2NjggaHJlZj0jIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfRkVEX1NUUl9DaGFuZ2VVc2VyTGlua19UZXh0XCddLCBjbGljazogc2VsZWN0QWNjb3VudF9vbkNsaWNrIj48L2E+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdmb290ZXItYnV0dG9ucy1maWVsZFwnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgIHJlbW92ZUJvdHRvbU1hcmdpbjogIWhhc1JlbW90ZU5nYyAmJiAhc2hvd0NoYW5nZVVzZXJMaW5rLFxuICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyAmJiAhaXNSZXF1ZXN0UGVuZGluZygpLFxuICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uVGV4dDogcHJpbWFyeUJ1dHRvblRleHQsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk6IFwnbG9naW5IZWFkZXJcJyxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UgfSxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25DbGljazogcHJpbWFyeUJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfSI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxuPWUuc2VydmVyRGF0YSxpPWUudGl0bGUsbz1lLnVzZVN1YnRpdGxlIT09ITEsYT1uLm9BcHBDb2JyYW5kaW5nO3QudGl0bGU9bnVsbCxmdW5jdGlvbigpe3ZhciBlPSEoIWF8fCFhLmZyaWVuZGx5QXBwTmFtZSk7dC5pc1N1YnRpdGxlVmlzaWJsZT1vJiZlLHQudGl0bGU9aX0oKX12YXIgbz1uKDEpLGE9big5KSxyPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImhlYWRlci1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6bigyOTYpLHN5bmNocm9ub3VzOiFyLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oci5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKX0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0nPGRpdiBjbGFzcz0icm93IHRleHQtdGl0bGUiIGlkPWxvZ2luSGVhZGVyPiA8ZGl2IHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiB0aXRsZSI+PC9kaXY+PCEtLSBrbyBpZjogaXNTdWJ0aXRsZVZpc2libGUgLS0+IDxkaXYgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MiBjbGFzcz0idGV4dC0xMyBzdWJ0aXRsZSIgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdXRl9TVFJfQXBwX1RpdGxlXCddIj48L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdChlLHQpe3JldHVybiBzLlN0cmluZy5mb3JtYXQoIi4vY3JlZF9vcHRpb25fezB9ezF9LnsyfSIsZSx0PyJfd2hpdGUiOiIiLFg/InN2ZyI6InBuZyIpfWZ1bmN0aW9uIG4oZSx0KXt2YXIgbj0iIjtzd2l0Y2goZSl7Y2FzZSBQUk9PRi5UeXBlLkVtYWlsOm49ImVtYWlsIjticmVhaztjYXNlIFBST09GLlR5cGUuU01TOm49InNtcyI7YnJlYWs7Y2FzZSBQUk9PRi5UeXBlLlZvaWNlOm49ImNhbGwifXJldHVybiBzLlN0cmluZy5mb3JtYXQoIi4vcGlja2VyX3ZlcmlmeV97MH17MX0uezJ9IixuLHQ/Il93aGl0ZSI6IiIsWD8ic3ZnIjoicG5nIil9ZnVuY3Rpb24gaShlKXtKPWUuVXNlckNvZGUsUT1lLkRldmljZUNvZGUsUighMSksQS5vblN3aXRjaFZpZXcody5SZW1vdGVMb2dpblBvbGxpbmcpfWZ1bmN0aW9uIHIoZSl7UighMSk7dmFyIHQ9IiI7aWYoZSYmZS5lcnJvcilzd2l0Y2goZS5lcnJvci5jb2RlKXtjYXNlIEMuQXV0aEZhaWx1cmU6dD1qLkNUX1BXRF9TVFJfRXJyb3JfRmxvd1Rva2VuRXhwaXJlZDticmVhaztkZWZhdWx0OnQ9ai5DVF9QV0RfU1RSX0Vycm9yX0dldE9uZVRpbWVDb2RlRXJyb3J9ZWxzZSB0PWouQ1RfUFdEX1NUUl9FcnJvcl9HZXRPbmVUaW1lQ29kZUVycm9yO3QmJkEuZXJyb3IobmV3IFModCxudWxsKSl9ZnVuY3Rpb24gZyhlKXt1LnRocm93VW5oYW5kbGVkRXhjZXB0aW9uT25SZWplY3Rpb24obC5pc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSgpLnRoZW4obnVsbCxmdW5jdGlvbigpe3JldHVybiExfSkudGhlbihmdW5jdGlvbih0KXt0JiYoZS5kZXNjcmlwdGlvbihPP2ouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfT3B0aW9uX0ZpZG9fS25vd25Vc2VyOmouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfT3B0aW9uX0ZpZG8pLGUuaGVscFRleHQoai5DVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9PcHRpb25fSGVscF9GaWRvKSxlLmFyaWFMYWJlbChqLkNUX1NUUl9DcmVkZW50aWFsUGlja2VyX0hlbHBfRGVzY19GaWRvKSxBLmlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCEwKSl9KSl9ZnVuY3Rpb24gYigpe3ZhciBlPXt1c2VybmFtZTpfLmNsZWFuc2VVc2VybmFtZShNKSxwcm9vZkRhdGE6WS5kYXRhLHByb29mVHlwZTpZLnR5cGUscHVycG9zZTpZLmlzTm9wYT9mLlB1cnBvc2UuTm9QYXNzd29yZDpmLlB1cnBvc2UuT3RjTG9naW4sZmxvd1Rva2VuOlUsaXNFbmNyeXB0ZWQ6WS5pc0VuY3J5cHRlZCxzdWNjZXNzQ2FsbGJhY2s6UCxmYWlsdXJlQ2FsbGJhY2s6SX07aWYoZS5pc0VuY3J5cHRlZClzd2l0Y2goWS50eXBlKXtjYXNlIFBST09GLlR5cGUuRW1haWw6ZS5wcm9vZkNvbmZpcm1hdGlvbj1ZLmRpc3BsYXk7YnJlYWs7Y2FzZSBQUk9PRi5UeXBlLlNNUzpjYXNlIFBST09GLlR5cGUuVm9pY2U6ZS5wcm9vZkNvbmZpcm1hdGlvbj1fLmNsZWFuc2VVc2VybmFtZShZLmRpc3BsYXkpLnNsaWNlKC00KX1yZXR1cm4gZX1mdW5jdGlvbiBQKGUpe0UoZSksUighMSksQS5vblN3aXRjaFZpZXcody5PbmVUaW1lQ29kZSl9ZnVuY3Rpb24gSShlKXt2YXIgdCxuPWUuZ2V0T3RjU3RhdHVzKCk7c3dpdGNoKEUoZSksbil7Y2FzZSBmLlN0YXR1cy5GVEVycm9yOnQ9ai5DVF9PVENfU1RSX0Vycm9yX0Zsb3dFeHBpcmVkO2JyZWFrO2RlZmF1bHQ6dD1ZLnN0ci5DVF9PVENTX1NUUl9FcnJvcl9TZW5kQ29kZVNlcnZlcnx8IiJ9UighMSksQS5lcnJvcihuZXcgUyh0LG51bGwpKX1mdW5jdGlvbiBFKGUpe2UmJihlLmdldEZsb3dUb2tlbj8oVT1lLmdldEZsb3dUb2tlbigpLEEub25VcGRhdGVGbG93VG9rZW4oVSkpOmUuRmxvd1Rva2VuJiYoVT1lLkZsb3dUb2tlbixBLm9uVXBkYXRlRmxvd1Rva2VuKFUpKSl9ZnVuY3Rpb24gUihlKXtBLmlzUmVxdWVzdFBlbmRpbmcoZSksQS5vblNldFBlbmRpbmdSZXF1ZXN0KGUpfXZhciBBPXRoaXMsQj1lLnNlcnZlckRhdGEsTD1lLmF2YWlsYWJsZUNyZWRzfHxbXSxGPWUuZXZpY3RlZENyZWRzfHxbXSxOPWUudXNlRXZpY3RlZENyZWRlbnRpYWxzLE89ZS5pc1VzZXJLbm93bixVPWUuZmxvd1Rva2VuLE09ZS51c2VybmFtZSxWPWUuaXNJbml0aWFsVmlldyxIPWUuc2VydmVyRXJyb3Isaj1CLnN0cixxPUIuZkNoZWNrQXBpQ2FuYXJ5LEc9Qi51cmxHZXRPbmVUaW1lQ29kZSxXPUIuc0N0eCxLPUIuZlNob3dGb3Jnb3RVc2VybmFtZUxpbmssej1CLnVybEZvcmdvdFVzZXJuYW1lLCQ9Qi5pQWxsb3dlZElkZW50aXRpZXMsWD0hMSxKPW51bGwsUT1udWxsLFk9bnVsbCxaPW51bGwsZWU9ITEsdGU9W107QS5pc1VzZXJLbm93bj1PLEEuZGlzcGxheUhlbHA9IU8sQS5oYXNGaWRvPSExLEEuaGFzR2l0SHViPSExLEEuaXNJbml0aWFsVmlldz1WLEEuZXJyb3I9by5vYnNlcnZhYmxlKFYmJkgpLEEuaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGU9by5vYnNlcnZhYmxlKCExKSxBLmlzUmVxdWVzdFBlbmRpbmc9by5vYnNlcnZhYmxlKCExKSxBLnNlbGVjdGVkQ3JlZGVudGlhbD1vLm9ic2VydmFibGUoKSxBLmZvY3VzZWRDcmVkZW50aWFsPW8ub2JzZXJ2YWJsZSgpLEEuZm9jdXNlZEhlbHBJY29uPW8ub2JzZXJ2YWJsZSgpLEEudXNlRXZpY3RlZENyZWRlbnRpYWxzPW8ub2JzZXJ2YWJsZSghIU4pLEEub25Td2l0Y2hWaWV3PWMuY3JlYXRlKCksQS5vblJlZGlyZWN0PWMuY3JlYXRlKCksQS5vblNldFBlbmRpbmdSZXF1ZXN0PWMuY3JlYXRlKCksQS5vblJlZ2lzdGVyRGlhbG9nPWMuY3JlYXRlKCksQS5vblVucmVnaXN0ZXJEaWFsb2c9Yy5jcmVhdGUoKSxBLm9uU2hvd0RpYWxvZz1jLmNyZWF0ZSgpLEEub25VcGRhdGVGbG93VG9rZW49Yy5jcmVhdGUoKSxBLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKGUpe0omJlEmJihlLnJlbW90ZUxvZ2luVXNlckNvZGU9SixlLnJlbW90ZUxvZ2luRGV2aWNlQ29kZT1RKSxZJiYoZS5vdGNDcmVkZW50aWFsPXtjcmVkVHlwZTpULk9uZVRpbWVDb2RlLHByb29mOll9KX0sQS5nZXRTdGF0ZT1mdW5jdGlvbigpe3ZhciBlPXt1c2VFdmljdGVkQ3JlZGVudGlhbHM6QS51c2VFdmljdGVkQ3JlZGVudGlhbHMoKX07cmV0dXJuIGV9LEEucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKGUpe2UmJkEudXNlRXZpY3RlZENyZWRlbnRpYWxzKGUudXNlRXZpY3RlZENyZWRlbnRpYWxzKX0sQS5maWx0ZXJlZENyZWRlbnRpYWxzPW8ucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7dmFyIGU9IUEudXNlRXZpY3RlZENyZWRlbnRpYWxzKCk7cmV0dXJuIG8udXRpbHMuYXJyYXlGaWx0ZXIodGUsZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNEZWZhdWx0PT09ZX0pfSksQS50aWxlX29uQ2xpY2s9ZnVuY3Rpb24oZSl7aWYoZWUpcmV0dXJuIHZvaWQoZWU9ITEpO2lmKGUucmVkaXJlY3RVcmwpQS5vblJlZGlyZWN0KGUucmVkaXJlY3RVcmwpO2Vsc2V7dmFyIHQ9ZS5wYWdpbmF0ZWRTdGF0ZTtzd2l0Y2godCl7Y2FzZSB3LlJlbW90ZUxvZ2luUG9sbGluZzpBLmVycm9yKG51bGwpLFIoITApO3ZhciBuPW5ldyBkKHtjaGVja0FwaUNhbmFyeTpxfSk7bi5Kc29uKEcse29yaWdpbmFsUmVxdWVzdDpXfSxpLHIsYS5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpO2JyZWFrO2Nhc2Ugdy5PbmVUaW1lQ29kZTppZihBLmVycm9yKG51bGwpLFk9ZS5wcm9vZixZLmNsZWFyRGlnaXRzKUEub25Td2l0Y2hWaWV3KHcuUHJvb2ZDb25maXJtYXRpb24pO2Vsc2V7dmFyIG89YigpLHM9bmV3IHAobyk7UighMCkscy5zZW5kUmVxdWVzdCgpfWJyZWFrO2RlZmF1bHQ6QS5vblN3aXRjaFZpZXcodCl9fX0sQS50aWxlSGVscF9vbkNsaWNrPWZ1bmN0aW9uKGUpe2VlPSEwLFo9ZS5oZWxwRGlhbG9nSWQsQS5mb2N1c2VkSGVscEljb24oeS5Ob25lKSxBLm9uU2hvd0RpYWxvZyhaKS50aGVuKGZ1bmN0aW9uKCl7QS5mb2N1c2VkSGVscEljb24oWil9KX0sQS5vbkNyZWRlbnRpYWxTZWxlY3RlZD1mdW5jdGlvbihlKXtBLnNlbGVjdGVkQ3JlZGVudGlhbChlKX0sQS5zZXREZWZhdWx0Rm9jdXM9ZnVuY3Rpb24oKXtaP0EuZm9jdXNlZEhlbHBJY29uKFopOkEuZm9jdXNlZENyZWRlbnRpYWwoQS5zZWxlY3RlZENyZWRlbnRpYWwoKXx8QS5maWx0ZXJlZENyZWRlbnRpYWxzKClbMF0pfSxBLm9uSXRlbUtleURvd249ZnVuY3Rpb24oZSx0KXt2YXIgbj1udWxsLGk9bnVsbCxvPUEuZmlsdGVyZWRDcmVkZW50aWFscygpO2lmKHQua2V5Q29kZT09PWsuQXJyb3dVcHx8dC5rZXlDb2RlPT09ay5BcnJvd0Rvd24pZm9yKHZhciBhPTA7YTxvLmxlbmd0aDthKyspaWYob1thXT09PWUpe249b1thLTFdfHxlLGk9b1thKzFdfHxlO2JyZWFrfXN3aXRjaCh0LmtleUNvZGUpe2Nhc2Ugay5QYWdlVXA6Y2FzZSBrLkhvbWU6QS5mb2N1c2VkQ3JlZGVudGlhbChvWzBdKTticmVhaztjYXNlIGsuQXJyb3dVcDpBLmZvY3VzZWRDcmVkZW50aWFsKG4pO2JyZWFrO2Nhc2Ugay5QYWdlRG93bjpjYXNlIGsuRW5kOkEuZm9jdXNlZENyZWRlbnRpYWwob1tvLmxlbmd0aC0xXSk7YnJlYWs7Y2FzZSBrLkFycm93RG93bjpBLmZvY3VzZWRDcmVkZW50aWFsKGkpO2JyZWFrO2Nhc2Ugay5TcGFjZTpBLnNlbGVjdGVkQ3JlZGVudGlhbChlKTticmVhaztjYXNlIGsuRW50ZXI6QS5zZWxlY3RlZENyZWRlbnRpYWwoKT09PWU/QS50aWxlX29uQ2xpY2soQS5zZWxlY3RlZENyZWRlbnRpYWwoKSk6QS5zZWxlY3RlZENyZWRlbnRpYWwoZSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm4hMH1yZXR1cm4hMX0sQS5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtBLnRpbGVfb25DbGljayhBLnNlbGVjdGVkQ3JlZGVudGlhbCgpKX0sQS5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe0Eub25Td2l0Y2hWaWV3KHcuUHJldmlvdXMpfSxmdW5jdGlvbigpe1g9RC5pc1N2Z0ltZ1N1cHBvcnRlZCgpLG8udXRpbHMuYXJyYXlGb3JFYWNoKEwuY29uY2F0KEYpLGZ1bmN0aW9uKGUpe3ZhciBpPW51bGwsYT1udWxsLHI9bnVsbCxzPW51bGwsYz1udWxsLGQ9bnVsbCxsPW51bGwsdT1udWxsLHA9bnVsbCxmPW51bGwsaD0wLGI9ITA7c3dpdGNoKGUuY3JlZFR5cGUpe2Nhc2UgVC5SZW1vdGVMb2dpbjppPW0odCgicmVtb3RlIiwhMCkpLGE9bSh0KCJyZW1vdGUiLCExKSkscj1qLkNUX1BXRF9TVFJfUmVtb3RlTG9naW5MaW5rLGw9dy5SZW1vdGVMb2dpblBvbGxpbmcsaD0xO2JyZWFrO2Nhc2UgVC5GaWRvOkEuaGFzRmlkbz0hMCxpPW0odCgiZmlkbyIsITApKSxhPW0odCgiZmlkbyIsITEpKSxyPU8/ai5DVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9PcHRpb25fRmlkb0Nyb3NzUGxhdGZvcm1fS25vd25Vc2VyOmouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfT3B0aW9uX0ZpZG9Dcm9zc1BsYXRmb3JtLHM9ai5DVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9PcHRpb25fSGVscF9GaWRvQ3Jvc3NQbGF0Zm9ybSxjPWouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfSGVscF9EZXNjX0ZpZG9Dcm9zc1BsYXRmb3JtLGQ9eS5GaWRvSGVscCxsPXcuRmlkbyxoPTI7YnJlYWs7Y2FzZSBULlJlbW90ZU5HQzppPW0odCgiYXV0aGVudGljYXRvciIsITApKSxhPW0odCgiYXV0aGVudGljYXRvciIsITEpKSxyPWouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfT3B0aW9uX0F1dGhlbnRpY2F0b3JBcHAsbD13LlJlbW90ZU5HQyxoPTM7YnJlYWs7Y2FzZSBULlBhc3N3b3JkOmk9bSh0KCJwYXNzd29yZCIsITApKSxhPW0odCgicGFzc3dvcmQiLCExKSkscj1qLkNUX1NUUl9DcmVkZW50aWFsUGlja2VyX09wdGlvbl9QYXNzd29yZCxsPXcuUGFzc3dvcmQsYj1lLmlzRGVmYXVsdCE9PSExLGg9NDticmVhaztjYXNlIFQuRmVkZXJhdGlvbjppPW0odCgiZmVkZXJhdGVkIiwhMCkpLGE9bSh0KCJmZWRlcmF0ZWQiLCExKSkscj1qLkNUX1NUUl9DcmVkZW50aWFsUGlja2VyX09wdGlvbl9GZWRlcmF0ZWQsbD13LklkcFJlZGlyZWN0LGg9NTticmVhaztjYXNlIFQuTGlua2VkSW46aT1tKHQoImxpbmtlZGluIiwhMCkpLGE9bSh0KCJsaW5rZWRpbiIsITEpKSxyPWouQ1RfUFdEX1NUUl9Vc2VMaW5rZWRJbl9MaW5rLGY9ZS5yZWRpcmVjdFVybCwkPT09eC5Cb3RoJiYocz1qLkNUX1NUUl9DcmVkZW50aWFsUGlja2VyX1BlcnNvbmFsQWNjb3VudHNPbmx5KSxoPTY7YnJlYWs7Y2FzZSBULk90aGVyTWljcm9zb2Z0SWRwRmVkZXJhdGlvbjppPWE9bSh0KCJtaWNyb3NvZnQiLCExKSkscj1qLkNUX1BXRF9TVFJfVXNlTWljcm9zb2Z0X0xpbmssZj1lLnJlZGlyZWN0VXJsLGg9NzticmVhaztjYXNlIFQuR2l0SHViOkEuaGFzR2l0SHViPSEwLGk9bSh0KCJnaXRodWIiLCEwKSksYT1tKHQoImdpdGh1YiIsITEpKSxyPWouQ1RfUFdEX1NUUl9Vc2VHaXRIdWJfTGluayxjPWouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfSGVscF9EZXNjX0dpdEh1YixkPXkuR2l0SHViSGVscCxmPWUucmVkaXJlY3RVcmwsJD09PXguQm90aCYmKHM9ai5DVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9QZXJzb25hbEFjY291bnRzT25seSksaD04O2JyZWFrO2Nhc2UgVC5Hb29nbGU6aT1hPW0odCgiZ29vZ2xlIiwhMSkpLHI9ai5DVF9QV0RfU1RSX1VzZUdvb2dsZV9MaW5rLGY9ZS5yZWRpcmVjdFVybCxoPTk7YnJlYWs7Y2FzZSBULkZhY2Vib29rOmk9YT1tKCIuL2NyZWRfb3B0aW9uX2ZhY2Vib29rLnBuZyIpLHI9ai5DVF9QV0RfU1RSX1VzZUZhY2Vib29rX0xpbmssZj1lLnJlZGlyZWN0VXJsLGg9MTA7YnJlYWs7Y2FzZSBULk9uZVRpbWVDb2RlOnU9ZS5wcm9vZiwhdXx8dS50eXBlIT09UFJPT0YuVHlwZS5FbWFpbCYmdS50eXBlIT09UFJPT0YuVHlwZS5TTVMmJnUudHlwZSE9PVBST09GLlR5cGUuVm9pY2V8fChpPXYobih1LnR5cGUsITApKSxhPXYobih1LnR5cGUsITEpKSxyPXUuc3RyJiZ1LnN0ci5DVF9PVENTX1NUUl9Qcm9vZk9wdGlvblRleHR8fCIiLGw9dy5PbmVUaW1lQ29kZSxoPXUudHlwZT09PVBST09GLlR5cGUuRW1haWw/MTE6MTIscD11LnR5cGUrIjoiK3UuZGF0YSxiPXUuaXNEZWZhdWx0KTticmVhaztjYXNlIFQuQWNjZXNzUGFzczppPW0odCgiYWNjZXNzcGFzcyIsITApKSxhPW0odCgiYWNjZXNzcGFzcyIsITEpKSxyPWouQ1RfUFdEX1NUUl9Mb2dpbl9DcmVkUGlja2VyX09wdGlvbl9BY2Nlc3NQYXNzLGw9dy5BY2Nlc3NQYXNzLGg9MTM7YnJlYWs7ZGVmYXVsdDpyZXR1cm59aWYociYmKHRlLnB1c2goe2NyZWRUeXBlOmUuY3JlZFR5cGUsbGlnaHRJY29uVXJsOmksZGFya0ljb25Vcmw6YSxkZXNjcmlwdGlvbjpvLm9ic2VydmFibGUociksaGVscFRleHQ6by5vYnNlcnZhYmxlKHMpLGFyaWFMYWJlbDpvLm9ic2VydmFibGUoYyksaGVscERpYWxvZ0lkOmQscGFnaW5hdGVkU3RhdGU6bCxwcm9vZjp1LHByb29mVmFsdWU6cCxyZWRpcmVjdFVybDpmLHdlaWdodDpoLGlzRGVmYXVsdDpifSksZS5jcmVkVHlwZT09PVQuRmlkbykpe3ZhciBfPXRlW3RlLmxlbmd0aC0xXTtnKF8pfX0pLEsmJiFPJiZ0ZS5wdXNoKHtjcmVkVHlwZTpudWxsLGxpZ2h0SWNvblVybDptKHQoImZvcmdvdCIsITApKSxkYXJrSWNvblVybDptKHQoImZvcmdvdCIsITEpKSxkZXNjcmlwdGlvbjpvLm9ic2VydmFibGUoai5DVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9PcHRpb25fRm9yZ290VXNlcm5hbWUpLHByb29mOm51bGwscHJvb2ZWYWx1ZTpudWxsLGhlbHBUZXh0Om8ub2JzZXJ2YWJsZSgkPT09eC5Cb3RoP2ouQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfUGVyc29uYWxBY2NvdW50c09ubHk6bnVsbCksaXNEZWZhdWx0OiEwLGhlbHBEaWFsb2dJZDpudWxsLHJlZGlyZWN0VXJsOnosd2VpZ2h0OjExfSksdGUuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBlLndlaWdodC10LndlaWdodH0pLGgmJmguc2hvd0tleWJvYXJkJiZoLnNob3dLZXlib2FyZCghMSl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9big2KSxjPW4oMTMpLGQ9bigxNjcpLGw9bigyMDEpLHU9bigxMikscD1uKDIwMiksZj1uKDIwMyksZz1uKDE2KSxtPW4oMjk4KSx2PW4oMzM2KSxoPW51bGwsYj13aW5kb3csXz1zLlN0cmluZyxTPXMuRXJyb3JEYXRhLHc9YS5QYWdpbmF0ZWRTdGF0ZSxUPWEuQ3JlZGVudGlhbFR5cGUsQz1hLkFwaUVycm9yQ29kZXMseT1hLkRpYWxvZ0lkLGs9YS5LZXlDb2RlLHg9Zy5BbGxvd2VkSWRlbnRpdGllc1R5cGUsRD1yLkhlbHBlcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWNyZWRlbnRpYWwtcGlja2VyLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDMzNyksc3luY2hyb25vdXM6IWIuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8RC5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGIuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtyZXR1cm4gbihvKGUpKX1mdW5jdGlvbiBvKGUpe3JldHVybiBhW2VdfHxmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2UrIicuIil9KCl9dmFyIGE9eyIuL2NyZWRfb3B0aW9uX2FjY2Vzc3Bhc3MucG5nIjoyOTksIi4vY3JlZF9vcHRpb25fYWNjZXNzcGFzcy5zdmciOjMwMCwiLi9jcmVkX29wdGlvbl9hY2Nlc3NwYXNzX3doaXRlLnBuZyI6MzAxLCIuL2NyZWRfb3B0aW9uX2FjY2Vzc3Bhc3Nfd2hpdGUuc3ZnIjozMDIsIi4vY3JlZF9vcHRpb25fYXV0aGVudGljYXRvci5wbmciOjMwMywiLi9jcmVkX29wdGlvbl9hdXRoZW50aWNhdG9yLnN2ZyI6MzA0LCIuL2NyZWRfb3B0aW9uX2F1dGhlbnRpY2F0b3Jfd2hpdGUucG5nIjozMDUsIi4vY3JlZF9vcHRpb25fYXV0aGVudGljYXRvcl93aGl0ZS5zdmciOjMwNiwiLi9jcmVkX29wdGlvbl9mYWNlYm9vay5wbmciOjMwNywiLi9jcmVkX29wdGlvbl9mZWRlcmF0ZWQucG5nIjozMDgsIi4vY3JlZF9vcHRpb25fZmVkZXJhdGVkLnN2ZyI6MzA5LCIuL2NyZWRfb3B0aW9uX2ZlZGVyYXRlZF93aGl0ZS5wbmciOjMxMCwiLi9jcmVkX29wdGlvbl9mZWRlcmF0ZWRfd2hpdGUuc3ZnIjozMTEsIi4vY3JlZF9vcHRpb25fZmlkby5wbmciOjIxNCwiLi9jcmVkX29wdGlvbl9maWRvLnN2ZyI6MjE1LCIuL2NyZWRfb3B0aW9uX2ZpZG9fd2hpdGUucG5nIjoyMTIsIi4vY3JlZF9vcHRpb25fZmlkb193aGl0ZS5zdmciOjIxMywiLi9jcmVkX29wdGlvbl9mb3Jnb3QucG5nIjozMTIsIi4vY3JlZF9vcHRpb25fZm9yZ290LnN2ZyI6MzEzLCIuL2NyZWRfb3B0aW9uX2ZvcmdvdF93aGl0ZS5wbmciOjMxNCwiLi9jcmVkX29wdGlvbl9mb3Jnb3Rfd2hpdGUuc3ZnIjozMTUsIi4vY3JlZF9vcHRpb25fZ2l0aHViLnBuZyI6MzE2LCIuL2NyZWRfb3B0aW9uX2dpdGh1Yi5zdmciOjMxNywiLi9jcmVkX29wdGlvbl9naXRodWJfd2hpdGUucG5nIjozMTgsIi4vY3JlZF9vcHRpb25fZ2l0aHViX3doaXRlLnN2ZyI6MzE5LCIuL2NyZWRfb3B0aW9uX2dvb2dsZS5wbmciOjMyMCwiLi9jcmVkX29wdGlvbl9nb29nbGUuc3ZnIjozMjEsIi4vY3JlZF9vcHRpb25fbGlua2VkaW4ucG5nIjozMjIsIi4vY3JlZF9vcHRpb25fbGlua2VkaW4uc3ZnIjozMjMsIi4vY3JlZF9vcHRpb25fbGlua2VkaW5fd2hpdGUucG5nIjozMjQsIi4vY3JlZF9vcHRpb25fbGlua2VkaW5fd2hpdGUuc3ZnIjozMjUsIi4vY3JlZF9vcHRpb25fbWljcm9zb2Z0LnBuZyI6MzI2LCIuL2NyZWRfb3B0aW9uX21pY3Jvc29mdC5zdmciOjMyNywiLi9jcmVkX29wdGlvbl9wYXNzd29yZC5wbmciOjMyOCwiLi9jcmVkX29wdGlvbl9wYXNzd29yZC5zdmciOjMyOSwiLi9jcmVkX29wdGlvbl9wYXNzd29yZF93aGl0ZS5wbmciOjMzMCwiLi9jcmVkX29wdGlvbl9wYXNzd29yZF93aGl0ZS5zdmciOjMzMSwiLi9jcmVkX29wdGlvbl9yZW1vdGUucG5nIjozMzIsIi4vY3JlZF9vcHRpb25fcmVtb3RlLnN2ZyI6MzMzLCIuL2NyZWRfb3B0aW9uX3JlbW90ZV93aGl0ZS5wbmciOjMzNCwiLi9jcmVkX29wdGlvbl9yZW1vdGVfd2hpdGUuc3ZnIjozMzV9O2kua2V5cz1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhhKX0saS5yZXNvbHZlPW8sZS5leHBvcnRzPWksaS5pZD0yOTh9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hY2Nlc3NwYXNzXzRhMWZmZTI4MDIyYmNlNjBhNjZlNTU2MWNhN2RhODA4LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hY2Nlc3NwYXNzXzgxNzllOGRjODU4NjE2NjdhM2QyZDA2ZTEyNmIwMGU0LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hY2Nlc3NwYXNzX3doaXRlX2YxZDM2YTE3ZmVhZGMyOTU5OTMzNmRlNzQ1ZGMyYjQ3LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hY2Nlc3NwYXNzX3doaXRlXzg2YTgyNzdhZTVjYzEzMTA1MmQ0NTc3NmEwZmMyYjcwLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hdXRoZW50aWNhdG9yXzk0MmFjNzFmNzdjYjA0MDA0YjBhYjI1OTUwZTE3MGI1LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hdXRoZW50aWNhdG9yX2YwN2FmYjI3YWQ1MTBkYzc4NWE5NGU4MDJlM2Q3ZjczLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hdXRoZW50aWNhdG9yX3doaXRlXzlmZTRjN2M4YjQxMzUzODQzOTk2NWI5ZTg2NTVkZWExLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9hdXRoZW50aWNhdG9yX3doaXRlX2FmNzA5MWQ3NTI0NmYxYjJiZjljODNhODRlZGQwN2M4LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9mYWNlYm9va183NDliZDY1OTE0YTlhYjFhNzE3ZTE5Y2YyNGU1OTE2MS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fZmVkZXJhdGVkXzRhMWZmZTI4MDIyYmNlNjBhNjZlNTU2MWNhN2RhODA4LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9mZWRlcmF0ZWRfODE3OWU4ZGM4NTg2MTY2N2EzZDJkMDZlMTI2YjAwZTQuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2ZlZGVyYXRlZF93aGl0ZV9mMWQzNmExN2ZlYWRjMjk1OTkzMzZkZTc0NWRjMmI0Ny5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fZmVkZXJhdGVkX3doaXRlXzg2YTgyNzdhZTVjYzEzMTA1MmQ0NTc3NmEwZmMyYjcwLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9mb3Jnb3RfOTQxMDFkMDUwMGQxM2E2NWNlNjNkY2U4ZDVhYWM4N2IucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2ZvcmdvdF8yY2EyZWE4OTE3Zjk3YWVmNDdkMDBlOWIwMWQxMWQ2MC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fZm9yZ290X3doaXRlX2M0N2M4N2E3MDk3ZWYwZDZjNTg1NzU2OGQzNjQyOTRiLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9mb3Jnb3Rfd2hpdGVfODE3MjkyZGFmZDQwN2RmOWY5MWMxYWIwOWNhYzQwNTYuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2dpdGh1Yl9hOTUxYWVkNjQ3NGQ4NTQ0NTQ0ODA3NjgyZTllZjM4NS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fZ2l0aHViX2E3Yzc2OWUzMWE2MjhlNjQzODQxMTg3ZDIwZTE0OWUzLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9naXRodWJfd2hpdGVfNTc5YTNjYzgxZjg4NDViY2RmOWMzNWRiMWRkNWFiZmYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2dpdGh1Yl93aGl0ZV9kMGY4NmM4OTA4YTMwMTZmMTExZDkyNjIwYmIxNTcwMy5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fZ29vZ2xlXzRiOTRlYjY4YWMwYjBkM2IzMTE5NmI3ZjU1MzdlZGE1LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9nb29nbGVfY2EwZTAyYTJkNDBjZGRhZDIwODk4NDVlNjRhMzI5OTQuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2xpbmtlZGluX2EzNjZmZDE3OTI4NmQzZWQ1YTM2MWQ5MTE2YTQwN2Q2LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9saW5rZWRpbl8xNjA4NTU4ODJmOTMxY2E1YjU4ZGNhNTQ5MzNhN2JmMS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fbGlua2VkaW5fd2hpdGVfZjY4MWRkNTAzNGNhYTNhMzdhNDJkNGIxNTgzNmIwMmIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX2xpbmtlZGluX3doaXRlX2ZjM2IxNWZmNDExMWQ2ZDNiN2ZkOTVmNDZlZTVjOWY1LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9taWNyb3NvZnRfODNiZTk4MzA1NmNlNzQzYTdiYzEwNTc1NWY5NjNmNGQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX21pY3Jvc29mdF8wYjZlZGU1N2Q1YmI2MWQ0ZTcxMzRjM2Y2M2FiOWVjNy5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fcGFzc3dvcmRfNGExZmZlMjgwMjJiY2U2MGE2NmU1NTYxY2E3ZGE4MDgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX3Bhc3N3b3JkXzgxNzllOGRjODU4NjE2NjdhM2QyZDA2ZTEyNmIwMGU0LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9wYXNzd29yZF93aGl0ZV9mMWQzNmExN2ZlYWRjMjk1OTkzMzZkZTc0NWRjMmI0Ny5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fcGFzc3dvcmRfd2hpdGVfODZhODI3N2FlNWNjMTMxMDUyZDQ1Nzc2YTBmYzJiNzAuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX3JlbW90ZV9hNDFiNDMxMDQzZTQ0MzA3MGMwOTk4MWRiMTQyNWUyMi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY3JlZGVudGlhbG9wdGlvbnMvY3JlZF9vcHRpb25fcmVtb3RlXzMwMzFjMGI4ZGZhN2IwNzFjZGIwYThhNGM5MWZhYTU2LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jcmVkZW50aWFsb3B0aW9ucy9jcmVkX29wdGlvbl9yZW1vdGVfd2hpdGVfMDQ4MzUyYWIxNzdlZGM2ZjgzNzc2NDE5NGJhNjk4MTgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NyZWRlbnRpYWxvcHRpb25zL2NyZWRfb3B0aW9uX3JlbW90ZV93aGl0ZV9hOWQ2NGMxOTEzYTk2NmU5ODcyZDQ1OWE0NWJjYWM2MC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtyZXR1cm4gbihvKGUpKX1mdW5jdGlvbiBvKGUpe3JldHVybiBhW2VdfHxmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2UrIicuIil9KCl9dmFyIGE9eyIuL3BpY2tlcl92ZXJpZnlfYXV0aGVudGljYXRvci5wbmciOjI2OSwiLi9waWNrZXJfdmVyaWZ5X2F1dGhlbnRpY2F0b3Iuc3ZnIjoyNzAsIi4vcGlja2VyX3ZlcmlmeV9hdXRoZW50aWNhdG9yX3doaXRlLnBuZyI6MjY3LCIuL3BpY2tlcl92ZXJpZnlfYXV0aGVudGljYXRvcl93aGl0ZS5zdmciOjI2OCwiLi9waWNrZXJfdmVyaWZ5X2NhbGwucG5nIjoyNjUsIi4vcGlja2VyX3ZlcmlmeV9jYWxsLnN2ZyI6MjY2LCIuL3BpY2tlcl92ZXJpZnlfY2FsbF93aGl0ZS5wbmciOjI2MywiLi9waWNrZXJfdmVyaWZ5X2NhbGxfd2hpdGUuc3ZnIjoyNjQsIi4vcGlja2VyX3ZlcmlmeV9jb2RlLnBuZyI6MjczLCIuL3BpY2tlcl92ZXJpZnlfY29kZS5zdmciOjI3NCwiLi9waWNrZXJfdmVyaWZ5X2NvZGVfd2hpdGUucG5nIjoyNzEsIi4vcGlja2VyX3ZlcmlmeV9jb2RlX3doaXRlLnN2ZyI6MjcyLCIuL3BpY2tlcl92ZXJpZnlfZW1haWwucG5nIjoyNTcsIi4vcGlja2VyX3ZlcmlmeV9lbWFpbC5zdmciOjI1OCwiLi9waWNrZXJfdmVyaWZ5X2VtYWlsX3doaXRlLnBuZyI6MjU1LCIuL3BpY2tlcl92ZXJpZnlfZW1haWxfd2hpdGUuc3ZnIjoyNTYsIi4vcGlja2VyX3ZlcmlmeV9zbXMucG5nIjoyNjEsIi4vcGlja2VyX3ZlcmlmeV9zbXMuc3ZnIjoyNjIsIi4vcGlja2VyX3ZlcmlmeV9zbXNfd2hpdGUucG5nIjoyNTksIi4vcGlja2VyX3ZlcmlmeV9zbXNfd2hpdGUuc3ZnIjoyNjB9O2kua2V5cz1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhhKX0saS5yZXNvbHZlPW8sZS5leHBvcnRzPWksaS5pZD0zMzZ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTgpLG4oMjA3KSxuKDIwOSksbigzMzgpLCIiKSsnIC0tPiA8ZGl2IGlkPWxvZ2luSGVhZGVyIGNsYXNzPSJyb3cgdGV4dC10aXRsZSIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9IlxuICAgIHRleHQ6IGlzVXNlcktub3duID8gc3RyW1wnQ1RfU1RSX0NyZWRlbnRpYWxQaWNrZXJfVGl0bGVcJ10gOiBzdHJbXCdDVF9TVFJfQ3JlZGVudGlhbFBpY2tlcl9UaXRsZV9Ob1VzZXJcJ10iPiA8L2Rpdj48IS0tIGtvIGlmOiBlcnJvciAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8ZGl2IGlkPWlkRGl2X0Vycm9yIGNsYXNzPSJhbGVydC1lcnJvciByb3cgdGV4dC1ib2R5IHRleHQtYmxvY2stYm9keSIgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlIGFyaWEtcmVsZXZhbnQ9dGV4dCBhcmlhLWF0b21pYz10cnVlIGRhdGEtYmluZD0idGV4dDogZXJyb3IiPjwvZGl2PjwhLS0ga28gaWY6IGVycm9yKCkucmVtZWRpYXRpb25UZXh0IC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5IHRleHQtYmxvY2stYm9keSIgZGF0YS1iaW5kPSJ0ZXh0OiBlcnJvcigpLnJlbWVkaWF0aW9uVGV4dCI+PC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGlkPWNyZWRlbnRpYWxMaXN0IGNsYXNzPWZvcm0tZ3JvdXAgcm9sZT1saXN0Ym94IGFyaWEtbGFiZWxsZWRieT0iaWREaXZfRXJyb3IgbG9naW5IZWFkZXIiPjwhLS0ga28gZm9yZWFjaDogeyBkYXRhOiBmaWx0ZXJlZENyZWRlbnRpYWxzLCBhczogXCdjcmVkZW50aWFsXCcgfSAtLT4gPGRpdiBjbGFzcz10aWxlLWNvbnRhaW5lcj4gPGRpdiBjbGFzcz0icm93IHRpbGUiPiA8ZGl2IGNsYXNzPXRhYmxlIHRhYmluZGV4PTAgcm9sZT1vcHRpb24gZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgY2xpY2s6ICRwYXJlbnQudGlsZV9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBwcmVzc0VudGVyOiAkcGFyZW50LnRpbGVfb25DbGljayxcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBoZWxwVGV4dCgpICYmICRwYXJlbnQuZGlzcGxheUhlbHAgPyBkZXNjcmlwdGlvbigpICsgXCcgXCcgKyBoZWxwVGV4dCgpIDogZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgIGhhc0ZvY3VzOiAkaW5kZXgoKSA9PT0gMCxcbiAgICAgICAgICAgICAgICAgICAgYXR0cjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCdkYXRhLXRlc3QtY3JlZC1pZFwnOiBjcmVkVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwnZGF0YS10ZXN0LXByb29mLXZhbHVlXCc6IHByb29mVmFsdWUgfSI+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGlsZS1pbWciPiA8ZGl2PjwhLS0ga28gY29tcG9uZW50OiBcJ2FjY2Vzc2libGUtaW1hZ2UtY29udHJvbFwnIC0tPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIGRhdGEtYmluZD0iYXR0cjogeyBzcmM6IGxpZ2h0SWNvblVybCB9Ii8+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gZGF0YS1iaW5kPSJhdHRyOiB7IHNyYzogZGFya0ljb25VcmwgfSIvPjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGV4dC1sZWZ0IGNvbnRlbnQiIGFyaWEtaGlkZGVuPXRydWU+IDxkaXYgZGF0YS1iaW5kPSJ0ZXh0OiBkZXNjcmlwdGlvbiI+PC9kaXY+PCEtLSBrbyBpZjogaGVscFRleHQoKSAmJiAkcGFyZW50LmRpc3BsYXlIZWxwIC0tPiA8ZGl2PjxzbWFsbCBkYXRhLWJpbmQ9InRleHQ6IGhlbHBUZXh0Ij48L3NtYWxsPjwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj48IS0tIGtvIGlmOiAkcGFyZW50LmRpc3BsYXlIZWxwIC0tPiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtYmFkZ2UiPjwhLS0ga28gaWY6IGhlbHBEaWFsb2dJZCAtLT4gPHNwYW4gY2xhc3M9aGVscC1idXR0b24gcm9sZT1idXR0b24gdGFiaW5kZXg9MCBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiAkcGFyZW50LnRpbGVIZWxwX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc3NFbnRlcjogJHBhcmVudC50aWxlSGVscF9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogYXJpYUxhYmVsKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXM6IGhlbHBEaWFsb2dJZCA9PT0gJHBhcmVudC5mb2N1c2VkSGVscEljb24oKSI+PCEtLSBrbyBjb21wb25lbnQ6IFwnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sXCcgLS0+IDxpbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPScrbigyMTYpKyIgc3Znc3JjPSIrbigyMTcpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMjE4KSsiIHN2Z3NyYz0iK24oMjE5KSsiIGRhdGEtYmluZD1pbWdTcmMgLz48IS0tIC9rbyAtLT4gPC9zcGFuPjwhLS0gL2tvIC0tPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgZGF0YS1iaW5kPVwiY3NzOiB7ICdwb3NpdGlvbi1idXR0b25zJzogc3ZyLmZTaG93QnV0dG9ucyB9XCI+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIHJlbW92ZUJvdHRvbU1hcmdpbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25FbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgJiYgKCFpc0luaXRpYWxWaWV3IHx8ICEhc3ZyLmZBbGxvd0NhbmNlbCkgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfVwiPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0ga28gaWY6IGRpc3BsYXlIZWxwIC0tPjwhLS0ga28gaWY6IGhhc0ZpZG8gLS0+IDxkaXYgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdmaWRvLWhlbHAtZGlhbG9nLWNvbnRlbnQtY29udHJvbCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGU6IGlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCkgfSxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIHJlZ2lzdGVyRGlhbG9nOiBvblJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICAgICAgdW5yZWdpc3RlckRpYWxvZzogb25VbnJlZ2lzdGVyRGlhbG9nIH0gfVwiPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBoYXNHaXRIdWIgLS0+IDxkaXYgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdnaXRodWItaGVscC1kaWFsb2ctY29udGVudC1jb250cm9sJyxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIHJlZ2lzdGVyRGlhbG9nOiBvblJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICAgICAgdW5yZWdpc3RlckRpYWxvZzogb25VbnJlZ2lzdGVyRGlhbG9nIH0gfVwiPiA8L2Rpdj48IS0tIC9rbyAtLT4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoKXt2YXIgZT10aGlzO2Uub25SZWdpc3RlckRpYWxvZz1yLmNyZWF0ZSgpLGUub25VbnJlZ2lzdGVyRGlhbG9nPXIuY3JlYXRlKCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImdpdGh1Yi1oZWxwLWRpYWxvZy1jb250ZW50LWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDMzOSksc3luY2hyb25vdXM6IXMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihzLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksbigyMTEpLCIiKSsiIC0tPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZGlhbG9nLWNvbnRlbnQtY29udHJvbCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIGRpYWxvZ0lkOiAiK24oNSkuRGlhbG9nSWQuR2l0SHViSGVscCsiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBsYWJlbGxlZEJ5OiAnZ2l0SHViRGlhbG9nVGl0bGUnLFxuICAgICAgICAgICAgZGVzY3JpYmVkQnk6ICdnaXRIdWJEaWFsb2dEZXNjIGdpdEh1YkRpYWxvZ0Rlc2MyJyB9IH0sXG4gICAgZXZlbnQ6IHtcbiAgICAgICAgcmVnaXN0ZXJEaWFsb2c6IG9uUmVnaXN0ZXJEaWFsb2csXG4gICAgICAgIHVucmVnaXN0ZXJEaWFsb2c6IG9uVW5yZWdpc3RlckRpYWxvZyB9IH1cIj4gPGRpdiBpZD1naXRIdWJEaWFsb2dUaXRsZSBjbGFzcz1cInJvdyB0ZXh0LXRpdGxlXCI+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMzE4KSsiIHN2Z3NyYz0iK24oMzE5KSsiIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDMxNikrIiBzdmdzcmM9IituKDMxNykrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+PCEtLSAva28gLS0+IDxzcGFuIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9Vc2VHaXRIdWJfTGlua1wnXSI+PC9zcGFuPiA8L2Rpdj4gPGRpdiBpZD1naXRIdWJEaWFsb2dEZXNjIGNsYXNzPSJyb3cgdGV4dC1ib2R5IG5vLW1hcmdpbi10b3AiIGRhdGEtYmluZD0iIHRleHQ6IHN0cltcJ0NUX1NUUl9HaXRIdWJEaWFsb2dfRGVzY1wnXSI+PC9kaXY+IDxkaXYgaWQ9Z2l0SHViRGlhbG9nRGVzYzIgY2xhc3M9InJvdyB0ZXh0LWJvZHkiIGRhdGEtYmluZD0iIHRleHQ6IHN0cltcJ0NUX1NUUl9HaXRIdWJEaWFsb2dfRGVzYzJcJ10iPjwvZGl2PiA8L2Rpdj4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KCl7Zi50aXRsZShSLkNUX0ZJRE9fU1RSX1BhZ2VfVGl0bGVfTm9IZWxsbyksbC50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKGMuaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGUoKS50aGVuKGZ1bmN0aW9uKGUpe2UmJmYudGl0bGUoUi5DVF9GSURPX1NUUl9QYWdlX1RpdGxlKX0sZnVuY3Rpb24oKXt9KSl9ZnVuY3Rpb24gbigpe2YuaXNSZXF1ZXN0UGVuZGluZyghMCk7dmFyIGU9e2FsbG93ZWRJZGVudGl0aWVzOmosY2FuYXJ5Onosc2VydmVyQ2hhbGxlbmdlOnoscG9zdEJhY2tVcmw6JCxwb3N0QmFja1VybEFhZDpYLHBvc3RCYWNrVXJsTXNhOkosY2FuY2VsVXJsOlEscmVzdW1lVXJsOll8fFEsY29ycmVsYXRpb25JZDpaLGNyZWRlbnRpYWxzSnNvbjpELGN0eDpILHVzZXJuYW1lOnl9O2Yub25SZWRpcmVjdChNLGUsITEsITApfWZ1bmN0aW9uIGEoKXtmLmlzUmVxdWVzdFBlbmRpbmcoITApO3ZhciBlPXt0eXBlOnYuTkdDLHBzOnYuTkdDLGFzc2VydGlvbjpmLmZpZG9Bc3NlcnRpb24oKSxsbWNDYW5hcnk6cSxocGdyZXF1ZXN0aWQ6RyxjdHg6SH07ZVtLXT1FLGYub25SZWRpcmVjdCgkLGUsITEsITApfWZ1bmN0aW9uIHIoZSl7dmFyIHQ9dS5hcnJheUJ1ZmZlclRvU3RyaW5nKGUpO3JldHVybiB0Lm1hdGNoKC9eTS46Lyk/Yi5Nc2FPbmx5OnQubWF0Y2goL15PLjovKT9iLkFhZE9ubHk6dm9pZCAwfWZ1bmN0aW9uIHAoKXtmLmlzUmVxdWVzdFBlbmRpbmcoITApLGYuc2hvd1RyeUFnYWluQnV0dG9uKCEwKSxmLmVycm9yKG51bGwpLGMuZ2V0QXNzZXJ0aW9uKHosRCxGKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciB0PWUucmVzcG9uc2Usbj17aWQ6ZS5pZCxjbGllbnREYXRhSlNPTjp1LmFycmF5QnVmZmVyVG9CYXNlNjRVcmxTdHJpbmcodC5jbGllbnREYXRhSlNPTiksYXV0aGVudGljYXRvckRhdGE6dS5hcnJheUJ1ZmZlclRvQmFzZTY0VXJsU3RyaW5nKHQuYXV0aGVudGljYXRvckRhdGEpLHNpZ25hdHVyZTp1LmFycmF5QnVmZmVyVG9CYXNlNjRVcmxTdHJpbmcodC5zaWduYXR1cmUpLHVzZXJIYW5kbGU6dS5hcnJheUJ1ZmZlclRvQmFzZTY0VXJsU3RyaW5nKHQudXNlckhhbmRsZSl9O2lmKFcmJnQudXNlckhhbmRsZSl7dmFyIG89cih0LnVzZXJIYW5kbGUpO2lmKGohPT1iLkJvdGgmJm8hPT1qKXRocm93IG89PT1iLk1zYU9ubHk/bmV3IGkuRmlkb0Vycm9yKFIuQ1RfUFdEX1NUUl9FcnJvcl9Mb2dpbkZhaWx1cmVfT25seU1zYUFsbG93ZWQpOm89PT1iLkFhZE9ubHk/bmV3IGkuRmlkb0Vycm9yKFIuQ1RfUFdEX1NUUl9FcnJvcl9Vc2VybmFtZU5vdEV4aXN0X0NvbnN1bWVyRW1haWwpOm5ldyBpLkZpZG9FcnJvcihSLkNUX0ZJRE9fU1RSX0Vycm9yX1Vua25vd24pO2lmKG89PT1iLk1zYU9ubHkmJkopJD1KO2Vsc2V7aWYobyE9PWIuQWFkT25seXx8IVgpdGhyb3cgbmV3IGkuRmlkb0Vycm9yKFIuQ1RfRklET19TVFJfRXJyb3JfVW5rbm93bik7JD1YfX1mLmZpZG9Bc3NlcnRpb24oZC5zdHJpbmdpZnkobikpLFc/YSgpOmYub25TdWJtaXRSZWFkeSghMCl9KVsiY2F0Y2giXShmdW5jdGlvbihlKXtzd2l0Y2goZS5uYW1lKXtjYXNlIk5vdEZvdW5kRXJyb3IiOmYuZXJyb3IoUi5DVF9GSURPX1NUUl9FcnJvcl9Ob3RGb3VuZCk7YnJlYWs7Y2FzZSJOb3RBbGxvd2VkRXJyb3IiOmYuZXJyb3IoUi5DVF9GSURPX1NUUl9FcnJvcl9Ob3RBbGxvd2VkKTticmVhaztjYXNlIkNvbnN0cmFpbnRFcnJvciI6Zi5lcnJvcihSLkNUX0ZJRE9fU1RSX0Vycm9yX0NvbnN0cmFpbnQpO2JyZWFrO2Nhc2UiRmlkb0Vycm9yIjpmLmVycm9yKGUubWVzc2FnZSk7YnJlYWs7ZGVmYXVsdDpmLmVycm9yKFIuQ1RfRklET19TVFJfRXJyb3JfVW5rbm93bil9Zi5pc1JlcXVlc3RQZW5kaW5nKCExKX0pfXZhciBmPXRoaXMsXz1lLnNlcnZlckRhdGEsUz1lLmF2YWlsYWJsZUNyZWRzfHxbXSx3PWUuZXZpY3RlZENyZWRzfHxbXSxUPWUudXNlRXZpY3RlZENyZWRlbnRpYWxzLEM9ZS5kaXNwbGF5TmFtZSx5PWUudXNlcm5hbWUsaz1lLmlzSW5pdGlhbFZpZXcseD1lLmNoYWxsZW5nZSxEPWUuYWxsb3dMaXN0LFA9ZS5zZXNzaW9ucyxJPWUuc2VydmVyRXJyb3IsRT1lLmZsb3dUb2tlbixSPV8uc3RyLEE9Xy5mTG9ja1VzZXJuYW1lLEI9Xy51cmxTd2l0Y2gsTD1fLmZTaG93U3dpdGNoVXNlcixGPV8uc0Nvb2tpZURvbWFpbixOPV8uZlNob3dCdXR0b25zLE89Xy5mU2hvd0NvbmZpcm0sVT0hIV8uZkFsbG93Q2FuY2VsLE09Xy51cmxGaWRvTG9naW4sVj1fLnVybENhbmNlbCxIPV8uc0N0eCxqPV8uaUFsbG93ZWRJZGVudGl0aWVzLHE9Xy5zQ3Jvc3NEb21haW5DYW5hcnksRz1fLnNlc3Npb25JZCxXPV8uZkZpZG9Vc2VBbGxvd2VkSWRlbnRpdGllcyxLPV8uc0ZUTmFtZSx6PVc/Xy5zRmlkb0NoYWxsZW5nZTp4LCQ9Xy51cmxQb3N0LFg9Xy51cmxQb3N0QWFkLEo9Xy51cmxQb3N0TXNhLFE9Xy51cmxMb2dpbixZPV8udXJsUmVzdW1lLFo9Xy5jb3JyZWxhdGlvbklkLGVlPW51bGwsdGU9ITE7Zi5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksZi5maWRvQXNzZXJ0aW9uPW8ub2JzZXJ2YWJsZShudWxsKSxmLnNob3dUcnlBZ2FpbkJ1dHRvbj1vLm9ic2VydmFibGUoIWspLGYudGl0bGU9by5vYnNlcnZhYmxlKG51bGwpLGYuZXJyb3I9by5vYnNlcnZhYmxlKG51bGwpLGYudXNlRXZpY3RlZENyZWRlbnRpYWxzPW8ub2JzZXJ2YWJsZShUKSxmLnVuc2FmZV9kaXNwbGF5TmFtZT1udWxsLGYudW5zYWZlX3VzZXJuYW1lPW51bGwsZi51c2VybmFtZT15LGYuYXZhaWxhYmxlQ3JlZHM9UyxmLmV2aWN0ZWRDcmVkcz13LGYuaXNJbml0aWFsVmlldz1rLGYuZmxvd1Rva2VuPUUsZi5zaG93Q2hhbmdlVXNlckxpbms9ITEsZi5vblN3aXRjaFZpZXc9cy5jcmVhdGUoKSxmLm9uU3VibWl0UmVhZHk9cy5jcmVhdGUoKSxmLm9uUmVkaXJlY3Q9cy5jcmVhdGUoKSxmLm9uU2V0QmFja0J1dHRvblN0YXRlPXMuY3JlYXRlKCksZi5vblVwZGF0ZUZsb3dUb2tlbj1zLmNyZWF0ZSgpLGYuZGlzcG9zZT1mdW5jdGlvbigpe30sZi5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLnVzZUV2aWN0ZWRDcmVkZW50aWFscz10ZXx8Zi51c2VFdmljdGVkQ3JlZGVudGlhbHMoKSxlZSYmKGUub3RjQ3JlZGVudGlhbD1lZSl9LGYuZ2V0U3RhdGU9ZnVuY3Rpb24oKXt2YXIgZT17dXNlRXZpY3RlZENyZWRlbnRpYWxzOmYudXNlRXZpY3RlZENyZWRlbnRpYWxzKCl9O3JldHVybiBlfSxmLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiZmLnVzZUV2aWN0ZWRDcmVkZW50aWFscyhlLnVzZUV2aWN0ZWRDcmVkZW50aWFscyl9LGYucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7TT9uKCk6cCgpfSxmLnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7ayYmVj9mLm9uUmVkaXJlY3QoVik6Zi5vblN3aXRjaFZpZXcobS5QcmV2aW91cyl9LGYuc2VsZWN0QWNjb3VudF9vbkNsaWNrPWZ1bmN0aW9uKCl7QSYmQj9mLm9uUmVkaXJlY3QoQik6Zi5vblN3aXRjaFZpZXcoUC5sZW5ndGg/bS5UaWxlczptLlVzZXJuYW1lKX0sZi5zd2l0Y2hUb0V2aWN0ZWRDcmVkUGlja2VyX29uQ2xpY2s9ZnVuY3Rpb24oKXt0ZT0hMCxmLm9uU3dpdGNoVmlldyhtLkNyZWRlbnRpYWxQaWNrZXIpfSxmLmNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldz1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGU9PT1tLkNyZWRlbnRpYWxQaWNrZXImJlk/dm9pZCBmLm9uUmVkaXJlY3QoWSk6KG4mJihlZT1uKSx2b2lkIGYub25Td2l0Y2hWaWV3KGUsdCkpfSxmLmNyZWRTd2l0Y2hMaW5rX29uU2V0UGVuZGluZ1JlcXVlc3Q9ZnVuY3Rpb24oZSl7Zi5pc1JlcXVlc3RQZW5kaW5nKGUpfSxmLmNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuPWZ1bmN0aW9uKGUpe2UmJihFPWUsZi5vblVwZGF0ZUZsb3dUb2tlbihlKSl9LGZ1bmN0aW9uKCl7dCgpLGYudW5zYWZlX2Rpc3BsYXlOYW1lPWguaHRtbFVuZXNjYXBlKEMpLGYudW5zYWZlX3VzZXJuYW1lPWguaHRtbFVuZXNjYXBlKHkpLGYuc2hvd0NoYW5nZVVzZXJMaW5rPUwmJihBJiZCfHxrKSxZJiYoZi5hdmFpbGFibGVDcmVkcz1be2NyZWRUeXBlOmcuUGFzc3dvcmQsc2hvd25Pbmx5T25QaWNrZXI6ITB9XSk7dmFyIGU9IWt8fE89PT0hMTtJP2YuZXJyb3IoSSk6TT9zZXRUaW1lb3V0KG4sMCk6ZSYmcCgpLGYub25TZXRCYWNrQnV0dG9uU3RhdGUoTiYmKCFrfHxVKSl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz1uKDIwMSksZD1uKDcpLGw9bigxMiksdT1uKDE3NSkscD1uKDE2KSxmPXdpbmRvdyxnPWEuQ3JlZGVudGlhbFR5cGUsbT1hLlBhZ2luYXRlZFN0YXRlLHY9YS5Qb3N0VHlwZSxoPXIuSGVscGVyLGI9cC5BbGxvd2VkSWRlbnRpdGllc1R5cGU7aS5GaWRvRXJyb3I9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Lm5hbWU9IkZpZG9FcnJvciIsdC5tZXNzYWdlPWUsdC5zdGFjaz0obmV3IEVycm9yKS5zdGFja30saS5GaWRvRXJyb3IucHJvdG90eXBlPW5ldyBFcnJvcixvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWZpZG8tdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzQxKSxzeW5jaHJvbm91czohZi5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxyLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGYuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSxuKDIzNiksbigyMDApLCIiKSsnIC0tPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT11YWlkIGRhdGEtYmluZD0idmFsdWU6IHN2ci5zVW5hdXRoU2Vzc2lvbklEIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWxvZ2luIGRhdGEtYmluZD0idmFsdWU6IHVuc2FmZV91c2VybmFtZSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1sb2dpbmZtdCBkYXRhLWJpbmQ9InZhbHVlOiB1bnNhZmVfZGlzcGxheU5hbWUiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9dHlwZSB2YWx1ZT0iJytuKDUpLlBvc3RUeXBlLk5HQysnIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPUxvZ2luT3B0aW9ucyBkYXRhLWJpbmQ9InZhbHVlOiAnK24oMTYpLkxvZ2luT3B0aW9uLk5vdGhpbmdDaGVja2VkKyciLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9YXNzZXJ0aW9uIGRhdGEtYmluZD0idmFsdWU6IGZpZG9Bc3NlcnRpb24iLz4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz0icm93IHRleHQtdGl0bGUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiB0aXRsZSI+PC9kaXY+IDxkaXYgY2xhc3M9c2VjdGlvbj4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSI+PCEtLSBrbyBpZjogZXJyb3IoKSAmJiAhaXNSZXF1ZXN0UGVuZGluZygpIC0tPiA8ZGl2IGlkPWZpZG9FcnJvciBjbGFzcz0iYWxlcnQgYWxlcnQtZXJyb3IiIHJvbGU9YWxlcnQgYXJpYS1saXZlPWFzc2VydGl2ZSBhcmlhLXJlbGV2YW50PXRleHQgYXJpYS1hdG9taWM9dHJ1ZSBkYXRhLWJpbmQ9InRleHQ6IGVycm9yIj48L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmbm90OiBlcnJvciAtLT4gPGRpdiBpZD1wYWdlRGVzY3JpcHRpb24gZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9GSURPX1NUUl9QYWdlX0Rlc2NyaXB0aW9uXCddIj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogaXNSZXF1ZXN0UGVuZGluZyAtLT4gPGRpdiBjbGFzcz0icm93IHByb2dyZXNzLWNvbnRhaW5lciI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciB0YWJpbmRleD0tMSBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgaGFzRm9jdXM6IHRydWUsIGFyaWFMYWJlbDogc3RyW1wnV0ZfU1RSX1Byb2dyZXNzVGV4dFwnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cG9zaXRpb24tYnV0dG9ucz4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgY2xhc3M9Y29sLW1kLTI0PiA8ZGl2IGNsYXNzPSJ0ZXh0LTEzIGFjdGlvbi1saW5rcyI+PCEtLSBrbyBpZm5vdDogaXNSZXF1ZXN0UGVuZGluZyAtLT48IS0tIGtvIGlmbm90OiB1c2VFdmljdGVkQ3JlZGVudGlhbHMgLS0+PCEtLSBrbyBjb21wb25lbnQ6IHsgbmFtZTogImNyZWQtc3dpdGNoLWxpbmstY29udHJvbCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogYXZhaWxhYmxlQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb3dUb2tlbjogZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Q3JlZDogeyBjcmVkVHlwZTogJytuKDUpLkNyZWRlbnRpYWxUeXBlLkZpZG8rIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoVmlldzogY3JlZFN3aXRjaExpbmtfb25Td2l0Y2hWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6IGNyZWRTd2l0Y2hMaW5rX29uU2V0UGVuZGluZ1JlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogY3JlZFN3aXRjaExpbmtfb25VcGRhdGVGbG93VG9rZW4gfSB9IC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGV2aWN0ZWRDcmVkcy5sZW5ndGggPiAwIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWV2aWN0ZWRBY2NvdW50IGhyZWY9IyBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX1BXRF9TVFJfU3dpdGNoVG9DcmVkUGlja2VyX0xpbmtfRXZpY3RlZEFjY3QnXSwgY2xpY2s6IHN3aXRjaFRvRXZpY3RlZENyZWRQaWNrZXJfb25DbGlja1wiPjwvYT4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc2hvd0NoYW5nZVVzZXJMaW5rIC0tPiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxhIGlkPWkxNjY4IGhyZWY9IyBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0NUX0ZFRF9TVFJfQ2hhbmdlVXNlckxpbmtfVGV4dCddLCBjbGljazogc2VsZWN0QWNjb3VudF9vbkNsaWNrXCI+PC9hPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Zvb3Rlci1idXR0b25zLWZpZWxkJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25FbmFibGVkOiAhaXNSZXF1ZXN0UGVuZGluZygpLFxuICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogKCFpc0luaXRpYWxWaWV3IHx8ICEhc3ZyLmZBbGxvd0NhbmNlbCkgJiYgIXVuc2FmZV9kaXNwbGF5TmFtZSxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBzaG93VHJ5QWdhaW5CdXR0b24oKSA/IHN0clsnQ1RfRklET19TVFJfVHJ5QWdhaW5fQnV0dG9uJ10gOiBzdHJbJ0NUX1BXRF9TVFJfU2lnbkluX0J1dHRvbl9OZXh0J10gfSxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIHByaW1hcnlCdXR0b25DbGljazogcHJpbWFyeUJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfVwiPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwvZGl2PiI7Cn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxuPWUuc2VydmVyRGF0YSxpPW4uc3RyLG89bi5odG1sLGE9bi5pQmluZFByb3ZpZGVyLHI9bi51cmxHb1RvQUFERXJyb3Iscz1uLm9VcmxPdGhlcklkcFBvc3RQYXJhbXMsZD1uLnVybEZlZFNpZ251cCxsPW4ub0ZlZFNpZ251cFBvc3RQYXJhbXMsXz1uLmFyckZlZE5hbWVzLFM9bi5pQWxsb3dlZElkZW50aXRpZXMsdz1udWxsO3Qub25Td2l0Y2hWaWV3PWMuY3JlYXRlKCksdC5vblJlZGlyZWN0PWMuY3JlYXRlKCksdC5oYXNBYWRDb25mbGljdD0hMSx0Lmhhc01zYUNvbmZsaWN0PSExLHQuYWFkQWNjb3VudHM9W10sdC5tc2FBY2NvdW50cz1bXSx0LnBhZ2VEZXNjcmlwdGlvbj1udWxsLHQuYWFkQ29uZmxpY3REZXNjcmlwdGlvbj1udWxsLHQubXNhQ29uZmxpY3REZXNjcmlwdGlvbj1udWxsLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oZSl7dmFyIHQ9di5odG1sVW5lc2NhcGUody5uYW1lKTtlLnVzZXJuYW1lPXQsZS5kaXNwbGF5TmFtZT10fSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dC5vblN3aXRjaFZpZXcodS5QcmV2aW91cyl9LHQuYWFkVGlsZV9vbkNsaWNrPWZ1bmN0aW9uKGUpe3ZhciBuPWUubmFtZSxpPW0uYXBwZW5kT3JSZXBsYWNlKHIsInVzZXJuYW1lIixlbmNvZGVVUklDb21wb25lbnQobikpLG89cz9mLmNsb25lKHMpOm51bGw7byYmKG8udXNlcm5hbWU9biksdC5vblJlZGlyZWN0KGksbyl9LHQubXNhVGlsZV9vbkNsaWNrPWZ1bmN0aW9uKGUpe3c9ZSx0Lm9uU3dpdGNoVmlldyh1LkZlZExpbmspfSx0LnVzZU90aGVyRW1haWxfb25DbGljaz1mdW5jdGlvbigpe3Qub25SZWRpcmVjdChkLGwpfSxmdW5jdGlvbigpe3ZhciBlPVtdLG49W10scj0hMSxzPSExO3N3aXRjaChnLmZvckVhY2goXyxmdW5jdGlvbih0KXt2YXIgaT10LnN0YXR1cztpIT09Yi5Nc2FFeGlzdHMmJmkhPT1iLk1zYUFuZEFhZEV4aXN0c3x8ZS5wdXNoKHQpLFM9PT1oLk1zYU9ubHl8fGkhPT1iLkFhZEV4aXN0cyYmaSE9PWIuTXNhQW5kQWFkRXhpc3RzfHxuLnB1c2godCl9KSx0Lm1zYUFjY291bnRzPWUsdC5hYWRBY2NvdW50cz1uLHQuaGFzQWFkQ29uZmxpY3Q9cj1uLmxlbmd0aD4wLHQuaGFzTXNhQ29uZmxpY3Q9cz1lLmxlbmd0aD4wLGEpe2Nhc2UgcC5MaW5rZWRJbjpzPyh0LnBhZ2VEZXNjcmlwdGlvbj1pLkNUX0ZFRENPTkZMSUNUX1NUUl9NdWx0aV9EZXNjX0xpbmtlZEluLHImJih0LmFhZENvbmZsaWN0RGVzY3JpcHRpb249aS5DVF9GRURDT05GTElDVF9TVFJfTXVsdGlfQWFkSGVhZGluZ19WMix0Lm1zYUNvbmZsaWN0RGVzY3JpcHRpb249aS5DVF9GRURDT05GTElDVF9TVFJfTXVsdGlfTXNhSGVhZGluZykpOnQucGFnZURlc2NyaXB0aW9uPW8uQ1RfRkVEQ09ORkxJQ1RfU1RSX011bHRpTm9Nc2FfRGVzY19MaW5rZWRJbjticmVhaztkZWZhdWx0OmNhc2UgcC5HaXRIdWI6cj8odC5wYWdlRGVzY3JpcHRpb249aS5DVF9GRURDT05GTElDVF9TVFJfTXVsdGlfRGVzY19HaXRIdWIsdC5hYWRDb25mbGljdERlc2NyaXB0aW9uPWkuQ1RfRkVEQ09ORkxJQ1RfU1RSX011bHRpX0FhZEhlYWRpbmcscyYmKHQubXNhQ29uZmxpY3REZXNjcmlwdGlvbj1pLkNUX0ZFRENPTkZMSUNUX1NUUl9NdWx0aV9Nc2FIZWFkaW5nX0dpdEh1YikpOnQucGFnZURlc2NyaXB0aW9uPWkuQ1RfRkVEQ09ORkxJQ1RfU1RSX011bHRpTm9BYWRfRGVzY19HaXRIdWJ9fSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big2KSxzPW4oOSksYz1uKDEzKSxkPW4oMTYpLGw9d2luZG93LHU9YS5QYWdpbmF0ZWRTdGF0ZSxwPWEuQmluZFByb3ZpZGVyLGY9ci5PYmplY3QsZz1yLkFycmF5LG09cy5RdWVyeVN0cmluZyx2PXMuSGVscGVyLGg9ZC5BbGxvd2VkSWRlbnRpdGllc1R5cGUsYj17RG9lc05vdEV4aXN0OjEsTXNhRXhpc3RzOjIsQWFkRXhpc3RzOjMsUHJvb2ZFeGlzdHM6NCxNc2FBbmRBYWRFeGlzdHM6NX07by5jb21wb25lbnRzLnJlZ2lzdGVyKCJsb2dpbi1mZWQtY29uZmxpY3QtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzQzKSxzeW5jaHJvbm91czohbC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxzLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGwuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSwiIikrJyAtLT4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz0icm93IHRleHQtdGl0bGUiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9GRURDT05GTElDVF9TVFJfVGl0bGVcJ10iPjwvZGl2PiA8ZGl2IGNsYXNzPWZvcm0tZ3JvdXA+IDxkaXYgaWQ9bG9naW5EZXNjcmlwdGlvbiBjbGFzcz0icm93IHRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHkiIGRhdGEtYmluZD0iXG4gICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IHBhZ2VEZXNjcmlwdGlvbixcbiAgICAgICAgY2hpbGRCaW5kaW5nczogeyBcJ2ZlZENvbmZsaWN0TmV4dFRleHRcJzogeyBjc3M6IHsgXCdib2xkXCc6IHRydWUgfSB9IH0iPjwvZGl2PjwhLS0ga28gaWY6IGhhc0FhZENvbmZsaWN0IC0tPjwhLS0ga28gaWY6IGFhZENvbmZsaWN0RGVzY3JpcHRpb24gLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IGFhZENvbmZsaWN0RGVzY3JpcHRpb24iPjwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGlkPWFhZFRpbGVzSG9sZGVyIGNsYXNzPWZvcm0tZ3JvdXAgcm9sZT1saXN0Ym94PjwhLS0ga28gZm9yZWFjaDogeyBkYXRhOiBhYWRBY2NvdW50cywgYXM6IFwnYWFkQWNjb3VudFwnIH0gLS0+IDxkaXYgY2xhc3M9dGlsZS1jb250YWluZXI+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyOiB7IFwnZGF0YS10ZXN0LWlkXCc6IGFhZEFjY291bnQubmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBhYWRBY2NvdW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6ICRpbmRleCgpID09PSAwID8gXCdsb2dpbkhlYWRlciBsb2dpbkRlc2NyaXB0aW9uXCcgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6ICRwYXJlbnQuYWFkVGlsZV9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc3NFbnRlcjogJHBhcmVudC5hYWRUaWxlX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNGb2N1czogJGluZGV4KCkgPT09IDAiPiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGRpdj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDI0MikrIiBzdmdzcmM9IituKDI0MykrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudCI+IDxkaXYgZGF0YS1iaW5kPSJ0ZXh0OiBhYWRBY2NvdW50Lm5hbWUiPjwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+PCEtLSBrbyBpZjogaGFzTXNhQ29uZmxpY3QgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IG1zYUNvbmZsaWN0RGVzY3JpcHRpb24iPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGhhc01zYUNvbmZsaWN0IC0tPiA8ZGl2IGlkPW1zYVRpbGVzSG9sZGVyIGNsYXNzPWZvcm0tZ3JvdXAgcm9sZT1saXN0Ym94PjwhLS0ga28gZm9yZWFjaDogeyBkYXRhOiBtc2FBY2NvdW50cywgYXM6IFwnbXNhQWNjb3VudFwnIH0gLS0+IDxkaXYgY2xhc3M9dGlsZS1jb250YWluZXI+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyOiB7IFwnZGF0YS10ZXN0LWlkXCc6IG1zYUFjY291bnQubmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBtc2FBY2NvdW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6ICEkcGFyZW50Lmhhc0FhZENvbmZsaWN0ICYmICRpbmRleCgpID09PSAwID8gXCdsb2dpbkhlYWRlciBsb2dpbkRlc2NyaXB0aW9uXCcgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6ICRwYXJlbnQubXNhVGlsZV9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc3NFbnRlcjogJHBhcmVudC5tc2FUaWxlX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNGb2N1czogISRwYXJlbnQuaGFzQWFkQ29uZmxpY3QgJiYgJGluZGV4KCkgPT09IDAiPiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGRpdj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDI0NCkrIiBzdmdzcmM9IituKDI0NSkrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudCI+IDxkaXYgZGF0YS1iaW5kPSJ0ZXh0OiBtc2FBY2NvdW50Lm5hbWUiPjwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGRhdGEtYmluZD0iY3NzOiB7IFwncG9zaXRpb24tYnV0dG9uc1wnOiBzdnIuZlNob3dCdXR0b25zICYmIHN2ci5mQWxsb3dDYW5jZWwgfSI+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPWNvbC1tZC0yND4gPGRpdiBjbGFzcz0idGV4dC0xMyBhY3Rpb24tbGlua3MiPiA8ZGl2IGRhdGEtYmluZD0iY3NzOiB7IFwnZm9ybS1ncm91cFwnOiBzdnIuZlNob3dCdXR0b25zICYmIHN2ci5mQWxsb3dDYW5jZWwgfSI+IDxhIGlkPXVzZU90aGVyRW1haWwgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHN0cltcJ0NUX0ZFRENPTkZMSUNUX1NUUl9Vc2VEaWZmZXJlbnRFbWFpbF9MaW5rXCddLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IHVzZU90aGVyRW1haWxfb25DbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IHN2ci51cmxGZWRTaWdudXAiPjwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgJiYgISFzdnIuZkFsbG93Q2FuY2VsIH0sXG4gICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgIHNlY29uZGFyeUJ1dHRvbkNsaWNrOiBzZWNvbmRhcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1uLnN0cixvPW4uaUJpbmRQcm92aWRlcixhPW4udXJsRmVkU2lnbnVwLHI9bi5vRmVkU2lnbnVwUG9zdFBhcmFtcyxzPW4uYXJyRmVkTmFtZXM7dC5vblN3aXRjaFZpZXc9Yy5jcmVhdGUoKSx0Lm9uUmVkaXJlY3Q9Yy5jcmVhdGUoKSx0LmZlZE5hbWVzPVtdLHQucGFnZURlc2NyaXB0aW9uPW51bGwsdC5wYWdlRGVzY3JpcHRpb24yPW51bGwsdC5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbigpe30sdC5nZXRTdGF0ZT1mdW5jdGlvbigpe3JldHVybiBudWxsfSx0LnJlc3RvcmVTdGF0ZT1mdW5jdGlvbigpe30sdC5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uU3dpdGNoVmlldyhsLlVzZXJuYW1lKX0sdC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KGwuUHJldmlvdXMpfSx0LnNpZ251cF9vbkNsaWNrPWZ1bmN0aW9uKCl7dC5vblJlZGlyZWN0KGEscil9LGZ1bmN0aW9uKCl7c3dpdGNoKHQuZmVkTmFtZXM9cyxvKXtkZWZhdWx0OmNhc2UgdS5MaW5rZWRJbjoxPT09cy5sZW5ndGg/KHQucGFnZURlc2NyaXB0aW9uPXAuZm9ybWF0KGkuQ1RfU1RSX1Byb29mRmVkQ29uZmxpY3RfRGVzY19MaW5rZWRJbixzWzBdLm5hbWUpLHQucGFnZURlc2NyaXB0aW9uMj1pLkNUX1NUUl9Qcm9vZkZlZENvbmZsaWN0X0Rlc2MyX0xpbmtlZEluKTp0LnBhZ2VEZXNjcmlwdGlvbj1pLkNUX1NUUl9Qcm9vZkZlZENvbmZsaWN0X011bHRpX0Rlc2NfTGlua2VkSW59fSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big2KSxzPW4oOSksYz1uKDEzKSxkPXdpbmRvdyxsPWEuUGFnaW5hdGVkU3RhdGUsdT1hLkJpbmRQcm92aWRlcixwPXIuU3RyaW5nO28uY29tcG9uZW50cy5yZWdpc3RlcigibG9naW4tcHJvb2YtZmVkLWNvbmZsaWN0LXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM0NSksc3luY2hyb25vdXM6IWQuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8cy5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5OCksIiIpKycgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfRkVEQ09ORkxJQ1RfU1RSX1RpdGxlXCddIj48L2Rpdj4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8ZGl2IGlkPWxvZ2luRGVzY3JpcHRpb24gY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IHBhZ2VEZXNjcmlwdGlvbiI+PC9kaXY+PCEtLSBrbyBpZjogcGFnZURlc2NyaXB0aW9uMiAtLT4gPGRpdiBpZD1sb2dpbkRlc2NyaXB0aW9uMiBjbGFzcz0icm93IHRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHkiIGRhdGEtYmluZD0idGV4dDogcGFnZURlc2NyaXB0aW9uMiI+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZmVkTmFtZXMubGVuZ3RoID4gMSAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPjwhLS0ga28gZm9yZWFjaDogeyBkYXRhOiBmZWROYW1lcywgYXM6IFwnZmVkTmFtZVwnIH0gLS0+IDxkaXYgY2xhc3M9dGlsZS1jb250YWluZXI+IDxkaXYgY2xhc3M9InJvdyB0aWxlIG5vLXBpY2siPiA8ZGl2IGNsYXNzPXRhYmxlIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgIGF0dHI6IHsgXCdkYXRhLXRlc3QtaWRcJzogZmVkTmFtZS5uYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogZmVkTmFtZS5uYW1lIj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0aWxlLWltZyI+IDxkaXY+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPScrbigyNDQpKyIgc3Znc3JjPSIrbigyNDUpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9XCJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50XCI+IDxkaXYgZGF0YS1iaW5kPVwidGV4dDogZmVkTmFtZS5uYW1lXCI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9cG9zaXRpb24tYnV0dG9ucz4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgY2xhc3M9Y29sLW1kLTI0PiA8ZGl2IGNsYXNzPVwidGV4dC0xMyBhY3Rpb24tbGlua3NcIj4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8YSBpZD1zaWdudXAgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzdHJbJ0NUX1NUUl9Qcm9vZkZlZENvbmZsaWN0X0NyZWF0ZU5ldyddLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IHNpZ251cF9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogc3ZyLnVybEZlZFNpZ251cFwiPjwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMsXG4gICAgICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkRlc2NyaWJlZEJ5OiAnbG9naW5IZWFkZXIgbG9naW5EZXNjcmlwdGlvbicgKyAocGFnZURlc2NyaXB0aW9uMiA/ICcgbG9naW5EZXNjcmlwdGlvbjInIDogJycpLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyAmJiAhIXN2ci5mQWxsb3dDYW5jZWwgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfVwiPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLmlzSW5pdGlhbFZpZXcsbz1lLnVzZXJuYW1lLGE9ZS5kaXNwbGF5TmFtZSxyPW4uc3RyLHM9bi5odG1sLGQ9bi5pQmluZFByb3ZpZGVyLGw9bi51cmxMb2dpbixiPW4udXJsR29Ub0FBREVycm9yLF89bi5vVXJsT3RoZXJJZHBQb3N0UGFyYW1zLFM9bi51cmxGZWRTaWdudXAsdz1uLm9GZWRTaWdudXBQb3N0UGFyYW1zLFQ9bi5pQWxsb3dlZElkZW50aXRpZXMsQz1uLmZVc2VBYWRGZWRCaW5kaW5nVGV4dDt0Lm9uU3dpdGNoVmlldz1jLmNyZWF0ZSgpLHQub25SZWRpcmVjdD1jLmNyZWF0ZSgpLHQuaXNJbml0aWFsVmlldz1pLHQuYWFkTGlua0Jsb2NrZWQ9ITEsdC5wYWdlVGl0bGU9bnVsbCx0LnBhZ2VEZXNjcmlwdGlvbj1udWxsLHQucGFnZURlc2NyaXB0aW9uMj1udWxsLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LHQuZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sdC5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oKXt9LHQucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7aWYodC5hYWRMaW5rQmxvY2tlZCl0Lm9uUmVkaXJlY3QobCk7ZWxzZXt2YXIgZT1tLmFwcGVuZE9yUmVwbGFjZShiLCJ1c2VybmFtZSIsZW5jb2RlVVJJQ29tcG9uZW50KG8pKSxuPV8/Zy5jbG9uZShfKTpudWxsO24mJihuLnVzZXJuYW1lPW8pLHQub25SZWRpcmVjdChlLG4pfX0sdC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KHUuUHJldmlvdXMpfSx0LnVzZU90aGVyRW1haWxfb25DbGljaz1mdW5jdGlvbigpe3Qub25SZWRpcmVjdChTLHcpfSxmdW5jdGlvbigpe3ZhciBlPW51bGwsbj1udWxsLGk9bnVsbCxvPXYuaHRtbEVzY2FwZShhKSxjPVQ9PT1oLk1zYU9ubHk7c3dpdGNoKHQuYWFkTGlua0Jsb2NrZWQ9YyxlPXIuQ1RfRkVEQ09ORkxJQ1RfU1RSX1RpdGxlLGQpe2Nhc2UgcC5MaW5rZWRJbjpjPyhlPXIuQ1RfRkVEQ09ORkxJQ1RfU1RSX1RpdGxlX05vTGluayxuPWYuZm9ybWF0KHIuQ1RfRkVEQ09ORkxJQ1RfU1RSX1NpbmdsZUFhZF9EZXNjX05vTGlua19MaW5rZWRJbixvKSxpPXMuQ1RfRkVEQ09ORkxJQ1RfU1RSX1NpbmdsZUFhZF9EZXNjMl9Ob0xpbmtfVjIpOihuPWYuZm9ybWF0KHMuQ1RfRkVEQ09ORkxJQ1RfU1RSX1NpbmdsZUFhZF9EZXNjX0xpbmtlZEluLG8pLGk9cy5DVF9GRURDT05GTElDVF9TVFJfU2luZ2xlQWFkX0Rlc2MyX1YyKTticmVhaztkZWZhdWx0OmNhc2UgcC5HaXRIdWI6Yz8oZT1yLkNUX0ZFRENPTkZMSUNUX1NUUl9UaXRsZV9Ob0xpbmtfR2l0SHViLG49Zi5mb3JtYXQocy5DVF9GRURDT05GTElDVF9TVFJfU2luZ2xlQWFkX0Rlc2NfTm9MaW5rX0dpdEh1YixvKSxpPXMuQ1RfRkVEQ09ORkxJQ1RfU1RSX1NpbmdsZUFhZF9EZXNjMl9Ob0xpbmspOkM/KGU9ci5DVF9GRURDT05GTElDVF9TVFJfVGl0bGVfQWFkQmluZGluZ19HaXRIdWIsbj1mLmZvcm1hdChzLkNUX0ZFRENPTkZMSUNUX1NUUl9TaW5nbGVBYWRfRGVzY19CaW5kaW5nX0dpdEh1YixvKSk6KG49Zi5mb3JtYXQocy5DVF9GRURDT05GTElDVF9TVFJfU2luZ2xlQWFkX0Rlc2NfR2l0SHViLG8pLGk9cy5DVF9GRURDT05GTElDVF9TVFJfU2luZ2xlQWFkX0Rlc2MyKX10LnBhZ2VUaXRsZT1lLHQucGFnZURlc2NyaXB0aW9uPW4sdC5wYWdlRGVzY3JpcHRpb24yPWl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDYpLHM9big5KSxjPW4oMTMpLGQ9bigxNiksbD13aW5kb3csdT1hLlBhZ2luYXRlZFN0YXRlLHA9YS5CaW5kUHJvdmlkZXIsZj1yLlN0cmluZyxnPXIuT2JqZWN0LG09cy5RdWVyeVN0cmluZyx2PXMuSGVscGVyLGg9ZC5BbGxvd2VkSWRlbnRpdGllc1R5cGU7by5jb21wb25lbnRzLnJlZ2lzdGVyKCJsb2dpbi1hYWQtZmVkLWNvbmZsaWN0LXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM0Nyksc3luY2hyb25vdXM6IWwuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8cy5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihsLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5OCksIiIpKyIgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9XCJyb3cgdGV4dC10aXRsZVwiIHJvbGU9aGVhZGluZyBhcmlhLWxldmVsPTEgZGF0YS1iaW5kPVwidGV4dDogcGFnZVRpdGxlXCI+PC9kaXY+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGRpdiBpZD1sb2dpbkRlc2NyaXB0aW9uIGNsYXNzPVwicm93IHRleHQtYm9keSB0ZXh0LWJsb2NrLWJvZHlcIiBkYXRhLWJpbmQ9XCJcbiAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogcGFnZURlc2NyaXB0aW9uLFxuICAgICAgICBjaGlsZEJpbmRpbmdzOiB7ICdmZWRDb25mbGljdE5hbWUnOiB7IGNzczogeyAnYm9sZCc6IHRydWUgfSB9IH1cIj4gPC9kaXY+PCEtLSBrbyBpZm5vdDogc3ZyLmZVc2VBYWRGZWRCaW5kaW5nVGV4dCAtLT4gPGRpdiBpZD1sb2dpbkRlc2NyaXB0aW9uMiBjbGFzcz1cInJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5XCIgZGF0YS1iaW5kPVwiXG4gICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IHBhZ2VEZXNjcmlwdGlvbjIsXG4gICAgICAgIGNoaWxkQmluZGluZ3M6IHsgJ2ZlZENvbmZsaWN0TmV4dFRleHQnOiB7IGNzczogeyAnYm9sZCc6IHRydWUgfSB9IH1cIj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGRhdGEtYmluZD1cImNzczogeyAncG9zaXRpb24tYnV0dG9ucyc6IHN2ci5mU2hvd0J1dHRvbnMgfVwiPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBjbGFzcz1jb2wtbWQtMjQ+IDxkaXYgY2xhc3M9XCJ0ZXh0LTEzIGFjdGlvbi1saW5rc1wiPiA8ZGl2IGRhdGEtYmluZD1cImNzczogeyAnZm9ybS1ncm91cCc6IHN2ci5mU2hvd0J1dHRvbnMgfVwiPiA8YSBpZD11c2VPdGhlckVtYWlsIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogc3RyWydDVF9GRURDT05GTElDVF9TVFJfVXNlRGlmZmVyZW50RW1haWxfTGluayddLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IHVzZU90aGVyRW1haWxfb25DbGljayxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IHN2ci51cmxGZWRTaWdudXBcIj48L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Zvb3Rlci1idXR0b25zLWZpZWxkJyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyAmJiAoIWlzSW5pdGlhbFZpZXcgfHwgISFzdnIuZkFsbG93Q2FuY2VsKSxcbiAgICAgICAgICAgICAgICBmb2N1c09uUHJpbWFyeUJ1dHRvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk6ICdsb2dpbkhlYWRlciBsb2dpbkRlc2NyaXB0aW9uJyArIChzdnIuZlVzZUFhZEZlZEJpbmRpbmdUZXh0ID8gJycgOiAnIGxvZ2luRGVzY3JpcHRpb24yJykgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfVwiPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLmlzSW5pdGlhbFZpZXcsYT1lLnVzZXJuYW1lLHI9ZS5kaXNwbGF5TmFtZSxkPWUuZmxvd1Rva2VuLHU9bi5zdHIscD1uLmh0bWwsaD1uLmZTaG93QnV0dG9ucyxiPSEhbi5mQWxsb3dDYW5jZWwsXz1uLmlCaW5kUHJvdmlkZXIsUz1uLmZJc0JvdW5kQWNjb3VudCx3PW4udXJsRmVkU2lnbnVwLFQ9bi5vRmVkU2lnbnVwUG9zdFBhcmFtcyxDPW51bGwseT17fSxrPW8ub2JzZXJ2YWJsZShkKS5leHRlbmQoe2Zsb3dUb2tlblVwZGF0ZTpufSk7dC5vblN3aXRjaFZpZXc9bC5jcmVhdGUoKSx0Lm9uUmVkaXJlY3Q9bC5jcmVhdGUoKSx0Lm9uU2V0QmFja0J1dHRvblN0YXRlPWwuY3JlYXRlKCksdC5vblNldFBlbmRpbmdSZXF1ZXN0PWwuY3JlYXRlKCksdC5pc0luaXRpYWxWaWV3PWksdC5wYWdlVGl0bGU9bnVsbCx0LnVuc2FmZV9wYWdlRGVzY3JpcHRpb249bnVsbCx0LnBhZ2VEZXNjcmlwdGlvbjI9bnVsbCx0LnVuc2FmZV9jb25mbGljdFRleHQ9bnVsbCx0LnByaW1hcnlCdXR0b25UZXh0PW51bGwsdC5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksdC5lcnJvcj1vLm9ic2VydmFibGUoKSx0LnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKGUpe2UuZmxvd1Rva2VuPWsoKSxvLnV0aWxzLmV4dGVuZChlLHkpfSx0LmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJue2djdFJlcXVlc3RIZWxwZXJTdGF0ZTpDLmdldFN0YXRlKCl9fSx0LnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiZDLnJlc3RvcmVTdGF0ZShlLmdjdFJlcXVlc3RIZWxwZXJTdGF0ZSl9LHQucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dC5pc1JlcXVlc3RQZW5kaW5nKCEwKSx0Lm9uU2V0UGVuZGluZ1JlcXVlc3QoITApLGMudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbihDLnNlbmRBc3luYyhhLGsoKSkudGhlbihmdW5jdGlvbihlKXtzd2l0Y2goZS5mbG93VG9rZW4mJmsoZS5mbG93VG9rZW4pLHQuaXNSZXF1ZXN0UGVuZGluZyghMSksdC5vblNldFBlbmRpbmdSZXF1ZXN0KCExKSxlLmFjdGlvbil7Y2FzZSBtLlNob3dFcnJvcjp0LmVycm9yKGUuZXJyb3IpO2JyZWFrO2Nhc2UgbS5Td2l0Y2hWaWV3Onk9by51dGlscy5leHRlbmQoZS5zaGFyZWREYXRhLGUudmlld1BhcmFtc3x8e30pLHQub25Td2l0Y2hWaWV3KGUudmlld0lkLFMpO2JyZWFrO2Nhc2UgbS5SZWRpcmVjdDp0Lm9uUmVkaXJlY3QoZS5yZWRpcmVjdFVybCxlLnJlZGlyZWN0UG9zdFBhcmFtcyxlLmlzSWRwUmVkaXJlY3QpfX0pKX0sdC51c2VPdGhlckVtYWlsX29uQ2xpY2s9ZnVuY3Rpb24oKXt0Lm9uUmVkaXJlY3QodyxUKX0sZnVuY3Rpb24oKXt2YXIgZT12LkNoZWNrQ3VycmVudElkcE9ubHksbz1udWxsLGE9bnVsbCxjPW51bGwsZD1udWxsO3N3aXRjaCh0Lm9uU2V0QmFja0J1dHRvblN0YXRlKGgmJighaXx8YikpLF8hPT1mLkdvb2dsZT8oU3x8KGV8PXYuRm9yY2VPdGNMb2dpbiksdC5wcmltYXJ5QnV0dG9uVGV4dD11LkNUX1BXRF9TVFJfU2lnbkluX0J1dHRvbl9OZXh0KTp0LnByaW1hcnlCdXR0b25UZXh0PXUuQ1RfUFdEX1NUUl9TaWduSW5fQnV0dG9uLF8pe2Nhc2UgZi5MaW5rZWRJbjppPyhvPXUuQ1RfRkVEQ09ORkxJQ1RfU1RSX1RpdGxlLGE9Zy5mb3JtYXQodS5DVF9GRURMSU5LX1NUUl9EZXNjX0NvbmZsaWN0X0xpbmtlZEluLHIpLGM9Zy5mb3JtYXQodS5DVF9GRURMSU5LX1NUUl9EZXNjX1NpbmdsZUNvbmZsaWN0X0xpbmtlZEluLHIpKTpTPyhvPXUuQ1RfRkVEQ09ORkxJQ1RfU1RSX1RpdGxlLGM9Zy5mb3JtYXQodS5DVF9GRURMSU5LX1NUUl9EZXNjX0NvbmZsaWN0X0JvdW5kX0xpbmtlZEluLHIpLGQ9cC5DVF9GRURMSU5LX1NUUl9EZXNjX1NpbmdsZUNvbmZsaWN0X0JvdW5kKToobz11LkNUX0ZFRExJTktfU1RSX1RpdGxlLGM9Zy5mb3JtYXQodS5DVF9GRURMSU5LX1NUUl9EZXNjX0xpbmtlZEluLHIpKTticmVhaztjYXNlIGYuR29vZ2xlOm89dS5DVF9GRURMSU5LX1NUUl9UaXRsZV9Hb29nbGUsYT1nLmZvcm1hdCh1LkNUX0ZFRExJTktfU1RSX0Rlc2NfQ29uZmxpY3RfR29vZ2xlLHIpO2JyZWFrO2RlZmF1bHQ6Y2FzZSBmLkdpdEh1YjpvPXUuQ1RfRkVETElOS19TVFJfVGl0bGVfR2l0SHViLGE9Zy5mb3JtYXQodS5DVF9GRURMSU5LX1NUUl9EZXNjX0NvbmZsaWN0X0dpdEh1YixyKSxjPXUuQ1RfRkVETElOS19TVFJfRGVzY19HaXRIdWIsZD11LkNUX0ZFRExJTktfU1RSX0Rlc2MyfXQucGFnZVRpdGxlPW8sdC51bnNhZmVfY29uZmxpY3RUZXh0PWEsdC51bnNhZmVfcGFnZURlc2NyaXB0aW9uPWMsdC5wYWdlRGVzY3JpcHRpb24yPWQsQz1uZXcgcyhuLGUpfSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big2KSxzPW4oMTczKSxjPW4oMTIpLGQ9big5KSxsPW4oMTMpLHU9bigxOTMpLHA9d2luZG93LGY9YS5CaW5kUHJvdmlkZXIsZz1yLlN0cmluZyxtPXMuR2N0UmVzdWx0QWN0aW9uLHY9cy5HY3RSZXF1ZXN0SGVscGVyRmxhZ3M7dS5hcHBseUV4dGVuZGVycyhvKSxvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWZlZC1saW5rLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM0OSksc3luY2hyb25vdXM6IXAuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8ZC5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihwLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5OCksIiIpKycgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogcGFnZVRpdGxlIj48L2Rpdj48IS0tIGtvIGlmOiBlcnJvciAtLT4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWVycm9yIGNvbC1tZC0yNCIgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlIGFyaWEtcmVsZXZhbnQ9dGV4dCBhcmlhLWF0b21pYz10cnVlIGRhdGEtYmluZD0idGV4dDogZXJyb3IiPjwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPjwhLS0ga28gaWY6IGlzSW5pdGlhbFZpZXcgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9jb25mbGljdFRleHQiPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHVuc2FmZV9wYWdlRGVzY3JpcHRpb24gLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9wYWdlRGVzY3JpcHRpb24iPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHBhZ2VEZXNjcmlwdGlvbjIgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9IlxuICAgICAgICBodG1sV2l0aEJpbmRpbmdzOiBwYWdlRGVzY3JpcHRpb24yLFxuICAgICAgICBjaGlsZEJpbmRpbmdzOiB7IFwnZmVkQ29uZmxpY3ROZXh0VGV4dFwnOiB7IGNzczogeyBcJ2JvbGRcJzogdHJ1ZSB9IH0gfSI+PC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGNsYXNzPXBvc2l0aW9uLWJ1dHRvbnM+IDxkaXYgY2xhc3M9cm93PjwhLS0ga28gaWY6IHN2ci51cmxGZWRTaWdudXAgLS0+IDxkaXYgY2xhc3M9Y29sLW1kLTI0PiA8ZGl2IGNsYXNzPSJ0ZXh0LTEzIGFjdGlvbi1saW5rcyI+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9dXNlT3RoZXJFbWFpbCBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogc3RyW1wnQ1RfRkVEQ09ORkxJQ1RfU1RSX1VzZURpZmZlcmVudEVtYWlsX0xpbmtcJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogdXNlT3RoZXJFbWFpbF9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogc3ZyLnVybEZlZFNpZ251cCI+PC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdmb290ZXItYnV0dG9ucy1maWVsZFwnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBwcmltYXJ5QnV0dG9uVGV4dCxcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvbkVuYWJsZWQ6ICFpc1JlcXVlc3RQZW5kaW5nKCksXG4gICAgICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBmb2N1c09uUHJpbWFyeUJ1dHRvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk6IFwnbG9naW5IZWFkZXJcJyB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayB9IH0iPiA8L2Rpdj4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3ZhciB0PXRoaXMsbj1lLnNlcnZlckRhdGEsaT1lLnBvc3RDYW5hcnlWYWxpZGF0aW9uQWN0aW9uLG89bi5zdHIsYT1uLnNSZW1vdGVDb25uZWN0QXBwTmFtZTt0Lm9uUmVkaXJlY3Q9cy5jcmVhdGUoKSx0Lm9uU3dpdGNoVmlldz1zLmNyZWF0ZSgpLHQub25TZXRCYWNrQnV0dG9uU3RhdGU9cy5jcmVhdGUoKSx0LnBhZ2VUaXRsZT1udWxsLHQuc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LHQuZ2V0U3RhdGU9ZnVuY3Rpb24oKXt9LHQucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSx0LnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3N3aXRjaChpLmFjdGlvbil7Y2FzZSBwLlN3aXRjaFZpZXc6dC5vblN3aXRjaFZpZXcoaS52aWV3SWQpO2JyZWFrO2Nhc2UgcC5SZWRpcmVjdDp0Lm9uUmVkaXJlY3QoaS5yZWRpcmVjdFVybCxpLnJlZGlyZWN0UG9zdFBhcmFtcyxpLmlzSWRwUmVkaXJlY3QpfX0sdC5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25Td2l0Y2hWaWV3KGMuUGFnaW5hdGVkU3RhdGUuUHJldmlvdXMpfSxmdW5jdGlvbigpe3QucGFnZVRpdGxlPXUuZm9ybWF0KG8uQ0FOX1NUUl9SZW1vdGVDb25uZWN0X0NhbmFyeVZhbGlkYXRpb25fVGl0bGUsYSksdC5vblNldEJhY2tCdXR0b25TdGF0ZSghMSl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDE2Nikscz1uKDEzKSxjPW4oNSksZD1uKDYpLGw9d2luZG93LHU9ZC5TdHJpbmcscD1yLkNhbmFyeVZhbGlkYXRpb25TdWNjZXNzQWN0aW9uO28uY29tcG9uZW50cy5yZWdpc3RlcigicmVtb3RlLWNvbm5lY3QtY2FuYXJ5LXZhbGlkYXRpb24tdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzUxKSxzeW5jaHJvbm91czohbC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGwuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk4KSxuKDI5NSksIiIpKycgLS0+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdoZWFkZXItY29udHJvbFwnLFxuICAgIHBhcmFtczoge1xuICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgIHRpdGxlOiBwYWdlVGl0bGUsXG4gICAgICAgIHVzZVN1YnRpdGxlOiBmYWxzZSB9IH0iPiA8L2Rpdj4gPGRpdiBjbGFzcz1zZWN0aW9uPiA8ZGl2IGNsYXNzPSJyb3cgdGV4dC1ib2R5Ij4gPGRpdiBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NBTl9TVFJfUmVtb3RlQ29ubmVjdF9DYW5hcnlWYWxpZGF0aW9uX0JvZHlcJ10iPjwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSI+IDxkaXYgY2xhc3M9ZGlzcGxheVNpZ24gaWQ9cmVtb3RlQ29ubmVjdENvZGUgZGF0YS1iaW5kPSJ0ZXh0OiBzdnIuc1JlbW90ZUNvbm5lY3RVc2VyQ29kZSI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0icm93IHBvc2l0aW9uLWJ1dHRvbnMiPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uRGVzY3JpYmVkQnk6IFwnbG9naW5IZWFkZXJcJyxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25UZXh0OiBzdHJbXCdDVF9IUkRfU1RSX1JlZGlyZWN0X0NhbmNlbFwnXSB9LFxuICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2ssXG4gICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXtnJiZ4JiZ4LmlzRWRnZUFsbG93ZWQ/aSgpOmMub25Td2l0Y2hWaWV3KGEoKSwhMCl9ZnVuY3Rpb24gbigpe0kmJkkuSWZFeGlzdHNSZXN1bHQ9PT1mLkV4aXN0c0JvdGhJRFBzP2Mub25Td2l0Y2hWaWV3KHUuSWRwRGlzYW1iaWd1YXRpb24sITApOlImJkk/RT9jLm9uU3dpdGNoVmlldyh1LlRpbGVzLCEwKTpjLm9uRXhlY3V0ZUdjdFJlc3VsdCgpOnkubGVuZ3RoPjA/Yy5vblN3aXRjaFZpZXcodS5UaWxlcywhMCk6Yy5vblN3aXRjaFZpZXcodS5Vc2VybmFtZSwhMCl9ZnVuY3Rpb24gaSgpe3ZhciBlPXtjYW5hcnk6ayxjbGllbnRfaWQ6bC5leHRyYWN0KCJjbGllbnRfaWQiKSxjdHg6RCxkc3NvX2VkZ2VfdXNlcm5hbWU6aCxlZGdlX2F0dGVtcHRlZDohMH07Yy5vblJlZGlyZWN0KFAsZSl9ZnVuY3Rpb24gYSgpe3JldHVybiBTP3IoKTp5JiZ5Lmxlbmd0aD91LlRpbGVzOnUuVXNlcm5hbWV9ZnVuY3Rpb24gcigpe3ZhciBlPXUuUGFzc3dvcmQ7c3dpdGNoKFMpe2Nhc2UgZC5QYXNzd29yZDplPXUuUGFzc3dvcmQ7YnJlYWs7Y2FzZSBkLkZpZG86ZT11LkZpZG87YnJlYWs7Y2FzZSBkLlJlbW90ZU5HQzplPUMmJnc/dS5Db25maXJtU2VuZDp1LlJlbW90ZU5HQzticmVhaztjYXNlIGQuT25lVGltZUNvZGU6Y2FzZSBkLlB1YmxpY0lkZW50aWZpZXJDb2RlOmU9dS5Db25maXJtU2VuZDticmVhaztjYXNlIGQuRmVkZXJhdGlvbjpjYXNlIGQuQ2xvdWRGZWRlcmF0aW9uOmU9dS5JZHBSZWRpcmVjdH1yZXR1cm4gZX12YXIgYz10aGlzLGc9cC5pc0VkZ2UoKSxtPWUuc2VydmVyRGF0YSx2PWUubm9uSW50ZXJhY3RpdmVBdXRoUmVxdWVzdCxoPWUudXNlcm5hbWUsYj1lLmRpc3BsYXlOYW1lLF89ZS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlLFM9ZS5wcmVmZXJyZWRDcmVkZW50aWFsLHc9ISFlLmlzUHVzaE5vdGlmaWNhdGlvbixUPWUuc2Vzc2lvblB1bGxUeXBlLEM9ZS5pc0luaXRpYWxWaWV3LHk9bS5hcnJTZXNzaW9ucyxrPW0uYXBpQ2FuYXJ5LHg9bS5kZXNrdG9wU3NvQ29uZmlnLEQ9bS5zQ3R4LFA9bS51cmxMb2dpbixJPW0ub0dldENyZWRUeXBlUmVzdWx0LEU9bS5mU2hvd1RpbGVzQWZ0ZXJTZXNzaW9uUHVsbCxSPW0uc1ByZWZpbGxVc2VybmFtZTtjLm9uVXBkYXRlVXNlclRpbGVzPXMuY3JlYXRlKCksYy5vbkV4ZWN1dGVHY3RSZXN1bHQ9cy5jcmVhdGUoKSxjLm9uU3VibWl0UmVhZHk9cy5jcmVhdGUoKSxjLm9uUmVkaXJlY3Q9cy5jcmVhdGUoKSxjLm9uU3dpdGNoVmlldz1zLmNyZWF0ZSgpLGMub25JbmNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ9cy5jcmVhdGUoKSxjLm9uRGVjcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50PXMuY3JlYXRlKCksYy5mb3JjZVN1Ym1pdD1vLm9ic2VydmFibGUoITEpLGMucG9zdFJlZGlyZWN0Rm9yY2VTdWJtaXQ9by5vYnNlcnZhYmxlKCExKSxjLnBvc3RSZWRpcmVjdFBhcmFtcz1vLm9ic2VydmFibGVBcnJheSgpLGMucG9zdFJlZGlyZWN0VXJsPW8ub2JzZXJ2YWJsZSgpLGMuaXNOb25JbnRlcmFjdGl2ZUF1dGhSZXF1ZXN0PXYsYy5zZXNzaW9uUHVsbFR5cGU9VCxjLnVzZXJuYW1lPWgsYy5kaXNwbGF5TmFtZT1iLGMudW5zYWZlX2RvbWFpbk5hbWU9XyxjLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKCl7fSxjLmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGMucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSxjLmNhbmNlbExpbmtfb25DbGljaz1mdW5jdGlvbigpe3QoKX0sYy5mZXRjaFNlc3Npb25zUHJvZ3Jlc3Nfb25IYW5kbGVEc3NvU3VjY2Vzcz1mdW5jdGlvbigpe2Mub25TdWJtaXRSZWFkeSgpfSxjLmZldGNoU2Vzc2lvbnNQcm9ncmVzc19vblJlZGlyZWN0PWZ1bmN0aW9uKGUsdCl7Yy5vblJlZGlyZWN0KGUsdCl9LGMuZmV0Y2hTZXNzaW9uc1Byb2dyZXNzX29uRGVza3RvcFNzb0ZhbGxiYWNrVmlldz1mdW5jdGlvbigpe24oKSx0KCl9LGMuZmV0Y2hTZXNzaW9uc1Byb2dyZXNzX29uVXBkYXRlVXNlclRpbGVzPWZ1bmN0aW9uKGUpe24oKSxjLm9uVXBkYXRlVXNlclRpbGVzKGUpfSxjLmZldGNoU2Vzc2lvbnNQcm9ncmVzc19vbkV4ZWN1dGVHY3RSZXN1bHQ9ZnVuY3Rpb24oKXtjLm9uRXhlY3V0ZUdjdFJlc3VsdCgpfSxjLmZldGNoU2Vzc2lvbnNQcm9ncmVzc19vbkluY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudD1mdW5jdGlvbigpe2Mub25JbmNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQoKX0sYy5mZXRjaFNlc3Npb25zUHJvZ3Jlc3Nfb25EZWNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ9ZnVuY3Rpb24oKXtjLm9uRGVjcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50KCl9fXZhciBvPW4oMSksYT1uKDkpLHI9big1KSxzPW4oMTMpLGM9d2luZG93LGQ9ci5DcmVkZW50aWFsVHlwZSxsPWEuUXVlcnlTdHJpbmcsdT1yLlBhZ2luYXRlZFN0YXRlLHA9YS5IZWxwZXIsZj1yLklmRXhpc3RzUmVzdWx0O28uY29tcG9uZW50cy5yZWdpc3RlcigiZmV0Y2gtc2Vzc2lvbnMtcHJvZ3Jlc3MtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzUzKSxzeW5jaHJvbm91czohYy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMzU0KSxuKDIzNiksIiIpKycgLS0+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnRFNTT19TVFJfQXV0aGVudGljYXRpbmdNZXNzYWdlXCddIj48L2Rpdj4gPGRpdiBjbGFzcz0icm93IHByb2dyZXNzLWNvbnRhaW5lciI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj48L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogKHNlc3Npb25QdWxsVHlwZSAmICcrbig1KS5TZXNzaW9uUHVsbEZsYWdzLkRzc28rIikgIT0gMCAtLT4gPGEgaWQ9ZGVza3RvcFNzb0NhbmNlbCBocmVmPSMgZGF0YS1iaW5kPVwiXG4gICAgdGV4dDogc3RyWydDVF9IUkRfU1RSX1JlZGlyZWN0X0NhbmNlbCddLFxuICAgIGFyaWFEZXNjcmliZWRCeTogJ2xvZ2luSGVhZGVyJyxcbiAgICBjbGljazogY2FuY2VsTGlua19vbkNsaWNrLFxuICAgIGhhc0ZvY3VzOiB0cnVlXCI+PC9hPjwhLS0gL2tvIC0tPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZmV0Y2gtc2Vzc2lvbnMtY29udHJvbCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgc2Vzc2lvblB1bGxUeXBlOiBzZXNzaW9uUHVsbFR5cGUsXG4gICAgICAgIHVuc2FmZV9kZXNrdG9wU3NvRG9tYWluVG9Vc2U6IHVuc2FmZV9kb21haW5OYW1lLFxuICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgIGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSB9LFxuICAgIGV2ZW50OiB7XG4gICAgICAgIHVwZGF0ZVVzZXJUaWxlczogZmV0Y2hTZXNzaW9uc1Byb2dyZXNzX29uVXBkYXRlVXNlclRpbGVzLFxuICAgICAgICBleGVjdXRlR2N0UmVzdWx0OiBmZXRjaFNlc3Npb25zUHJvZ3Jlc3Nfb25FeGVjdXRlR2N0UmVzdWx0LFxuICAgICAgICBoYW5kbGVEc3NvU3VjY2VzczogZmV0Y2hTZXNzaW9uc1Byb2dyZXNzX29uSGFuZGxlRHNzb1N1Y2Nlc3MsXG4gICAgICAgIGRlc2t0b3BTc29GYWxsYmFja1ZpZXc6IGZldGNoU2Vzc2lvbnNQcm9ncmVzc19vbkRlc2t0b3BTc29GYWxsYmFja1ZpZXcsXG4gICAgICAgIGluY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudDogZmV0Y2hTZXNzaW9uc1Byb2dyZXNzX29uSW5jcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50LFxuICAgICAgICBkZWNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ6IGZldGNoU2Vzc2lvbnNQcm9ncmVzc19vbkRlY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudCxcbiAgICAgICAgcmVkaXJlY3Q6IGZldGNoU2Vzc2lvbnNQcm9ncmVzc19vblJlZGlyZWN0IH0gfVwiPiA8L2Rpdj4ifSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KGUsdCl7aWYoZT1lfHxbXSx0PXR8fFtdLFY9by51dGlscy5hcnJheUZpbHRlcih0LGZ1bmN0aW9uKGUpe3JldHVybihlLmlzU2lnbmVkSW58fGUuaXNXaW5kb3dzU3NvKSYmIWUuaXNNZUNvbnRyb2xTZXNzaW9uJiZlLmlkfSksVT1WLmxlbmd0aCxIPW8udXRpbHMuYXJyYXlGaWx0ZXIoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pc1NpZ25lZElufHxlLmlzV2luZG93c1Nzb30pLE09SC5sZW5ndGgsb2UmJmllKXt2YXIgbj1vLnV0aWxzLmFycmF5Rmlyc3QodCxmdW5jdGlvbihlKXtyZXR1cm4gZS5tYXRjaGVzTG9naW5IaW50fSk7biYmKGo9biwobi5pc1NpZ25lZElufHxuLmlzV2luZG93c1NzbykmJiFuLmlzTWVDb250cm9sU2Vzc2lvbiYmbi5pZCYmKHE9bikpO3ZhciBpPW8udXRpbHMuYXJyYXlGaXJzdChlLGZ1bmN0aW9uKGUpe2lmKGUuc2lnbkluTmFtZSYmZS5zaWduSW5OYW1lLnRvTG93ZXJDYXNlKCk9PT1pZS50b0xvd2VyQ2FzZSgpKXJldHVybiEwO3ZhciB0PW8udXRpbHMuYXJyYXlGaXJzdChlLm90aGVySGFzaGVkQWxpYXNlcyxmdW5jdGlvbihlKXtyZXR1cm4gb2U9PT1lfSk7cmV0dXJuISF0fSk7aSYmKEc9aSl9fWZ1bmN0aW9uIG4oKXtpZihpZSl7aWYocSYmRylyZXR1cm4gbnVsbDtpZihxKXJldHVybiBxO2lmKEcpcmV0dXJuIEc7aWYoailyZXR1cm4gbnVsbH1lbHNle2lmKDE9PT1NJiYwPT09VSlyZXR1cm4gSFswXTtpZigxPT09VSYmMD09PU0pcmV0dXJuIFZbMF07VStNPjEmJlImJkQub25SZWRpcmVjdCh1ZSxwZSl9cmV0dXJuITF9ZnVuY3Rpb24gaShlKXtpZihlLmlkcD09PWIuQWFkKXgobS5hcHBlbmRPclJlcGxhY2UoZWUsInNlc3Npb25pZCIsZS5pZCkpO2Vsc2V7dmFyIHQ9bmU/di5jbG9uZShuZSk6bnVsbDtjbGVhclRpbWVvdXQoTykseChaLHQpfX1mdW5jdGlvbiBhKCl7cmV0dXJuISFqJiYoIWouaXNTaWduZWRJbiYmIWouaXNXaW5kb3dzU3NvKX1mdW5jdGlvbiBjKGUpe2lmKHRlKXt2YXIgdD1oLmdldEN1cnJlbnRUaW1lKCksbj10LU4saT1uZXcgcztpLkJlYWNvbih0ZSx7bG9hZFRpbWU6bixtc2FVc2VyQ291bnQ6ZS5sZW5ndGh9KX19ZnVuY3Rpb24gcChlKXt2YXIgbj1zZTtpZihlJiZfLmRvT3JpZ2luc01hdGNoKG4sZS5vcmlnaW4pJiZlLmRhdGEpe3ZhciBpPW51bGwsbz1udWxsO3RyeXtpPUpTT04ucGFyc2UoZS5kYXRhKSxvPWkudXNlckxpc3R9Y2F0Y2goYSl7cmV0dXJufW8mJmkubWVzc2FnZVR5cGU9PT1JJiYodChvLGNlKSxXLnJlc29sdmUobyksRC5vbkRlY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudCgpKX19ZnVuY3Rpb24gZihlKXtpZihjKGUpLGFlKXt2YXIgdD1uKCk7aWYodClyZXR1cm4gdm9pZCBpKHQpO2RlP2EoKSYmRC5vbkV4ZWN1dGVHY3RSZXN1bHQoKTpSP0Qub25SZWRpcmVjdCh1ZSxwZSk6YSgpJiZELm9uRXhlY3V0ZUdjdFJlc3VsdCgpfWRlJiYoUT0hMCxELmRlc2t0b3BTc29SdW5uaW5nKCkpfHxELm9uVXBkYXRlVXNlclRpbGVzKGwucGFyc2VNZUNvbnRyb2xTZXNzaW9ucyhlKSl9ZnVuY3Rpb24gVCgpe1MucmVtb3ZlRXZlbnRMaXN0ZW5lcihnLCJtZXNzYWdlIixwKSxELm9uRGVjcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50KCksRC5vblVwZGF0ZVVzZXJUaWxlcyhbXSl9ZnVuY3Rpb24gQyhlKXtpZihlKXt2YXIgdD17Y2FuYXJ5OlksY2xpZW50X2lkOm0uZXh0cmFjdCgiY2xpZW50X2lkIiksY3R4OmxlfTtSfHwodC5kc3NvX2VkZ2VfdXNlcm5hbWU9QSksRC5vblJlZGlyZWN0KG0uYXBwZW5kQ3VycmVudFF1ZXJ5UGFyYW1ldGVySWZOb3RFeGlzdCgkKSx0KX1lbHNlIEQub25IYW5kbGVEc3NvU3VjY2VzcygpfWZ1bmN0aW9uIHkoKXtSP0Qub25IYW5kbGVEc3NvRmFpbHVyZSgpOihELmRlc2t0b3BTc29SdW5uaW5nKCExKSxELm9uRGVza3RvcFNzb0ZhbGxiYWNrVmlldygpKX1mdW5jdGlvbiBrKGUpe2UmJlgudG9Mb2NhbGVVcHBlckNhc2UoKSE9PWUudG9Mb2NhbGVVcHBlckNhc2UoKT8oRC5kZXNrdG9wU3NvUnVubmluZygpJiZELmRlc2t0b3BTc29SdW5uaW5nKCExKSxYPWUsRC5kZXNrdG9wU3NvUnVubmluZyghMCkpOihELmRlc2t0b3BTc29SdW5uaW5nKCExKSxELm9uRGVza3RvcFNzb0ZhbGxiYWNrVmlldygpKX1mdW5jdGlvbiB4KGUpe2RvY3VtZW50LmxvY2F0aW9uLmFzc2lnbihlKX12YXIgRD10aGlzLFA9MWU0LEk9Im1zYU1lQ2FjaGVkIixFPWUuc2VydmVyRGF0YSxSPWUubm9uSW50ZXJhY3RpdmVBdXRoUmVxdWVzdCxBPWUudXNlcm5hbWUsQj1lLmRpc3BsYXlOYW1lLEw9ZS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlLEY9ZS5zZXNzaW9uUHVsbFR5cGUsTj1udWxsLE89bnVsbCxVPTAsTT0wLFY9W10sSD1bXSxqPW51bGwscT1udWxsLEc9bnVsbCxXPW51bGwsSz1udWxsLHo9bnVsbCwkPW51bGwsWD0iIixKPW51bGwsUT0hMSxZPUUuYXBpQ2FuYXJ5LFo9RS51cmxHb1RvQUFERXJyb3IsZWU9RS51cmxMb2dpbix0ZT1FLnVybFJlcG9ydFN0YXRpY01lQ29udHJvbFRlbGVtZXRyeSxuZT1FLm9VcmxPdGhlcklkcFBvc3RQYXJhbXMsaWU9RS5zUHJlZmlsbFVzZXJuYW1lLG9lPUUuc0hhc2hlZExvZ2luSGludCxhZT1FLmZTc29GZWFzaWJsZSxyZT1FLmZQcm92aWRlVjJTc29JbXByb3ZlbWVudHMsc2U9RS51cmxNc2FTdGF0aWNNZUNvbnRyb2wsY2U9RS5hcnJTZXNzaW9ucyxkZT1FLmRlc2t0b3BTc29Db25maWcsbGU9RS5zQ3R4LHVlPUUudXJsQXBwRXJyb3IscGU9RS5vQXBwUmVkaXJlY3RFcnJvclBvc3RQYXJhbXMsZmU9RS5mVXNlRmV0Y2hTZXNzaW9uc0ZvckRzc28sZ2U9RS5zUE9TVF9QYWdpbmF0ZWRMb2dpblN0YXRlO0Qub25VcGRhdGVVc2VyVGlsZXM9ci5jcmVhdGUoKSxELm9uRXhlY3V0ZUdjdFJlc3VsdD1yLmNyZWF0ZSgpLEQub25IYW5kbGVEc3NvU3VjY2Vzcz1yLmNyZWF0ZSgpLEQub25IYW5kbGVEc3NvRmFpbHVyZT1yLmNyZWF0ZSgpLEQub25EZXNrdG9wU3NvRmFsbGJhY2tWaWV3PXIuY3JlYXRlKCksRC5vblJlZGlyZWN0PXIuY3JlYXRlKCksRC5vbkluY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudD1yLmNyZWF0ZSgpLEQub25EZWNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQ9ci5jcmVhdGUoKSxELmRlc2t0b3BTc29SdW5uaW5nPW8ub2JzZXJ2YWJsZSghMSksRC5jYWxsTXNhU3RhdGljTWVDb250cm9sPW8ub2JzZXJ2YWJsZSghMSksRC5wb3N0UmVkaXJlY3RVcmw9by5vYnNlcnZhYmxlKCksRC5pc05vbkludGVyYWN0aXZlQXV0aFJlcXVlc3Q9UixELnVzZXJuYW1lPUEsRC5kaXNwbGF5TmFtZT1CLEQudW5zYWZlX2RvbWFpbk5hbWU9TCxELmZldGNoU2Vzc2lvbnNQcm9ncmVzc1BhZ2luYXRlZFN0YXRlPXcuRmV0Y2hTZXNzaW9uc1Byb2dyZXNzLEQuc2Vzc2lvblB1bGxUeXBlPUYsRC5pRnJhbWVfb25sb2FkPWZ1bmN0aW9uKGUpe2lmKGUpe3ZhciB0PXttZXNzYWdlVHlwZToic3RhcnRTdGF0aWNNZSJ9LG49Xy5leHRyYWN0T3JpZ2luRnJvbVVybChzZSk7ZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHQpLG4pfX0sRC5kaXNwb3NlPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KEopfSxELmRlc2t0b3BTc29SZXF1ZXN0Q29udHJvbF9vblN1Y2Nlc3M9ZnVuY3Rpb24oKXtLJiZ6LnJlc29sdmUoKX0sRC5kZXNrdG9wU3NvUmVxdWVzdENvbnRyb2xfb25GYWlsdXJlPWZ1bmN0aW9uKCl7SyYmei5yZWplY3QoKX0sRC5kZXNrdG9wU3NvUmVxdWVzdENvbnRyb2xfb25FZGdlUmVkaXJlY3Q9ZnVuY3Rpb24oKXtLJiZ6LnJlc29sdmUoITApfSxmdW5jdGlvbigpe3ZhciBlPW5ldyBkKGZ1bmN0aW9uKGUsdCl7Tj1oLmdldEN1cnJlbnRUaW1lKCksRC5jYWxsTXNhU3RhdGljTWVDb250cm9sKCEwKSxyZSYmc2V0VGltZW91dCh0LFApLFc9e3Jlc29sdmU6ZX19KTtyZSYmKEQub25JbmNyZW1lbnRBc3luY1RpbGVSZXF1ZXN0Q291bnQoKSxTLmFkZEV2ZW50TGlzdGVuZXIoZywibWVzc2FnZSIscCksdS50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKGUudGhlbihmdW5jdGlvbihlKXtmKGUpLFEmJksmJksudGhlbihDLHkpfSxUKSkpLGRlJiYoZmV8fFIpJiYoJD1kZS5lZGdlUmVkaXJlY3RVcmksZGUuc3RhcnREZXNrdG9wU3NvT25QYWdlTG9hZCYmKEw9ZGUuaGludGVkRG9tYWluTmFtZSksSz1uZXcgZChmdW5jdGlvbihlLHQpe3o9e3Jlc29sdmU6ZSxyZWplY3Q6dH19KSxyZXx8Sy50aGVuKEMseSksc2V0VGltZW91dChmdW5jdGlvbigpeyhMfHxnZSkmJihKPXNldFRpbWVvdXQoeSxkZS5wcm9ncmVzc0FuaW1hdGlvblRpbWVvdXQpLGsoTCkpfSwwKSl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPW4oMTY3KSxjPW4oNiksZD1uKDExKSxsPW4oMTc3KSx1PW4oMTIpLHA9big1KSxmPW4oMTYpLGc9d2luZG93LG09YS5RdWVyeVN0cmluZyx2PWMuT2JqZWN0LGg9Yy5EYXRlVGltZSxiPWYuU2Vzc2lvbklkcCxfPWMuU3RyaW5nLFM9YS5IZWxwZXIsdz1wLlBhZ2luYXRlZFN0YXRlO28uY29tcG9uZW50cy5yZWdpc3RlcigiZmV0Y2gtc2Vzc2lvbnMtY29udHJvbCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzU1KSxzeW5jaHJvbm91czohZy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGcuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMzU2KSxuKDE5OCksIiIpKyIgLS0+PCEtLSBrbyBpZjogKHNlc3Npb25QdWxsVHlwZSAmICIrbig1KS5TZXNzaW9uUHVsbEZsYWdzLk1zYSsnKSAhPSAwICYmIGNhbGxNc2FTdGF0aWNNZUNvbnRyb2woKSAtLT4gPGRpdiBkYXRhLWJpbmQ9ImluamVjdElmcmFtZTogeyB1cmw6IHN2ci51cmxNc2FTdGF0aWNNZUNvbnRyb2wsIG9ubG9hZDogaUZyYW1lX29ubG9hZCB9Ij48L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzdnIuZGVza3RvcFNzb0NvbmZpZyAmJiAhaXNOb25JbnRlcmFjdGl2ZUF1dGhSZXF1ZXN0IC0tPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IGZhbHNlIH0gfSI+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiAoc2Vzc2lvblB1bGxUeXBlICYgJytuKDUpLlNlc3Npb25QdWxsRmxhZ3MuRHNzbysiKSAhPSAwICYmIGRlc2t0b3BTc29SdW5uaW5nKCkgLS0+IDxzcGFuIGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZGVza3RvcC1zc28tcmVxdWVzdC1jb250cm9sJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgIGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSxcbiAgICAgICAgdW5zYWZlX2RvbWFpbk5hbWU6IHVuc2FmZV9kb21haW5OYW1lIH0sXG4gICAgZXZlbnQ6IHtcbiAgICAgICAgZGVza3RvcFNzb1N1Y2Nlc3M6IGRlc2t0b3BTc29SZXF1ZXN0Q29udHJvbF9vblN1Y2Nlc3MsXG4gICAgICAgIGRlc2t0b3BTc29GYWlsdXJlOiBkZXNrdG9wU3NvUmVxdWVzdENvbnRyb2xfb25GYWlsdXJlLFxuICAgICAgICBkZXNrdG9wU3NvRWRnZVJlZGlyZWN0OiBkZXNrdG9wU3NvUmVxdWVzdENvbnRyb2xfb25FZGdlUmVkaXJlY3QgfSB9XCI+IDwvc3Bhbj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBFLl9XaW5QaD8oai5wdXNoKCJEZXRlY3RlZCBCcm93c2VyOiBXaW5kb3dzUGhvbmUiKSwhMSk6RS5JRSYmbnVsbCE9PUUuYiYmRS5iLm1ham9yPj0xMD8oai5wdXNoKCJEZXRlY3RlZCBCcm93c2VyOiBJRTEwKyIpLCEwKTpFLkZpcmVmb3g/KGoucHVzaCgiRGV0ZWN0ZWQgQnJvd3NlcjogRmlyZWZveCIpLCEwKTohKCFFLlNhZmFyaXx8KGoucHVzaCgiRGV0ZWN0ZWQgQnJvd3NlcjogU2FmYXJpIiksIU8pKX1mdW5jdGlvbiBuKCl7cmV0dXJuIEUuQ2hyb21lfHxFLlBoYW50b21KU3x8VSYmRS5JRSYmbnVsbCE9PUUuYiYmRS5iLm1ham9yPj15fHxNJiZFLkVkZ2UmJkUuUkVfV2ViS2l0fWZ1bmN0aW9uIGkoZSl7dmFyIHQ9e3Jlc3VsdENvZGU6ZSxzc29EZWxheTpILGxvZzowPT09ZT8iIjpqLmpvaW4oIlxuIil9LG49bmV3IGQ7bi5Kc29uKEksdCl9ZnVuY3Rpb24gcigpe3ZhciBlPW5ldyBJbWFnZTtlLm9ubG9hZD1jLGUub25lcnJvcj1mdW5jdGlvbigpe2oucHVzaCgiUHJvYmUgaW1hZ2UgZXJyb3IgZXZlbnQgZmlyZWQiKSxTKDIpfTt2YXIgdD1CfHxmLmFwcGVuZE9yUmVwbGFjZShBLCJwcm9iZSIsIjEiKTt0PWYuYXBwZW5kT3JSZXBsYWNlKHQsIl8iLChuZXcgRGF0ZSkuZ2V0VGltZSgpKSxlLnNyYz10fWZ1bmN0aW9uIGMoKXtWPShuZXcgRGF0ZSkuZ2V0VGltZSgpO3ZhciBlPXt3aXRoQ3JlZGVudGlhbHM6ITAsYnJlYWtDYWNoZTohMCxyZXNwb25zZVR5cGU6InRleHQifSx0PW5ldyBkKGUpO3QuR2V0KEEsbC5Db250ZW50VHlwZS5Gb3JtVXJsRW5jb2RlZCx2LGgsYixGKX1mdW5jdGlvbiBtKGUpe3ZhciB0PWcuZXh0cmFjdE9yaWdpbkZyb21VcmwoTHx8QSksbj1nLmV4dHJhY3RPcmlnaW5Gcm9tVXJsKGUub3JpZ2luKTtpZihuIT09dClyZXR1cm4gai5wdXNoKCJFdmVudCBvcmlnaW4gbm90IHZhbGlkIiksdm9pZCBpKDUpO3ZhciBvO3RyeXtvPWEucGFyc2UoZS5kYXRhKX1jYXRjaChyKXtyZXR1cm4gai5wdXNoKCJJbnZhbGlkIHJlc3BvbnNlOiAiK3IpLHZvaWQgUyg2KX1yZXR1cm4gby5tZXNzYWdlVHlwZSE9PUM/dm9pZCBqLnB1c2goIkZyYW1lTGlzdGVuZXI6IG1lc3NhZ2VUeXBlIHdhcyBub3Qgb2YgdGhlIGV4cGVjdGVkIHZhbHVlLiIpOihIPW8uc3NvRGVsYXl8fDAsdm9pZCgxMDA9PT1vLnJlc3VsdENvZGU/XyhvLm1lc3NhZ2UpOihqLnB1c2goIkZyYW1lTGlzdGVuZXI6IEZyYW1lIHJldHVybmVkIGNvZGUgIitvLnJlc3VsdENvZGUrIiB3aXRoIG1lc3NhZ2UgIitvLm1lc3NhZ2UpLFMoby5yZXN1bHRDb2RlKSkpKX1mdW5jdGlvbiB2KGUsdCl7SD0obmV3IERhdGUpLmdldFRpbWUoKS1WLF8odCl9ZnVuY3Rpb24gaCgpe0g9KG5ldyBEYXRlKS5nZXRUaW1lKCktVixqLnB1c2goIkRpcmVjdCBTU08gYXR0ZW1wdCBmYWlsZWQiKSxTKDMpfWZ1bmN0aW9uIGIoKXtIPShuZXcgRGF0ZSkuZ2V0VGltZSgpLVYsai5wdXNoKCJEaXJlY3QgU1NPIHRpbWVkIG91dCIpLFMoMyl9ZnVuY3Rpb24gXyhlKXtpZihpKDApLHcuZHNzb1Rva2VuKGUpLCFxKXt3Lm9uRGVza3RvcFNzb1N1Y2Nlc3MoKTt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChUKTt0JiZ0LmNsaWNrKCl9fWZ1bmN0aW9uIFMoZSl7aShlKSxxfHx3Lm9uRGVza3RvcFNzb0ZhaWx1cmUoKX12YXIgdz10aGlzLFQ9ImlkU0lCdXR0b245IixDPSJkc3NvUmVzdWx0Iix5PTExLGs9ZS5zZXJ2ZXJEYXRhLHg9ZS51bnNhZmVfZG9tYWluTmFtZSxEPWUudXNlcm5hbWUsUD1lLmRpc3BsYXlOYW1lLEk9ay51cmxEc3NvU3RhdHVzLEU9ay5icm93c2VyLFI9ay5kZXNrdG9wU3NvQ29uZmlnLEE9Ui5pd2FFbmRwb2ludFVybEZvcm1hdCxCPVIuaXdhU3NvUHJvYmVVcmxGb3JtYXQsTD1SLml3YUlGcmFtZVVybEZvcm1hdCxGPVIuaXdhUmVxdWVzdFRpbWVvdXRJbk1zLE49Ui5oaW50ZWREb21haW5OYW1lLE89Ui5pc1NhZmFyaUFsbG93ZWQsVT1SLmlzSUVBbGxvd2VkRm9yU3NvUHJvYmUsTT1SLmlzRWRnZUFuYWhlaW1BbGxvd2VkLFY9bnVsbCxIPTAsaj1bXSxxPSExO3cub25EZXNrdG9wU3NvU3VjY2Vzcz1zLmNyZWF0ZSgpLHcub25EZXNrdG9wU3NvRmFpbHVyZT1zLmNyZWF0ZSgpLHcub25EZXNrdG9wU3NvRWRnZVJlZGlyZWN0PXMuY3JlYXRlKCksdy51c2VJRnJhbWVSZXF1ZXN0PW8ub2JzZXJ2YWJsZSghMSksdy5kc3NvVG9rZW49by5vYnNlcnZhYmxlKCksdy51bnNhZmVfdXNlcm5hbWU9bnVsbCx3LnVuc2FmZV9kaXNwbGF5TmFtZT1udWxsLAp3LmlGcmFtZVNyYz1udWxsLHcuZGlzcG9zZT1mdW5jdGlvbigpe3AucmVtb3ZlRXZlbnRMaXN0ZW5lcih1LCJtZXNzYWdlIixtKSxxPSEwfSx3LmlGcmFtZV9vbmxvYWQ9ZnVuY3Rpb24oZSl7aWYoZSl7dmFyIHQ9Zy5leHRyYWN0T3JpZ2luRnJvbVVybChMfHxBKSxuPUYrInwiK0E7ZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKG4sdCl9fSxmdW5jdGlvbigpe3ZhciBlPWVuY29kZVVSSUNvbXBvbmVudCh4fHxOKTtBPWcuZm9ybWF0KEEsZSksQj1nLmZvcm1hdChCLGUpLEw9Zy5mb3JtYXQoTCxlKSx3LnVuc2FmZV91c2VybmFtZT1wLmh0bWxVbmVzY2FwZShEKSx3LnVuc2FmZV9kaXNwbGF5TmFtZT1wLmh0bWxVbmVzY2FwZShQKSxuKCk/cigpOkUuRWRnZSYmUiYmUi5pc0VkZ2VBbGxvd2VkPyIxIj09PWYuZXh0cmFjdCgiaXNfcmVkaXJlY3RlZCIpP3IoKTp3Lm9uRGVza3RvcFNzb0VkZ2VSZWRpcmVjdCgpOnQoKT8ody5pRnJhbWVTcmM9THx8Zi5hcHBlbmRPclJlcGxhY2UoQSwiaWZyYW1lIiwiMSIpLHcudXNlSUZyYW1lUmVxdWVzdCghMCkscC5hZGRFdmVudExpc3RlbmVyKHUsIm1lc3NhZ2UiLG0pKTooai5wdXNoKCJVc2VyIGFnZW50IGlzIG5vdCBzdXBwb3J0ZWQiKSxTKDEpKX0oKX12YXIgbz1uKDEpLGE9big3KSxyPW4oOSkscz1uKDEzKSxjPW4oNiksZD1uKDE2NyksbD1uKDUpLHU9d2luZG93LHA9ci5IZWxwZXIsZj1yLlF1ZXJ5U3RyaW5nLGc9Yy5TdHJpbmc7by5jb21wb25lbnRzLnJlZ2lzdGVyKCJkZXNrdG9wLXNzby1yZXF1ZXN0LWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM1Nyksc3luY2hyb25vdXM6IXUuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8ci5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbih1LlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0nPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9bG9naW4gZGF0YS1iaW5kPSJ2YWx1ZTogdW5zYWZlX3VzZXJuYW1lIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWxvZ2luZm10IGRhdGEtYmluZD0idmFsdWU6IHVuc2FmZV9kaXNwbGF5TmFtZSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT10eXBlIHZhbHVlPSInK24oNSkuUG9zdFR5cGUuUGFzc3dvcmQrJyIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1kc3NvVG9rZW4gZGF0YS1iaW5kPSJ2YWx1ZTogZHNzb1Rva2VuIi8+PCEtLSBrbyBpZjogdXNlSUZyYW1lUmVxdWVzdCAtLT4gPGRpdiBkYXRhLWJpbmQ9ImluamVjdElmcmFtZTogeyB1cmw6IGlGcmFtZVNyYywgb25sb2FkOiBpRnJhbWVfb25sb2FkIH0iPjwvZGl2PiA8IS0tIC9rbyAtLT4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KGUsdCl7Zm9yKHZhciBuPXQoKSxpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBvPW5baV0oKTtpZihvLm5hbWU9PT1lLm5hbWUmJm8uaWRwPT09ZS5pZHApcmV0dXJuIGl9cmV0dXJuLTF9ZnVuY3Rpb24gbihlKXttLnBlbmRpbmdSZXF1ZXN0SW5kZXgoUy5maW5kSW5kZXgobS5zZXNzaW9ucygpLGZ1bmN0aW9uKHQpe3JldHVybiBlPT09dCgpfSkpLG0ub25TZXRQZW5kaW5nUmVxdWVzdCghMCl9ZnVuY3Rpb24gaSgpe0QrKyxhKCl9ZnVuY3Rpb24gYSgpe20ucGVuZGluZ1JlcXVlc3RJbmRleChudWxsKSxtLm9uU2V0UGVuZGluZ1JlcXVlc3QoITEpfWZ1bmN0aW9uIHIoZSl7ZSYmdy5kb09yaWdpbnNNYXRjaChWLGUub3JpZ2luKSYmKCJzaWduZWRvdXQiPT09ZS5kYXRhPyhtLnNlc3Npb25zLnJlbW92ZShmdW5jdGlvbihlKXtyZXR1cm4gZSgpLmlkcD09PUMuTXNhfSksbS5pc1RpbGVSZXF1ZXN0UGVuZGluZygpfHxtLnNlc3Npb25zKCkubGVuZ3RofHxtLm9uU3dpdGNoVmlldyhiLlVzZXJuYW1lLCEwKSk6dShlLmRhdGEpKX1mdW5jdGlvbiBzKGUpe2UmJncuZG9PcmlnaW5zTWF0Y2goTSxlLm9yaWdpbikmJnUoZS5kYXRhKX1mdW5jdGlvbiB1KGUpe2lmKGUmJmUuc2Vzc2lvbklkKXt2YXIgdD1vLnV0aWxzLmFycmF5Rmlyc3QobS5zZXNzaW9ucygpLGZ1bmN0aW9uKHQpe3JldHVybiBlLnNlc3Npb25JZD09PXQoKS5pZH0pLG49dCgpO24mJihlLnNpZ25vdXRTdGF0dXM/KG0uZXJyb3IobnVsbCksZS5mb3Jnb3RVc2VyP2Yobi5pZCk6KG4uaXNTaWduZWRJbj0hMSx0KG4pKSk6bS5lcnJvcih3LmZvcm1hdChPLlRJTEVfU1RSX1NpZ25vdXRfRXJyb3Isbi5kaXNwbGF5TmFtZSkpKX19ZnVuY3Rpb24gZihlKXttLnNlc3Npb25zLnJlbW92ZShmdW5jdGlvbih0KXtyZXR1cm4gdCgpLmlkPT09ZX0pLG0uaXNUaWxlUmVxdWVzdFBlbmRpbmcoKXx8bS5zZXNzaW9ucygpLmxlbmd0aHx8bS5vblN3aXRjaFZpZXcoYi5Vc2VybmFtZSwhMCl9dmFyIG09dGhpcyx4PW51bGwsRD0wLFA9bnVsbCxJPXt9LEU9ZS5zZXJ2ZXJEYXRhLFI9ZS5zZXJ2ZXJFcnJvcixBPWUuaXNJbml0aWFsVmlldyxCPWUuc2Vzc2lvbnMsTD1lLmZsb3dUb2tlbixGPWUuaXNMb2dvdXRSZXF1ZXN0LE49ZS5pc1RpbGVSZXF1ZXN0UGVuZGluZyxPPUUuc3RyLFU9RS51cmxMb2dpbixNPUUudXJsTG9nb3V0LFY9RS51cmxNc2FMb2dvdXQsSD1FLnVybEdvVG9BQURFcnJvcixqPUUub1VybE90aGVySWRwUG9zdFBhcmFtcyxxPUUudXJsSG9zdGVkUHJpdmFjeUxpbmssRz1FLnNSZW1vdGVDb25uZWN0QXBwTmFtZSxXPUUuc1JlbW90ZUNsaWVudElwLEs9RS5pQmluZFByb3ZpZGVyLHo9RS51cmxMaW5rZWRJbkZlZCwkPUUudXJsR2l0SHViRmVkLFg9RS51cmxBcHBIcmQsSj1FLnVybFNpZ25VcCxRPUUuZlNob3dTaWdudXBUaWxlLFk9RS51cmxVcGdyYWRlUmVkaXJlY3RXaXRoVXNlcm5hbmUsWj1FLnVybFVwZ3JhZGVSZWRpcmVjdCxlZT1FLm9TaWduVXBQb3N0UGFyYW1zLHRlPUUub1VwZ3JhZGVNaWdyYXRpb25Db25maWd8fHt9LG5lPUUub0FwcENvYnJhbmRpbmcsaWU9by5vYnNlcnZhYmxlKEwpLmV4dGVuZCh7Zmxvd1Rva2VuVXBkYXRlOkV9KTttLm9uU3dpdGNoVmlldz1sLmNyZWF0ZSgpLG0ub25SZWRpcmVjdD1sLmNyZWF0ZSgpLG0ub25TdWJtaXRSZWFkeT1sLmNyZWF0ZSgpLG0ub25TZXRQZW5kaW5nUmVxdWVzdD1sLmNyZWF0ZSgpLG0uc2Vzc2lvbnM9by5vYnNlcnZhYmxlQXJyYXkoKSxtLmVycm9yPW8ub2JzZXJ2YWJsZSgpLG0ucGVuZGluZ1JlcXVlc3RJbmRleD1vLm9ic2VydmFibGUoKSxtLmlzQmFja0J1dHRvblZpc2libGU9by5vYnNlcnZhYmxlKCExKSxtLnNlbGVjdGVkU2Vzc2lvbklkPW8ub2JzZXJ2YWJsZSgpLG0uaXNUaWxlUmVxdWVzdFBlbmRpbmc9by5vYnNlcnZhYmxlKCExKSxtLmlzTG9nb3V0UmVxdWVzdD1GLG0ucGFnZVRpdGxlPW51bGwsbS5wYWdlRGVzY3JpcHRpb249bnVsbCxtLm90aGVyVGlsZVRleHQ9bnVsbCxtLnVuc2FmZV9zaWdudXBUaWxlVGV4dD1udWxsLG0uZGlzcG9zZT1mdW5jdGlvbigpe2koKSx2LnJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCJtZXNzYWdlIixzKSx2LnJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCJtZXNzYWdlIixyKX0sbS5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXtlLmZsb3dUb2tlbj1pZSgpLGUuc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjPSEoIW5lfHwhbmUuc2hvd0Rlc2NPbkNyZWRWaWV3cyksZS5zZXNzaW9ucz1vLnRvSlMobS5zZXNzaW9ucykseD8oZS51c2VybmFtZT14Lm5hbWUsZS5kaXNwbGF5TmFtZT14LmRpc3BsYXlOYW1lLG8udXRpbHMuZXh0ZW5kKGUsSSkpOihlLnVzZXJuYW1lPW51bGwsZS5kaXNwbGF5TmFtZT1udWxsKX0sbS5nZXRTdGF0ZT1mdW5jdGlvbigpe3JldHVybntnY3RSZXF1ZXN0SGVscGVyU3RhdGU6UC5nZXRTdGF0ZSgpfX0sbS5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oZSl7ZSYmUC5yZXN0b3JlU3RhdGUoZS5nY3RSZXF1ZXN0SGVscGVyU3RhdGUpfSxtLmFkZE5ld1Nlc3Npb25zPWZ1bmN0aW9uKGUsbil7bS5pc1RpbGVSZXF1ZXN0UGVuZGluZyghMSksUy5mb3JFYWNoKGUsZnVuY3Rpb24oZSl7dmFyIGk9dChlLG0uc2Vzc2lvbnMpLGE9by5vYnNlcnZhYmxlKGUpO2k9PT0tMT9lLmlzV2luZG93c1Nzbz9tLnNlc3Npb25zLnVuc2hpZnQoYSk6bS5zZXNzaW9ucy5wdXNoKGEpOmUuaXNXaW5kb3dzU3NvPyhtLnNlc3Npb25zLnNwbGljZShpLDEpLG0uc2Vzc2lvbnMudW5zaGlmdChhKSk6biYmKG0uc2Vzc2lvbnMuc3BsaWNlKGksMSksbS5zZXNzaW9ucy5wdXNoKGEpKX0pfSxtLnRpbGVfb25DbGljaz1mdW5jdGlvbihlKXtpKCk7dmFyIHQ9RDtpZih4PWUsbS5lcnJvcihudWxsKSxGKW0uc2VsZWN0ZWRTZXNzaW9uSWQoZS5pZCksbS5vblN1Ym1pdFJlYWR5KGUuaXNNZUNvbnRyb2xTZXNzaW9uKTtlbHNlIGlmKCFlLmlzU2lnbmVkSW4mJlkpbS5vblJlZGlyZWN0KFkpO2Vsc2UgaWYoKGUuaXNTaWduZWRJbnx8ZS5pc1dpbmRvd3NTc298fGUuaXNTYW1zdW5nU3NvKSYmIWUuaXNNZUNvbnRyb2xTZXNzaW9uJiZlLmlkKW0ub25SZWRpcmVjdChoLmFwcGVuZE9yUmVwbGFjZShVLCJzZXNzaW9uaWQiLGUuaWQpKTtlbHNlIGlmKGUuaXNXaW5kb3dzU3NvKXt2YXIgcj1uZXcgcChFKTtuKGUpLGQudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbihyLmxvZ2luV2luZG93c1VzZXJBc3luYyhlLnNzb0xpbmspLnRoZW4obnVsbCxmdW5jdGlvbigpe3JldHVybiBudWxsfSkudGhlbihmdW5jdGlvbihlKXt0PT09RCYmKGEoKSxlJiZtLm9uUmVkaXJlY3QoZSkpfSkpfWVsc2UgaWYoZS5pc090aGVySWRwKXt2YXIgcz13LnRyaW0oeC5kaXNwbGF5TmFtZSksYz1oLmFwcGVuZE9yUmVwbGFjZShILCJ1c2VybmFtZSIsZW5jb2RlVVJJQ29tcG9uZW50KHMpKSxsPWo/VC5jbG9uZShqKTpudWxsO2wmJihsLnVzZXJuYW1lPXMpLG0ub25SZWRpcmVjdChjLGwsITApfWVsc2UgbihlKSxkLnRocm93VW5oYW5kbGVkRXhjZXB0aW9uT25SZWplY3Rpb24oUC5zZW5kQXN5bmModi5odG1sVW5lc2NhcGUoZS5uYW1lKSxpZSgpKS50aGVuKGZ1bmN0aW9uKGUpe2lmKGUuZmxvd1Rva2VuJiZpZShlLmZsb3dUb2tlbiksdD09PUQpc3dpdGNoKGEoKSxlLmFjdGlvbil7Y2FzZSB5LlNob3dFcnJvcjptLmVycm9yKGUuZXJyb3IpO2JyZWFrO2Nhc2UgeS5Td2l0Y2hWaWV3Okk9by51dGlscy5leHRlbmQoZS5zaGFyZWREYXRhLGUudmlld1BhcmFtc3x8e30pLG0ub25Td2l0Y2hWaWV3KGUudmlld0lkKTticmVhaztjYXNlIHkuUmVkaXJlY3Q6bS5vblJlZGlyZWN0KGUucmVkaXJlY3RVcmwsZS5yZWRpcmVjdFBvc3RQYXJhbXMsZS5pc0lkcFJlZGlyZWN0KX19KSl9LG0udGlsZV9vbkZvcmdldENvbXBsZXRlPWZ1bmN0aW9uKGUsdCl7ZT8obS5lcnJvcihudWxsKSxmKHQuaWQpKTptLmVycm9yKHcuZm9ybWF0KE8uVElMRV9TVFJfRm9yZ2V0X0Vycm9yLHQuZGlzcGxheU5hbWUpKX0sbS5vdGhlclRpbGVfb25DbGljaz1mdW5jdGlvbigpe2lmKHg9bnVsbCxYKW0ub25SZWRpcmVjdChYKTtlbHNlIGlmKFopbS5vblJlZGlyZWN0KFopO2Vsc2Ugc3dpdGNoKEspe2Nhc2UgXy5MaW5rZWRJbjptLm9uUmVkaXJlY3Qoeik7YnJlYWs7Y2FzZSBfLkdpdEh1YjptLm9uUmVkaXJlY3QoJCk7YnJlYWs7ZGVmYXVsdDptLm9uU3dpdGNoVmlldyhiLlVzZXJuYW1lKX19LG0uc2lnbnVwVGlsZV9vbkNsaWNrPWZ1bmN0aW9uKCl7WT9tLm9uUmVkaXJlY3QoWSk6bS5vblJlZGlyZWN0KEosZWUpfSxtLnNraXBfb25DbGljaz1mdW5jdGlvbigpe2cuaGFuZGxlT25Ta2lwKEUpfSxtLnByaXZhY3lfb25DbGljaz1mdW5jdGlvbigpe3E/bS5vblJlZGlyZWN0KHEpOm0ub25Td2l0Y2hWaWV3KGIuVmlld0FncmVlbWVudCl9LG0uc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXttLm9uU3dpdGNoVmlldyhiLlByZXZpb3VzKX0sZnVuY3Rpb24oKXt2YXIgZT1udWxsLHQ9Ty5USUxFX1NUUl9IZWFkZXIsbj1PLlRJTEVfU1RSX1VzZUFub3RoZXI7aWYoUD1uZXcgYyhFLGsuQ2hlY2tDdXJyZW50SWRwT25seSksbS5pc1RpbGVSZXF1ZXN0UGVuZGluZyhOKSx0ZS51cGdyYWRlTWlncmF0aW9uVVhJRCl0PU8uVElMRV9TVFJfVXBncmFkZUhlYWRlcixlPU8uVElMRV9TVFJfVXBncmFkZURlc2NyaXB0aW9uLHRlLmFsbG93U2lnbnVwTmFtZSYmKG0udW5zYWZlX3NpZ251cFRpbGVUZXh0PXcuZm9ybWF0KE8uVElMRV9TVFJfU2lnbnVwLHYuaHRtbFVuZXNjYXBlKHRlLmFsbG93U2lnbnVwTmFtZSkpKTtlbHNlIGlmKFEpbS51bnNhZmVfc2lnbnVwVGlsZVRleHQ9Ty5USUxFX1NUUl9TaWdudXA7ZWxzZSBpZihPLldGX1NUUl9EZWZhdWx0X0Rlc2MpZT13LmZvcm1hdChPLldGX1NUUl9EZWZhdWx0X0Rlc2MsRyxXKTtlbHNlIGlmKEYpZT1PLlRJTEVfU1RSX0Rlc2NyaXB0aW9uO2Vsc2Ugc3dpdGNoKEspe2Nhc2UgXy5MaW5rZWRJbjplPU8uVElMRV9TVFJfRGVzY19MaW5rZWRJbixuPU8uVElMRV9TVFJfVXNlQW5vdGhlcl9MaW5rZWRJbjticmVhaztjYXNlIF8uR2l0SHViOmU9Ty5USUxFX1NUUl9EZXNjX0dpdEh1YixuPU8uVElMRV9TVFJfVXNlQW5vdGhlcl9HaXRIdWJ9bS5wYWdlVGl0bGU9dCxtLnBhZ2VEZXNjcmlwdGlvbj1lLG0ub3RoZXJUaWxlVGV4dD1uLFMuZm9yRWFjaChCLGZ1bmN0aW9uKGUpe20uc2Vzc2lvbnMucHVzaChvLm9ic2VydmFibGUoZSkpLGUubWF0Y2hlc0xvZ2luSGludCYmKHg9ZSl9KSxSJiYobS5lcnJvcihSKSxSPW51bGwpLEEmJmcmJmcuaXNCYWNrQnV0dG9uU3VwcG9ydGVkT25Jbml0aWFsVmlldz9nLmlzQmFja0J1dHRvblN1cHBvcnRlZE9uSW5pdGlhbFZpZXcoRSxmdW5jdGlvbihlKXttLmlzQmFja0J1dHRvblZpc2libGUoZSl9KTptLmlzQmFja0J1dHRvblZpc2libGUoITApLHYuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIm1lc3NhZ2UiLHMpLHYuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIm1lc3NhZ2UiLHIpfSgpfXZhciBvPW4oMSksYT1uKDUpLHI9big5KSxzPW4oNiksYz1uKDE3MyksZD1uKDEyKSxsPW4oMTMpLHU9bigxNikscD1uKDE3MCksZj1uKDE5MyksZz1udWxsLG09d2luZG93LHY9ci5IZWxwZXIsaD1yLlF1ZXJ5U3RyaW5nLGI9YS5QYWdpbmF0ZWRTdGF0ZSxfPWEuQmluZFByb3ZpZGVyLFM9cy5BcnJheSx3PXMuU3RyaW5nLFQ9cy5PYmplY3QsQz11LlNlc3Npb25JZHAseT1jLkdjdFJlc3VsdEFjdGlvbixrPWMuR2N0UmVxdWVzdEhlbHBlckZsYWdzO2YuYXBwbHlFeHRlbmRlcnMobyksby5jb21wb25lbnRzLnJlZ2lzdGVyKCJ0aWxlcy12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigzNTkpLHN5bmNocm9ub3VzOiFtLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4obS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigzNjApLG4oMjM2KSxuKDI5NSksbigxOTgpLCIiKSsnIC0tPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1zZXNzaW9uSWQgZGF0YS1iaW5kPSJ2YWx1ZTogc2VsZWN0ZWRTZXNzaW9uSWQiLz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2hlYWRlci1jb250cm9sXCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgdGl0bGU6IHBhZ2VUaXRsZSB9IH0iPiA8L2Rpdj48IS0tIGtvIGlmOiBwYWdlRGVzY3JpcHRpb24gLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkiPiA8ZGl2IGNsYXNzPXdyYXAtY29udGVudCBkYXRhLWJpbmQ9IlxuICAgICAgICBodG1sV2l0aEJpbmRpbmdzOiBwYWdlRGVzY3JpcHRpb24sXG4gICAgICAgIGNoaWxkQmluZGluZ3M6IHtcbiAgICAgICAgICAgIFwnaXBBZGRyZXNzXCc6IHsgY3NzOiB7IFwnYm9sZFwnOiB0cnVlIH0gfSxcbiAgICAgICAgICAgIFwnYXBwTmFtZVwnOiB7IGNzczogeyBcJ2JvbGRcJzogdHJ1ZSB9IH0gfSI+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBlcnJvciAtLT4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgaWQ9dGlsZUVycm9yIGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciBjb2wtbWQtMjQgYWxlcnQtbWFyZ2luLWJvdHRvbSIgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlIGFyaWEtcmVsZXZhbnQ9dGV4dCBhcmlhLWF0b21pYz10cnVlIGRhdGEtYmluZD0idGV4dDogZXJyb3IiPjwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBkYXRhLWJpbmQ9ImNzczogeyBcJ3Bvc2l0aW9uLWJ1dHRvbnNcJzogc3ZyLmZBbGxvd0NhbmNlbCB9Ij4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgaWQ9dGlsZXNIb2xkZXIgY2xhc3M9Zm9ybS1ncm91cCByb2xlPWxpc3Rib3ggYXJpYS1sYWJlbGxlZGJ5PSJ0aWxlRXJyb3IgbG9naW5IZWFkZXIiIGRhdGEtYmluZD0iYXR0cjogeyBcJ2RhdGEtdGVzdC1hc3luY3RpbGVzbG9hZGVkXCc6ICFpc1RpbGVSZXF1ZXN0UGVuZGluZygpIH0iPjwhLS0ga28gZm9yZWFjaDogeyBkYXRhOiBzZXNzaW9ucywgYXM6IFwnc2Vzc2lvblwnIH0gLS0+IDxkaXYgY2xhc3M9dGlsZS1jb250YWluZXIgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCd0aWxlLWZpZWxkXCcsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbjogc2Vzc2lvbixcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXM6ICRpbmRleCgpID09PSAwLFxuICAgICAgICAgICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6ICRpbmRleCgpID09PSAwID8gXCd0aWxlRXJyb3IgbG9naW5IZWFkZXJcJyA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIGlzTG9nb3V0UmVxdWVzdDogJHBhcmVudC5pc0xvZ291dFJlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgIHRpbGVJbmRleDogJGluZGV4KCkgfSxcbiAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICB0aWxlQ2xpY2s6ICRwYXJlbnQudGlsZV9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICBmb3JnZXRDb21wbGV0ZTogJHBhcmVudC50aWxlX29uRm9yZ2V0Q29tcGxldGUgfSB9Ij4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogaXNUaWxlUmVxdWVzdFBlbmRpbmcgLS0+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBpZD1wZW5kaW5nVGlsZSBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj4gPGRpdiBjbGFzcz10YWJsZS1yb3c+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGlsZS1pbWciPiA8ZGl2IGNsYXNzPXRpbGUtaW1nPjwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0idGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudCI+IDxkaXYgaWQ9cGVuZGluZ1RpbGVUZXh0IGRhdGEtYmluZD0idGV4dDogc3RyW1wnVElMRV9TVFJfQXN5bmNUaWxlVGV4dFwnXSI+PC9kaXY+IDxkaXYgY2xhc3M9cHJvZ3Jlc3MtY29udGFpbmVyLXRpbGUtY29udGVudD4gPGRpdiBjbGFzcz1wcm9ncmVzcyBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ21hcmNoaW5nLWFudHMtY29udHJvbFwnIH0iPjwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogdW5zYWZlX3NpZ251cFRpbGVUZXh0IC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGlsZSI+IDxkaXYgaWQ9c2lnbnVwVGlsZSBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGFyaWEtbGFiZWxsZWRieT1zaWdudXBUaWxlVGV4dCBkYXRhLWJpbmQ9ImNsaWNrOiBzaWdudXBUaWxlX29uQ2xpY2ssIHByZXNzRW50ZXI6IHNpZ251cFRpbGVfb25DbGljayI+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDM2OCkrIiBzdmdzcmM9IituKDM2OSkrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50Ij4gPGRpdiBpZD1zaWdudXBUaWxlVGV4dCBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9zaWdudXBUaWxlVGV4dCI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IGlzTG9nb3V0UmVxdWVzdCB8fCBzdnIuZlNob3dTaWdudXBUaWxlIC0tPiA8ZGl2IGNsYXNzPSJyb3cgdGlsZSI+IDxkaXYgaWQ9b3RoZXJUaWxlIGNsYXNzPXRhYmxlIHRhYmluZGV4PTAgcm9sZT1vcHRpb24gYXJpYS1sYWJlbGxlZGJ5PW90aGVyVGlsZVRleHQgZGF0YS1iaW5kPSJjbGljazogb3RoZXJUaWxlX29uQ2xpY2ssIHByZXNzRW50ZXI6IG90aGVyVGlsZV9vbkNsaWNrIj4gPGRpdiBjbGFzcz10YWJsZS1yb3c+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGlsZS1pbWciPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0nK24oMzY4KSsiIHN2Z3NyYz0iK24oMzY5KSsnIGRhdGEtYmluZD1pbWdTcmMgLz4gPC9kaXY+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGV4dC1sZWZ0IGNvbnRlbnQiPiA8ZGl2IGlkPW90aGVyVGlsZVRleHQgZGF0YS1iaW5kPSJ0ZXh0OiBvdGhlclRpbGVUZXh0Ij48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnZm9vdGVyLWJ1dHRvbnMtZmllbGRcJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICByZW1vdmVCb3R0b21NYXJnaW46IHRydWUsXG4gICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogISFzdnIuZkFsbG93Q2FuY2VsIH0sXG4gICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoZSl7ZT1lfHx1LmV2ZW50LCJFc2NhcGUiPT09ZS5jb2RlfHxlLmtleUNvZGU9PT1oLkVzY2FwZT8ody5tZW51T3BlbighMSksdy5tZW51Rm9jdXNlZCghMCksYigpKToiRW50ZXIiPT09ZS5jb2RlfHxlLmtleUNvZGU9PT1oLkVudGVyP0w/TD0hMToody5tZW51T3BlbighMSksYigpKToiQXJyb3dVcCI9PT1lLmNvZGV8fGUua2V5Q29kZT09PWguQXJyb3dVcD93Lm1lbnVPcGVuKCkmJih3LnNpZ25vdXRBbmRGb3JnZXRGb2N1cygpJiZDLmlzU2lnbmVkSW4/dy5zaWdub3V0Rm9jdXMoITApOncuc2lnbm91dEZvY3VzKCkmJkMuaXNTaWduZWRJbiYmdy5zaWdub3V0QW5kRm9yZ2V0Rm9jdXMoITApKToiQXJyb3dEb3duIj09PWUuY29kZXx8ZS5rZXlDb2RlPT09aC5BcnJvd0Rvd24/dy5tZW51T3BlbigpJiYody5zaWdub3V0Rm9jdXMoKSYmQy5pc1NpZ25lZEluP3cuc2lnbm91dEFuZEZvcmdldEZvY3VzKCEwKTp3LnNpZ25vdXRBbmRGb3JnZXRGb2N1cygpJiZDLmlzU2lnbmVkSW4mJncuc2lnbm91dEZvY3VzKCEwKSk6IlRhYiIhPT1lLmNvZGUmJmUua2V5Q29kZSE9PWguVGFifHwody5tZW51T3BlbighMSksYigpKX1mdW5jdGlvbiBuKCl7cmV0dXJuIEw/dm9pZChMPSExKToody5tZW51T3BlbighMSksdy5tZW51Rm9jdXNlZCghMCksdm9pZCBiKCkpfWZ1bmN0aW9uIGkoKXt3Lm9uRm9yZ2V0Q29tcGxldGUoITAsQyl9ZnVuY3Rpb24gcigpe3cub25Gb3JnZXRDb21wbGV0ZSghMSxDKX1mdW5jdGlvbiBkKGUpe3ZhciB0PUMuaXNNZUNvbnRyb2xTZXNzaW9uP0E6RTtDLmlkJiYodD1mLmFwcGVuZE9yUmVwbGFjZSh0LCJzZXNzaW9uSWQiLGVuY29kZVVSSUNvbXBvbmVudChDLmlkKSksdD1mLmFwcGVuZE9yUmVwbGFjZSh0LCJzaG91bGRGb3JnZXRVc2VyIixlKSksdy5pRnJhbWVTcmModCl9ZnVuY3Rpb24gbCgpe3AuYWRkRXZlbnRMaXN0ZW5lcihkb2N1bWVudC5ib2R5LCJjbGljayIsbikscC5hZGRFdmVudExpc3RlbmVyKGRvY3VtZW50LmJvZHksImtleWRvd24iLHQpfWZ1bmN0aW9uIGIoKXtwLnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9jdW1lbnQuYm9keSwiY2xpY2siLG4pLHAucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudC5ib2R5LCJrZXlkb3duIix0KX1mdW5jdGlvbiBfKCl7dy5mb3JnZXRGb2N1cyghQy5pc1NpZ25lZEluKSx3LnNpZ25vdXRGb2N1cyhDLmlzU2lnbmVkSW4mJiFDLmlzTWVDb250cm9sU2Vzc2lvbiksdy5zaWdub3V0QW5kRm9yZ2V0Rm9jdXMoQy5pc1NpZ25lZEluJiZDLmlzTWVDb250cm9sU2Vzc2lvbil9ZnVuY3Rpb24gUyhlKXtSJiZnLmlzQ29va2llU2FmZVZhbHVlKGUpJiZnLndyaXRlV2l0aEV4cGlyYXRpb24oUi5uYW1lLGUsUi5zZWN1cmUsZy5wZXJzaXN0RGF0ZSxSLmRvbWFpbixSLnBhdGgpfXZhciB3PXRoaXMsVD1lLnNlcnZlckRhdGEsQz1lLnNlc3Npb24seT1lLmhhc0ZvY3VzLGs9ZS5hcmlhRGVzY3JpYmVkQnkseD1lLmlzTG9nb3V0UmVxdWVzdCxEPWUudGlsZUluZGV4LFA9VC5zdHIsST1ULnVybEZvcmdldCxFPVQudXJsTG9nb3V0LFI9VC51c2VyUm91dGluZ0Nvb2tpZUNvbmZpZyxBPVQudXJsTXNhTG9nb3V0LEI9VC5mSGlkZVRpbGVNZW51LEw9ITE7dy5vblRpbGVDbGljaz1zLmNyZWF0ZSgpLHcub25Gb3JnZXRDb21wbGV0ZT1zLmNyZWF0ZSgpLHcubWVudU9wZW49by5vYnNlcnZhYmxlKCExKSx3Lm1lbnVGb2N1c2VkPW8ub2JzZXJ2YWJsZSghMSkuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KSx3LmlGcmFtZVNyYz1vLm9ic2VydmFibGUoKSx3LmZvcmdldEZvY3VzPW8ub2JzZXJ2YWJsZSghMSksdy5zaWdub3V0Rm9jdXM9by5vYnNlcnZhYmxlKCExKSx3LnNpZ25vdXRBbmRGb3JnZXRGb2N1cz1vLm9ic2VydmFibGUoITEpLHcuc2Vzc2lvbj1DLHcuaGFzRm9jdXM9eSx3LmFyaWFEZXNjcmliZWRCeT1rLHcudGlsZUluZGV4PUQsdy5oaWRlVGlsZU1lbnU9ITEsdy51bnNhZmVfaGVscFRleHQ9bnVsbCx3LnVuc2FmZV9zaWduZWRJblRleHQ9bnVsbCx3LmRpc3Bvc2U9ZnVuY3Rpb24oKXtiKCl9LHcubWVudV9vbkNsaWNrPWZ1bmN0aW9uKCl7TD0hMCxfKCksdy5tZW51T3BlbighMCksbCgpfSx3LnRpbGVfb25DbGljaz1mdW5jdGlvbigpe0x8fChTKEMubmFtZSksdy5vblRpbGVDbGljayhDKSl9LHcuZm9yZ2V0X29uQ2xpY2s9ZnVuY3Rpb24oKXtTKEMubmFtZSk7dmFyIGU9STtlPWYuYXBwZW5kT3JSZXBsYWNlKGUsInNlc3Npb25JZCIsZW5jb2RlVVJJQ29tcG9uZW50KEMuaWQpKTt2YXIgdD1uZXcgYTt0LkdldChlLGMuQ29udGVudFR5cGUuSnNvbixpLHIsYy5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpfSx3LnNpZ25vdXRfb25DbGljaz1mdW5jdGlvbigpe1MoQy5uYW1lKSxkKCExKX0sdy5zaWdub3V0QW5kRm9yZ2V0X29uQ2xpY2s9ZnVuY3Rpb24oKXtTKEMubmFtZSksZCghMCl9LGZ1bmN0aW9uKCl7dmFyIGU9cC5odG1sVW5lc2NhcGUoQy5ob21lVGVuYW50TmFtZSk7dy5oaWRlVGlsZU1lbnU9Qnx8eHx8Qy5pc1dpbmRvd3NTc298fEMuaXNTYW1zdW5nU3NvLHcuc2Vzc2lvbi51bnNhZmVfZnVsbE5hbWU9cC5odG1sVW5lc2NhcGUoQy5mdWxsTmFtZSksdy5zZXNzaW9uLnVuc2FmZV9kaXNwbGF5TmFtZT1wLmh0bWxVbmVzY2FwZShDLmRpc3BsYXlOYW1lKSx3LnNlc3Npb24udW5zYWZlX25hbWU9cC5odG1sVW5lc2NhcGUoQy5uYW1lKSx3LnVuc2FmZV9zaWduZWRJblRleHQ9ZT92LmZvcm1hdChQLlRJTEVfU1RSX0FjdGl2ZV9UZW5hbnQsZSk6UC5USUxFX1NUUl9BY3RpdmUsQy5pZHA9PT1tLk1zYT93LnVuc2FmZV9oZWxwVGV4dD12LmZvcm1hdChQLlRJTEVfU1RSX01zYVRpbGVIZWxwVGV4dCxDLnVuc2FmZV9kaXNwbGF5TmFtZSk6dy51bnNhZmVfaGVscFRleHQ9di5mb3JtYXQoUC5USUxFX1NUUl9BYWRUaWxlSGVscFRleHQsQy51bnNhZmVfZGlzcGxheU5hbWUpLF8oKX0oKX12YXIgbz1uKDEpLGE9bigxNjcpLHI9big5KSxzPW4oMTMpLGM9big1KSxkPW4oNiksbD1uKDE2KSx1PXdpbmRvdyxwPXIuSGVscGVyLGY9ci5RdWVyeVN0cmluZyxnPXIuQ29va2llcyxtPWwuU2Vzc2lvbklkcCx2PWQuU3RyaW5nLGg9Yy5LZXlDb2RlO28uY29tcG9uZW50cy5yZWdpc3RlcigidGlsZS1maWVsZCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzYxKSxzeW5jaHJvbm91czohdS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxyLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKHUuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMjA3KSwiIikrIiAtLT4gPGRpdiBjbGFzcz1cInJvdyB0aWxlXCI+IDxkaXYgY2xhc3M9dGFibGUgdGFiaW5kZXg9MCByb2xlPW9wdGlvbiBkYXRhLWJpbmQ9XCJcbiAgICAgICAgYXR0cjoge1xuICAgICAgICAgICAgJ2RhdGEtdGVzdC1pZCc6IHNlc3Npb24udW5zYWZlX25hbWUsXG4gICAgICAgICAgICAnZGF0YS10ZXN0LWlkcCc6IHNlc3Npb24uaWRwLFxuICAgICAgICAgICAgJ2RhdGEtdGVzdC1ob21ldGVuYW50Jzogc2Vzc2lvbi5ob21lVGVuYW50TmFtZSB8fCAnJyB9LFxuICAgICAgICBhcmlhTGFiZWw6IHVuc2FmZV9oZWxwVGV4dCxcbiAgICAgICAgYXJpYURlc2NyaWJlZEJ5OiBhcmlhRGVzY3JpYmVkQnksXG4gICAgICAgIGNsaWNrOiB0aWxlX29uQ2xpY2ssXG4gICAgICAgIHByZXNzRW50ZXI6IHRpbGVfb25DbGljayxcbiAgICAgICAgaGFzRm9jdXM6IGhhc0ZvY3VzXCI+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPVwidGFibGUtY2VsbCB0aWxlLWltZ1wiPjwhLS0ga28gaWY6IHNlc3Npb24uaWRwID09PSAiK24oMTYpLlNlc3Npb25JZHAuQWFkKyIgLS0+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNDIpKyIgc3Znc3JjPSIrbigyNDMpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHNlc3Npb24uaWRwID09PSAiK24oMTYpLlNlc3Npb25JZHAuTXNhKyIgLS0+IDxpbWcgY2xhc3M9dGlsZS1pbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbigyNDQpKyIgc3Znc3JjPSIrbigyNDUpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0ga28gaWY6IHNlc3Npb24uaXNHaXRIdWJGZWQgLS0+IDxpbWcgY2xhc3M9dGlsZS1iYWRnZSByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDM2MikrIiBzdmdzcmM9IituKDM2MykrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+PCEtLSAva28gLS0+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGNsYXNzPVwidGFibGUtY2VsbCB0ZXh0LWxlZnQgY29udGVudFwiPiA8ZGl2IGRhdGEtYmluZD1cInRleHQ6ICgoc2Vzc2lvbi5pc1NpZ25lZEluIHx8IHNlc3Npb24uaXNTYW1zdW5nU3NvKSAmJiBzZXNzaW9uLnVuc2FmZV9mdWxsTmFtZSkgfHwgc2Vzc2lvbi51bnNhZmVfZGlzcGxheU5hbWVcIj48L2Rpdj48IS0tIGtvIGlmOiAoc2Vzc2lvbi5pc1NpZ25lZEluIHx8IHNlc3Npb24uaXNTYW1zdW5nU3NvKSAmJiBzZXNzaW9uLmZ1bGxOYW1lIC0tPiA8ZGl2PjxzbWFsbCBkYXRhLWJpbmQ9XCJ0ZXh0OiBzZXNzaW9uLnVuc2FmZV9kaXNwbGF5TmFtZVwiPjwvc21hbGw+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc2Vzc2lvbi5pc1NpZ25lZEluICYmICFzZXNzaW9uLmlzV2luZG93c1NzbyAmJiAhc2Vzc2lvbi5pc1NhbXN1bmdTc28gJiYgIWlGcmFtZVNyYygpIC0tPiA8ZGl2PjxzbWFsbCBkYXRhLWJpbmQ9XCJ0ZXh0OiB1bnNhZmVfc2lnbmVkSW5UZXh0XCI+PC9zbWFsbD48L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzZXNzaW9uLmlGcmFtZVNyYyAtLT4gPGRpdj48c21hbGwgZGF0YS1iaW5kPVwidGV4dDogc3RyWydUSUxFX1NUUl9TaWduaW5nX091dCddXCI+PC9zbWFsbD48L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzZXNzaW9uLmlzV2luZG93c1NzbyAtLT4gPGRpdj48c21hbGwgZGF0YS1iaW5kPVwidGV4dDogc3RyWydUSUxFX1NUUl9Db25uZWN0ZWQnXVwiPjwvc21hbGw+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc2Vzc2lvbi5pc1NhbXN1bmdTc28gLS0+IDxkaXY+PHNtYWxsIGRhdGEtYmluZD1cInRleHQ6IHN0clsnVElMRV9TVFJfQ29ubmVjdGVkX1NhbXN1bmcnXVwiPjwvc21hbGw+PC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PjwhLS0ga28gaWZub3Q6IGhpZGVUaWxlTWVudSAtLT4gPGRpdiBjbGFzcz1cInRhYmxlLWNlbGwgdGlsZS1tZW51XCI+IDxkaXYgdGFiaW5kZXg9MCByb2xlPWJ1dHRvbiBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBtZW51X29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzc0VudGVyOiBtZW51X29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNGb2N1czogbWVudUZvY3VzZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0clsnVElMRV9TVFJfTWVudUFsdFRleHQnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS10ZXN0LWlkJzogc2Vzc2lvbi51bnNhZmVfbmFtZSArICctbWVudS1kb3RzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS10ZXN0LWlkcCc6IHNlc3Npb24uaWRwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhcmlhLWNvbnRyb2xzJzogJ3RpbGVNZW51JyArIHRpbGVJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYXJpYS1leHBhbmRlZCc6IG1lbnVPcGVuKCkudG9TdHJpbmcoKSB9XCI+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oMzY0KSsiIHN2Z3NyYz0iK24oMzY1KSsiIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDM2NikrIiBzdmdzcmM9IituKDM2NykrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+PCEtLSAva28gLS0+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPHVsIGNsYXNzPW1lbnUgcm9sZT1tZW51IGRhdGEtYmluZD1cIlxuICAgIHZpc2libGU6IG1lbnVPcGVuLFxuICAgIGlmOiBtZW51T3BlbixcbiAgICBhdHRyOiB7ICdpZCc6ICd0aWxlTWVudScgKyB0aWxlSW5kZXggfVwiPiA8bGkgcm9sZT1ub25lPiA8YSBpZD1mb3JnZXRMaW5rIGhyZWY9IyByb2xlPW1lbnVpdGVtIHRhYmluZGV4PTAgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgY2xpY2s6IGZvcmdldF9vbkNsaWNrLFxuICAgICAgICAgICAgICAgIGNsaWNrQnViYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB0ZXh0OiBzdHJbJ1RJTEVfU1RSX0ZvcmdldCddLFxuICAgICAgICAgICAgICAgIHZpc2libGU6ICFzZXNzaW9uLmlzU2lnbmVkSW4sXG4gICAgICAgICAgICAgICAgaGFzRm9jdXM6IGZvcmdldEZvY3VzLFxuICAgICAgICAgICAgICAgIHByZXNzRW50ZXI6IGZvcmdldF9vbkNsaWNrXCI+PC9hPiA8L2xpPiA8bGkgcm9sZT1ub25lPiA8YSBpZD1zaWdub3V0TGluayBocmVmPSMgcm9sZT1tZW51aXRlbSB0YWJpbmRleD0wIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgICAgIGNsaWNrOiBzaWdub3V0X29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgY2xpY2tCdWJibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHRleHQ6IHN0clsnVElMRV9TVFJfU2lnbm91dCddLFxuICAgICAgICAgICAgICAgIHZpc2libGU6IHNlc3Npb24uaXNTaWduZWRJbiAmJiAhc2Vzc2lvbi5pc01lQ29udHJvbFNlc3Npb24sXG4gICAgICAgICAgICAgICAgaGFzRm9jdXM6IHNpZ25vdXRGb2N1cyxcbiAgICAgICAgICAgICAgICBwcmVzc0VudGVyOiBzaWdub3V0X29uQ2xpY2tcIj48L2E+IDwvbGk+IDxsaSByb2xlPW5vbmU+IDxhIGlkPXNpZ25vdXRBbmRGb3JnZXRMaW5rIGhyZWY9IyByb2xlPW1lbnVpdGVtIHRhYmluZGV4PTAgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgY2xpY2s6IHNpZ25vdXRBbmRGb3JnZXRfb25DbGljayxcbiAgICAgICAgICAgICAgICBjbGlja0J1YmJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgdGV4dDogc3RyWydUSUxFX1NUUl9TaWdub3V0X0ZvcmdldCddLFxuICAgICAgICAgICAgICAgIHZpc2libGU6IHNlc3Npb24uaXNTaWduZWRJbixcbiAgICAgICAgICAgICAgICBoYXNGb2N1czogc2lnbm91dEFuZEZvcmdldEZvY3VzLFxuICAgICAgICAgICAgICAgIHByZXNzRW50ZXI6IHNpZ25vdXRBbmRGb3JnZXRfb25DbGlja1wiPjwvYT4gPC9saT4gPC91bD48IS0tIGtvIGlmOiBpRnJhbWVTcmMgLS0+IDxkaXYgZGF0YS1iaW5kPVwiaW5qZWN0SWZyYW1lOiB7IHVybDogaUZyYW1lU3JjIH1cIj48L2Rpdj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2JhZGdlX2dpdGh1Yl8yZTY2YjAzZjU5ZWE5NmI3YzU0YWI0YjhkMTE2MjRhNy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYmFkZ2VfZ2l0aHViXzM0ZTM1ZTc2YWMzNmRlYmViOTIwYjU1ZDQ2NTdiZjRiLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfbW9yZV93aGl0ZV81N2I4ZDFkODczNTg4MWRkODMwMTFjNmE2ZDVmYTc5MS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX21vcmVfd2hpdGVfZTJjZjdmZTJkNDEwMTJkOWJmMDkzYzI1OGU0ODI1NzIuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL3BpY2tlcl9tb3JlX2NlZDMzMWMxMzJiNWY3OThmMWYzYWIzNjcxMmQ0NjA4LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfbW9yZV83NTY4YTQzY2Y0NDA3NTdjNTVkMmU3ZjUxNTU3YWUxZi5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvcGlja2VyX2FjY291bnRfYWRkX2M5OTI5ZGE3ZWQyYzFlZDQ3NDVlNDAzNWNmNTQ0MWNkLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9waWNrZXJfYWNjb3VudF9hZGRfNTZlNzM0MTQwMDNjZGI2NzYwMDhmZjc4NTczNDMwNzQuc3ZnIn0sLCwsLGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZT17Y2FuYXJ5OmssY2xpZW50X2lkOnAuZXh0cmFjdCgiY2xpZW50X2lkIiksY3R4OkQsZHNzb19lZGdlX3VzZXJuYW1lOm19O3JldHVybiBlfWZ1bmN0aW9uIG4oZSl7ZSYmSS50b0xvY2FsZVVwcGVyQ2FzZSgpIT09ZS50b0xvY2FsZVVwcGVyQ2FzZSgpPyhmLmRlc2t0b3BTc29SdW5uaW5nKCkmJmYuZGVza3RvcFNzb1J1bm5pbmcoITEpLEk9ZSxmLmRlc2t0b3BTc29SdW5uaW5nKCEwKSk6KGYuZGVza3RvcFNzb1J1bm5pbmcoITEpLHMoKSl9ZnVuY3Rpb24gaSgpe3JldHVybiBiP2MoKTp5JiZ5Lmxlbmd0aD9sLlRpbGVzOmwuVXNlcm5hbWV9ZnVuY3Rpb24gYSgpe3ZhciBlPXQoKTtlLmVkZ2VfYXR0ZW1wdGVkPSEwLGYub25SZWRpcmVjdCh4LGUpfWZ1bmN0aW9uIHMoKXtFJiZDP2EoKTpmLm9uU3dpdGNoVmlldyhpKCksITApfWZ1bmN0aW9uIGMoKXt2YXIgZT1sLlBhc3N3b3JkO3N3aXRjaChiKXtjYXNlIHUuUGFzc3dvcmQ6ZT1sLlBhc3N3b3JkO2JyZWFrO2Nhc2UgdS5GaWRvOmU9bC5GaWRvO2JyZWFrO2Nhc2UgdS5SZW1vdGVOR0M6ZT1TJiZfP2wuQ29uZmlybVNlbmQ6bC5SZW1vdGVOR0M7YnJlYWs7Y2FzZSB1Lk9uZVRpbWVDb2RlOmNhc2UgdS5QdWJsaWNJZGVudGlmaWVyQ29kZTplPWwuQ29uZmlybVNlbmQ7YnJlYWs7Y2FzZSB1LkZlZGVyYXRpb246Y2FzZSB1LkNsb3VkRmVkZXJhdGlvbjplPWwuSWRwUmVkaXJlY3R9cmV0dXJuIGV9dmFyIGY9dGhpcyxnPWUuc2VydmVyRGF0YSxtPWUudXNlcm5hbWUsdj1lLmRpc3BsYXlOYW1lLGg9ZS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlLGI9ZS5wcmVmZXJyZWRDcmVkZW50aWFsLF89ISFlLmlzUHVzaE5vdGlmaWNhdGlvbixTPWUuaXNJbml0aWFsVmlldyx3PWcuZGVza3RvcFNzb0NvbmZpZy5wcm9ncmVzc0FuaW1hdGlvblRpbWVvdXQsVD1nLmRlc2t0b3BTc29Db25maWcuZWRnZVJlZGlyZWN0VXJpLEM9Zy5kZXNrdG9wU3NvQ29uZmlnLmlzRWRnZUFsbG93ZWQseT1nLmFyclNlc3Npb25zLGs9Zy5hcGlDYW5hcnkseD1nLnVybExvZ2luLEQ9Zy5zQ3R4LFA9bnVsbCxJPSIiLEU9ZC5pc0VkZ2UoKTtmLmRlc2t0b3BTc29SdW5uaW5nPW8ub2JzZXJ2YWJsZSghMSkuZXh0ZW5kKHtub3RpZnk6ImFsd2F5cyJ9KSxmLnVzZXJuYW1lPW0sZi5kaXNwbGF5TmFtZT12LGYudW5zYWZlX2RvbWFpbk5hbWU9aCxmLm9uU3dpdGNoVmlldz1yLmNyZWF0ZSgpLGYub25TdWJtaXRSZWFkeT1yLmNyZWF0ZSgpLGYub25SZWRpcmVjdD1yLmNyZWF0ZSgpLGYuZGlzcG9zZT1mdW5jdGlvbigpe2NsZWFyVGltZW91dChQKX0sZi5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbigpe30sZi5nZXRTdGF0ZT1mdW5jdGlvbigpe3JldHVybiBudWxsfSxmLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbigpe30sZi5jYW5jZWxMaW5rX29uQ2xpY2s9ZnVuY3Rpb24oKXtmLmRlc2t0b3BTc29SdW5uaW5nKCExKSxzKCl9LGYub25EZXNrdG9wU3NvU3VjY2Vzcz1mdW5jdGlvbigpe2NsZWFyVGltZW91dChQKSxmLm9uU3VibWl0UmVhZHkoKX0sZi5vbkRlc2t0b3BTc29FZGdlUmVkaXJlY3Q9ZnVuY3Rpb24oKXt2YXIgZT10KCk7Zi5vblJlZGlyZWN0KFQsZSl9LGYub25EZXNrdG9wU3NvRmFpbHVyZT1mdW5jdGlvbigpe2YuZGVza3RvcFNzb1J1bm5pbmcoKSYmKGYuZGVza3RvcFNzb1J1bm5pbmcoITEpLHMoKSl9LGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe1A9c2V0VGltZW91dChmLm9uRGVza3RvcFNzb0ZhaWx1cmUsdyksbihoKX0sMCl9KCl9dmFyIG89bigxKSxhPW4oOSkscj1uKDEzKSxzPW4oNSksYz13aW5kb3csZD1hLkhlbHBlcixsPXMuUGFnaW5hdGVkU3RhdGUsdT1zLkNyZWRlbnRpYWxUeXBlLHA9YS5RdWVyeVN0cmluZztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWRlc2t0b3Atc3NvLXByb2dyZXNzLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM3NSksc3luY2hyb25vdXM6IWMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIzNiksbigzNTYpLG4oMTk4KSwiIikrIiAtLT4gPGRpdiBpZD1sb2dpbkhlYWRlciBjbGFzcz1cInJvdyB0ZXh0LXRpdGxlXCIgcm9sZT1oZWFkaW5nIGFyaWEtbGV2ZWw9MSBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdHJbJ0RTU09fU1RSX0F1dGhlbnRpY2F0aW5nTWVzc2FnZSddXCI+PC9kaXY+IDxkaXYgY2xhc3M9XCJyb3cgcHJvZ3Jlc3MtY29udGFpbmVyXCI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6ICdtYXJjaGluZy1hbnRzLWNvbnRyb2wnLCBhcmlhTGFiZWw6IHN0clsnV0ZfU1RSX1Byb2dyZXNzVGV4dCddXCI+PC9kaXY+IDwvZGl2PiA8YSBpZD1kZXNrdG9wU3NvQ2FuY2VsIGhyZWY9IyBkYXRhLWJpbmQ9XCJcbiAgICB0ZXh0OiBzdHJbJ0NUX0hSRF9TVFJfUmVkaXJlY3RfQ2FuY2VsJ10sXG4gICAgYXJpYURlc2NyaWJlZEJ5OiAnbG9naW5IZWFkZXInLFxuICAgIGNsaWNrOiBjYW5jZWxMaW5rX29uQ2xpY2ssXG4gICAgaGFzRm9jdXM6IHRydWVcIj48L2E+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBmYWxzZSB9IH1cIj4gPC9kaXY+IDwvZGl2PjwhLS0ga28gaWY6IGRlc2t0b3BTc29SdW5uaW5nIC0tPiA8c3BhbiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Rlc2t0b3Atc3NvLXJlcXVlc3QtY29udHJvbCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICBkaXNwbGF5TmFtZTogZGlzcGxheU5hbWUsXG4gICAgICAgIHVuc2FmZV9kb21haW5OYW1lOiB1bnNhZmVfZG9tYWluTmFtZSB9LFxuICAgIGV2ZW50OiB7XG4gICAgICAgIGRlc2t0b3BTc29TdWNjZXNzOiBvbkRlc2t0b3BTc29TdWNjZXNzLFxuICAgICAgICBkZXNrdG9wU3NvRmFpbHVyZTogb25EZXNrdG9wU3NvRmFpbHVyZSxcbiAgICAgICAgZGVza3RvcFNzb0VkZ2VSZWRpcmVjdDogb25EZXNrdG9wU3NvRWRnZVJlZGlyZWN0IH0gfVwiPiA8L3NwYW4+IDwhLS0gL2tvIC0tPiJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoZSl7cCghMSksIUQmJmUuZ2V0UmVzcG9uc2VKc29uJiYoZT1lLmdldFJlc3BvbnNlSnNvbigpKSxtLnVzZXJDb2RlKGUuVXNlckNvZGUpLG0uZGV2aWNlQ29kZShlLkRldmljZUNvZGV8fGUuU2Vzc2lvbkxvb2t1cEtleSl9ZnVuY3Rpb24gbihlKXtpZihwKCExKSxyKHcuQ1RfU1RSX1JlbW90ZUxvZ2luX0Vycm9yVGl0bGUsITEpLEQmJmUmJmUuZXJyb3Ipc3dpdGNoKGUuZXJyb3IuY29kZSl7Y2FzZSBnLkF1dGhGYWlsdXJlOm0uZXJyb3Iody5DVF9QV0RfU1RSX0Vycm9yX0Zsb3dUb2tlbkV4cGlyZWQpO2JyZWFrO2RlZmF1bHQ6bS5lcnJvcih3LkNUX1BXRF9TVFJfRXJyb3JfR2V0T25lVGltZUNvZGVFcnJvcil9ZWxzZSBtLmVycm9yKHcuQ1RfUFdEX1NUUl9FcnJvcl9HZXRPbmVUaW1lQ29kZUVycm9yKX1mdW5jdGlvbiBpKCl7cigiIiwhMSksbS5lcnJvcihudWxsKSxtLnNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlKCkuc3RvcFBvbGxpbmcoKSxyKHcuV0ZfU1RSX0hlYWRlckRlZmF1bHRfVGl0bGUsITApLG0uc2Vzc2lvblBvbGxpbmdJbnRlcmZhY2UoKS5zdGFydFBvbGxpbmcoKX1mdW5jdGlvbiByKGUsdCl7bS50aXRsZShlKSxtLnVzZVN1YnRpdGxlKHQpfWZ1bmN0aW9uIHAoZSl7bS5pc1JlcXVlc3RQZW5kaW5nKGUpLG0ub25TZXRQZW5kaW5nUmVxdWVzdChlKX12YXIgbT10aGlzLHY9ZS5zZXJ2ZXJEYXRhLGg9ZS51c2VyQ29kZSxiPWUuZGV2aWNlQ29kZSxfPWUuYXV0b1NlbmRPdGNSZXF1ZXN0LFM9ZS5mbG93VG9rZW4sdz12LnN0cixUPXYuc0N0eCxDPXYudXJsR2V0T25lVGltZUNvZGUseT12LmZDaGVja0FwaUNhbmFyeSxrPXYuc1VuYXV0aFNlc3Npb25JRCx4PXYuaVJlcXVlc3RMQ0lELEQ9ISFDO20ub25Td2l0Y2hWaWV3PXMuY3JlYXRlKCksbS5vblN1Ym1pdFJlYWR5PXMuY3JlYXRlKCksbS5vblNldFBlbmRpbmdSZXF1ZXN0PXMuY3JlYXRlKCksbS5lcnJvcj1vLm9ic2VydmFibGUobnVsbCksbS5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksbS5zZXNzaW9uUG9sbGluZ0ludGVyZmFjZT1vLm9ic2VydmFibGUobnVsbCksbS50aXRsZT1vLm9ic2VydmFibGUoIiIpLG0udXNlU3VidGl0bGU9by5vYnNlcnZhYmxlKCExKSxtLmRldmljZUNvZGU9by5vYnNlcnZhYmxlKGIpLG0udXNlckNvZGU9by5vYnNlcnZhYmxlKGgpLG0uc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LG0uZ2V0U3RhdGU9ZnVuY3Rpb24oKXt9LG0ucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSxtLnNlc3Npb25Qb2xsaW5nRmllbGRfb25Mb2FkPWZ1bmN0aW9uKCl7aSgpfSxtLnNlc3Npb25Qb2xsaW5nRmllbGRfb25TZXNzaW9uVGltZU91dD1mdW5jdGlvbigpe3Iody5DVF9TVFJfUmVtb3RlTG9naW5fVGltZW91dFRpdGxlLCExKSxtLmVycm9yKHcuQ1RfU1RSX1JlbW90ZUxvZ2luX1RpbWVvdXRFcnJvcil9LG0uc2Vzc2lvblBvbGxpbmdGaWVsZF9vblNlc3Npb25BcHByb3ZlZD1mdW5jdGlvbigpe3IoIiIsITEpLHAoITApLG0ub25TdWJtaXRSZWFkeSghMCl9LG0ucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7aWYocCghMCksRCl7cigiIiwhMSk7dmFyIGU9e29yaWdpbmFsUmVxdWVzdDpUfSxpPW5ldyBjKHtjaGVja0FwaUNhbmFyeTp5fSk7aS5Kc29uKEMsZSx0LG4sYS5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpfWVsc2V7dmFyIG89e3B1cnBvc2U6ZC5QdXJwb3NlLlhib3hSZW1vdGVDb25uZWN0LGZsb3dUb2tlbjpTLHVuYXV0aFNlc3Npb25JZDprLGxjaWQ6eCxzdWNjZXNzQ2FsbGJhY2s6dCxmYWlsdXJlQ2FsbGJhY2s6bn0scz1uZXcgbChvKTtzLnNlbmRSZXF1ZXN0KCl9fSxtLnNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7bS5vblN3aXRjaFZpZXcoZi5QcmV2aW91cyl9LGZ1bmN0aW9uKCl7dSYmdS5zaG93S2V5Ym9hcmQmJnUuc2hvd0tleWJvYXJkKCExKSxyKHcuV0ZfU1RSX0hlYWRlckRlZmF1bHRfVGl0bGUsITApLF8mJm0ucHJpbWFyeUJ1dHRvbl9vbkNsaWNrKCl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz1uKDE2NyksZD1uKDIwMyksbD1uKDIwMiksdT1udWxsLHA9d2luZG93LGY9YS5QYWdpbmF0ZWRTdGF0ZSxnPWEuQXBpRXJyb3JDb2RlcztvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXJlbW90ZS1sb2dpbi1wb2xsaW5nLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM3Nyksc3luY2hyb25vdXM6IXAuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8ci5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihwLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIzNiksbigxOTgpLG4oMjUwKSxuKDI5NSksIiIpKycgLS0+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWNvZGUgZGF0YS1iaW5kPSJ2YWx1ZTogZGV2aWNlQ29kZSIvPiA8ZGl2IGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwnaGVhZGVyLWNvbnRyb2xcJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICB0aXRsZTogdGl0bGUoKSxcbiAgICAgICAgdXNlU3VidGl0bGU6IHVzZVN1YnRpdGxlKCkgfSB9Ij4gPC9kaXY+PCEtLSBrbyBpZjogaXNSZXF1ZXN0UGVuZGluZyAtLT4gPGRpdiBjbGFzcz0icm93IHByb2dyZXNzLWNvbnRhaW5lciI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciB0YWJpbmRleD0tMSBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgaGFzRm9jdXM6IHRydWUsIGFyaWFMYWJlbDogc3RyW1wnV0ZfU1RSX1Byb2dyZXNzVGV4dFwnXSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IGlzUmVxdWVzdFBlbmRpbmcgLS0+PCEtLSBrbyBpZm5vdDogZXJyb3IgLS0+IDxkaXYgY2xhc3M9c2VjdGlvbj4gPGRpdiBjbGFzcz0icm93IHRleHQtYm9keSI+IDxkaXYgZGF0YS1iaW5kPSJodG1sOiBzdHJbXCdDVF9TVFJfUmVtb3RlTG9naW5fRGVzY3JpcHRpb25cJ10iPjwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1kaXNwbGF5U2lnbiBpZD1yZW1vdGVMb2dpbkNvZGUgZGF0YS1iaW5kPSJ0ZXh0OiB1c2VyQ29kZSI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGVycm9yIC0tPiA8ZGl2IGNsYXNzPXNlY3Rpb24+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGRpdiBpZD1yZW1vdGVMb2dpbkVycm9yIHJvbGU9YWxlcnQgZGF0YS1iaW5kPSJ0ZXh0OiBlcnJvciIgY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5Ij48L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPiA8ZGl2IGRhdGEtYmluZD0iY3NzOiB7IFwncG9zaXRpb24tYnV0dG9uc1wnOiBzdnIuZlNob3dCdXR0b25zIH0iPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgcmVtb3ZlQm90dG9tTWFyZ2luOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgJiYgISFlcnJvcigpLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayxcbiAgICAgICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPHNwYW4gZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdzZXNzaW9uLXBvbGxpbmctY29udHJvbFwnLFxuICAgIHB1YmxpY01ldGhvZHM6IHNlc3Npb25Qb2xsaW5nSW50ZXJmYWNlLFxuICAgIHBhcmFtczoge1xuICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgIHBvbGxpbmdJbnRlcnZhbDogc3ZyLnJlbW90ZUxvZ2luQ29uZmlnICYmIHN2ci5yZW1vdGVMb2dpbkNvbmZpZy5wb2xsaW5nSW50ZXJ2YWwsXG4gICAgICAgIHBvbGxpbmdUaW1lb3V0OiBzdnIucmVtb3RlTG9naW5Db25maWcgJiYgc3ZyLnJlbW90ZUxvZ2luQ29uZmlnLnBvbGxpbmdUaW1lb3V0LFxuICAgICAgICBzZXNzaW9uSWRlbnRpZmllcjogZGV2aWNlQ29kZSgpLFxuICAgICAgICBwb2xsaW5nVHlwZTogJytuKDUpLlNlc3Npb25Qb2xsaW5nVHlwZS5Kc29uKycgfSxcbiAgICBldmVudDoge1xuICAgICAgICBsb2FkOiBzZXNzaW9uUG9sbGluZ0ZpZWxkX29uTG9hZCxcbiAgICAgICAgc2Vzc2lvblRpbWVvdXQ6IHNlc3Npb25Qb2xsaW5nRmllbGRfb25TZXNzaW9uVGltZU91dCxcbiAgICAgICAgc2Vzc2lvbkFwcHJvdmVkOiBzZXNzaW9uUG9sbGluZ0ZpZWxkX29uU2Vzc2lvbkFwcHJvdmVkIH0gfSI+IDwvc3Bhbj4nfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gaShlKXtmdW5jdGlvbiB0KCl7by51dGlscy5hcnJheUZvckVhY2goZCxmdW5jdGlvbihlKXt2YXIgdD17fTt0LlVzZXJQcmluY2lwYWxOYW1lPWUuVXNlclByaW5jaXBhbE5hbWV8fCJ1bmtub3duQGRvLW5vdC10cnVzdC10aGlzLW9yZ2FuaXphdGlvbi5jb20iLHQuSWQ9ZS5UZW5hbnRJZCx0LkRpc3BsYXlOYW1lPWUuVGVuYW50RGlzcGxheU5hbWUsdC5CcmFuZGluZz1jLmxvYWRUZW5hbnRCcmFuZGluZyhlLlRlbmFudEJyYW5kaW5nKSxuLnRlbmFudExpc3QucHVzaCh0KX0pfXZhciBuPXRoaXMsaT1lLnNlcnZlckRhdGEsYT1lLnVuc2FmZV9kaXNwbGF5TmFtZSxyPWUudW5zYWZlX3VzZXJuYW1lLGQ9ZS50ZW5hbnRMaXN0LHU9aS5zdHI7bi51bnNhZmVfcGFnZURlc2NyaXB0aW9uPW51bGwsbi50ZW5hbnRMaXN0PVtdLG4udW5zYWZlX3VzZXJuYW1lPXIsbi51bnNhZmVfZGlzcGxheU5hbWU9YSxuLnNlbGVjdGVkVGVuYW50SWQ9by5vYnNlcnZhYmxlKCksbi5vblN1Ym1pdFJlYWR5PXMuY3JlYXRlKCksbi5vblNldEJhY2tCdXR0b25TdGF0ZT1zLmNyZWF0ZSgpLG4uc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oKXt9LG4uZ2V0U3RhdGU9ZnVuY3Rpb24oKXt9LG4ucmVzdG9yZVN0YXRlPWZ1bmN0aW9uKCl7fSxuLnRpbGVfb25DbGljaz1mdW5jdGlvbihlKXtuLnNlbGVjdGVkVGVuYW50SWQoZS5JZCksbi5vblN1Ym1pdFJlYWR5KCl9LGZ1bmN0aW9uKCl7bi51bnNhZmVfcGFnZURlc2NyaXB0aW9uPWwuZm9ybWF0KHUuU1RSX1RlbmFudERpc2FtYmlndWF0aW9uX1N1YnRpdGxlLGEpLHQoKSxuLm9uU2V0QmFja0J1dHRvblN0YXRlKCEwKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oNikscz1uKDEzKSxjPW4oMTgpLGQ9d2luZG93LGw9ci5TdHJpbmcsdT1hLkhlbHBlcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXRlbmFudC1kaXNhbWJpZ3VhdGlvbi12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6bigzNzkpLHN5bmNocm9ub3VzOiFkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHUuaXNTdGFja1NpemVHcmVhdGVyVGhhbihkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksIiIpKycgLS0+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXNlbGVjdGVkdGVuYW50aWQgZGF0YS1iaW5kPSJ2YWx1ZTogc2VsZWN0ZWRUZW5hbnRJZCIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1sb2dpbiBkYXRhLWJpbmQ9InZhbHVlOiB1bnNhZmVfdXNlcm5hbWUiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9bG9naW5mbXQgZGF0YS1iaW5kPSJ2YWx1ZTogdW5zYWZlX2Rpc3BsYXlOYW1lIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXR5cGUgZGF0YS1iaW5kPSJ2YWx1ZTogJytuKDUpLlBvc3RUeXBlLk90Y05vUGFzc3dvcmQrJyIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1wdXJwb3NlIHZhbHVlPVB1YmxpY0lkZW50aWZpZXJBdXRoIC8+IDxkaXYgaWQ9bG9naW5IZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnU1RSX1RlbmFudERpc2FtYmlndWF0aW9uX1RpdGxlXCddIj48L2Rpdj4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwPiA8ZGl2IGlkPWxvZ2luRGVzY3JpcHRpb24gY2xhc3M9InJvdyB0ZXh0LWJvZHkgdGV4dC1ibG9jay1ib2R5IiBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9wYWdlRGVzY3JpcHRpb24iPjwvZGl2PiA8L2Rpdj4gPGRpdiBpZD10ZW5hbnRMaXN0IGNsYXNzPWZvcm0tZ3JvdXAgcm9sZT1saXN0Ym94IGFyaWEtbGFiZWxsZWRieT1sb2dpbkhlYWRlcj48IS0tIGtvIGZvcmVhY2g6IHsgZGF0YTogdGVuYW50TGlzdCwgYXM6IFwndGVuYW50SW5mb1wnIH0gLS0+IDxkaXYgY2xhc3M9dGlsZS1jb250YWluZXI+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBjbGFzcz10YWJsZSB0YWJpbmRleD0wIHJvbGU9b3B0aW9uIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrOiAkcGFyZW50LnRpbGVfb25DbGljayxcbiAgICAgICAgICAgICAgICAgICAgcHJlc3NFbnRlcjogJHBhcmVudC50aWxlX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogdGVuYW50SW5mby5EaXNwbGF5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYURlc2NyaWJlZEJ5OiAkaW5kZXgoKSA9PT0gMCA/IFwnbG9naW5EZXNjcmlwdGlvbiBsb2dpbkhlYWRlclwnIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXM6ICRpbmRleCgpID09PSAwLFxuICAgICAgICAgICAgICAgICAgICBhdHRyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcJ2RhdGEtdGVzdC1pZFwnOiB0ZW5hbnRJbmZvLklkIH0iPiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj48IS0tIGtvIGlmOiB0ZW5hbnRJbmZvLkJyYW5kaW5nLlRpbGVMb2dvIC0tPjwhLS0ga28gY29tcG9uZW50OiBcJ2FjY2Vzc2libGUtaW1hZ2UtY29udHJvbFwnIC0tPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIGRhdGEtYmluZD0iYXR0cjogeyBzcmM6IHRlbmFudEluZm8uQnJhbmRpbmcuVGlsZURhcmtMb2dvIH0iLz4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBkYXRhLWJpbmQ9ImF0dHI6IHsgc3JjOiB0ZW5hbnRJbmZvLkJyYW5kaW5nLlRpbGVMb2dvIH0iLz48IS0tIC9rbyAtLT48IS0tIC9rbyAtLT48IS0tIGtvIGlmbm90OiB0ZW5hbnRJbmZvLkJyYW5kaW5nLlRpbGVMb2dvIC0tPiA8aW1nIGNsYXNzPXRpbGUtaW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0nK24oMjQyKSsiIHN2Z3NyYz0iK24oMjQzKSsnIGRhdGEtYmluZD1pbWdTcmMgLz48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9InRhYmxlLWNlbGwgdGV4dC1sZWZ0IGNvbnRlbnQiPiA8ZGl2IGRhdGEtYmluZD0idGV4dDogdGVuYW50SW5mby5EaXNwbGF5TmFtZSI+PC9kaXY+IDxkaXY+PHNtYWxsIGRhdGEtYmluZD0idGV4dDogdGVuYW50SW5mby5Vc2VyUHJpbmNpcGFsTmFtZSI+PC9zbWFsbD48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2Pid9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZTtyZXR1cm4gZCgpP24uYWNjZXNzUGFzc1RleHRib3gudmFsdWUoKT9udWxsOmIuQ1RfUFdEX1NUUl9FcnJvcl9FbnRlckFjY2Vzc1Bhc3M6KGU9cHx8bnVsbCxwPW51bGwsZSl9dmFyIG49dGhpcyxpPW51bGwsYT0hMSxkPW8ub2JzZXJ2YWJsZSghMSksdT1lLnNlcnZlckRhdGEscD1lLnNlcnZlckVycm9yLGY9ZS5pc0luaXRpYWxWaWV3LGc9ZS5mbG93VG9rZW4sbT1lLnVuc2FmZV91c2VybmFtZSx2PWUudW5zYWZlX2Rpc3BsYXlOYW1lLGg9ZS5hdmFpbGFibGVDcmVkc3x8W10sYj11LnN0cixfPXUuZHluYW1pY1RlbmFudEJyYW5kaW5nLFM9dS5mU2hvd0J1dHRvbnMsdz11LmZBbGxvd0NhbmNlbDtuLm9uU3dpdGNoVmlldz1yLmNyZWF0ZSgpLG4ub25TdWJtaXRSZWFkeT1yLmNyZWF0ZSgpLG4ub25SZWRpcmVjdD1yLmNyZWF0ZSgpLG4ub25TZXRQZW5kaW5nUmVxdWVzdD1yLmNyZWF0ZSgpLG4ub25VcGRhdGVGbG93VG9rZW49ci5jcmVhdGUoKSxuLm9uU2V0QmFja0J1dHRvblN0YXRlPXIuY3JlYXRlKCksbi5hY2Nlc3NQYXNzVGV4dGJveD1uZXcgYyhvLnB1cmVDb21wdXRlZCh0KSksbi51bnNhZmVfdXNlcm5hbWU9bSxuLnVuc2FmZV9kaXNwbGF5TmFtZT12LG4uZmxvd1Rva2VuPWcsbi5hdmFpbGFibGVDcmVkcz1oLG4udGVuYW50QnJhbmRpbmc9bnVsbCxuLnNob3dBY2Nlc3NQYXNzPW8ub2JzZXJ2YWJsZSghMSksbi5nZXRTdGF0ZT1mdW5jdGlvbigpe30sbi5yZXN0b3JlU3RhdGU9ZnVuY3Rpb24oKXt9LG4uc2F2ZVNoYXJlZERhdGE9ZnVuY3Rpb24oZSl7ZS5hY2Nlc3NQYXNzPW4uYWNjZXNzUGFzc1RleHRib3gudmFsdWUoKSxpJiYoZS5vdGNDcmVkZW50aWFsPWkpfSxuLnNldERlZmF1bHRGb2N1cz1mdW5jdGlvbigpe24uYWNjZXNzUGFzc1RleHRib3guZm9jdXNlZCghMCl9LG4ucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7aWYoIWEpcmV0dXJuIGE9ITAsZCghMCksbnVsbCE9PW4uYWNjZXNzUGFzc1RleHRib3guZXJyb3IoKT92b2lkIG4uc2V0RGVmYXVsdEZvY3VzKCk6dm9pZCBuLm9uU3VibWl0UmVhZHkoKX0sbi5jcmVkU3dpdGNoTGlua19vblN3aXRjaFZpZXc9ZnVuY3Rpb24oZSx0LG8pe28mJihpPW8pLG4ub25Td2l0Y2hWaWV3KGUsdCl9LG4uY3JlZFN3aXRjaExpbmtfb25TZXRQZW5kaW5nUmVxdWVzdD1mdW5jdGlvbihlKXtuLm9uU2V0UGVuZGluZ1JlcXVlc3QoZSksCm4uaXNSZXF1ZXN0UGVuZGluZyhlKX0sbi5jcmVkU3dpdGNoTGlua19vblVwZGF0ZUZsb3dUb2tlbj1mdW5jdGlvbihlKXtlJiYoZz1lLG4ub25VcGRhdGVGbG93VG9rZW4oZSkpfSxmdW5jdGlvbigpe24udW5zYWZlX3VzZXJuYW1lPWwuaHRtbFVuZXNjYXBlKG0pLG4udW5zYWZlX2Rpc3BsYXlOYW1lPWwuaHRtbFVuZXNjYXBlKHYpLG4udGVuYW50QnJhbmRpbmc9cy5sb2FkVGVuYW50QnJhbmRpbmcoXyksbi5vblNldEJhY2tCdXR0b25TdGF0ZShTJiYoIWZ8fHcpKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oMTMpLHM9bigxOCksYz1uKDE5NCksZD13aW5kb3csbD1hLkhlbHBlcjtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLWFjY2Vzcy1wYXNzLXZpZXciLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDM4MSksc3luY2hyb25vdXM6IWQuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDE5NiksbigxOTgpLG4oMjAwKSwiIikrJyAtLT4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9bG9naW4gZGF0YS1iaW5kPSJ2YWx1ZTogdW5zYWZlX3VzZXJuYW1lIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWxvZ2luZm10IGRhdGEtYmluZD0idmFsdWU6IHVuc2FmZV9kaXNwbGF5TmFtZSIvPiA8ZGl2IGlkPWFjY2Vzc3Bhc3NIZWFkZXIgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9BY2Nlc3NQYXNzX1RpdGxlXCddIj48L2Rpdj4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLW1kLTI0Ij4gPGRpdiByb2xlPWFsZXJ0IGFyaWEtbGl2ZT1hc3NlcnRpdmU+PCEtLSBrbyBpZjogYWNjZXNzUGFzc1RleHRib3guZXJyb3IgLS0+IDxkaXYgaWQ9YWNjZXNzcGFzc0Vycm9yIGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciIgZGF0YS1iaW5kPSJ0ZXh0OiBhY2Nlc3NQYXNzVGV4dGJveC5lcnJvciI+PC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGNsYXNzPXBsYWNlaG9sZGVyQ29udGFpbmVyIGRhdGEtYmluZD0iY29tcG9uZW50OiB7IG5hbWU6IFwncGxhY2Vob2xkZXItdGV4dGJveC1maWVsZFwnLFxuICAgICAgICAgICAgcHVibGljTWV0aG9kczogYWNjZXNzUGFzc1RleHRib3gucGxhY2Vob2xkZXJUZXh0Ym94TWV0aG9kcyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBoaW50VGV4dDogc3RyW1wnQ1RfUFdEX1NUUl9BY2Nlc3NQYXNzX0lucHV0UGxhY2Vob2xkZXJcJ10gfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgdXBkYXRlRm9jdXM6IGFjY2Vzc1Bhc3NUZXh0Ym94LnRleHRib3hfb25VcGRhdGVGb2N1cyB9IH0iPiA8aW5wdXQgbmFtZT1hY2Nlc3NwYXNzIHR5cGU9cGFzc3dvcmQgaWQ9YWNjZXNzcGFzcyBhdXRvY29tcGxldGU9b2ZmIGNsYXNzPWZvcm0tY29udHJvbCBhcmlhLXJlcXVpcmVkPXRydWUgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICB0ZXh0SW5wdXQ6IGFjY2Vzc1Bhc3NUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgIGFyaWFEZXNjcmliZWRCeTogXCdhY2Nlc3NwYXNzSGVhZGVyXCcsXG4gICAgICAgICAgICAgICAgaGFzRm9jdXNFeDogYWNjZXNzUGFzc1RleHRib3guZm9jdXNlZCgpICYmICFzaG93QWNjZXNzUGFzcygpLFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAkcGxhY2Vob2xkZXJUZXh0LFxuICAgICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgICAgICBcJ2hhcy1lcnJvclwnOiBhY2Nlc3NQYXNzVGV4dGJveC5lcnJvcixcbiAgICAgICAgICAgICAgICAgICAgXCdtb3ZlT2ZmU2NyZWVuXCc6IHNob3dBY2Nlc3NQYXNzKCkgfSIvPjwhLS0ga28gaWY6IHNob3dBY2Nlc3NQYXNzIC0tPiA8aW5wdXQgdHlwZT10ZXh0IGlkPWFjY2Vzc3Bhc3NUZXh0Ym94IGF1dG9jb21wbGV0ZT1vZmYgY2xhc3M9Zm9ybS1jb250cm9sIGFyaWEtcmVxdWlyZWQ9dHJ1ZSBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgIHRleHRJbnB1dDogYWNjZXNzUGFzc1RleHRib3gudmFsdWUsXG4gICAgICAgICAgICAgICAgYXJpYURlc2NyaWJlZEJ5OiBcJ2FjY2Vzc3Bhc3NIZWFkZXJcJyxcbiAgICAgICAgICAgICAgICBoYXNGb2N1c0V4OiB0cnVlLFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAkcGxhY2Vob2xkZXJUZXh0LFxuICAgICAgICAgICAgICAgIGNzczogeyBcJ2hhcy1lcnJvclwnOiBhY2Nlc3NQYXNzVGV4dGJveC5lcnJvciB9Ii8+PCEtLSAva28gLS0+IDwvZGl2PjwhLS0ga28gaWY6IHN2ci5mU2hvd0FjY2Vzc1Bhc3NQZWVrIC0tPiA8ZGl2IGNsYXNzPSJjaGVja2JveCBuby1tYXJnaW4tYm90dG9tIj4gPGxhYmVsPiA8aW5wdXQgaWQ9U2hvd0hpZGVBY2Nlc3NQYXNzQ2hlY2tib3ggdHlwZT1jaGVja2JveCBkYXRhLWJpbmQ9ImNoZWNrZWQ6IHNob3dBY2Nlc3NQYXNzLCBhcmlhTGFiZWw6IHN0cltcJ0NUX1BXRF9TVFJfU2hvd0FjY2Vzc1Bhc3NcJ10iLz4gPHNwYW4gaWQ9U2hvd0hpZGVBY2Nlc3NQYXNzTGFiZWwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdDVF9QV0RfU1RSX1Nob3dBY2Nlc3NQYXNzXCddIj48L3NwYW4+IDwvbGFiZWw+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDxkaXYgZGF0YS1iaW5kPSJjc3M6IHsgXCdwb3NpdGlvbi1idXR0b25zXCc6ICF0ZW5hbnRCcmFuZGluZy5Cb2lsZXJQbGF0ZVRleHQgfSI+IDxkaXYgY2xhc3M9cm93PiA8ZGl2IGNsYXNzPWNvbC1tZC0yND4gPGRpdiBjbGFzcz0idGV4dC0xMyBhY3Rpb24tbGlua3MiPjwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICJjcmVkLXN3aXRjaC1saW5rLWNvbnRyb2wiLFxuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1bnNhZmVfdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogYXZhaWxhYmxlQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IGZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiB7IGNyZWRUeXBlOiAnK24oNSkuQ3JlZGVudGlhbFR5cGUuQWNjZXNzUGFzcysiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaFZpZXc6IGNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBvblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6IGNyZWRTd2l0Y2hMaW5rX29uU2V0UGVuZGluZ1JlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46IGNyZWRTd2l0Y2hMaW5rX29uVXBkYXRlRmxvd1Rva2VuIH0gfSAtLT48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3cgZGF0YS1iaW5kPVwiY3NzOiB7ICdtb3ZlLWJ1dHRvbnMnOiB0ZW5hbnRCcmFuZGluZy5Cb2lsZXJQbGF0ZVRleHQgfVwiPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBzdHJbJ0NUX1BXRF9TVFJfU2lnbkluX0J1dHRvbiddLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMsXG4gICAgICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25FbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2sgfSB9XCI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogdGVuYW50QnJhbmRpbmcuQm9pbGVyUGxhdGVUZXh0IC0tPiA8ZGl2IGlkPWlkQm9pbGVyUGxhdGVUZXh0IGNsYXNzPVwid3JhcC1jb250ZW50IGJvaWxlcnBsYXRlLXRleHRcIiBkYXRhLWJpbmQ9XCJcbiAgICBodG1sV2l0aE1vZHM6IHRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCxcbiAgICBodG1sTW9kczogeyBmaWx0ZXJMaW5rczogc3ZyLmZJc0hvc3RlZCB9LFxuICAgIGNzczogeyAndHJhbnNwYXJlbnQtbGlnaHRib3gnOiB0ZW5hbnRCcmFuZGluZy5Vc2VUcmFuc3BhcmVudExpZ2h0Qm94IH1cIj48L2Rpdj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe2lmKCFEKCkpe3ZhciBlPWd8fG51bGw7cmV0dXJuIGc9bnVsbCxlfXJldHVybiBuKCl9ZnVuY3Rpb24gbigpe3ZhciBlPXMudXNlcm5hbWVUZXh0Ym94LnZhbHVlKCk7cmV0dXJuIGUmJmIuaXNFbWFpbEFkZHJlc3MoZSk/bnVsbDpDLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZEVtYWlsVXNlcm5hbWV9ZnVuY3Rpb24gaShlKXtzLmlzUmVxdWVzdFBlbmRpbmcoZSkscy5vblNldFBlbmRpbmdSZXF1ZXN0KGUpfWZ1bmN0aW9uIGEoZSl7cy5vblJlZGlyZWN0KGUucmVkaXJlY3RVcmwsZS5yZWRpcmVjdFBvc3RQYXJhbXMsZS5pc0lkcFJlZGlyZWN0KX12YXIgcz10aGlzLGM9ZS5zZXJ2ZXJEYXRhLGc9ZS5zZXJ2ZXJFcnJvcixtPWUuaXNJbml0aWFsVmlldyx3PWUuZGlzcGxheU5hbWUsVD1lLmZsb3dUb2tlbixDPWMuc3RyLHk9Yy5zdGF0aWNUZW5hbnRCcmFuZGluZyxrPW51bGwseD17fSxEPW8ub2JzZXJ2YWJsZSghMSksUD1vLm9ic2VydmFibGUoVCkuZXh0ZW5kKHtmbG93VG9rZW5VcGRhdGU6Y30pO3Mub25Td2l0Y2hWaWV3PXUuY3JlYXRlKCkscy5vblJlZGlyZWN0PXUuY3JlYXRlKCkscy5vblNldFBlbmRpbmdSZXF1ZXN0PXUuY3JlYXRlKCkscy51c2VybmFtZVRleHRib3g9bmV3IGYocC5lcnJvckNvbXB1dGVkKHQpKSxzLnRlbmFudEJyYW5kaW5nPW51bGwscy5pc0luaXRpYWxWaWV3PW0scy5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSkscy5zYXZlU2hhcmVkRGF0YT1mdW5jdGlvbihlKXt2YXIgdD1zLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpO2UuZmxvd1Rva2VuPVAoKSxlLnVzZXJuYW1lPWIuY2xlYW5zZVVzZXJuYW1lKHQpLGUuZGlzcGxheU5hbWU9dCxlLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYz0hMSxlLmlzU2lnbnVwUG9zdD0hMCxvLnV0aWxzLmV4dGVuZChlLHgpfSxzLmdldFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJue3Vuc2FmZV9kaXNwbGF5TmFtZTpzLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpLGdjdFJlcXVlc3RIZWxwZXJTdGF0ZTprLmdldFN0YXRlKCl9fSxzLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYoay5yZXN0b3JlU3RhdGUoZS5nY3RSZXF1ZXN0SGVscGVyU3RhdGUpLHMudXNlcm5hbWVUZXh0Ym94LnZhbHVlKGUudW5zYWZlX2Rpc3BsYXlOYW1lKSl9LHMuc2V0RGVmYXVsdEZvY3VzPWZ1bmN0aW9uKCl7cy51c2VybmFtZVRleHRib3guZm9jdXNlZCghMCl9LHMucHJpbWFyeUJ1dHRvbl9vbkNsaWNrPWZ1bmN0aW9uKCl7aWYoRCghMCkscy51c2VybmFtZVRleHRib3guZXJyb3IuaXNCbG9ja2luZygpKXJldHVybiB2b2lkIHMuc2V0RGVmYXVsdEZvY3VzKCk7dmFyIGU9cy51c2VybmFtZVRleHRib3gudmFsdWUoKTtpKCEwKSxsLnRocm93VW5oYW5kbGVkRXhjZXB0aW9uT25SZWplY3Rpb24oay5zZW5kQXN5bmMoZSxQKCkpLnRoZW4oZnVuY3Rpb24oZSl7c3dpdGNoKGkoITEpLGUuZmxvd1Rva2VuJiZQKGUuZmxvd1Rva2VuKSxlLmFjdGlvbil7Y2FzZSBfLlNob3dFcnJvcjpzLnVzZXJuYW1lVGV4dGJveC5lcnJvci5zZXRFcnJvcihlLmVycm9yLGUuaXNCbG9ja2luZ0Vycm9yKSxzLnNldERlZmF1bHRGb2N1cygpO2JyZWFrO2Nhc2UgXy5Td2l0Y2hWaWV3Ong9by51dGlscy5leHRlbmQoZS5zaGFyZWREYXRhLGUudmlld1BhcmFtc3x8e30pLHMub25Td2l0Y2hWaWV3KGUudmlld0lkKTticmVhaztjYXNlIF8uUmVkaXJlY3Q6YShlKX19KSl9LHMuc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtzLm9uU3dpdGNoVmlldyh2LlByZXZpb3VzKX0scy5zaWdudXBfb25DbGljaz1mdW5jdGlvbigpe2Eoay5nZXRTaWdudXBSZWRpcmVjdEdjdFJlc3VsdChzLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpKSl9LGZ1bmN0aW9uKCl7az1uZXcgZChjLFMuSXNTaWdudXB8Uy5DaGVja0N1cnJlbnRJZHBPbmx5fFMuRGlzYWJsZURlc2t0b3BTc29QcmVmZXJyZWRDcmVkKSxzLnRlbmFudEJyYW5kaW5nPXIubG9hZFRlbmFudEJyYW5kaW5nKHkpLHcmJnMudXNlcm5hbWVUZXh0Ym94LnZhbHVlKGguaHRtbFVuZXNjYXBlKHcpKX0oKX12YXIgbz1uKDEpLGE9big1KSxyPW4oMTgpLHM9big5KSxjPW4oNiksZD1uKDE3MyksbD1uKDEyKSx1PW4oMTMpLHA9bigyMjYpLGY9bigxOTQpLGc9bigxOTMpLG09d2luZG93LHY9YS5QYWdpbmF0ZWRTdGF0ZSxoPXMuSGVscGVyLGI9Yy5TdHJpbmcsXz1kLkdjdFJlc3VsdEFjdGlvbixTPWQuR2N0UmVxdWVzdEhlbHBlckZsYWdzO2cuYXBwbHlFeHRlbmRlcnMobyksby5jb21wb25lbnRzLnJlZ2lzdGVyKCJsb2dpbi1zaWdudXAtdXNlcm5hbWUtdmlldyIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oMzgzKSxzeW5jaHJvbm91czohbS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxzLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKG0uU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMTk2KSxuKDE5OCksIiIpKycgLS0+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LXRpdGxlIiBpZD1sb2dpbkhlYWRlcj4gPGRpdiByb2xlPWhlYWRpbmcgYXJpYS1sZXZlbD0xIGRhdGEtYmluZD0idGV4dDogc3RyW1wnQ1RfU1RSX1NpZ251cFVzZXJuYW1lX1RpdGxlXCddIj48L2Rpdj4gPC9kaXY+IDxkaXYgY2xhc3M9InJvdyB0ZXh0LWJvZHkgbm8tbWFyZ2luLXRvcCI+IDxkaXYgaWQ9bG9naW5EZXNjcmlwdGlvbiBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ0NUX1NUUl9TaWdudXBVc2VybmFtZV9EZXNjcmlwdGlvblwnXSI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiByb2xlPWFsZXJ0IGFyaWEtbGl2ZT1hc3NlcnRpdmU+PCEtLSBrbyBpZjogdXNlcm5hbWVUZXh0Ym94LmVycm9yIC0tPiA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1lcnJvciBjb2wtbWQtMjQiIGlkPXVzZXJuYW1lRXJyb3IgZGF0YS1iaW5kPSJ0ZXh0OiB1c2VybmFtZVRleHRib3guZXJyb3IiPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLW1kLTI0Ij4gPGRpdiBjbGFzcz1wbGFjZWhvbGRlckNvbnRhaW5lciBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ3BsYWNlaG9sZGVyLXRleHRib3gtZmllbGRcJyxcbiAgICAgICAgICAgIHB1YmxpY01ldGhvZHM6IHVzZXJuYW1lVGV4dGJveC5wbGFjZWhvbGRlclRleHRib3hNZXRob2RzLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIGhpbnRUZXh0OiBzdHJbXCdDVF9TVFJfU2lnbnVwVXNlcm5hbWVfRW1haWxfUGxhY2Vob2xkZXJcJ10sXG4gICAgICAgICAgICAgICAgaGludENzczogXCdwbGFjZWhvbGRlclwnIH0sXG4gICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgIHVwZGF0ZUZvY3VzOiB1c2VybmFtZVRleHRib3gudGV4dGJveF9vblVwZGF0ZUZvY3VzIH0gfSI+IDxpbnB1dCB0eXBlPWVtYWlsIG5hbWU9c2lnbnVwbmFtZSBpZD1zaWdudXBOYW1lIG1heGxlbmd0aD0xMTMgbGFuZz1lbiBjbGFzcz0iZm9ybS1jb250cm9sIGx0cl9vdmVycmlkZSIgYXJpYS1yZXF1aXJlZD10cnVlIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgIGNzczogeyBcJ2hhcy1lcnJvclwnOiB1c2VybmFtZVRleHRib3guZXJyb3IgfSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBzdHJbXCdDVF9TVFJfU2lnbnVwVXNlcm5hbWVfRW1haWxfQXJpYUxhYmVsXCddLFxuICAgICAgICAgICAgICAgICAgICBhcmlhRGVzY3JpYmVkQnk6IFwnbG9naW5IZWFkZXIgbG9naW5EZXNjcmlwdGlvblwnLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0SW5wdXQ6IHVzZXJuYW1lVGV4dGJveC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXNFeDogdXNlcm5hbWVUZXh0Ym94LmZvY3VzZWQsXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAkcGxhY2Vob2xkZXJUZXh0Ii8+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgZGF0YS1iaW5kPSJjc3M6IHsgXCdwb3NpdGlvbi1idXR0b25zXCc6ICF0ZW5hbnRCcmFuZGluZy5Cb2lsZXJQbGF0ZVRleHQgfSI+IDxkaXYgY2xhc3M9cm93IGRhdGEtYmluZD0iY3NzOiB7IFwnbW92ZS1idXR0b25zXCc6IHRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCB9Ij4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2Zvb3Rlci1idXR0b25zLWZpZWxkXCcsXG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uRW5hYmxlZDogIWlzUmVxdWVzdFBlbmRpbmcoKSxcbiAgICAgICAgICAgICAgICBpc1ByaW1hcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zLFxuICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvblZpc2libGU6IHN2ci5mU2hvd0J1dHRvbnMgJiYgKCFpc0luaXRpYWxWaWV3IHx8ICEhc3ZyLmZBbGxvd0NhbmNlbCkgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsaWNrOiBwcmltYXJ5QnV0dG9uX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5QnV0dG9uQ2xpY2s6IHNlY29uZGFyeUJ1dHRvbl9vbkNsaWNrIH0gfSI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogdGVuYW50QnJhbmRpbmcuQm9pbGVyUGxhdGVUZXh0IC0tPiA8ZGl2IGlkPWlkQm9pbGVyUGxhdGVUZXh0IGNsYXNzPSJ3cmFwLWNvbnRlbnQgYm9pbGVycGxhdGUtdGV4dCIgZGF0YS1iaW5kPSJcbiAgICBodG1sV2l0aE1vZHM6IHRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCxcbiAgICBodG1sTW9kczogeyBmaWx0ZXJMaW5rczogc3ZyLmZJc0hvc3RlZCB9LFxuICAgIGNzczogeyBcJ3RyYW5zcGFyZW50LWxpZ2h0Ym94XCc6IHRlbmFudEJyYW5kaW5nLlVzZVRyYW5zcGFyZW50TGlnaHRCb3ggfSI+PC9kaXY+IDwhLS0gL2tvIC0tPid9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigzODUpLG4oNDYxKSxuKDQ2OSksbig0ODIpLG4oNDg0KSxuKDQ4Nyksbig0ODkpLG4oNDk1KSxuKDUwMSksbigyMzYpLG4oMzU0KSxuKDUwMyksIiIpKyIgLS0+PCEtLSAiKyhuKDE5MiksbigyMzApLG4oMjMyKSxuKDIyNSksbigyMjgpLG4oMjM0KSxuKDI0MCksbigyNDYpLG4oMjc1KSxuKDI4MiksbigyODQpLG4oMjg2KSxuKDI4OCksbigzODApLG4oMjkzKSxuKDI5NyksbigzNDApLG4oMzQyKSxuKDM0NCksbigzNDYpLG4oMzQ4KSxuKDM1MCksbigzNTIpLG4oMzU4KSxuKDUwNSksbi5lKDIsZnVuY3Rpb24oKXtyZXR1cm4gbigzNzApLCIifSksIWZ1bmN0aW9uKCl7cmV0dXJuIG4oMzc0KSxuKDM3NiksbigzNzgpLG4oMzgyKSxuKDIwNyksIiJ9KG4pLCIiKSsiIC0tPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnYmFja2dyb3VuZC1pbWFnZS1jb250cm9sJywgcHVibGljTWV0aG9kczogYmFja2dyb3VuZENvbnRyb2xNZXRob2RzIH1cIj48L2Rpdj4gPGRpdiBkYXRhLWJpbmQ9XCJpZjogYWN0aXZlRGlhbG9nXCI+IDxkaXYgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdkaWFsb2ctY29udHJvbCcsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgdGVtcGxhdGVOb2RlczogYWN0aXZlRGlhbG9nKCkudGVtcGxhdGVOb2RlcyxcbiAgICAgICAgICAgIGRhdGE6IGFjdGl2ZURpYWxvZygpLmRhdGEgfSxcbiAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgIGNsb3NlOiBkaWFsb2dfb25DbG9zZSB9IH1cIj4gPC9kaXY+IDwvZGl2PiA8Zm9ybSBuYW1lPWYxIGlkPWkwMjgxIG5vdmFsaWRhdGU9bm92YWxpZGF0ZSBzcGVsbGNoZWNrPWZhbHNlIG1ldGhvZD1wb3N0IHRhcmdldD1fdG9wIGF1dG9jb21wbGV0ZT1vZmYgZGF0YS1iaW5kPVwiYXV0b1N1Ym1pdDogZm9yY2VTdWJtaXQsIGF0dHI6IHsgYWN0aW9uOiBwb3N0VXJsIH0sIGFyaWFIaWRkZW46IGFjdGl2ZURpYWxvZ1wiPjwhLS0ga28gaWY6IHN2ci5pQmFubmVyRW52aXJvbm1lbnQgLS0+IDxkaXYgY2xhc3M9ZW52LWJhbm5lciBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Vudmlyb25tZW50LWJhbm5lci1jb250cm9sJyB9XCI+PC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyB3aXRoUHJvcGVydGllczogeyAnJGxvZ2luUGFnZSc6ICRkYXRhIH0gLS0+IDxkaXYgY2xhc3M9b3V0ZXIgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdtYXN0ZXItcGFnZScsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgc2hvd0J1dHRvbnM6IHN2ci5mU2hvd0J1dHRvbnMsXG4gICAgICAgICAgICBzaG93Rm9vdGVyTGlua3M6IHRydWUsXG4gICAgICAgICAgICB1c2VXaXphcmRCZWhhdmlvcjogc3ZyLmZVc2VXaXphcmRCZWhhdmlvcixcbiAgICAgICAgICAgIGhhbmRsZVdpemFyZEJ1dHRvbnM6IGZhbHNlLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLFxuICAgICAgICAgICAgaGlkZUZyb21BcmlhOiBhcmlhSGlkZGVuIH0sXG4gICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICBmb290ZXJBZ3JlZW1lbnRDbGljazogZm9vdGVyX2FncmVlbWVudENsaWNrIH0gfVwiPjwhLS0ga28gaWY6IHN2ci5mU2hvd0Nvb2tpZUJhbm5lciAtLT4gPCEtLSBrbyBjb21wb25lbnQ6IFwiY29va2llLWJhbm5lci1jb250cm9sXCIgLS0+PCEtLSAva28gLS0+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9bWlkZGxlIGRhdGEtYmluZD1cImNzczogeyAnYXBwJzogYmFja2dyb3VuZExvZ29VcmwgfVwiPjwhLS0ga28gaWY6IGJhY2tncm91bmRMb2dvVXJsKCkgJiYgIShwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKSAmJiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKCdoaWRlTG9nbycpKSAtLT4gPGRpdiBjbGFzcz1iYWNrZ3JvdW5kLWxvZ28taG9sZGVyPiA8aW1nIGNsYXNzPWJhY2tncm91bmQtbG9nbyByb2xlPXByZXNlbnRhdGlvbiBkYXRhLWJpbmQ9XCJhdHRyOiB7IHNyYzogYmFja2dyb3VuZExvZ29VcmwgfVwiLz4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9aW5uZXIgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uRW5kOiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKSAmJiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS52aWV3X29uQW5pbWF0aW9uRW5kLFxuICAgICAgICAgICAgICAgIGNzczoge1xuICAgICAgICAgICAgICAgICAgICAnYXBwJzogYmFja2dyb3VuZExvZ29VcmwsXG4gICAgICAgICAgICAgICAgICAgICd3aWRlJzogcGFnaW5hdGlvbkNvbnRyb2xNZXRob2RzKCkgJiYgcGFnaW5hdGlvbkNvbnRyb2xNZXRob2RzKCkuY3VycmVudFZpZXdIYXNNZXRhZGF0YSgnd2lkZScpLFxuICAgICAgICAgICAgICAgICAgICAnZmFkZS1pbi1saWdodGJveCc6IGZhZGVJbkxpZ2h0Qm94LFxuICAgICAgICAgICAgICAgICAgICAnaGFzLXBvcHVwJzogc2hvd0ZlZENyZWRCdXR0b25zLFxuICAgICAgICAgICAgICAgICAgICAndHJhbnNwYXJlbnQtbGlnaHRib3gnOiBiYWNrZ3JvdW5kQ29udHJvbE1ldGhvZHMoKSAmJiBiYWNrZ3JvdW5kQ29udHJvbE1ldGhvZHMoKS51c2VUcmFuc3BhcmVudExpZ2h0Qm94IH1cIj4gPGRpdiBjbGFzcz1saWdodGJveC1jb3ZlciBkYXRhLWJpbmQ9XCJjc3M6IHsgJ2Rpc2FibGUtbGlnaHRib3gnOiBzdnIuZkFsbG93R3JheU91dExpZ2h0Qm94ICYmIHNob3dMaWdodGJveFByb2dyZXNzKCkgfVwiPjwvZGl2PjwhLS0ga28gaWY6IHNob3dMaWdodGJveFByb2dyZXNzIC0tPiA8ZGl2IGlkPXByb2dyZXNzQmFyIGNsYXNzPXByb2dyZXNzIHJvbGU9cHJvZ3Jlc3NiYXIgZGF0YS1iaW5kPVwiY29tcG9uZW50OiAnbWFyY2hpbmctYW50cy1jb250cm9sJywgYXJpYUxhYmVsOiBzdHJbJ1dGX1NUUl9Qcm9ncmVzc1RleHQnXVwiPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWZub3Q6IHBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpICYmIChwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKCdoaWRlTG9nbycpKSAtLT4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2xvZ28tY29udHJvbCcsXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGluYURjOiBzdnIuZklzQ2hpbmFEYyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhbm5lckxvZ29Vcmw6IGJhbm5lckxvZ29VcmwoKSB9IH1cIj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc3ZyLnN0ckxXQURpc2NsYWltZXJNc2cgJiYgKHBhZ2luYXRpb25Db250cm9sTWV0aG9kcygpICYmICFwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKCdoaWRlTHdhRGlzY2xhaW1lcicpKSAtLT4gPGRpdiBpZD1MV0FEaXNjbGFpbWVyIGNsYXNzPXRleHQtY2FwdGlvbiBkYXRhLWJpbmQ9XCJ0ZXh0OiBzdnIuc3RyTFdBRGlzY2xhaW1lck1zZ1wiPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGFzeW5jSW5pdFJlYWR5IC0tPiA8ZGl2IHJvbGU9bWFpbiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ3BhZ2luYXRpb24tY29udHJvbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWNNZXRob2RzOiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVDc3NBbmltYXRpb246IHN2ci5mRW5hYmxlQ3NzQW5pbWF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVBbmltYXRpb25JZkFuaW1hdGlvbkVuZFVuc3VwcG9ydGVkOiBzdnIuZkRpc2FibGVBbmltYXRpb25JZkFuaW1hdGlvbkVuZFVuc3VwcG9ydGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxWaWV3SWQ6IGluaXRpYWxWaWV3SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFZpZXdJZDogY3VycmVudFZpZXdJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0aWFsU2hhcmVkRGF0YTogaW5pdGlhbFNoYXJlZERhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhbEVycm9yOiAkbG9naW5QYWdlLmdldFNlcnZlckVycm9yKCkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsOiBwYWdpbmF0aW9uQ29udHJvbF9vbkNhbmNlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93VmlldzogJGxvZ2luUGFnZS52aWV3X29uU2hvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMaWdodEJveEZhZGVJbjogdmlld19vblNldExpZ2h0Qm94RmFkZUluLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvblN0YXRlQ2hhbmdlOiBwYWdpbmF0aW9uQ29udHJvbF9vbkFuaW1hdGlvblN0YXRlQ2hhbmdlIH0gfVwiPiA8ZGl2IGRhdGEtdmlld2lkPVwiIituKDUpLlBhZ2luYXRlZFN0YXRlLlVzZXJuYW1lKyciIGRhdGEtc2hvd2ZlZGNyZWRidXR0b249dHJ1ZSBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4tcGFnaW5hdGVkLXVzZXJuYW1lLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvcjogaW5pdGlhbEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5pdGlhbFZpZXc6IGlzSW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiBzaGFyZWREYXRhLmRpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZpbGxOYW1lczogJGxvZ2luUGFnZS5wcmVmaWxsTmFtZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBzaGFyZWREYXRhLmZsb3dUb2tlbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6ICRsb2dpblBhZ2Uudmlld19vblNldFBlbmRpbmdSZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lzdGVyRGlhbG9nOiAkbG9naW5QYWdlLnZpZXdfb25SZWdpc3RlckRpYWxvZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnJlZ2lzdGVyRGlhbG9nOiAkbG9naW5QYWdlLnZpZXdfb25VbnJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dEaWFsb2c6ICRsb2dpblBhZ2Uudmlld19vblNob3dEaWFsb2cgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5TaWdudXBVc2VybmFtZSsnIiBkYXRhLXNob3dmZWRjcmVkc2lnbnVwYnV0dG9ucz10cnVlIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1zaWdudXAtdXNlcm5hbWUtdmlld1wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckVycm9yOiBpbml0aWFsRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBzaGFyZWREYXRhLmZsb3dUb2tlbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6ICRsb2dpblBhZ2Uudmlld19vblNldFBlbmRpbmdSZXF1ZXN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuUGFzc3dvcmQrIlwiIGRhdGEtc2hvd2lkZW50aXR5YmFubmVyPXRydWUgZGF0YS1keW5hbWljYnJhbmRpbmc9dHJ1ZSBkYXRhLWJpbmQ9XCJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiAnbG9naW4tcGFnaW5hdGVkLXBhc3N3b3JkLXZpZXcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckVycm9yOiBpbml0aWFsRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlwUmVxdWlyZWRGb3JVc2VybmFtZTogc2hhcmVkRGF0YS5oaXBSZXF1aXJlZEZvclVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQnJvd3NlclByZWZpbGw6IHNoYXJlZERhdGEucGFzc3dvcmRCcm93c2VyUHJlZmlsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogc2hhcmVkRGF0YS5hdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmljdGVkQ3JlZHM6IHNoYXJlZERhdGEuZXZpY3RlZENyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUV2aWN0ZWRDcmVkZW50aWFsczogc2hhcmVkRGF0YS51c2VFdmljdGVkQ3JlZGVudGlhbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjOiBzaGFyZWREYXRhLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRLbXNpVmFsdWU6IHN2ci5pRGVmYXVsdExvZ2luT3B0aW9ucyA9PT0gIituKDE2KS5Mb2dpbk9wdGlvbi5SZW1lbWJlclBXRCsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJUZW5hbnRCcmFuZGluZzogc2hhcmVkRGF0YS51c2VyVGVuYW50QnJhbmRpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbnM6IHNoYXJlZERhdGEuc2Vzc2lvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbE1ldGFkYXRhOiBzaGFyZWREYXRhLmNhbGxNZXRhZGF0YSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46ICRsb2dpblBhZ2Uudmlld19vblVwZGF0ZUZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRSZWFkeTogJGxvZ2luUGFnZS52aWV3X29uU3VibWl0UmVhZHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6ICRsb2dpblBhZ2Uudmlld19vblJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0UGFzc3dvcmQ6ICRsb2dpblBhZ2UucGFzc3dvcmRWaWV3X29uUmVzZXRQYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrQnV0dG9uU3RhdGU6IHZpZXdfb25TZXRJZGVudGl0eUJhY2tCdXR0b25TdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogJGxvZ2luUGFnZS52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5BY2Nlc3NQYXNzKyciIGRhdGEtc2hvd2lkZW50aXR5YmFubmVyPXRydWUgZGF0YS1keW5hbWljYnJhbmRpbmc9dHJ1ZSBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4tYWNjZXNzLXBhc3Mtdmlld1wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckVycm9yOiBpbml0aWFsRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zYWZlX3VzZXJuYW1lOiBzaGFyZWREYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuc2FmZV9kaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogc2hhcmVkRGF0YS5hdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogJGxvZ2luUGFnZS52aWV3X29uVXBkYXRlRmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdFJlYWR5OiAkbG9naW5QYWdlLnZpZXdfb25TdWJtaXRSZWFkeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrQnV0dG9uU3RhdGU6IHZpZXdfb25TZXRJZGVudGl0eUJhY2tCdXR0b25TdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6ICRsb2dpblBhZ2Uudmlld19vblNldFBlbmRpbmdSZXF1ZXN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuUHJvb2ZDb25maXJtYXRpb24rJyIgZGF0YS1zaG93aWRlbnRpdHliYW5uZXI9dHJ1ZSBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4tcHJvb2YtY29uZmlybWF0aW9uLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogc2hhcmVkRGF0YS5hdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmljdGVkQ3JlZHM6IHNoYXJlZERhdGEuZXZpY3RlZENyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUV2aWN0ZWRDcmVkZW50aWFsczogc2hhcmVkRGF0YS51c2VFdmljdGVkQ3JlZGVudGlhbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENyZWQ6IHNoYXJlZERhdGEub3RjQ3JlZGVudGlhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46ICRsb2dpblBhZ2Uudmlld19vblVwZGF0ZUZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrQnV0dG9uU3RhdGU6IHZpZXdfb25TZXRJZGVudGl0eUJhY2tCdXR0b25TdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogJGxvZ2luUGFnZS52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5PbmVUaW1lQ29kZSsiXCIgZGF0YS1zaG93aWRlbnRpdHliYW5uZXI9dHJ1ZSBkYXRhLWJpbmQ9XCJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiAnbG9naW4tcGFnaW5hdGVkLW90Yy12aWV3JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvcjogaW5pdGlhbEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5pdGlhbFZpZXc6IGlzSW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBzaGFyZWREYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiBzaGFyZWREYXRhLmRpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG90Y1BhcmFtczogc2hhcmVkRGF0YS5vdGNQYXJhbXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZmVycmVkQ3JlZGVudGlhbDogc2hhcmVkRGF0YS5wcmVmZXJyZWRDcmVkZW50aWFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNyZWRzOiBzaGFyZWREYXRhLmF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2aWN0ZWRDcmVkczogc2hhcmVkRGF0YS5ldmljdGVkQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlRXZpY3RlZENyZWRlbnRpYWxzOiBzaGFyZWREYXRhLnVzZUV2aWN0ZWRDcmVkZW50aWFscyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M6IHNoYXJlZERhdGEuc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiBzaGFyZWREYXRhLm90Y0NyZWRlbnRpYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvb2ZDb25maXJtYXRpb246IHNoYXJlZERhdGEucHJvb2ZDb25maXJtYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdEttc2lWYWx1ZTogc3ZyLmlEZWZhdWx0TG9naW5PcHRpb25zID09PSAiK24oMTYpLkxvZ2luT3B0aW9uLlJlbWVtYmVyUFdEKycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBzaGFyZWREYXRhLmZsb3dUb2tlbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRmxvd1Rva2VuOiAkbG9naW5QYWdlLnZpZXdfb25VcGRhdGVGbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0UmVhZHk6ICRsb2dpblBhZ2Uudmlld19vblN1Ym1pdFJlYWR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEJhY2tCdXR0b25TdGF0ZTogdmlld19vblNldElkZW50aXR5QmFja0J1dHRvblN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFBlbmRpbmdSZXF1ZXN0OiAkbG9naW5QYWdlLnZpZXdfb25TZXRQZW5kaW5nUmVxdWVzdCB9IH0iPiA8L2Rpdj4gPGRpdiBkYXRhLXZpZXdpZD0iJytuKDUpLlBhZ2luYXRlZFN0YXRlLlJlbW90ZU5HQysiXCIgZGF0YS1keW5hbWljYnJhbmRpbmc9dHJ1ZSBkYXRhLXNob3dpZGVudGl0eWJhbm5lcj10cnVlIGRhdGEtYmluZD1cInBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6ICdsb2dpbi1yZW1vdGUtbmdjLXZpZXcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckVycm9yOiBpbml0aWFsRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlTmdjUGFyYW1zOiBzaGFyZWREYXRhLnJlbW90ZU5nY1BhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVDcmVkczogc2hhcmVkRGF0YS5hdmFpbGFibGVDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmljdGVkQ3JlZHM6IHNoYXJlZERhdGEuZXZpY3RlZENyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUV2aWN0ZWRDcmVkZW50aWFsczogc2hhcmVkRGF0YS51c2VFdmljdGVkQ3JlZGVudGlhbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0NyZWRWaWV3QnJhbmRpbmdEZXNjOiBzaGFyZWREYXRhLnNob3dDcmVkVmlld0JyYW5kaW5nRGVzYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0S21zaVZhbHVlOiBzdnIuaURlZmF1bHRMb2dpbk9wdGlvbnMgPT09ICIrbigxNikuTG9naW5PcHRpb24uUmVtZW1iZXJQV0QrJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uczogc2hhcmVkRGF0YS5zZXNzaW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkcFJlZGlyZWN0VXJsOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0VXJsIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46ICRsb2dpblBhZ2Uudmlld19vblVwZGF0ZUZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVSZW1vdGVOZ2NQYXJhbXM6ICRsb2dpblBhZ2Uudmlld19vblVwZGF0ZVJlbW90ZU5nY1BhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRSZWFkeTogJGxvZ2luUGFnZS52aWV3X29uU3VibWl0UmVhZHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja0J1dHRvblN0YXRlOiB2aWV3X29uU2V0SWRlbnRpdHlCYWNrQnV0dG9uU3RhdGUgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5SZW1vdGVDb25uZWN0Q2FuYXJ5VmFsaWRhdGlvbisnIiBkYXRhLWR5bmFtaWNicmFuZGluZz10cnVlIGRhdGEtc2hvd2lkZW50aXR5YmFubmVyPXRydWUgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ3JlbW90ZS1jb25uZWN0LWNhbmFyeS12YWxpZGF0aW9uLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3N0Q2FuYXJ5VmFsaWRhdGlvbkFjdGlvbjogJGxvZ2luUGFnZS5wb3N0Q2FuYXJ5VmFsaWRhdGlvbkFjdGlvbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja0J1dHRvblN0YXRlOiB2aWV3X29uU2V0SWRlbnRpdHlCYWNrQnV0dG9uU3RhdGUgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5QaG9uZURpc2FtYmlndWF0aW9uKyciIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1waG9uZS1kaXNhbWJpZ3VhdGlvbi12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IHNoYXJlZERhdGEubG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVEaXNhbWJpZ0Vycm9yOiBzaGFyZWREYXRhLnBob25lRGlzYW1iaWdFcnJvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogJGxvZ2luUGFnZS52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5Md2FDb25zZW50KyciIGRhdGEtc2hvd2lkZW50aXR5YmFubmVyPXRydWUgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLXBhZ2luYXRlZC1sd2EtY29uc2VudC12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0UmVhZHk6ICRsb2dpblBhZ2Uudmlld19vblN1Ym1pdFJlYWR5IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuSWRwRGlzYW1iaWd1YXRpb24rJyIgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLWlkcC1kaXNhbWJpZ3VhdGlvbi12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzSW5pdGlhbEVycm9yOiBzaGFyZWREYXRhLmhhc0lkcERpc2FtYmlnRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbnM6IHNoYXJlZERhdGEuc2Vzc2lvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RVcmw6IHNoYXJlZERhdGEuaWRwUmVkaXJlY3RVcmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RQb3N0UGFyYW1zOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVmZXJyZWRDcmVkZW50aWFsOiBzaGFyZWREYXRhLnByZWZlcnJlZENyZWRlbnRpYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVza3RvcFNzb0VuYWJsZWQ6IHNoYXJlZERhdGEuZGVza3RvcFNzb0VuYWJsZWQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6ICRsb2dpblBhZ2Uudmlld19vblJlZGlyZWN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuSWRwUmVkaXJlY3QrJyIgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLWlkcC1yZWRpcmVjdC12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RVcmw6IHNoYXJlZERhdGEuaWRwUmVkaXJlY3RVcmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RQb3N0UGFyYW1zOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHBSZWRpcmVjdFByb3ZpZGVyOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0UHJvdmlkZXIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6ICRsb2dpblBhZ2Uudmlld19vblJlZGlyZWN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuSWRwUmVkaXJlY3RTcGVlZGJ1bXArJyIgZGF0YS1zaG93aWRlbnRpdHliYW5uZXI9dHJ1ZSBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4taWRwLXJlZGlyZWN0LXNwZWVkYnVtcC12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RVcmw6IHNoYXJlZERhdGEuaWRwUmVkaXJlY3RVcmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRwUmVkaXJlY3RQb3N0UGFyYW1zOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0UG9zdFBhcmFtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHBSZWRpcmVjdFByb3ZpZGVyOiBzaGFyZWREYXRhLmlkcFJlZGlyZWN0UHJvdmlkZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IHNoYXJlZERhdGEuYXZhaWxhYmxlQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZpY3RlZENyZWRzOiBzaGFyZWREYXRhLmV2aWN0ZWRDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VFdmljdGVkQ3JlZGVudGlhbHM6IHNoYXJlZERhdGEudXNlRXZpY3RlZENyZWRlbnRpYWxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDcmVkVmlld0JyYW5kaW5nRGVzYzogc2hhcmVkRGF0YS5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBzaGFyZWREYXRhLmZsb3dUb2tlbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja0J1dHRvblN0YXRlOiB2aWV3X29uU2V0SWRlbnRpdHlCYWNrQnV0dG9uU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRmxvd1Rva2VuOiAkbG9naW5QYWdlLnZpZXdfb25VcGRhdGVGbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6ICRsb2dpblBhZ2Uudmlld19vblNldFBlbmRpbmdSZXF1ZXN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuVGlsZXMrJyIgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ3RpbGVzLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvcjogaW5pdGlhbEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25zOiBzaGFyZWREYXRhLnNlc3Npb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb3dUb2tlbjogc2hhcmVkRGF0YS5mbG93VG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNUaWxlUmVxdWVzdFBlbmRpbmc6ICRsb2dpblBhZ2UuYXN5bmNUaWxlUmVxdWVzdENvdW50ID4gMCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGVuZGluZ1JlcXVlc3Q6ICRsb2dpblBhZ2Uudmlld19vblNldFBlbmRpbmdSZXF1ZXN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuVmlld0FncmVlbWVudCsnIiBkYXRhLXdpZGU9dHJ1ZSBkYXRhLWhpZGVsb2dvPXRydWUgZGF0YS1oaWRlbHdhZGlzY2xhaW1lcj10cnVlIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi12aWV3LWFncmVlbWVudC12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWdyZWVtZW50VHlwZTogJGxvZ2luUGFnZS5hZ3JlZW1lbnRUeXBlIH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuQ29uZmlybVNlbmQrJyIgZGF0YS1zaG93aWRlbnRpdHliYW5uZXI9dHJ1ZSBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4tY29uZmlybS1zZW5kLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVmZXJyZWRDcmVkZW50aWFsOiBzaGFyZWREYXRhLnByZWZlcnJlZENyZWRlbnRpYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IHNoYXJlZERhdGEuYXZhaWxhYmxlQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZpY3RlZENyZWRzOiBzaGFyZWREYXRhLmV2aWN0ZWRDcmVkcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VFdmljdGVkQ3JlZGVudGlhbHM6IHNoYXJlZERhdGEudXNlRXZpY3RlZENyZWRlbnRpYWxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDcmVkOiBzaGFyZWREYXRhLm90Y0NyZWRlbnRpYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbnM6IHNoYXJlZERhdGEuc2Vzc2lvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvd1Rva2VuOiBzaGFyZWREYXRhLmZsb3dUb2tlbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG93VG9rZW46ICRsb2dpblBhZ2Uudmlld19vblVwZGF0ZUZsb3dUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja0J1dHRvblN0YXRlOiB2aWV3X29uU2V0SWRlbnRpdHlCYWNrQnV0dG9uU3RhdGUgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5SZW1vdGVMb2dpblBvbGxpbmcrJyIgZGF0YS1oaWRlbHdhZGlzY2xhaW1lcj10cnVlIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1yZW1vdGUtbG9naW4tcG9sbGluZy12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlckNvZGU6IHNoYXJlZERhdGEucmVtb3RlTG9naW5Vc2VyQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VDb2RlOiBzaGFyZWREYXRhLnJlbW90ZUxvZ2luRGV2aWNlQ29kZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRSZWFkeTogJGxvZ2luUGFnZS52aWV3X29uU3VibWl0UmVhZHkgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5MZWFybk1vcmUrIlwiIGRhdGEtaGlkZWxvZ289dHJ1ZSBkYXRhLWhpZGVsd2FkaXNjbGFpbWVyPXRydWUgZGF0YS1iaW5kPVwicGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogJ2xvZ2luLWxlYXJuLW1vcmUtdmlldycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWFuZDogJ2xvZ2lubGVhcm5tb3JlJyB9IH1cIj4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9XCIiK24oNSkuUGFnaW5hdGVkU3RhdGUuUmVzZXRQYXNzd29yZFNwbGl0dGVyKyciIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1yZXNldC1wYXNzd29yZC1zcGxpdHRlci12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6ICRsb2dpblBhZ2Uudmlld19vblJlZGlyZWN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuRGVza3RvcFNzb1Byb2dyZXNzKyJcIiBkYXRhLWJpbmQ9XCJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiAnbG9naW4tZGVza3RvcC1zc28tcHJvZ3Jlc3MtdmlldycsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zYWZlX2Rlc2t0b3BTc29Eb21haW5Ub1VzZTogc2hhcmVkRGF0YS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZlcnJlZENyZWRlbnRpYWw6IHNoYXJlZERhdGEucHJlZmVycmVkQ3JlZGVudGlhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1B1c2hOb3RpZmljYXRpb246IHNoYXJlZERhdGEucmVtb3RlTmdjUGFyYW1zLmRlZmF1bHRUeXBlID09PSAiK24oNSkuUmVtb3RlTmdjVHlwZS5QdXNoTm90aWZpY2F0aW9uKycgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0UmVhZHk6ICRsb2dpblBhZ2Uudmlld19vblN1Ym1pdFJlYWR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCB9IH0iPiA8L2Rpdj4gPGRpdiBkYXRhLXZpZXdpZD0iJytuKDUpLlBhZ2luYXRlZFN0YXRlLkZldGNoU2Vzc2lvbnNQcm9ncmVzcysiXCIgZGF0YS1iaW5kPVwicGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogJ2ZldGNoLXNlc3Npb25zLXByb2dyZXNzLXZpZXcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25QdWxsVHlwZTogJGxvZ2luUGFnZS5zZXNzaW9uUHVsbFR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbml0aWFsVmlldzogaXNJbml0aWFsU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNoYXJlZERhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zYWZlX2Rlc2t0b3BTc29Eb21haW5Ub1VzZTogc2hhcmVkRGF0YS51bnNhZmVfZGVza3RvcFNzb0RvbWFpblRvVXNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZlcnJlZENyZWRlbnRpYWw6IHNoYXJlZERhdGEucHJlZmVycmVkQ3JlZGVudGlhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1B1c2hOb3RpZmljYXRpb246IHNoYXJlZERhdGEucmVtb3RlTmdjUGFyYW1zLmRlZmF1bHRUeXBlID09PSAiK24oNSkuUmVtb3RlTmdjVHlwZS5QdXNoTm90aWZpY2F0aW9uKycgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVXNlclRpbGVzOiAkbG9naW5QYWdlLmZldGNoU2Vzc2lvbnNfb25VcGRhdGVVc2VyVGlsZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlY3V0ZUdjdFJlc3VsdDogJGxvZ2luUGFnZS5mZXRjaFNlc3Npb25zX29uRXhlY3V0ZUdjdFJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRSZWFkeTogJGxvZ2luUGFnZS52aWV3X29uU3VibWl0UmVhZHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6ICRsb2dpblBhZ2Uudmlld19vblJlZGlyZWN0IH0gfSI+IDwvZGl2PiA8ZGl2IGRhdGEtdmlld2lkPSInK24oNSkuUGFnaW5hdGVkU3RhdGUuRmlkbysnIiBkYXRhLXNob3dpZGVudGl0eWJhbm5lcj10cnVlIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1maWRvLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvcjogaW5pdGlhbEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5pdGlhbFZpZXc6IGlzSW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBzaGFyZWREYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiBzaGFyZWREYXRhLmRpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93TGlzdDogc2hhcmVkRGF0YS5maWRvUGFyYW1zLmFsbG93TGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFsbGVuZ2U6IHNoYXJlZERhdGEuZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNyZWRzOiBzaGFyZWREYXRhLmF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2aWN0ZWRDcmVkczogc2hhcmVkRGF0YS5ldmljdGVkQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlRXZpY3RlZENyZWRlbnRpYWxzOiBzaGFyZWREYXRhLnVzZUV2aWN0ZWRDcmVkZW50aWFscyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25zOiBzaGFyZWREYXRhLnNlc3Npb25zIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogJGxvZ2luUGFnZS52aWV3X29uVXBkYXRlRmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdFJlYWR5OiAkbG9naW5QYWdlLnZpZXdfb25TdWJtaXRSZWFkeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja0J1dHRvblN0YXRlOiB2aWV3X29uU2V0SWRlbnRpdHlCYWNrQnV0dG9uU3RhdGUgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5DcmVkZW50aWFsUGlja2VyKyciIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1jcmVkZW50aWFsLXBpY2tlci12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRXJyb3I6IGluaXRpYWxFcnJvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1VzZXJLbm93bjogISFzaGFyZWREYXRhLmRpc3BsYXlOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNyZWRzOiBzaGFyZWREYXRhLmF2YWlsYWJsZUNyZWRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2aWN0ZWRDcmVkczogc2hhcmVkRGF0YS5ldmljdGVkQ3JlZHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlRXZpY3RlZENyZWRlbnRpYWxzOiBzaGFyZWREYXRhLnVzZUV2aWN0ZWRDcmVkZW50aWFscyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUZsb3dUb2tlbjogJGxvZ2luUGFnZS52aWV3X29uVXBkYXRlRmxvd1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogJGxvZ2luUGFnZS52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnaXN0ZXJEaWFsb2c6ICRsb2dpblBhZ2Uudmlld19vblJlZ2lzdGVyRGlhbG9nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVucmVnaXN0ZXJEaWFsb2c6ICRsb2dpblBhZ2Uudmlld19vblVucmVnaXN0ZXJEaWFsb2csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0RpYWxvZzogJGxvZ2luUGFnZS52aWV3X29uU2hvd0RpYWxvZyB9IH0iPiA8L2Rpdj4gPGRpdiBkYXRhLXZpZXdpZD0iJytuKDUpLlBhZ2luYXRlZFN0YXRlLkNvbmZpcm1TaWdudXArJyIgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLWNvbmZpcm0tc2lnbnVwLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvcjogaW5pdGlhbEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5pdGlhbFZpZXc6IGlzSW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiBzaGFyZWREYXRhLmRpc3BsYXlOYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCB9IH0iPiA8L2Rpdj4gPGRpdiBkYXRhLXZpZXdpZD0iJytuKDUpLlBhZ2luYXRlZFN0YXRlLkNvbmZpcm1SZWNvdmVyVXNlcm5hbWUrJyIgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLWNvbmZpcm0tcmVjb3Zlci11c2VybmFtZS12aWV3XCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRXJyb3I6IGluaXRpYWxFcnJvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5GZWRDb25mbGljdCsnIiBkYXRhLWJpbmQ9InBhZ2VWaWV3Q29tcG9uZW50OiB7IG5hbWU6IFwnbG9naW4tZmVkLWNvbmZsaWN0LXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2ciB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5Qcm9vZkZlZENvbmZsaWN0KyciIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1wcm9vZi1mZWQtY29uZmxpY3Qtdmlld1wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCB9IH0iPiA8L2Rpdj4gPGRpdiBkYXRhLXZpZXdpZD0iJytuKDUpLlBhZ2luYXRlZFN0YXRlLkFhZEZlZENvbmZsaWN0KyciIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi1hYWQtZmVkLWNvbmZsaWN0LXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogJGxvZ2luUGFnZS52aWV3X29uUmVkaXJlY3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5GZWRMaW5rKyciIGRhdGEtc2hvd2lkZW50aXR5YmFubmVyPXRydWUgZGF0YS1iaW5kPSJwYWdlVmlld0NvbXBvbmVudDogeyBuYW1lOiBcJ2xvZ2luLWZlZC1saW5rLXZpZXdcJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0luaXRpYWxWaWV3OiBpc0luaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG93VG9rZW46IHNoYXJlZERhdGEuZmxvd1Rva2VuIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAkbG9naW5QYWdlLnZpZXdfb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrQnV0dG9uU3RhdGU6IHZpZXdfb25TZXRJZGVudGl0eUJhY2tCdXR0b25TdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5kaW5nUmVxdWVzdDogJGxvZ2luUGFnZS52aWV3X29uU2V0UGVuZGluZ1JlcXVlc3QgfSB9Ij4gPC9kaXY+IDxkaXYgZGF0YS12aWV3aWQ9Iicrbig1KS5QYWdpbmF0ZWRTdGF0ZS5UZW5hbnREaXNhbWJpZ3VhdGlvbisnIiBkYXRhLXNob3dpZGVudGl0eWJhbm5lcj10cnVlIGRhdGEtYmluZD0icGFnZVZpZXdDb21wb25lbnQ6IHsgbmFtZTogXCdsb2dpbi10ZW5hbnQtZGlzYW1iaWd1YXRpb24tdmlld1wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuc2FmZV91c2VybmFtZTogc2hhcmVkRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnNhZmVfZGlzcGxheU5hbWU6IHNoYXJlZERhdGEuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVuYW50TGlzdDogc2hhcmVkRGF0YS50ZW5hbnRMaXN0IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEJhY2tCdXR0b25TdGF0ZTogdmlld19vblNldElkZW50aXR5QmFja0J1dHRvblN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdFJlYWR5OiAkbG9naW5QYWdlLnZpZXdfb25TdWJtaXRSZWFkeSB9IH0iPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PjwhLS0ga28gaWY6IHNob3dEZWJ1Z0RldGFpbHMgLS0+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdkZWJ1Zy1kZXRhaWxzLWNvbnRyb2xcJyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICB1c2VXaWRlcldpZHRoOiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKSAmJiBwYWdpbmF0aW9uQ29udHJvbE1ldGhvZHMoKS5jdXJyZW50Vmlld0hhc01ldGFkYXRhKFwnd2lkZVwnKSxcbiAgICAgICAgICAgICAgICAgICAgaXNEZWJ1Z1RyYWNpbmdFbmFibGVkOiBpc0RlYnVnVHJhY2luZ0VuYWJsZWQgfSxcbiAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICBjbG9zZUJhbm5lcjogY2xvc2VEZWJ1Z0RldGFpbHNfb25DbGljayxcbiAgICAgICAgICAgICAgICAgICAgc2V0RGVidWdUcmFjaW5nOiBzZXREZWJ1Z1RyYWNpbmdfb25DbGljayB9IH0iPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzaG93RmVkQ3JlZEJ1dHRvbnMgLS0+IDxkaXYgY2xhc3M9cHJvbW90ZWQtZmVkLWNyZWQtaG9sZGVyPiA8ZGl2IGNsYXNzPXByb21vdGVkLWZlZC1jcmVkLWJveCBkYXRhLWJpbmQ9ImNzczogeyBcJ2FwcFwnOiBiYWNrZ3JvdW5kTG9nb1VybCB9Ij4gPGRpdiBjbGFzcz1wcm9tb3RlZC1mZWQtY3JlZC1jb250ZW50IGRhdGEtYmluZD0iY3NzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcJ2FuaW1hdGVcJzogdXNlQ3NzQW5pbWF0aW9ucyAmJiBhbmltYXRlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBcJ3NsaWRlLW91dC1uZXh0XCc6IGFuaW1hdGUuaXNTbGlkZU91dE5leHQsXG4gICAgICAgICAgICAgICAgICAgICAgICBcJ3NsaWRlLWluLW5leHRcJzogYW5pbWF0ZS5pc1NsaWRlSW5OZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgXCdzbGlkZS1vdXQtYmFja1wnOiBhbmltYXRlLmlzU2xpZGVPdXRCYWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCdzbGlkZS1pbi1iYWNrXCc6IGFuaW1hdGUuaXNTbGlkZUluQmFjayxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwnYXBwXCc6IGJhY2tncm91bmRMb2dvVXJsIH0iPjwhLS0ga28gZm9yZWFjaDogZmVkQ3JlZEJ1dHRvbnMgLS0+IDxkaXYgY2xhc3M9InJvdyB0aWxlIj4gPGRpdiBjbGFzcz10YWJsZSByb2xlPWJ1dHRvbiB0YWJpbmRleD0wIGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNzRW50ZXI6ICRwYXJlbnQuZmVkQ3JlZEJ1dHRvbl9vbkNsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogJHBhcmVudC5mZWRDcmVkQnV0dG9uX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogJGRhdGEudGV4dCI+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIG1lZGl1bSI+PCEtLSBrbyBjb21wb25lbnQ6IFwnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sXCcgLS0+IDxpbWcgY2xhc3M9InRpbGUtaW1nIG1lZGl1bSIgcm9sZT1wcmVzZW50YXRpb24gZGF0YS1iaW5kPSJhdHRyOiB7IHNyYzogJGRhdGEubGlnaHRJY29uVXJsIH0iLz4gPGltZyBjbGFzcz0idGlsZS1pbWcgbWVkaXVtIiByb2xlPXByZXNlbnRhdGlvbiBkYXRhLWJpbmQ9ImF0dHI6IHsgc3JjOiAkZGF0YS5kYXJrSWNvblVybCB9Ii8+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50Ij4gPGRpdiBkYXRhLWJpbmQ9IlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAkZGF0YS50ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyOiB7IFwnZGF0YS10ZXN0LWlkXCc6IFwnZmVkQ3JlZEJ1dHRvblwnICsgJGRhdGEuY3JlZFR5cGUgfSI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IG5ld1Nlc3Npb24gLS0+IDxkaXYgY2xhc3M9bmV3LXNlc3Npb24tcG9wdXAtdjJzc28gcm9sZT1hbGVydD4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwIGlkPU5ld1Nlc3Npb25UaXRsZSBkYXRhLWJpbmQ9InRleHQ6IHN0cltcJ1RJTEVfU1RSX0FzeW5jVGlsZVRleHRfVGl0bGVcJ10iPjwvZGl2PiA8ZGl2IGNsYXNzPSJyb3cgdGlsZSI+IDxkaXYgY2xhc3M9dGFibGUgaWQ9bmV3U2Vzc2lvbkxpbmsgZGF0YS1iaW5kPSJjbGljazogbmV3U2Vzc2lvbl9vbkNsaWNrLCBhcmlhRGVzY3JpYmVkQnk6IFwnTmV3U2Vzc2lvblRpdGxlXCciIHRhYmluZGV4PTA+IDxkaXYgY2xhc3M9dGFibGUtcm93PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRpbGUtaW1nIj4gPGltZyBjbGFzcz10aWxlLWltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDI0NCkrIiBzdmdzcmM9IituKDI0NSkrJyBkYXRhLWJpbmQ9aW1nU3JjIC8+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ0YWJsZS1jZWxsIHRleHQtbGVmdCBjb250ZW50Ij4gPGRpdiBkYXRhLWJpbmQ9InRleHQ6IG5ld1Nlc3Npb25JbmZvKCkudW5zYWZlX25ld1Nlc3Npb25GdWxsTmFtZSI+PC9kaXY+PCEtLSBrbyBpZjogbmV3U2Vzc2lvbkluZm8oKS51bnNhZmVfbmV3U2Vzc2lvbkRpc3BsYXlOYW1lIC0tPiA8ZGl2PjxzbWFsbCBkYXRhLWJpbmQ9InRleHQ6IG5ld1Nlc3Npb25JbmZvKCkudW5zYWZlX25ld1Nlc3Npb25EaXNwbGF5TmFtZSI+PC9zbWFsbD48L2Rpdj48IS0tIC9rbyAtLT4gPGRpdj48c21hbGwgZGF0YS1iaW5kPSJ0ZXh0OiBzdHJbXCdUSUxFX1NUUl9BY3RpdmVcJ10iPjwvc21hbGw+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9cHMgZGF0YS1iaW5kPSJ2YWx1ZTogcG9zdGVkTG9naW5TdGF0ZVZpZXdJZCIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1wc1JOR0NEZWZhdWx0VHlwZSBkYXRhLWJpbmQ9InZhbHVlOiBwb3N0ZWRMb2dpblN0YXRlVmlld1JOR0NEZWZhdWx0VHlwZSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1wc1JOR0NFbnRyb3B5IGRhdGEtYmluZD0idmFsdWU6IHBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ0VudHJvcHkiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9cHNSTkdDU0xLIGRhdGEtYmluZD0idmFsdWU6IHBvc3RlZExvZ2luU3RhdGVWaWV3Uk5HQ1NMSyIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1jYW5hcnkgZGF0YS1iaW5kPSJ2YWx1ZTogc3ZyLmNhbmFyeSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1jdHggZGF0YS1iaW5kPSJ2YWx1ZTogY3R4Ii8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWhwZ3JlcXVlc3RpZCBkYXRhLWJpbmQ9InZhbHVlOiBzdnIuc2Vzc2lvbklkIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBpZD1pMDMyNyBkYXRhLWJpbmQ9ImF0dHI6IHsgbmFtZTogc3ZyLnNGVE5hbWUgfSwgdmFsdWU6IGZsb3dUb2tlbiIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1QUFNYIGRhdGEtYmluZD0idmFsdWU6IHN2ci5zUmFuZG9tQmxvYiIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1OZXdVc2VyIHZhbHVlPTEgLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9Rm91bmRNU0FzIGRhdGEtYmluZD0idmFsdWU6IHN2ci5zRm91bmRNU0FzIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWZzcG9zdCBkYXRhLWJpbmQ9InZhbHVlOiBzdnIuZlBPU1RfRm9yY2VTaWduaW4gPyAxIDogMCIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1pMjEgZGF0YS1iaW5kPSJ2YWx1ZTogd2FzTGVhcm5Nb3JlU2hvd24oKSA/IDEgOiAwIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPUNvb2tpZURpc2Nsb3N1cmUgZGF0YS1iaW5kPSJ2YWx1ZTogc3ZyLmZTaG93Q29va2llQmFubmVyID8gMSA6IDAiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9SXNGaWRvU3VwcG9ydGVkIGRhdGEtYmluZD0idmFsdWU6IGlzRmlkb1N1cHBvcnRlZCgpID8gMSA6IDAiLz4gPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aXNTaWdudXBQb3N0IGRhdGEtYmluZD0idmFsdWU6IGlzU2lnbnVwUG9zdCgpID8gMSA6IDAiLz4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2luc3RydW1lbnRhdGlvbi1jb250cm9sXCcsXG4gICAgICAgICAgICAgICAgcHVibGljTWV0aG9kczogaW5zdHJ1bWVudGF0aW9uTWV0aG9kcyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHsgc2VydmVyRGF0YTogc3ZyIH0gfSI+IDwvZGl2PiA8ZGl2IGlkPWZvb3RlciBjbGFzcz1mb290ZXIgcm9sZT1jb250ZW50aW5mbyBkYXRhLWJpbmQ9ImNzczogeyBcJ2RlZmF1bHRcJzogIWJhY2tncm91bmRMb2dvVXJsKCkgfSI+IDxkaXYgZGF0YS1iaW5kPSJjb21wb25lbnQ6IHsgbmFtZTogXCdmb290ZXItY29udHJvbFwnLFxuICAgICAgICAgICAgICAgICAgICBwdWJsaWNNZXRob2RzOiBmb290ZXJNZXRob2RzLFxuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0RhcmtCYWNrZ3JvdW5kOiBiYWNrZ3JvdW5kTG9nb1VybCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0xpbmtzOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZ3JlZW1lbnRDbGljazogZm9vdGVyX2FncmVlbWVudENsaWNrLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0RlYnVnRGV0YWlsczogdG9nZ2xlRGVidWdEZXRhaWxzX29uQ2xpY2sgfSB9Ij4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZm9ybT4gPGZvcm0gbWV0aG9kPXBvc3QgYXJpYS1oaWRkZW49dHJ1ZSB0YXJnZXQ9X3RvcCBkYXRhLWJpbmQ9ImF1dG9TdWJtaXQ6IHBvc3RSZWRpcmVjdEZvcmNlU3VibWl0LCBhdHRyOiB7IGFjdGlvbjogcG9zdFJlZGlyZWN0VXJsIH0iPjwhLS0ga28gZm9yZWFjaDogcG9zdFJlZGlyZWN0UGFyYW1zIC0tPiA8aW5wdXQgdHlwZT1oaWRkZW4gZGF0YS1iaW5kPSJhdHRyOiB7IG5hbWU6ICRkYXRhLm5hbWUgfSwgdmFsdWU6ICRkYXRhLnVuc2FmZV92YWx1ZSIvPjwhLS0gL2tvIC0tPiA8L2Zvcm0+PCEtLSBrbyBpZjogc3ZyLnVybE1zYVN0YXRpY01lQ29udHJvbCAmJiAhc3ZyLmZVc2VGZXRjaFNlc3Npb25zRm9yRHNzbyAtLT4gPGRpdiBkYXRhLWJpbmQ9ImNvbXBvbmVudDogeyBuYW1lOiBcJ2ZldGNoLXNlc3Npb25zLWNvbnRyb2xcJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICBzZXNzaW9uUHVsbFR5cGU6IHNlc3Npb25QdWxsVHlwZSB9LFxuICAgIGV2ZW50OiB7XG4gICAgICAgIHVwZGF0ZVVzZXJUaWxlczogZmV0Y2hTZXNzaW9uc19vblVwZGF0ZVVzZXJUaWxlcyxcbiAgICAgICAgZXhlY3V0ZUdjdFJlc3VsdDogZmV0Y2hTZXNzaW9uc19vbkV4ZWN1dGVHY3RSZXN1bHQsXG4gICAgICAgIGluY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudDogZmV0Y2hTZXNzaW9uc19vbkluY3JlbWVudEFzeW5jVGlsZVJlcXVlc3RDb3VudCxcbiAgICAgICAgZGVjcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50OiBmZXRjaFNlc3Npb25zX29uRGVjcmVtZW50QXN5bmNUaWxlUmVxdWVzdENvdW50IH0gfSI+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHN2ci51cmxDQlBhcnRuZXJQcmVsb2FkIC0tPiA8ZGl2IGlkPWlkUGFydG5lclBMIGRhdGEtYmluZD0iaW5qZWN0SWZyYW1lOiB7IHVybDogc3ZyLnVybENCUGFydG5lclByZWxvYWQgfSI+PC9kaXY+IDwhLS0gL2tvIC0tPic7Cn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSx0KXtmdW5jdGlvbiBpKGUsdCl7dmFyIG49WyJNaWNyb3NvZnQiLCJPbmVEcml2ZSIsIlNreXBlIiwiQmluZyIsIlhib3giLCJXb3JkIiwiT3V0bG9vayIsIk9mZmljZSIsIkV4Y2VsIiwiUG93ZXJQb2ludCIsIkNvcnRhbmEiLCJTa3lwZURpYWxlciIsIkhlYWx0aCIsIk1pbGVJUSIsIkJlYW0iLCJNU04iLCJNaW5lY3JhZnQiXTtyZXR1cm4oZTwwfHxlPj1uLmxlbmd0aCkmJihlPTApLGEuU3RyaW5nLmZvcm1hdCgiLi9BcHBDZW50aXBlZGVfezB9ezF9LnsyfSIsbltlXSx0PyJfd2hpdGUiOiIiLGw/InN2ZyI6InBuZyIpfXZhciBkPXRoaXMsbD0hMSx1PWUuc2VydmVyRGF0YSxwPWUuc2hvd0J1dHRvbnN8fCExLGY9ZS5zaG93Rm9vdGVyTGlua3MsZz1lLnNob3dGb290ZXJMb2dvIT09ITEsbT1lLnVzZVdpemFyZEJlaGF2aW9yLHY9ZS5oaWRlRnJvbUFyaWF8fG8ub2JzZXJ2YWJsZSghMSksaD11LmlQcm9kdWN0SWNvbjtkLnRlbXBsYXRlTm9kZXM9e30sZC5zaG93QnV0dG9ucz1wLGQuZm9vdGVyPXtzaG93TGlua3M6ZixzaG93TG9nbzpnfSxkLmNlbnRpcGVkZT17Z2V0TGlnaHRVcmw6ZnVuY3Rpb24oKXtyZXR1cm4gYyhpKGgsITApKX0sZ2V0RGFya1VybDpmdW5jdGlvbigpe3JldHVybiBjKGkoaCwhMSkpfX0sZC5oaWRlRnJvbUFyaWE9dixkLmlzSW50ZXJuYWxNb2RlRW5hYmxlZD0iMSI9PT1yLlF1ZXJ5U3RyaW5nLmV4dHJhY3QoInBzaSIpLGQudmlld01vZGVsPW51bGwsZC52aWV3QWdyZWVtZW50PW8ub2JzZXJ2YWJsZSghMSksZC5hZ3JlZW1lbnRUeXBlPW8ub2JzZXJ2YWJsZSgpLGQub25Gb290ZXJBZ3JlZW1lbnRDbGljaz1zLmNyZWF0ZSgpLGQuZm9vdGVyX2FncmVlbWVudENsaWNrPWZ1bmN0aW9uKGUpe2Qub25Gb290ZXJBZ3JlZW1lbnRDbGljayhlKX0sZC5hZ3JlZW1lbnRfYmFja0J1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7ZC52aWV3QWdyZWVtZW50KCExKX0sZC5zaG93QWdyZWVtZW50PWZ1bmN0aW9uKGUpe2QuYWdyZWVtZW50VHlwZShlKSxkLnZpZXdBZ3JlZW1lbnQoITApfSxmdW5jdGlvbigpe2lmKGw9ci5IZWxwZXIuaXNTdmdJbWdTdXBwb3J0ZWQoKSx0JiZvLnV0aWxzLmFycmF5Rm9yRWFjaCh0LGZ1bmN0aW9uKGUpe2UuaWQmJihkLnRlbXBsYXRlTm9kZXNbZS5pZF09ZS5jaGlsZE5vZGVzKX0pLG0pe3ZhciBpPW51bGw7bi5lKDMsZnVuY3Rpb24oKXtpPW4oNDU2KSxkLnZpZXdNb2RlbD1uZXcgaShlKX0pfX0oKX12YXIgbz1uKDEpLGE9big2KSxyPW4oOSkscz1uKDEzKSxjPW4oMzg2KSxkPXdpbmRvdztvLmNvbXBvbmVudHMucmVnaXN0ZXIoIm1hc3Rlci1wYWdlIix7dmlld01vZGVsOntjcmVhdGVWaWV3TW9kZWw6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IGkoZSx0LnRlbXBsYXRlTm9kZXMpfX0sdGVtcGxhdGU6big0NTUpLHN5bmNocm9ub3VzOiFkLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oZC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3JldHVybiBuKG8oZSkpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGFbZV18fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrZSsiJy4iKX0oKX12YXIgYT17Ii4vQXBwQ2VudGlwZWRlX0JlYW0ucG5nIjozODcsIi4vQXBwQ2VudGlwZWRlX0JlYW0uc3ZnIjozODgsIi4vQXBwQ2VudGlwZWRlX0JlYW1fd2hpdGUucG5nIjozODksIi4vQXBwQ2VudGlwZWRlX0JlYW1fd2hpdGUuc3ZnIjozOTAsIi4vQXBwQ2VudGlwZWRlX0JpbmcucG5nIjozOTEsIi4vQXBwQ2VudGlwZWRlX0Jpbmcuc3ZnIjozOTIsIi4vQXBwQ2VudGlwZWRlX0Jpbmdfd2hpdGUucG5nIjozOTMsIi4vQXBwQ2VudGlwZWRlX0Jpbmdfd2hpdGUuc3ZnIjozOTQsIi4vQXBwQ2VudGlwZWRlX0NvcnRhbmEucG5nIjozOTUsIi4vQXBwQ2VudGlwZWRlX0NvcnRhbmEuc3ZnIjozOTYsIi4vQXBwQ2VudGlwZWRlX0NvcnRhbmFfd2hpdGUucG5nIjozOTcsIi4vQXBwQ2VudGlwZWRlX0NvcnRhbmFfd2hpdGUuc3ZnIjozOTgsIi4vQXBwQ2VudGlwZWRlX0V4Y2VsLnBuZyI6Mzk5LCIuL0FwcENlbnRpcGVkZV9FeGNlbC5zdmciOjQwMCwiLi9BcHBDZW50aXBlZGVfRXhjZWxfd2hpdGUucG5nIjo0MDEsIi4vQXBwQ2VudGlwZWRlX0V4Y2VsX3doaXRlLnN2ZyI6NDAyLCIuL0FwcENlbnRpcGVkZV9IZWFsdGgucG5nIjo0MDMsIi4vQXBwQ2VudGlwZWRlX0hlYWx0aC5zdmciOjQwNCwiLi9BcHBDZW50aXBlZGVfSGVhbHRoX3doaXRlLnBuZyI6NDA1LCIuL0FwcENlbnRpcGVkZV9IZWFsdGhfd2hpdGUuc3ZnIjo0MDYsIi4vQXBwQ2VudGlwZWRlX01TTi5wbmciOjQwNywiLi9BcHBDZW50aXBlZGVfTVNOLnN2ZyI6NDA4LCIuL0FwcENlbnRpcGVkZV9NU05fd2hpdGUucG5nIjo0MDksIi4vQXBwQ2VudGlwZWRlX01TTl93aGl0ZS5zdmciOjQxMCwiLi9BcHBDZW50aXBlZGVfTWljcm9zb2Z0LnBuZyI6NDExLCIuL0FwcENlbnRpcGVkZV9NaWNyb3NvZnQuc3ZnIjo0MTIsIi4vQXBwQ2VudGlwZWRlX01pY3Jvc29mdF93aGl0ZS5wbmciOjQxMywiLi9BcHBDZW50aXBlZGVfTWljcm9zb2Z0X3doaXRlLnN2ZyI6NDE0LCIuL0FwcENlbnRpcGVkZV9NaWxlSVEucG5nIjo0MTUsIi4vQXBwQ2VudGlwZWRlX01pbGVJUS5zdmciOjQxNiwiLi9BcHBDZW50aXBlZGVfTWlsZUlRX3doaXRlLnBuZyI6NDE3LCIuL0FwcENlbnRpcGVkZV9NaWxlSVFfd2hpdGUuc3ZnIjo0MTgsIi4vQXBwQ2VudGlwZWRlX01pbmVjcmFmdC5wbmciOjQxOSwiLi9BcHBDZW50aXBlZGVfTWluZWNyYWZ0LnN2ZyI6NDIwLCIuL0FwcENlbnRpcGVkZV9NaW5lY3JhZnRfd2hpdGUucG5nIjo0MjEsIi4vQXBwQ2VudGlwZWRlX01pbmVjcmFmdF93aGl0ZS5zdmciOjQyMiwiLi9BcHBDZW50aXBlZGVfT2ZmaWNlLnBuZyI6NDIzLCIuL0FwcENlbnRpcGVkZV9PZmZpY2Uuc3ZnIjo0MjQsIi4vQXBwQ2VudGlwZWRlX09mZmljZV93aGl0ZS5wbmciOjQyNSwiLi9BcHBDZW50aXBlZGVfT2ZmaWNlX3doaXRlLnN2ZyI6NDI2LCIuL0FwcENlbnRpcGVkZV9PbmVEcml2ZS5zdmciOjQyNywiLi9BcHBDZW50aXBlZGVfT25lRHJpdmVfd2hpdGUuc3ZnIjo0MjgsIi4vQXBwQ2VudGlwZWRlX09uZWRyaXZlLnBuZyI6NDI5LCIuL0FwcENlbnRpcGVkZV9PbmVkcml2ZV93aGl0ZS5wbmciOjQzMCwiLi9BcHBDZW50aXBlZGVfT3V0bG9vay5wbmciOjQzMSwiLi9BcHBDZW50aXBlZGVfT3V0bG9vay5zdmciOjQzMiwiLi9BcHBDZW50aXBlZGVfT3V0bG9va193aGl0ZS5wbmciOjQzMywiLi9BcHBDZW50aXBlZGVfT3V0bG9va193aGl0ZS5zdmciOjQzNCwiLi9BcHBDZW50aXBlZGVfUG93ZXJQb2ludC5wbmciOjQzNSwiLi9BcHBDZW50aXBlZGVfUG93ZXJQb2ludC5zdmciOjQzNiwiLi9BcHBDZW50aXBlZGVfUG93ZXJQb2ludF93aGl0ZS5wbmciOjQzNywiLi9BcHBDZW50aXBlZGVfUG93ZXJQb2ludF93aGl0ZS5zdmciOjQzOCwiLi9BcHBDZW50aXBlZGVfU2t5cGUucG5nIjo0MzksIi4vQXBwQ2VudGlwZWRlX1NreXBlLnN2ZyI6NDQwLCIuL0FwcENlbnRpcGVkZV9Ta3lwZURpYWxlci5wbmciOjQ0MSwiLi9BcHBDZW50aXBlZGVfU2t5cGVEaWFsZXIuc3ZnIjo0NDIsIi4vQXBwQ2VudGlwZWRlX1NreXBlRGlhbGVyX3doaXRlLnBuZyI6NDQzLCIuL0FwcENlbnRpcGVkZV9Ta3lwZURpYWxlcl93aGl0ZS5zdmciOjQ0NCwiLi9BcHBDZW50aXBlZGVfU2t5cGVfd2hpdGUucG5nIjo0NDUsIi4vQXBwQ2VudGlwZWRlX1NreXBlX3doaXRlLnN2ZyI6NDQ2LCIuL0FwcENlbnRpcGVkZV9Xb3JkLnBuZyI6NDQ3LCIuL0FwcENlbnRpcGVkZV9Xb3JkLnN2ZyI6NDQ4LCIuL0FwcENlbnRpcGVkZV9Xb3JkX3doaXRlLnBuZyI6NDQ5LCIuL0FwcENlbnRpcGVkZV9Xb3JkX3doaXRlLnN2ZyI6NDUwLCIuL0FwcENlbnRpcGVkZV9YYm94LnBuZyI6NDUxLCIuL0FwcENlbnRpcGVkZV9YYm94LnN2ZyI6NDUyLCIuL0FwcENlbnRpcGVkZV9YYm94X3doaXRlLnBuZyI6NDUzLCIuL0FwcENlbnRpcGVkZV9YYm94X3doaXRlLnN2ZyI6NDU0fTtpLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmtleXMoYSl9LGkucmVzb2x2ZT1vLGUuZXhwb3J0cz1pLGkuaWQ9Mzg2fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9iZWFtXzg5N2I5OTJiYzIxNjYxYjFiYjg1NTYzZjkwNjdkYWZmLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX2JlYW1fOTE5NDkzYmJmOGEyNmUzN2VmMDk1ODFhMmQ2YzY2OWUuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfYmVhbV93aGl0ZV84MjJlMTVlM2NkYWNkNzZiZDhjNjcxNWIxMWVkZDZhYi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9iZWFtX3doaXRlXzRjMTlkOWJkYWEwNjJhNmQxNmRmYTNkZGYxYTA1Y2Y2LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX2JpbmdfMDE1MDk4OTAyNzhmOTM4YmE2MDcwYjM0YmQ2NzRlOTcucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfYmluZ185YTI0ZmE0MTFhNWYxODFiOGU2NmEwZmU2YWJmYTMyNS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9iaW5nX3doaXRlXzg0NTYzYjQ4MzU4ZDI2MWY5ZTM2NWVhMzQ3ZmE1ZmM3LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX2Jpbmdfd2hpdGVfNzg3NmZhMDYzNTNkYjdiMjZhZjU1MDI5M2U4ZmE4MzEuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfY29ydGFuYV82MGJjOTRiOTg4ZjA4NWI0NmNmYTE5NDZjOWYxM2RlYi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9jb3J0YW5hXzI4OGU5NmQ5MmUxMDEwZGU2NjEyZmIyNTk0YjNlMjlkLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX2NvcnRhbmFfd2hpdGVfZjkzNjBhNDhkNmZiY2YzOWJjYmUyM2Y5NDIzOWQ2ZDYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfY29ydGFuYV93aGl0ZV9mNWY0MDU4MjRhMGU2ODBkNzgwMTMwMDk3NTA4MmY5My5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9leGNlbF8xNjEyMTQ1OWRkMjA3NmI4ZTkxZGY3ZGI2Y2EwMjhhOC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9leGNlbF84MTAxYTJiNDY0MzEyOWE4YTc1MDcxNDViZDc0MzM5MC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9leGNlbF93aGl0ZV8zOTAwMTBlMGM2MDY2ZjgyZDc5ODFhMzIwYjEyYzk5Yy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9leGNlbF93aGl0ZV9hOTNiNGI3YzNhZDliMGMzYjk0YTRjNDEzMGRkY2Y2OS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9oZWFsdGhfNWVkYmU3NmFlM2I4YWQ1NmQwZTg5OGFkMzBmOThlMTMucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfaGVhbHRoX2M0YjBjNmE1YWQzZmUxZWI3ZWZlYmNjODQ5MGU3Yzc2LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX2hlYWx0aF93aGl0ZV84YzE4ODM3ZWVkOGI3MGJlMDY1MmY1NDY0YzYzYmFhOC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9oZWFsdGhfd2hpdGVfNzQ2NDE4OGU0ZWQyZmVjY2M3MWVjNTgxODc0NDg3MTIuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbXNuX2Y0YmNlNTA2MmM0ZWM0MWQ0NjY2NWJlZmM2M2Y2ZGI2LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX21zbl82ZTYzZDM3ZWRlODBmNWNlMWRjMDM3OTgwMjYxYmJiNS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9tc25fd2hpdGVfNzk0NzFmMTAxNzlmMWIwYTEyYjc3NDg5MWFkZDY0YzAucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbXNuX3doaXRlXzZhNDI2NTY4ODA1MzE4ZThhMzlkNzNlNzllYzlhZWEwLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX21pY3Jvc29mdF8yMjc4Zjg0NDJjNzcwYWRhYjRlNTBkMTlhMGQzYjE2Zi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9taWNyb3NvZnRfYWVkNWViOWNjZWE0M2YxMTlhMjViM2I3NGM1OWM3ZTcuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbWljcm9zb2Z0X3doaXRlXzgwZmM0NjBjZmRmZTA3ZWQ1MDIwOGE2YmIxNjZiMmQ4LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX21pY3Jvc29mdF93aGl0ZV9iOWY0NTg5NjU5NTYzYjBlMThjODM0NjIyOWMwNmZjNS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9taWxlaXFfNDE1NjM3YjIxYmFmYmNkNWVhMzY2M2ZmNjVkNjFiMDYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbWlsZWlxXzYyNWU2ZTg3ZWI1OTY5ZjlhZmNhZWZlZDFkZWMwNWJjLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX21pbGVpcV93aGl0ZV81ODEzZGZhYzZkNGUzNzgwMTkzMjBmNWZlMzExZmY3NC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9taWxlaXFfd2hpdGVfNDgxYjI1ZWJhNzU1ODBhYWY1ZjgwY2FjZGYzNjIwYTkuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbWluZWNyYWZ0XzU2YjlkNjBjYmMyOWIzMTU4YzdmM2EwZjNlMzlmZWI4LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX21pbmVjcmFmdF9mNjI2ZGVjOTBhM2QzYzkxMTFiMDNjY2Y1ZjgzMzY4OC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9taW5lY3JhZnRfd2hpdGVfMzZlYjAwNGU5OTAxOTVhMmQyZTZmYjNlZDY2OGE4MjkucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfbWluZWNyYWZ0X3doaXRlXzNkZTZjZWRlYWQzYWY1NWU4YTRkZDU2Y2JhYTJkNTNjLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX29mZmljZV9lY2Y0ZmNjOTg0YTNmNjhiNTVlZjE0NzRjNThkZjcwNS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vZmZpY2VfMGMwNDI3YzJkYTdkYjcwYTdlNjRmNjRhMjkyM2NiZWYuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfb2ZmaWNlX3doaXRlXzBlNGIzMTA3NTc2MDFjYTk2NWE1MmExNmUyODJkOWNkLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX29mZmljZV93aGl0ZV9hNzM4YTBjMDIxNjY4MGMzNmRlNDQ0NWI5MThmNDQ3Ni5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vbmVkcml2ZV8xMzYwODkyM2EwZTMxNmQyNjRjMGRmNTcwNTg3NWFjNC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vbmVkcml2ZV93aGl0ZV8wNGJlMDJjZDkyMjIzZTc2MDc2ZGI0ZThjMmIwM2ZkYy5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vbmVkcml2ZV9mYzNhYTEyYzgxMmRjN2IwNGY0OThlYWU3MWYzM2VhMi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vbmVkcml2ZV93aGl0ZV9jYjE2MjM5ODM4ZDljMWQwYjg3OTFlZDM3NTQ3ZTIwNC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vdXRsb29rXzRhZjE4NmExMmNlY2VhNWE0MWRjNGRiODFkM2Y1ZGY1LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX291dGxvb2tfNjQ1ODlmNTI4YTdhNzgwMjI5MGI1ZTY0NzI3YTQzYTUuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfb3V0bG9va193aGl0ZV8yZTc0ZTNlNmZmNzI5Y2IxYWZiMDVhMGFkNzBiNTE5MC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9vdXRsb29rX3doaXRlX2UwNmFhNzIzZTQ3NzVkMzNjMTY4ZDAyNzlkMzE5MGYzLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX3Bvd2VycG9pbnRfNmZmNGRiZGIxYjgwMjVlZGQ4OGM3NGEzYjkxNjQ2YjgucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfcG93ZXJwb2ludF9iNjgyNzUzZGU4MzQ0ZTE5ZmQ4MWJhMTRhOWIxNWNkMS5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV9wb3dlcnBvaW50X3doaXRlX2FkOTAxMGFlOWY3M2Q2NzJiMDVkYzBkYTNhNTI2NTFhLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX3Bvd2VycG9pbnRfd2hpdGVfMjI4ZWUyZDNlOTIyMmFiNjk2YWM3OTNjZTRkNTdlY2Quc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVfZDM3N2Y5Y2NkMzVhNDQ3MGNjYWJlYTRiMjQ2ODg4MTkucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVfZTg0ZDk0OGRmMWFhMWY4ZGQwYmY5NDA0NjIzY2U0OTAuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVkaWFsZXJfYWExNjFkZjJmMzliNWZiYmQyNDgzZTYxNTQ5NTJkODUucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVkaWFsZXJfMDlhZDVjYWU5MzdiYjkxNjBlMzY3YWUwYzY2YzU5OWMuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVkaWFsZXJfd2hpdGVfNzhkYjFhZDQ2MGMxM2Y2Y2VhOTc1MWI3ZDE5NDAwMGIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVkaWFsZXJfd2hpdGVfOTViY2FkZDdhMWViMTQ3MTM0MGZjYTVhNzg1YzM1YjIuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVfd2hpdGVfMTgwNjRmYzNiYjk2ODFjZDJjNmZjYmQxNWRkYjkyZjIucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfc2t5cGVfd2hpdGVfMjA5NTliMmQ4ODdkYzAwNWZjNmU2OWQ2YmQ3MmY0Yzguc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfd29yZF8yZWQwYjZjMTkzNGRkZGEyNzEyMjVjZGUwMDU5MzYwNS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV93b3JkXzJmNmM5ZWQxMjUxZGUzMTZjZWJmMGMxNzJjNTFjZjg1LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX3dvcmRfd2hpdGVfYjVmOGJjOGFmNTRjNGFiNGNkZGZhMzliY2E5NjUzYWUucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfd29yZF93aGl0ZV8zMjlmMzdiOWEzNmVlYzE3ZGQyNDI5MTkxNjg5ZjExMi5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV94Ym94XzFkNDk2ODAxNWQ3MmRjYmVjYjE4NDNjOGNhODljYjQ3LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcHBjZW50aXBlZGUvYXBwY2VudGlwZWRlX3hib3hfYTNkNTRjMjhlOGE4ODM5M2MzM2MyNzk3MmMxZDk3ZDUuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2FwcGNlbnRpcGVkZS9hcHBjZW50aXBlZGVfeGJveF93aGl0ZV82YjkyYzE3NDFkNGQ1OGVmODk3MDUwNDZlNWRkYTcxMS5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXBwY2VudGlwZWRlL2FwcGNlbnRpcGVkZV94Ym94X3doaXRlXzY3ZDA5ZmY4ZmEyZDQzYTUwYjE2NWNlMzJhNWZmNThjLnN2ZyJ9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSI8IS0tIGtvIHRlbXBsYXRlOiB7IG5vZGVzOiAkY29tcG9uZW50VGVtcGxhdGVOb2RlcywgZGF0YTogJHBhcmVudCB9IC0tPjwhLS0gL2tvIC0tPiJ9LCwsLCwsZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdChlLHQpe2YmJiFnP24ub25BZ3JlZW1lbnRDbGljayhlKTpjLm9wZW4odCwiX2JsYW5rIil9dmFyIG49dGhpcyxpPWUuc2VydmVyRGF0YSxhPWUuc2hvd0xvZ28scz1lLnNob3dMaW5rcyxsPWUuZGVidWdEZXRhaWxzLHU9ZS5zaG93RGVidWdEZXRhaWxzLHA9ZS5oYXNEYXJrQmFja2dyb3VuZCxmPWkuZklzSG9zdGVkLGc9aS5mSXNDaGluYURjLG09aS51cmxGb290ZXJUT1V8fGkudXJsSG9zdGVkVE9VTGluayx2PWkudXJsRm9vdGVyUHJpdmFjeXx8aS51cmxIb3N0ZWRQcml2YWN5TGluayxoPWkudXJsSW1wcmVzc3VtLGI9aS51cmxHYWxsYXRpbkljcDtuLm9uQWdyZWVtZW50Q2xpY2s9ci5jcmVhdGUoKSxuLm9uU2hvd0RlYnVnRGV0YWlscz1yLmNyZWF0ZSgpLG4uc2hvd0RlYnVnRGV0YWlscz1vLm9ic2VydmFibGUoISF1KSxuLmZvY3VzTW9yZUluZm89by5vYnNlcnZhYmxlKCExKS5leHRlbmQoe25vdGlmeToiYWx3YXlzIn0pLG4uc2hvd0xvZ289YSYmIWcsbi5zaG93TGlua3M9cyxuLnNob3dJY3BMaWNlbnNlPWcsbi5kZWJ1Z0RldGFpbHM9bCxuLnRlcm1zTGluaz1tLG4ucHJpdmFjeUxpbms9dixuLmltcHJlc3N1bUxpbms9aCxuLmljcExpbms9YixuLmhhc0RhcmtCYWNrZ3JvdW5kPXAsbi5wcml2YWN5TGlua19vbkNsaWNrPWZ1bmN0aW9uKCl7dChkLlByaXZhY3ksbi5wcml2YWN5TGluayl9LG4udGVybXNMaW5rX29uQ2xpY2s9ZnVuY3Rpb24oKXt0KGQuVG91LG4udGVybXNMaW5rKX0sbi5pbXByZXNzdW1MaW5rX29uQ2xpY2s9ZnVuY3Rpb24oKXt0KGQuSW1wcmVzc3VtLG4uaW1wcmVzc3VtTGluayl9LG4ubW9yZUluZm9fb25DbGljaz1mdW5jdGlvbigpe24uc2V0RGVidWdEZXRhaWxzU3RhdGUoIW4uc2hvd0RlYnVnRGV0YWlscygpKSxuLm9uU2hvd0RlYnVnRGV0YWlscygpLG4uc2hvd0RlYnVnRGV0YWlscygpfHxuLmZvY3VzTW9yZUluZm8oITApfSxuLnNldERlYnVnRGV0YWlsc1N0YXRlPWZ1bmN0aW9uKGUpe24uc2hvd0RlYnVnRGV0YWlscyhlKX0sbi5mb2N1c01vcmVJbmZvTGluaz1mdW5jdGlvbigpe24uZm9jdXNNb3JlSW5mbyghMCl9fXZhciBvPW4oMSksYT1uKDkpLHI9bigxMykscz1uKDUpLGM9d2luZG93LGQ9cy5BZ3JlZW1lbnRUeXBlO28uY29tcG9uZW50cy5yZWdpc3RlcigiZm9vdGVyLWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDQ2Miksc3luY2hyb25vdXM6IWMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksIiIpKyIgLS0+PCEtLSBrbyBpZjogc2hvd0xpbmtzIHx8IGltcHJlc3N1bUxpbmsgfHwgc2hvd0ljcExpY2Vuc2UgLS0+IDxkaXYgaWQ9Zm9vdGVyTGlua3MgY2xhc3M9XCJmb290ZXJOb2RlIHRleHQtc2Vjb25kYXJ5XCI+IDxhIGlkPWZ0clRlcm1zIGRhdGEtYmluZD1cInRleHQ6IHN0clsnTU9CSUxFX1NUUl9Gb290ZXJfVGVybXMnXSwgaHJlZjogdGVybXNMaW5rLCBjbGljazogdGVybXNMaW5rX29uQ2xpY2tcIj48L2E+IDxhIGlkPWZ0clByaXZhY3kgZGF0YS1iaW5kPVwidGV4dDogc3RyWydNT0JJTEVfU1RSX0Zvb3Rlcl9Qcml2YWN5J10sIGhyZWY6IHByaXZhY3lMaW5rLCBjbGljazogcHJpdmFjeUxpbmtfb25DbGlja1wiPjwvYT48IS0tIGtvIGlmOiBpbXByZXNzdW1MaW5rIC0tPiA8YSBpZD1mdHJJbXByZXNzdW0gZGF0YS1iaW5kPVwidGV4dDogc3RyWydXRl9TVFJfRm9vdGVyX0xpbmtEaXNjbGFpbWVyX1RleHQnXSwgaHJlZjogaW1wcmVzc3VtTGluaywgY2xpY2s6IGltcHJlc3N1bUxpbmtfb25DbGlja1wiPjwvYT48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzaG93SWNwTGljZW5zZSAtLT4gPGEgaWQ9ZnRySWNwIGhyZWY9IyB0YXJnZXQ9X2JsYW5rIGRhdGEtYmluZD1cInRleHQ6IHN0clsnU1RSX0Zvb3Rlcl9JY3BMaWNlbnNlX1RleHQnXSwgaHJlZjogaWNwTGlua1wiPjwvYT48IS0tIC9rbyAtLT48IS0tIFNldCBhdHRyIGJpbmRpbmcgYmVmb3JlIGhhc0ZvY3VzRXggdG8gcHJldmVudCBOYXJyYXRvciBmcm9tIGxvc2luZyBmb2N1cyAtLT4gPGEgaWQ9bW9yZU9wdGlvbnMgaHJlZj0jIHJvbGU9YnV0dG9uIGNsYXNzPW1vcmVPcHRpb25zIGRhdGEtYmluZD1cIlxuICAgICAgICBjbGljazogbW9yZUluZm9fb25DbGljayxcbiAgICAgICAgYXJpYUxhYmVsOiBzdHJbJ0NUX1NUUl9Nb3JlX09wdGlvbnNfRWxsaXBzaXNfQXJpYUxhYmVsJ10sXG4gICAgICAgIGF0dHI6IHsgJ2FyaWEtZXhwYW5kZWQnOiBzaG93RGVidWdEZXRhaWxzKCkudG9TdHJpbmcoKSB9LFxuICAgICAgICBoYXNGb2N1c0V4OiBmb2N1c01vcmVJbmZvKClcIj48IS0tIGtvIGNvbXBvbmVudDogeyBuYW1lOiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJywgcGFyYW1zOiB7IGhhc0RhcmtCYWNrZ3JvdW5kOiB0cnVlIH0gfSAtLT4gPGltZyBjbGFzcz1kZXNrdG9wTW9kZSByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDQ2MykrIiBzdmdzcmM9IituKDQ2NCkrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+IDxpbWcgY2xhc3M9ZGVza3RvcE1vZGUgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbig0NjUpKyIgc3Znc3JjPSIrbig0NjYpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPjwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnLCBwYXJhbXM6IHsgaGFzRGFya0JhY2tncm91bmQ6IGhhc0RhcmtCYWNrZ3JvdW5kIH0gfSAtLT4gPGltZyBjbGFzcz1tb2JpbGVNb2RlIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oNDYzKSsiIHN2Z3NyYz0iK24oNDY0KSsiIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyBjbGFzcz1tb2JpbGVNb2RlIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oNDY3KSsiIHN2Z3NyYz0iK24oNDY4KSsiIGRhdGEtYmluZD1pbWdTcmMgLz48IS0tIC9rbyAtLT4gPC9hPiA8L2Rpdj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2VsbGlwc2lzX3doaXRlXzBhZDQzMDg0ODAwZmQ4YjUwYTI1NzZiNTE3Mzc0NmZlLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9lbGxpcHNpc193aGl0ZV81YWM1OTBlZTcyYmZlMDZhN2NlY2ZkNzViNTg4YWQ3My5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvZWxsaXBzaXNfOTZmNjlkMGNlZmQ4YThiYTYyM2ExODJjMzUxY2NjNjQucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2VsbGlwc2lzXzYzNWE2M2Q1MDBhOTJhMGI4NDk3Y2RjNThkMGY2NmIxLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9lbGxpcHNpc19ncmV5XzViYzI1MjU2N2VmNTZkYjY0ODIwN2Q5YzM2YTlkMDA0LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9lbGxpcHNpc19ncmV5XzJiNWQzOTNkYjA0YTVlNmUxZjczOWNiMjY2ZTY1YjRjLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUsdCxuLGkpe2Z1bmN0aW9uIG8oKXt2YXIgZT1fLmN1cnJlbnRWaWV3SW5kZXgoKTtyZXR1cm4geFtlXSgpfWZ1bmN0aW9uIGEoZSl7RihudWxsKSxfLnZpZXdfb25TZXRJZGVudGl0eUJhY2tCdXR0b25TdGF0ZSgpLF8uaXNJbml0aWFsU3RhdGU9UC5nZXRTdGF0ZSgpLmlzSW5pdGlhbFN0YXRlLF8ub25TaG93VmlldyhEW2VdLm1ldGFkYXRhLGUpLEYoZSl9ZnVuY3Rpb24gcyhlKXt2YXIgdD1GKCk7IUJ8fHQ9PT1lfHxDJiYhdD8oXy5hbmltYXRlKHYuTm9uZSksXy52aWV3X29uQW5pbWF0aW9uRW5kKCksYShlKSk6KGsmJm51bGw9PT1SJiYoTD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Qj0hMSxfLmhpZGVQYWdpbmF0ZWRWaWV3KCExKSxfLmhpZGVQYWdpbmF0ZWRWaWV3LmhpZGVTdWJWaWV3KCExKSxJPW0uRW5kLHMoZSl9LDcwMCkpLFI9dCxBPWUsST1tLkJlZ2luLF8udmlld19vbkFuaW1hdGlvbkVuZCgpKX1mdW5jdGlvbiBjKGUpe3ZhciB0PW8oKTtpZih0KXtlJiZ0LnNhdmVTaGFyZWREYXRhKF8uc2hhcmVkRGF0YSk7dmFyIG49dC5nZXRTdGF0ZSgpLGk9UC5nZXRTdGF0ZSgpO2kudmlld1N0YXRlPW4sUC5yZXBsYWNlU3RhdGUoaSl9fWZ1bmN0aW9uIHAoKXtFPSEwLGMoITEpfWZ1bmN0aW9uIGYoKXtFPSExfWZ1bmN0aW9uIGIoZSl7Xy5pbml0aWFsRXJyb3I9bnVsbCxzKGUudmlld0lkKX12YXIgXz10aGlzLFM9ZS5pbml0aWFsVmlld0lkfHxudWxsLHc9ZS5jdXJyZW50Vmlld0lkfHxudWxsLFQ9ZS5pbml0aWFsU2hhcmVkRGF0YXx8e30sQz1lLmluaXRpYWxFcnJvcix5PWUuZW5hYmxlQ3NzQW5pbWF0aW9uLGs9ZS5kaXNhYmxlQW5pbWF0aW9uSWZBbmltYXRpb25FbmRVbnN1cHBvcnRlZCx4PW4sRD1pLFA9bnVsbCxJPW0uRW5kLEU9ITEsUj1udWxsLEE9bnVsbCxCPSExLEw9bnVsbCxGPXIub2JzZXJ2YWJsZSgpO18udmlld3M9dCxfLnZpZXdJbnRlcmZhY2VzPW4sXy5zaGFyZWREYXRhPVQsXy5pbml0aWFsRXJyb3I9QyxfLmlzSW5pdGlhbFN0YXRlPSExLF8uaXNCYWNrQnV0dG9uVmlzaWJsZT1yLm9ic2VydmFibGUoITEpLF8uaXNCYWNrQnV0dG9uRm9jdXNlZD1yLm9ic2VydmFibGUoITEpLF8uYmFja0J1dHRvbkRlc2NyaWJlZEJ5PXIub2JzZXJ2YWJsZShudWxsKSxfLmhpZGVQYWdpbmF0ZWRWaWV3PXIudXRpbHMuZXh0ZW5kKHIub2JzZXJ2YWJsZSghMSkse2hpZGVTdWJWaWV3OnIub2JzZXJ2YWJsZSghMSl9KSxfLmFuaW1hdGU9ci51dGlscy5leHRlbmQoci5vYnNlcnZhYmxlKHYuTm9uZSkse2FuaW1hdGVCYW5uZXI6ci5vYnNlcnZhYmxlKCExKSxpc1NsaWRlT3V0TmV4dDpyLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBfLmFuaW1hdGUoKT09PXYuU2xpZGVPdXROZXh0fSksaXNTbGlkZUluTmV4dDpyLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBfLmFuaW1hdGUoKT09PXYuU2xpZGVJbk5leHR9KSxpc1NsaWRlT3V0QmFjazpyLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBfLmFuaW1hdGUoKT09PXYuU2xpZGVPdXRCYWNrfSksaXNTbGlkZUluQmFjazpyLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBfLmFuaW1hdGUoKT09PXYuU2xpZGVJbkJhY2t9KX0pLF8uc2hvd0lkZW50aXR5QmFubmVyPXIucHVyZUNvbXB1dGVkKGZ1bmN0aW9uKCl7dmFyIGU9RigpO3JldHVybiBlJiZEW2VdLm1ldGFkYXRhJiZEW2VdLm1ldGFkYXRhLnNob3dJZGVudGl0eUJhbm5lcn0pLF8uY3VycmVudFZpZXdJbmRleD1yLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPUYoKTtyZXR1cm4gRFtlXSYmIWlzTmFOKERbZV0uaW5kZXgpP0RbZV0uaW5kZXg6LTF9KSxfLmlzVmlld0xvYWRlZD1yLnB1cmVDb21wdXRlZChmdW5jdGlvbigpe3ZhciBlPUYoKTtpZighRFtlXSlyZXR1cm4hMTt2YXIgdD1EW2VdLnZpZXdTdGF0dXM7cmV0dXJuIXQuaXNMYXp5fHx0LmlzTG9hZGVkKCl9KSxfLm9uQ2FuY2VsPWwuY3JlYXRlKCksXy5vblNob3dWaWV3PWwuY3JlYXRlKCksXy5vblNldExpZ2h0Qm94RmFkZUluPWwuY3JlYXRlKCksXy5vbkFuaW1hdGlvblN0YXRlQ2hhbmdlPWwuY3JlYXRlKCksXy5kaXNwb3NlPWZ1bmN0aW9uKCl7UC5kaXNwb3NlKCl9LF8uc2V0RGVmYXVsdEZvY3VzPWZ1bmN0aW9uKCl7dmFyIGU9bygpO2Uuc2V0RGVmYXVsdEZvY3VzJiZlLnNldERlZmF1bHRGb2N1cygpfSxfLmxvYWRWaWV3PWZ1bmN0aW9uKGUsdCl7dmFyIG49RFtlXS52aWV3U3RhdHVzO24uaXNMb2FkZWQoKXx8bnVsbD09PXR8fChuLmlzTGF6eT0hMCx1LnRocm93VW5oYW5kbGVkRXhjZXB0aW9uT25SZWplY3Rpb24odC50aGVuKGZ1bmN0aW9uKCl7bi5pc0xvYWRlZCghMCl9KSkpfSxfLmdldEN1cnJlbnRWaWV3SWQ9ZnVuY3Rpb24oKXtyZXR1cm4gRigpfSxfLmdldFNoYXJlZERhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gXy5zaGFyZWREYXRhfHx7fX0sXy5nZXRTaGFyZWREYXRhSXRlbT1mdW5jdGlvbihlKXtyZXR1cm4gXy5nZXRTaGFyZWREYXRhKClbZV19LF8uZ2V0Q3VycmVudFZpZXc9ZnVuY3Rpb24oKXtyZXR1cm57dmlld0lkOkYoKSx2aWV3SW50ZXJmYWNlOm8oKX19LF8uc2V0U2hhcmVkRGF0YUl0ZW09ZnVuY3Rpb24oZSx0KXtfLnNoYXJlZERhdGF8fChfLnNoYXJlZERhdGE9e30pLF8uc2hhcmVkRGF0YVtlXT10fSxfLmN1cnJlbnRWaWV3SGFzTWV0YWRhdGE9ZnVuY3Rpb24oZSl7dmFyIHQ9RigpO3JldHVybiEhRFt0XSYmISFEW3RdLm1ldGFkYXRhW2VdfSxfLnN1Ym1pdEN1cnJlbnRWaWV3PWZ1bmN0aW9uKCl7dmFyIGU9bygpO2UmJmUuc3VibWl0JiZlLnN1Ym1pdCgpfSxfLmlkZW50aXR5QmFubmVyX29uQmFja0J1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7Xy52aWV3X29uU3dpdGNoVmlldyhnKX0sXy52aWV3X29uTG9hZD1mdW5jdGlvbigpe3ZhciBlPVAuZ2V0U3RhdGUoKSx0PW8oKTt0LnJlc3RvcmVTdGF0ZShlP2Uudmlld1N0YXRlOm51bGwpLF8uc2V0RGVmYXVsdEZvY3VzKCl9LF8udmlld19vblN3aXRjaFZpZXc9ZnVuY3Rpb24oZSx0KXt2YXIgbj1QLmdldFN0YXRlKCl8fHt9O18uaW5pdGlhbEVycm9yPW51bGwsZT09PWc/KEU9ITAsbi5pc0luaXRpYWxTdGF0ZT9fLm9uQ2FuY2VsKCk6UC5nb0JhY2soKSk6KEU9ITEsYyghMCksdHw9ZT09PUYoKSx0PyhuLnZpZXdJZD1lLG4udmlld1N0YXRlPW51bGwsUC5yZXBsYWNlU3RhdGUobikpOihuPXt2aWV3SWQ6ZX0sUC5wdXNoU3RhdGUobikpLHMoZSkpfSxfLnZpZXdfb25DYW5jZWw9ZnVuY3Rpb24oKXtfLm9uQ2FuY2VsKCl9LF8udmlld19vblNldElkZW50aXR5QmFja0J1dHRvblN0YXRlPWZ1bmN0aW9uKGUsdCxuKXtfLmlzQmFja0J1dHRvblZpc2libGUoZXx8ITEpLF8uaXNCYWNrQnV0dG9uRm9jdXNlZCh0fHwhMSksXy5iYWNrQnV0dG9uRGVzY3JpYmVkQnkobnx8bnVsbCl9LF8udmlld19vbkFuaW1hdGlvbkVuZD1mdW5jdGlvbigpe3N3aXRjaChfLm9uQW5pbWF0aW9uU3RhdGVDaGFuZ2UoSSxFLCEhUiksSSl7Y2FzZSBtLkJlZ2luOl8uYW5pbWF0ZSh2Lk5vbmUpLF8uYW5pbWF0ZS5hbmltYXRlQmFubmVyKCFSfHxEW1JdLm1ldGFkYXRhLnNob3dJZGVudGl0eUJhbm5lciE9PURbQV0ubWV0YWRhdGEuc2hvd0lkZW50aXR5QmFubmVyKSxJPW0uUmVuZGVyTmV3VmlldyxSP18uYW5pbWF0ZShFP3YuU2xpZGVPdXRCYWNrOnYuU2xpZGVPdXROZXh0KTpfLnZpZXdfb25BbmltYXRpb25FbmQoKTticmVhaztjYXNlIG0uUmVuZGVyTmV3VmlldzphKEEpLF8uYW5pbWF0ZS5hbmltYXRlQmFubmVyKCk/Xy5oaWRlUGFnaW5hdGVkVmlldyghMCk6Xy5oaWRlUGFnaW5hdGVkVmlldy5oaWRlU3ViVmlldyghMCksST1tLkFuaW1hdGVOZXdWaWV3LFI/c2V0VGltZW91dChfLnZpZXdfb25BbmltYXRpb25FbmQsMCk6Xy5vblNldExpZ2h0Qm94RmFkZUluKCEwKTticmVhaztjYXNlIG0uQW5pbWF0ZU5ld1ZpZXc6TCYmKGNsZWFyVGltZW91dChMKSxMPW51bGwpLEk9bS5FbmQsXy5oaWRlUGFnaW5hdGVkVmlldyghMSksXy5oaWRlUGFnaW5hdGVkVmlldy5oaWRlU3ViVmlldyghMSksXy5hbmltYXRlKEU/di5TbGlkZUluQmFjazp2LlNsaWRlSW5OZXh0KX19LGZ1bmN0aW9uKCl7Qj15JiZoLmlzQ1NTQW5pbWF0aW9uU3VwcG9ydGVkKCksUD1uZXcgZChwLGYsYik7dmFyIGU9bnVsbDtudWxsPT09UyYmbnVsbD09PXd8fChTPW51bGw9PT1TP3c6Uyx3PW51bGw9PT13P1M6dyxlPXt2aWV3SWQ6Uyxpc0luaXRpYWxTdGF0ZTohMH0sUC5yZXBsYWNlU3RhdGUoZSkpLHchPT1TJiYoZT17dmlld0lkOnd9LFAucHVzaFN0YXRlKGUpKSxudWxsIT09ZSYmcyhlLnZpZXdJZCl9KCl9ZnVuY3Rpb24gbyhlLHQpe3ZhciBuPVtdLG89W10scz17fSxjPTA7cmV0dXJuIHIudXRpbHMuYXJyYXlGb3JFYWNoKHQudGVtcGxhdGVOb2RlcyxmdW5jdGlvbihlKXt2YXIgdDtlLm5vZGVUeXBlPT09ZiYmKHQ9ZS5nZXRBdHRyaWJ1dGUoImRhdGEtdmlld2lkIiksbnVsbCE9PXQmJihuLnB1c2goZSksby5wdXNoKHIub2JzZXJ2YWJsZSgpKSx0PWlzTmFOKHQpP3Q6cGFyc2VJbnQodCksc1t0XT17aW5kZXg6YysrLG1ldGFkYXRhOmEoZSksdmlld1N0YXR1czp7aXNMYXp5OiExLGlzTG9hZGVkOnIub2JzZXJ2YWJsZSghMSl9fSkpfSksbmV3IGkoZSxuLG8scyl9ZnVuY3Rpb24gYShlKXt2YXIgdD17fSxuPVsid2lkZSIsImhpZGVMb2dvIiwiaGlkZURlZmF1bHRMb2dvIiwiZHluYW1pY0JyYW5kaW5nIiwiaGlkZUx3YURpc2NsYWltZXIiLCJzaG93SWRlbnRpdHlCYW5uZXIiLCJzaG93RmVkQ3JlZEJ1dHRvbiIsInNob3dGZWRDcmVkU2lnbnVwQnV0dG9ucyJdO3JldHVybiByLnV0aWxzLmFycmF5Rm9yRWFjaChuLGZ1bmN0aW9uKG4pe3ZhciBpPWUuZ2V0QXR0cmlidXRlKCJkYXRhLSIrbik7aSYmKHRbbl09InRydWUiPT09aS50b0xvd2VyQ2FzZSgpKX0pLHR9dmFyIHI9bigxKSxzPW4oNSksYz1uKDkpLGQ9big0NzApLGw9bigxMyksdT1uKDEyKSxwPXdpbmRvdyxmPTEsZz1zLlBhZ2luYXRlZFN0YXRlLlByZXZpb3VzLG09cy5BbmltYXRpb25TdGF0ZSx2PXMuQW5pbWF0aW9uTmFtZSxoPWMuSGVscGVyO3IuY29tcG9uZW50cy5yZWdpc3RlcigicGFnaW5hdGlvbi1jb250cm9sIix7dmlld01vZGVsOntjcmVhdGVWaWV3TW9kZWw6b30sdGVtcGxhdGU6big0NzEpLHN5bmNocm9ub3VzOiFwLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGMuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4ocC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDYpLG89big5KSxhPXdpbmRvdyxyPWkuT2JqZWN0LHM9by5IZWxwZXIsYz1zLmhpc3Rvcnk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe2lmKGUmJiJ1bmRlZmluZWQiIT10eXBlb2YgZS5zdGF0ZSYmbnVsbCE9PWUuc3RhdGUpe3ZhciB0PWUuc3RhdGU7dDxtP3UoKTpwKCksbT10LGYoby5nZXRTdGF0ZSgpKX19dmFyIG89dGhpcyxkPSJwb3BzdGF0ZSIsbD0hMSx1PWUscD10LGY9bixnPVtudWxsXSxtPTA7by5kaXNwb3NlPWZ1bmN0aW9uKCl7bCYmcy5yZW1vdmVFdmVudExpc3RlbmVyKGEsZCxpKX0sby5wdXNoU3RhdGU9ZnVuY3Rpb24oZSl7bSsrLGcuc3BsaWNlKG0sZy5sZW5ndGgtbSxyLmNsb25lKGUpKSxsJiZjLnB1c2hTdGF0ZShtLCIiKX0sby5yZXBsYWNlU3RhdGU9ZnVuY3Rpb24oZSl7Z1ttXT1yLmNsb25lKGUpfSxvLmdvQmFjaz1mdW5jdGlvbigpe20+MCYmKGw/YS5oaXN0b3J5LmJhY2soKTppKHtzdGF0ZTptLTF9KSl9LG8uZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbT5nLmxlbmd0aD9tPWcubGVuZ3RoLTE6bTwwJiYobT0wKSxudWxsPT09Z1ttXT9udWxsOnIuY2xvbmUoZ1ttXSl9LGZ1bmN0aW9uKCl7bD1zLmlzSGlzdG9yeVN1cHBvcnRlZCgpLGwmJihjLnJlcGxhY2VTdGF0ZShtLCIiKSxzLmFkZEV2ZW50TGlzdGVuZXIoYSxkLGkpKX0oKX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobig0NzIpLG4oMjM2KSwiIikrIiAtLT4gPGRpdiBkYXRhLWJpbmQ9XCJjc3M6IHsgJ3plcm8tb3BhY2l0eSc6IGhpZGVQYWdpbmF0ZWRWaWV3KCkgfVwiPjwhLS0ga28gaWY6IHNob3dJZGVudGl0eUJhbm5lcigpICYmIChzaGFyZWREYXRhLmRpc3BsYXlOYW1lIHx8IHN2ci5zUE9TVF9Vc2VybmFtZSkgLS0+IDxkaXYgZGF0YS1iaW5kPVwiY3NzOiB7XG4gICAgICAgICdhbmltYXRlJzogYW5pbWF0ZSgpICYmIGFuaW1hdGUuYW5pbWF0ZUJhbm5lcigpLFxuICAgICAgICAnc2xpZGUtb3V0LW5leHQnOiBhbmltYXRlLmlzU2xpZGVPdXROZXh0KCksXG4gICAgICAgICdzbGlkZS1pbi1uZXh0JzogYW5pbWF0ZS5pc1NsaWRlSW5OZXh0KCksXG4gICAgICAgICdzbGlkZS1vdXQtYmFjayc6IGFuaW1hdGUuaXNTbGlkZU91dEJhY2soKSxcbiAgICAgICAgJ3NsaWRlLWluLWJhY2snOiBhbmltYXRlLmlzU2xpZGVJbkJhY2soKSB9XCI+IDxkaXYgZGF0YS1iaW5kPVwiY29tcG9uZW50OiB7IG5hbWU6ICdpZGVudGl0eS1iYW5uZXItY29udHJvbCcsXG4gICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICB1c2VyVGlsZVVybDogc3ZyLnVybFByb2ZpbGVQaG90byxcbiAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogc2hhcmVkRGF0YS5kaXNwbGF5TmFtZSB8fCBzdnIuc1BPU1RfVXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgaXNCYWNrQnV0dG9uVmlzaWJsZTogaXNCYWNrQnV0dG9uVmlzaWJsZSgpLFxuICAgICAgICAgICAgICAgIGZvY3VzT25CYWNrQnV0dG9uOiBpc0JhY2tCdXR0b25Gb2N1c2VkKCksXG4gICAgICAgICAgICAgICAgYmFja0J1dHRvbkRlc2NyaWJlZEJ5OiBiYWNrQnV0dG9uRGVzY3JpYmVkQnkoKSB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBiYWNrQnV0dG9uQ2xpY2s6IGlkZW50aXR5QmFubmVyX29uQmFja0J1dHRvbkNsaWNrIH0gfVwiPiA8L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDxkaXYgY2xhc3M9cGFnaW5hdGlvbi12aWV3IGRhdGEtYmluZD1cImNzczoge1xuICAgICAgICAnaGFzLWlkZW50aXR5LWJhbm5lcic6IHNob3dJZGVudGl0eUJhbm5lcigpICYmIChzaGFyZWREYXRhLmRpc3BsYXlOYW1lIHx8IHN2ci5zUE9TVF9Vc2VybmFtZSksXG4gICAgICAgICd6ZXJvLW9wYWNpdHknOiBoaWRlUGFnaW5hdGVkVmlldy5oaWRlU3ViVmlldygpLFxuICAgICAgICAnYW5pbWF0ZSc6IGFuaW1hdGUoKSxcbiAgICAgICAgJ3NsaWRlLW91dC1uZXh0JzogYW5pbWF0ZS5pc1NsaWRlT3V0TmV4dCgpLFxuICAgICAgICAnc2xpZGUtaW4tbmV4dCc6IGFuaW1hdGUuaXNTbGlkZUluTmV4dCgpLFxuICAgICAgICAnc2xpZGUtb3V0LWJhY2snOiBhbmltYXRlLmlzU2xpZGVPdXRCYWNrKCksXG4gICAgICAgICdzbGlkZS1pbi1iYWNrJzogYW5pbWF0ZS5pc1NsaWRlSW5CYWNrKCkgfVwiPjwhLS0ga28gZm9yZWFjaDogdmlld3MgLS0+PCEtLSBrbyBpZjogJHBhcmVudC5jdXJyZW50Vmlld0luZGV4KCkgPT09ICRpbmRleCgpIC0tPjwhLS0ga28gaWY6ICRwYXJlbnQuaXNWaWV3TG9hZGVkIC0tPiA8IS0tIGtvIHRlbXBsYXRlOiB7IG5vZGVzOiBbJGRhdGFdLCBkYXRhOiAkcGFyZW50IH0gLS0+PCEtLSAva28gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBpZm5vdDogJHBhcmVudC5pc1ZpZXdMb2FkZWQgLS0+IDxkaXYgY2xhc3M9XCJyb3cgcHJvZ3Jlc3MtY29udGFpbmVyXCI+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6ICdtYXJjaGluZy1hbnRzLWNvbnRyb2wnLCBhcmlhTGFiZWw6IHN0clsnV0ZfU1RSX1Byb2dyZXNzVGV4dCddXCI+PC9kaXY+IDwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPiA8L2Rpdj4gPC9kaXY+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7dmFyIHQ9dGhpcyxuPWUuZGlzcGxheU5hbWUsaT1lLmlzQmFja0J1dHRvblZpc2libGUsbz1lLmJhY2tCdXR0b25JZCxhPWUuYmFja0J1dHRvbkRlc2NyaWJlZEJ5LHM9ZS5mb2N1c09uQmFja0J1dHRvbnx8ITE7dC5vbkJhY2tCdXR0b25DbGljaz1yLmNyZWF0ZSgpLHQudW5zYWZlX2Rpc3BsYXlOYW1lPW51bGwsdC5pc0JhY2tCdXR0b25WaXNpYmxlPWksdC5iYWNrQnV0dG9uSWQ9byx0LmJhY2tCdXR0b25EZXNjcmliZWRCeT1hLHQuZm9jdXNPbkJhY2tCdXR0b249cyx0LmJhY2tCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe3Qub25CYWNrQnV0dG9uQ2xpY2soKX0sZnVuY3Rpb24oKXt0LnVuc2FmZV9kaXNwbGF5TmFtZT1jLmh0bWxVbmVzY2FwZShuKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oMTMpLHM9d2luZG93LGM9YS5IZWxwZXI7by5jb21wb25lbnRzLnJlZ2lzdGVyKCJpZGVudGl0eS1iYW5uZXItY29udHJvbCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oNDczKSxzeW5jaHJvbm91czohcy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKHMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMjA3KSwiIikrIiAtLT4gPGRpdiBjbGFzcz1pZGVudGl0eUJhbm5lcj48IS0tIGtvIGlmOiBpc0JhY2tCdXR0b25WaXNpYmxlIC0tPiA8YnV0dG9uIHR5cGU9YnV0dG9uIGNsYXNzPWJhY2tCdXR0b24gZGF0YS1iaW5kPVwiXG4gICAgICAgIGF0dHI6IHsgJ2lkJzogYmFja0J1dHRvbklkIHx8ICdpZEJ0bl9CYWNrJyB9LFxuICAgICAgICBhcmlhTGFiZWw6IHN0clsnQ1RfSFJEX1NUUl9TcGxpdHRlcl9CYWNrJ10sXG4gICAgICAgIGFyaWFEZXNjcmliZWRCeTogYmFja0J1dHRvbkRlc2NyaWJlZEJ5LFxuICAgICAgICBjbGljazogYmFja0J1dHRvbl9vbkNsaWNrLFxuICAgICAgICBoYXNGb2N1czogZm9jdXNPbkJhY2tCdXR0b25cIj48IS0tIGtvIGlmbm90OiBzdnIuZklzUlRMTWFya2V0IC0tPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDQ3NCkrIiBzdmdzcmM9IituKDQ3NSkrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+IDxpbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbig0NzYpKyIgc3Znc3JjPSIrbig0NzcpKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IHN2ci5mSXNSVExNYXJrZXQgLS0+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oNDc4KSsiIHN2Z3NyYz0iK24oNDc5KSsiIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9IituKDQ4MCkrIiBzdmdzcmM9IituKDQ4MSkrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+PCEtLSAva28gLS0+PCEtLSAva28gLS0+IDwvYnV0dG9uPjwhLS0gL2tvIC0tPiA8ZGl2IGlkPWRpc3BsYXlOYW1lIGNsYXNzPWlkZW50aXR5IGRhdGEtYmluZD1cInRleHQ6IHVuc2FmZV9kaXNwbGF5TmFtZSwgYXR0cjogeyAndGl0bGUnOiB1bnNhZmVfZGlzcGxheU5hbWUgfVwiPjwvZGl2PiA8L2Rpdj4ifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfbGVmdF93aGl0ZV84Yzk1OGYyMTBmOWQxNzQ2MjFjMmE1ZjQzNmJlNzE0Ny5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfbGVmdF93aGl0ZV9lM2M3MTBiZTMwNTIyNTNhZDdjYWE1M2MyNzA3NzY4My5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfbGVmdF83Y2MwOTZkYTZhYTJkYmEzZjgxZmNjMWM4MjYyMTU3Yy5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfbGVmdF9hOWNjMjgyNGVmMzUxN2I2YzQxNjBkY2Y4ZmY3ZDQxMC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfcmlnaHRfd2hpdGVfNDBjZWY3YjAxNjI2YTc4ZGUwM2EyODJjNjg5OTc5YmUucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2Fycm93X3JpZ2h0X3doaXRlXzA0MjQzYzllYTRmMTk0YTljODJlZGUyOTBhZDg0MzYzLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9hcnJvd19yaWdodF9kZGJhNGQ5NjI5Y2I1MDFhODhhNmE0OWI3ZWM2MGMyZC5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvYXJyb3dfcmlnaHRfNjg2YTczOTlhZmRhZjRkNWYwNjBlZWIwOGIzMjBjNDIuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdChlLHQpe3ZhciBvPVBlP24oZSk6aSh0KTtyZXR1cm4gby50aGVuKHMsYyl9ZnVuY3Rpb24gbihlKXtyZXR1cm4gbmV3IGwoZnVuY3Rpb24odCxuKXtMKCEwKTt2YXIgaT17T3JpZ2luYWxSZXF1ZXN0OlksRmxvd1Rva2VuOk5lKCl9O2UmJihpLkNoYW5uZWw9ZSk7dmFyIG89bmV3IGcoe2NoZWNrQXBpQ2FuYXJ5OnNlfSk7by5Kc29uKEosaSx0LG4sYS5EZWZhdWx0UmVxdWVzdFRpbWVvdXQpfSl9ZnVuY3Rpb24gaShlKXtyZXR1cm4gbmV3IGwoZnVuY3Rpb24odCxuKXtMKCEwKTt2YXIgaT17cHVycG9zZTplLGZsb3dUb2tlbjpOZSgpLHVuYXV0aFNlc3Npb25JZDp3ZSxsY2lkOlRlLHN1Y2Nlc3NDYWxsYmFjazp0LGZhaWx1cmVDYWxsYmFjazpufSxvPW5ldyBfKGkpO28uc2VuZFJlcXVlc3QoKX0pfWZ1bmN0aW9uIHMoZSl7TCghMSksIVBlJiZlLmdldFJlc3BvbnNlSnNvbiYmKGU9ZS5nZXRSZXNwb25zZUpzb24oKSk7dmFyIHQ9e3N1Y2Nlc3M6ITAsdXNlckNvZGU6ZS5Vc2VyQ29kZSxkZXZpY2VDb2RlOmUuRGV2aWNlQ29kZXx8ZS5TZXNzaW9uTG9va3VwS2V5fTtyZXR1cm4gdH1mdW5jdGlvbiBjKGUpe2lmKEwoITEpLFBlJiZlJiZlLmVycm9yKXN3aXRjaChlLmVycm9yLmNvZGUpe2Nhc2Ugay5BdXRoRmFpbHVyZTpVLnVzZXJuYW1lVGV4dGJveC5lcnJvci5zZXROb25CbG9ja2luZ0Vycm9yKFcuQ1RfUFdEX1NUUl9FcnJvcl9GbG93VG9rZW5FeHBpcmVkKTticmVhaztkZWZhdWx0OlUudXNlcm5hbWVUZXh0Ym94LmVycm9yLnNldE5vbkJsb2NraW5nRXJyb3IoVy5DVF9QV0RfU1RSX0Vycm9yX0dldE9uZVRpbWVDb2RlRXJyb3IpfWVsc2UgVS51c2VybmFtZVRleHRib3guZXJyb3Iuc2V0Tm9uQmxvY2tpbmdFcnJvcihXLkNUX1BXRF9TVFJfRXJyb3JfR2V0T25lVGltZUNvZGVFcnJvcik7cmV0dXJuIFUuc2V0RGVmYXVsdEZvY3VzKCkse3N1Y2Nlc3M6ITF9fWZ1bmN0aW9uIHYoKXt2YXIgZTtyZXR1cm4gaj92b2lkIFUudXNlcm5hbWVUZXh0Ym94LnZhbHVlKHguaHRtbFVuZXNjYXBlKGopKTp2b2lkKHEmJjAhPT1xLmxlbmd0aCYmKFUudXNlcm5hbWVUZXh0Ym94LnZhbHVlKHFbMF0pLHEubGVuZ3RoPjEmJihvLnV0aWxzLmFycmF5Rm9yRWFjaChxLGZ1bmN0aW9uKGUpe1UucHJlZmlsbE5hbWVzLnB1c2goe3RleHQ6ZSx2YWx1ZTplfSl9KSxVLnByZWZpbGxOYW1lcy5wdXNoKHt0ZXh0OlcuQ1RfV1BJTF9TVFJfQW5kcm9pZF9Vc2VEaWZmZXJlbnRBZGRyZXNzLHZhbHVlOm51bGx9KSxlPVUudXNlcm5hbWVUZXh0Ym94LnZhbHVlLnN1YnNjcmliZShmdW5jdGlvbih0KXtudWxsPT09dCYmKFUucHJlZmlsbE5hbWVzLnJlbW92ZUFsbCgpLGUuZGlzcG9zZSgpLEZlKCExKSxVLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgiIiksVS51c2VybmFtZVRleHRib3guZm9jdXNlZCghMCkpfSkpKSl9ZnVuY3Rpb24gaCgpe1UudXNlcm5hbWVUZXh0Ym94LnZhbHVlLnN1YnNjcmliZShmdW5jdGlvbihlKXtlJiYoRWU/ZS50b0xvd2VyQ2FzZSgpIT09RWUudG9Mb3dlckNhc2UoKSYmVS5wYXNzd29yZEJyb3dzZXJQcmVmaWxsKG51bGwpOkVlPWUpfSl9ZnVuY3Rpb24gVCgpe2lmKCFGZSgpKXt2YXIgZT1WfHxudWxsO3JldHVybiBWPW51bGwsZX1yZXR1cm4gQSgpfWZ1bmN0aW9uIEEoKXt2YXIgZT1VLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpO3JldHVybiAkJiZlJiZlLmluZGV4T2YoIlxcIik+MD9XLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZFVzZXJuYW1lX1dpbmRvd3NGb3JtYXQ6ZSYmKEkuaXNFbWFpbEFkZHJlc3MoZSl8fEsmJkkuaXNQaG9uZU51bWJlcihlKXx8eiYmSS5pc1NreXBlTmFtZShlKSk/SS5pc0VtYWlsQWRkcmVzcyhlKXx8eiYmSS5pc1NreXBlTmFtZShlKXx8IUkuaXNQaG9uZU51bWJlcihlKXx8ZS5tYXRjaChhLlJlZ2V4LlBob25lTnVtYmVyVmFsaWRhdGlvbik/bnVsbDpXLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZFBob25lRm9ybWF0dGluZzpXLkNUX1BXRF9TVFJfRXJyb3JfSW52YWxpZFVzZXJuYW1lfWZ1bmN0aW9uIEIoZSl7b2UmJkQuaXNDb29raWVTYWZlVmFsdWUoZSkmJkQud3JpdGVXaXRoRXhwaXJhdGlvbihvZS5uYW1lLGUsb2Uuc2VjdXJlLEQucGVyc2lzdERhdGUsb2UuZG9tYWluLG9lLnBhdGgpfWZ1bmN0aW9uIEwoZSl7VS5pc1JlcXVlc3RQZW5kaW5nKGUpLFUub25TZXRQZW5kaW5nUmVxdWVzdChlKX1mdW5jdGlvbiBGKGUpe1Uub25SZWRpcmVjdChlLnJlZGlyZWN0VXJsLGUucmVkaXJlY3RQb3N0UGFyYW1zLGUuaXNJZHBSZWRpcmVjdCl9ZnVuY3Rpb24gTigpe1UuZmlkb0xpbmtUZXh0KFcuQ1RfUFdEX1NUUl9Td2l0Y2hUb0ZpZG9Dcm9zc1BsYXRmb3JtX0xpbmspLHUudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbihTLmlzUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCkudGhlbihudWxsLGZ1bmN0aW9uKCl7cmV0dXJuITF9KS50aGVuKGZ1bmN0aW9uKGUpe2UmJihVLmZpZG9MaW5rVGV4dChXLkNUX1BXRF9TVFJfU3dpdGNoVG9GaWRvX0xpbmspLFUuaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGUoITApKX0pKX1mdW5jdGlvbiBPKGUpe1UuaGFzRmlkbyhlKSxVLmF2YWlsYWJsZUNyZWRzV2l0aG91dFVzZXJuYW1lKFtdLmNvbmNhdCghdGUmJmllP3tjcmVkVHlwZTp5LlJlbW90ZUxvZ2lufTpbXSxlP3tjcmVkVHlwZTp5LkZpZG99OltdLGNlJiZwZT97Y3JlZFR5cGU6eS5PdGhlck1pY3Jvc29mdElkcEZlZGVyYXRpb24scmVkaXJlY3RVcmw6Y2V9OltdLGRlJiYhcGUmJmhlIT09eS5MaW5rZWRJbj97Y3JlZFR5cGU6eS5MaW5rZWRJbixyZWRpcmVjdFVybDpkZX06W10sbGUmJiFwZSYmaGUhPT15LkdpdEh1Yj97Y3JlZFR5cGU6eS5HaXRIdWIscmVkaXJlY3RVcmw6bGUsc2hvd25Pbmx5T25QaWNrZXI6YmV9OltdLHVlP3tjcmVkVHlwZTp5Lkdvb2dsZSxyZWRpcmVjdFVybDp1ZX06W10sZmU/e2NyZWRUeXBlOnkuRmFjZWJvb2sscmVkaXJlY3RVcmw6ZmV9OltdKSksZSYmTigpfXZhciBVPXRoaXMsTT1lLnNlcnZlckRhdGEsVj1lLnNlcnZlckVycm9yLEg9ZS5pc0luaXRpYWxWaWV3LGo9ZS5kaXNwbGF5TmFtZSxxPWUucHJlZmlsbE5hbWVzLEc9ZS5mbG93VG9rZW4sVz1NLnN0cixLPU0uZkFsbG93UGhvbmVTaWduSW58fE0uZkFsbG93UGhvbmVJbnB1dCx6PU0uZkFsbG93U2t5cGVOYW1lTG9naW4sJD1NLmZDaGVja1dpbmRvd3NVc2VybmFtZUZvcm1hdCxYPU0udXJsUmVzZXRQYXNzd29yZCxKPU0udXJsR2V0T25lVGltZUNvZGUsUT1NLnVybFNraXBadGQsWT1NLnNDdHgsWj1NLnN0YXRpY1RlbmFudEJyYW5kaW5nLGVlPU0uaUFsbG93ZWRJZGVudGl0aWVzLHRlPU0uc1JlbW90ZUNvbm5lY3RBcHBOYW1lLG5lPU0uc1JlbW90ZUNsaWVudElwLGllPU0ucmVtb3RlTG9naW5Db25maWcsb2U9TS51c2VyUm91dGluZ0Nvb2tpZUNvbmZpZyxhZT1NLmZBbGxvd0NhbmNlbCxyZT0hIU0uZklzRmlkb1N1cHBvcnRlZCxzZT1NLmZDaGVja0FwaUNhbmFyeSxjZT1NLnVybEdvVG9BQURFcnJvcixkZT1NLnVybExpbmtlZEluRmVkLGxlPU0udXJsR2l0SHViRmVkLHVlPU0udXJsR29vZ2xlRmVkLHBlPU0udXJsT3RoZXJJZHBTaWdudXAsZmU9TS51cmxGYWNlYm9va0ZlZCxnZT0hIU0uZklzVG9rZW5Ccm9rZXIsbWU9ISFNLmZQcmVmZXJBc3NvY2lhdGUsdmU9TS5zWnRkVGVuYW50TmFtZSxoZT1NLmlQcm9tb3RlZEZlZENyZWRUeXBlLGJlPSEhTS5mU2hvd1NpZ25JbldpdGhHaXRIdWJPbmx5T25DcmVkUGlja2VyLF9lPSEhTS5mU2hvd1NpZ25JbldpdGhGaWRvT25Vc2VybmFtZVZpZXcsU2U9ISFNLmZTaG93T2ZmbGluZUFjY291bnRMZWFybk1vcmUsd2U9TS5zVW5hdXRoU2Vzc2lvbklELFRlPU0uaVJlcXVlc3RMQ0lELENlPSEhTS5mSGlkZU9mZmxpbmVBY2NvdW50TmV3VGl0bGVTdHJpbmdQcm8seWU9TS5vR2V0Q3JlZFR5cGVSZXN1bHQsa2U9TS5pT2ZmbGluZUFjY291bnROZXdTdHJpbmdzVmFyaWFudElkLHhlPU0udXJsU2lnblVwLERlPU0udXJsQWFkU2lnbnVwLFBlPSEhSixJZT17fSxFZT1udWxsLFJlPSExLEFlPW51bGwsQmU9e30sTGU9e30sRmU9by5vYnNlcnZhYmxlKCExKSxOZT1vLm9ic2VydmFibGUoRykuZXh0ZW5kKHtmbG93VG9rZW5VcGRhdGU6TX0pO1Uub25Td2l0Y2hWaWV3PXAuY3JlYXRlKCksVS5vblJlZGlyZWN0PXAuY3JlYXRlKCksVS5vblNldFBlbmRpbmdSZXF1ZXN0PXAuY3JlYXRlKCksVS5vblJlZ2lzdGVyRGlhbG9nPXAuY3JlYXRlKCksVS5vblVucmVnaXN0ZXJEaWFsb2c9cC5jcmVhdGUoKSxVLm9uU2hvd0RpYWxvZz1wLmNyZWF0ZSgpLFUudXNlcm5hbWVUZXh0Ym94PW5ldyBtKGYuZXJyb3JDb21wdXRlZChUKSksVS5wYXNzd29yZEJyb3dzZXJQcmVmaWxsPW8ub2JzZXJ2YWJsZSgpLFUucHJlZmlsbE5hbWVzPW8ub2JzZXJ2YWJsZUFycmF5KCksVS5pc1JlcXVlc3RQZW5kaW5nPW8ub2JzZXJ2YWJsZSghMSksVS5pc0JhY2tCdXR0b25WaXNpYmxlPW8ub2JzZXJ2YWJsZSghMSksVS5zZWNvbmRhcnlCdXR0b25UZXh0PW8ub2JzZXJ2YWJsZSgpLFUuaXNTa2lwTGlua1Zpc2libGU9by5vYnNlcnZhYmxlKCExKSxVLnNob3dUaWxlTG9nbz1vLm9ic2VydmFibGUoITEpLFUuaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGU9by5vYnNlcnZhYmxlKCExKSxVLmZpZG9MaW5rVGV4dD1vLm9ic2VydmFibGUoKSxVLmhhc0ZpZG89by5vYnNlcnZhYmxlKCExKSxVLmF2YWlsYWJsZUNyZWRzV2l0aG91dFVzZXJuYW1lPW8ub2JzZXJ2YWJsZUFycmF5KFtdKSxVLnRlbmFudEJyYW5kaW5nPW51bGwsVS5pc0luaXRpYWxWaWV3PUgsVS5wYWdlRGVzY3JpcHRpb249bnVsbCxVLnVuc2FmZV9wYWdlVGl0bGU9bnVsbCxVLnVuc2FmZV9zdWJIZWFkZXI9bnVsbCxVLnNob3dGaWRvTGlua0lubGluZT1fZSxVLnNhdmVTaGFyZWREYXRhPWZ1bmN0aW9uKGUpe3ZhciB0PUllLnJlc3VsdCxuPVJlPyIiOlUudXNlcm5hbWVUZXh0Ym94LnZhbHVlKCk7ZS5mbG93VG9rZW49TmUoKSxlLnVzZXJuYW1lPUkuY2xlYW5zZVVzZXJuYW1lKG4pLGUuZGlzcGxheU5hbWU9bixlLnBhc3N3b3JkQnJvd3NlclByZWZpbGw9VS5wYXNzd29yZEJyb3dzZXJQcmVmaWxsKCksZS5yZW1vdGVMb2dpblVzZXJDb2RlPXQ/dC51c2VyQ29kZTpudWxsLGUucmVtb3RlTG9naW5EZXZpY2VDb2RlPXQ/dC5kZXZpY2VDb2RlOm51bGwsCmUucHJvb2ZDb25maXJtYXRpb249IiIsZS51c2VFdmljdGVkQ3JlZGVudGlhbHM9ITEsZS5zaG93Q3JlZFZpZXdCcmFuZGluZ0Rlc2M9ITEsZS5pc1NpZ251cFBvc3Q9ITEsUmUmJihlLmF2YWlsYWJsZUNyZWRzPVUuYXZhaWxhYmxlQ3JlZHNXaXRob3V0VXNlcm5hbWUoKSksby51dGlscy5leHRlbmQoZSxCZSl9LFUuZ2V0U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm57dW5zYWZlX2Rpc3BsYXlOYW1lOlUudXNlcm5hbWVUZXh0Ym94LnZhbHVlKCksZ2N0UmVxdWVzdEhlbHBlclN0YXRlOkFlLmdldFN0YXRlKCl9fSxVLnJlc3RvcmVTdGF0ZT1mdW5jdGlvbihlKXtlJiYoQWUucmVzdG9yZVN0YXRlKGUuZ2N0UmVxdWVzdEhlbHBlclN0YXRlKSxVLnVzZXJuYW1lVGV4dGJveC52YWx1ZShlLnVuc2FmZV9kaXNwbGF5TmFtZSkpfSxVLnNldERlZmF1bHRGb2N1cz1mdW5jdGlvbigpe1UudXNlcm5hbWVUZXh0Ym94LmZvY3VzZWQoITApfSxVLnByaW1hcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe2lmKEZlKCEwKSxVLnVzZXJuYW1lVGV4dGJveC5lcnJvci5pc0Jsb2NraW5nKCkpcmV0dXJuIHZvaWQgVS5zZXREZWZhdWx0Rm9jdXMoKTt2YXIgZT1VLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpO0IoZSksTCghMCksdS50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKEFlLnNlbmRBc3luYyhlLE5lKCkpLnRoZW4oZnVuY3Rpb24oZSl7c3dpdGNoKEwoITEpLGUuZmxvd1Rva2VuJiZOZShlLmZsb3dUb2tlbiksZS5hY3Rpb24pe2Nhc2UgUi5TaG93RXJyb3I6VS51c2VybmFtZVRleHRib3guZXJyb3Iuc2V0RXJyb3IoZS5lcnJvcixlLmlzQmxvY2tpbmdFcnJvciksTGU9by51dGlscy5leHRlbmQoZS5zaGFyZWREYXRhLGUudmlld1BhcmFtc3x8e30pLFUuc2V0RGVmYXVsdEZvY3VzKCk7YnJlYWs7Y2FzZSBSLlN3aXRjaFZpZXc6QmU9by51dGlscy5leHRlbmQoZS5zaGFyZWREYXRhLGUudmlld1BhcmFtc3x8e30pLGUudmlld0lkPT09Qy5SZW1vdGVMb2dpblBvbGxpbmc/VS5yZW1vdGVMb2dpbl9vbkNsaWNrKCk6VS5vblN3aXRjaFZpZXcoZS52aWV3SWQpO2JyZWFrO2Nhc2UgUi5SZWRpcmVjdDpGKGUpfX0pKX0sVS5zZWNvbmRhcnlCdXR0b25fb25DbGljaz1mdW5jdGlvbigpe1NlPyh3JiZ3LmxvZ0V2ZW50JiZ3LmxvZ0V2ZW50KCJJZGVudGl0eS5PT0JFLkxvZ2luLkxlYXJuTW9yZU9mZmxpbmVBY2NvdW50LkNsaWNrZWQiKSxVLm9uU3dpdGNoVmlldyhDLkxlYXJuTW9yZU9mZmxpbmVBY2NvdW50KSk6VS5vblN3aXRjaFZpZXcoQy5QcmV2aW91cyl9LFUuc2lnbnVwX29uQ2xpY2s9ZnVuY3Rpb24oKXt4ZT9GKEFlLmdldFNpZ251cFJlZGlyZWN0R2N0UmVzdWx0KFUudXNlcm5hbWVUZXh0Ym94LnZhbHVlKCkpKTpVLm9uU3dpdGNoVmlldyhDLlNpZ251cFVzZXJuYW1lKX0sVS5hYWRTaWdudXBfb25DbGljaz1mdW5jdGlvbigpe1Uub25SZWRpcmVjdChQLmFwcGVuZE9yUmVwbGFjZShEZSwiZW1haWwiLGVuY29kZVVSSUNvbXBvbmVudChVLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpKSkpfSxVLm90aGVySWRwTG9naW5fb25DbGljaz1mdW5jdGlvbigpe0YoQWUuZ2V0T3RoZXJJZHBSZWRpcmVjdEdjdFJlc3VsdChVLnVzZXJuYW1lVGV4dGJveC52YWx1ZSgpKSl9LFUuc2VuZE90Y0xpbmtfb25DbGljaz1mdW5jdGlvbigpe3UudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbih0KGIuQ2hhbm5lbC5FbWFpbEFkZHJlc3MpLnRoZW4oZnVuY3Rpb24oZSl7ZS5zdWNjZXNzJiYoQmU9TGUsVS5vblN3aXRjaFZpZXcoQy5PbmVUaW1lQ29kZSkpfSkpfSxVLnNraXBfb25DbGljaz1mdW5jdGlvbigpe3cmJncuaGFuZGxlT25Ta2lwJiYody5oYW5kbGVPblNraXAoTSksTCghMCkpfSxVLnNraXBadGRfb25DbGljaz1mdW5jdGlvbigpe1Uub25SZWRpcmVjdChRKX0sVS5wcml2YWN5X29uQ2xpY2s9ZnVuY3Rpb24oKXtVLm9uU3dpdGNoVmlldyhDLlZpZXdBZ3JlZW1lbnQpfSxVLnRvdV9vbkNsaWNrPWZ1bmN0aW9uKCl7VS5vblN3aXRjaFZpZXcoQy5UZXJtc09mVXNlKX0sVS5yZW1vdGVMb2dpbl9vbkNsaWNrPWZ1bmN0aW9uKCl7dS50aHJvd1VuaGFuZGxlZEV4Y2VwdGlvbk9uUmVqZWN0aW9uKHQobnVsbCxiLlB1cnBvc2UuWGJveFJlbW90ZUNvbm5lY3QpLnRoZW4oZnVuY3Rpb24oZSl7ZS5zdWNjZXNzJiYoSWUucmVzdWx0PWUsVS5vblN3aXRjaFZpZXcoQy5SZW1vdGVMb2dpblBvbGxpbmcpKX0pKX0sVS5sZWFybk1vcmVfb25DbGljaz1mdW5jdGlvbigpe1Uub25Td2l0Y2hWaWV3KEMuTGVhcm5Nb3JlKX0sVS5jYW50QWNjZXNzQWNjb3VudF9vbkNsaWNrPWZ1bmN0aW9uKCl7ZWU9PT1FLkJvdGg/VS5vblN3aXRjaFZpZXcoQy5SZXNldFBhc3N3b3JkU3BsaXR0ZXIpOlUub25SZWRpcmVjdChYKX0sVS5zd2l0Y2hUb0ZpZG9DcmVkTGlua19vbkNsaWNrPWZ1bmN0aW9uKCl7VS5vblN3aXRjaFZpZXcoQy5GaWRvKX0sVS5ub1VzZXJuYW1lQ3JlZFN3aXRjaExpbmtfb25Td2l0Y2hWaWV3PWZ1bmN0aW9uKGUpe3N3aXRjaChSZT0hMCxlKXtjYXNlIEMuUmVtb3RlTG9naW5Qb2xsaW5nOlUucmVtb3RlTG9naW5fb25DbGljaygpO2JyZWFrO2RlZmF1bHQ6VS5vblN3aXRjaFZpZXcoZSl9fSxVLnRpbGVMb2dvX29uTG9hZD1mdW5jdGlvbigpe1Uuc2hvd1RpbGVMb2dvKCEwKSx3JiZ3LmxvZ0V2ZW50JiZ3LmxvZ0V2ZW50KCJJZGVudGl0eS5Vc2VybmFtZVZpZXcuQnJhbmRpbmcuVGlsZUxvZ29Mb2FkZWQiKX0sZnVuY3Rpb24oKXtpZihBZT1uZXcgZChNKSx5ZSYmeWUuVXNlcm5hbWUmJkFlLmNhY2hlUmVzcG9uc2UoeWUuVXNlcm5hbWUseWUpLHUudGhyb3dVbmhhbmRsZWRFeGNlcHRpb25PblJlamVjdGlvbih4LmlzRmlkb1N1cHBvcnRlZEFzeW5jKHJlKS50aGVuKE8sZnVuY3Rpb24oKXtPKCExKX0pKSxVLnRlbmFudEJyYW5kaW5nPXIubG9hZFRlbmFudEJyYW5kaW5nKFopLHZlKXt2YXIgZT14Lmh0bWxVbmVzY2FwZSh2ZSk7VS51bnNhZmVfcGFnZVRpdGxlPUkuZm9ybWF0KFcuQ1RfV2luMTBfU1RSX1VzZXJuYW1lX1RpdGxlX1dpdGhPcmdEb21haW4sZSksVS51bnNhZmVfc3ViSGVhZGVyPUkuZm9ybWF0KFcuQ1RfV2luMTBfU1RSX1VzZXJuYW1lX1N1YkhlYWRlcl9XaXRoT3JnRG9tYWluLGUpfWVsc2UgVS51bnNhZmVfcGFnZVRpdGxlPVcuV0ZfU1RSX0hlYWRlckRlZmF1bHRfVGl0bGVfV2l0aF9CcmFuZCxVLnVuc2FmZV9zdWJIZWFkZXI9Vy5DVF9XaW4xMF9TVFJfU2lnbkluUGFnZV9Vc2VybmFtZUxhYmVsO2lmKFcuV0ZfU1RSX0RlZmF1bHRfRGVzYyYmKFUucGFnZURlc2NyaXB0aW9uPUkuZm9ybWF0KFcuV0ZfU1RSX0RlZmF1bHRfRGVzYyx0ZSxuZSkpLHYoKSxoKCksdyYmKHcuaXNCYWNrQnV0dG9uVmlzaWJsZSYmdy5oYW5kbGVCYWNrQnV0dG9uJiZ3LmlzQmFja0J1dHRvblZpc2libGUoTSxmdW5jdGlvbihlKXtlP3cuaGFuZGxlQmFja0J1dHRvbih3LmhhbmRsZU9uRmluYWxCYWNrLmJpbmQodykpOncuaGFuZGxlQmFja0J1dHRvbihudWxsKX0pLHcuaXNTa2lwTGlua1Zpc2libGU/dy5pc1NraXBMaW5rVmlzaWJsZShNLGZ1bmN0aW9uKGUpe1UuaXNTa2lwTGlua1Zpc2libGUoZSl9KTpVLmlzU2tpcExpbmtWaXNpYmxlKCEwKSx3LnNob3dLZXlib2FyZCYmdy5zaG93S2V5Ym9hcmQoITApLHcubG9nRXZlbnQpKXt2YXIgdD1VLnRlbmFudEJyYW5kaW5nJiZVLnRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dD8iMSI6IjAiO3cubG9nRXZlbnQoIklkZW50aXR5LlVzZXJuYW1lVmlldy5CcmFuZGluZy5IYXNCb2lsZXJQbGF0ZVRleHQiLHQpO3ZhciBuPVUudGVuYW50QnJhbmRpbmcmJlUudGVuYW50QnJhbmRpbmcuVGlsZUxvZ28/IjEiOiIwIjtpZih3LmxvZ0V2ZW50KCJJZGVudGl0eS5Vc2VybmFtZVZpZXcuQnJhbmRpbmcuSGFzVGlsZUxvZ28iLG4pLHcubG9nRXZlbnQoIklkZW50aXR5LkZsaWdodC5Jc0VuYWJsZWRIaWRlT2ZmbGluZUFjY291bnROZXdUaXRsZVN0cmluZ1BybyIsQ2UpLHcubG9nRXZlbnQoIklkZW50aXR5LkZsaWdodC5IaWRlT2ZmbGluZUFjY291bnRTdHJpbmdFeHBlcmltZW50IixrZSksZ2Upe3ZhciBpPW1lPyJNU0EuQXNzb2NpYXRlVXBzZWxsLlVzZXJuYW1lUGFnZUxvYWQiOiJNU0EuQ29ubmVjdFVwc2VsbC5Vc2VybmFtZVBhZ2VMb2FkIjt3LmxvZ0V2ZW50KGkpfX1IP3cmJncuaXNCYWNrQnV0dG9uU3VwcG9ydGVkT25Jbml0aWFsVmlldz93LmlzQmFja0J1dHRvblN1cHBvcnRlZE9uSW5pdGlhbFZpZXcoTSxmdW5jdGlvbihlLHQpe1UuaXNCYWNrQnV0dG9uVmlzaWJsZShlKSx0P1Uuc2Vjb25kYXJ5QnV0dG9uVGV4dChXLkNUX1BXRF9TVFJfQ2FuY2VsX0J1dHRvbik6U2UmJih3LmxvZ0V2ZW50JiZ3LmxvZ0V2ZW50KCJJZGVudGl0eS5PT0JFLkxvZ2luLkxlYXJuTW9yZU9mZmxpbmVBY2NvdW50LlZpc2libGUiKSxVLnNlY29uZGFyeUJ1dHRvblRleHQoVy5DVF9XaW4xMF9TVFJfT2ZmbGluZUFjY291bnRMZWFybk1vcmUpKX0pOmFlJiZVLmlzQmFja0J1dHRvblZpc2libGUoITApOlUuaXNCYWNrQnV0dG9uVmlzaWJsZSghMCl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDE4KSxzPW4oOSksYz1uKDYpLGQ9bigxNzMpLGw9bigxMSksdT1uKDEyKSxwPW4oMTMpLGY9bigyMjYpLGc9bigxNjcpLG09bigxOTQpLHY9bigxNiksaD1uKDE5MyksYj1uKDIwMyksXz1uKDIwMiksUz1uKDIwMSksdz1udWxsLFQ9d2luZG93LEM9YS5QYWdpbmF0ZWRTdGF0ZSx5PWEuQ3JlZGVudGlhbFR5cGUsaz1hLkFwaUVycm9yQ29kZXMseD1zLkhlbHBlcixEPXMuQ29va2llcyxQPXMuUXVlcnlTdHJpbmcsST1jLlN0cmluZyxFPXYuQWxsb3dlZElkZW50aXRpZXNUeXBlLFI9ZC5HY3RSZXN1bHRBY3Rpb247aC5hcHBseUV4dGVuZGVycyhvKSxvLmNvbXBvbmVudHMucmVnaXN0ZXIoImxvZ2luLXBhZ2luYXRlZC11c2VybmFtZS12aWV3Iix7dmlld01vZGVsOmksdGVtcGxhdGU6big0ODMpLHN5bmNocm9ub3VzOiFULlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHMuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oVC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTYpLG4oMTk4KSxuKDIwMCksbigyOTUpLG4oMjA1KSwiIikrIiAtLT4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2hlYWRlci1jb250cm9sJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICB0aXRsZTogc3RyWydXRl9TVFJfSGVhZGVyRGVmYXVsdF9UaXRsZSddIH0gfVwiPiA8L2Rpdj48IS0tIGtvIGlmOiBwYWdlRGVzY3JpcHRpb24gJiYgIXN2ci5mSGlkZUxvZ2luRGVzYyAtLT4gPGRpdiBjbGFzcz1cInJvdyB0ZXh0LWJvZHkgbm8tbWFyZ2luLXRvcFwiPiA8ZGl2IGlkPWxvZ2luRGVzY3JpcHRpb24gZGF0YS1iaW5kPVwiXG4gICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IHBhZ2VEZXNjcmlwdGlvbixcbiAgICAgICAgY2hpbGRCaW5kaW5nczoge1xuICAgICAgICAgICAgJ2FwcE5hbWUnOiB7IGNzczogeyAnYm9sZCc6IHRydWUgfSB9LFxuICAgICAgICAgICAgJ2lwQWRkcmVzcyc6IHsgY3NzOiB7ICdib2xkJzogdHJ1ZSB9IH0sXG4gICAgICAgICAgICAnbGVhcm5Nb3JlTGluayc6IHtcbiAgICAgICAgICAgICAgICBjbGljazogbGVhcm5Nb3JlX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBzdHJbJ01PQklMRV9TVFJfU2lnbkluX01TQWNjdEhlbHBIZWFkaW5nJ10sXG4gICAgICAgICAgICAgICAgdmlzaWJsZTogIXN2ci5mSGlkZUxlYXJuTW9yZUxpbmsgfSB9XCI+IDwvZGl2PiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1yb3c+IDxkaXYgcm9sZT1hbGVydCBhcmlhLWxpdmU9YXNzZXJ0aXZlPjwhLS0ga28gaWY6IHVzZXJuYW1lVGV4dGJveC5lcnJvciAtLT4gPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LWVycm9yIGNvbC1tZC0yNFwiIGlkPXVzZXJuYW1lRXJyb3IgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICBodG1sV2l0aEJpbmRpbmdzOiB1c2VybmFtZVRleHRib3guZXJyb3IsXG4gICAgICAgICAgICBjaGlsZEJpbmRpbmdzOiB7XG4gICAgICAgICAgICAgICAgJ2lkQV9QV0RfU2lnblVwJzogeyBocmVmOiBzdnIudXJsU2lnblVwLCBjbGljazogc2lnbnVwX29uQ2xpY2sgfSxcbiAgICAgICAgICAgICAgICAnYWFkU2lnbnVwJzogeyBocmVmOiBzdnIudXJsQWFkU2lnbnVwLCBjbGljazogYWFkU2lnbnVwX29uQ2xpY2sgfSxcbiAgICAgICAgICAgICAgICAnYWFkU2VsZlNpZ251cCc6IHsgY2xpY2s6IHNpZ251cF9vbkNsaWNrIH0sXG4gICAgICAgICAgICAgICAgJ290aGVySWRwTG9naW4nOiB7IGhyZWY6IHN2ci51cmxHb1RvQUFERXJyb3IsIGNsaWNrOiBvdGhlcklkcExvZ2luX29uQ2xpY2sgfSxcbiAgICAgICAgICAgICAgICAnc2VuZE90Y0xpbmsnOiB7IGNsaWNrOiBzZW5kT3RjTGlua19vbkNsaWNrIH0gfVwiPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGNvbC1tZC0yNFwiPjwhLS0ga28gaWY6IHByZWZpbGxOYW1lcygpLmxlbmd0aCA+IDEgLS0+IDxzZWxlY3QgaWQ9dXNlcm5hbWVzIGNsYXNzPWZvcm0tY29udHJvbCBkYXRhLWJpbmQ9XCJvcHRpb25zOiBwcmVmaWxsTmFtZXMsIG9wdGlvbnNUZXh0OiAndGV4dCcsIG9wdGlvbnNWYWx1ZTogJ3ZhbHVlJywgdmFsdWU6IHVzZXJuYW1lVGV4dGJveC52YWx1ZSwgY3NzOiB7ICdoYXMtZXJyb3InOiB1c2VybmFtZVRleHRib3guZXJyb3IgfVwiPiA8L3NlbGVjdD48IS0tIC9rbyAtLT48IS0tIGtvIGlmbm90OiBwcmVmaWxsTmFtZXMoKS5sZW5ndGggPiAxIC0tPiA8ZGl2IGNsYXNzPXBsYWNlaG9sZGVyQ29udGFpbmVyIGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAncGxhY2Vob2xkZXItdGV4dGJveC1maWVsZCcsXG4gICAgICAgICAgICBwdWJsaWNNZXRob2RzOiB1c2VybmFtZVRleHRib3gucGxhY2Vob2xkZXJUZXh0Ym94TWV0aG9kcyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGE6IHN2cixcbiAgICAgICAgICAgICAgICBoaW50VGV4dDogdGVuYW50QnJhbmRpbmcuVXNlcklkTGFiZWwgfHwgc3RyWydDVF9QV0RfU1RSX0VtYWlsX0V4YW1wbGUnXSxcbiAgICAgICAgICAgICAgICBoaW50Q3NzOiAncGxhY2Vob2xkZXInICsgKCFzdnIuZkFsbG93UGhvbmVTaWduSW4gPyAnIGx0cl9vdmVycmlkZScgOiAnJykgfSxcbiAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgdXBkYXRlRm9jdXM6IHVzZXJuYW1lVGV4dGJveC50ZXh0Ym94X29uVXBkYXRlRm9jdXMgfSB9XCI+IDxpbnB1dCB0eXBlPWVtYWlsIG5hbWU9bG9naW5mbXQgaWQ9aTAxMTYgbWF4bGVuZ3RoPTExMyBsYW5nPWVuIGNsYXNzPVwiZm9ybS1jb250cm9sIGx0cl9vdmVycmlkZVwiIGFyaWEtcmVxdWlyZWQ9dHJ1ZSBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgICAgICAgICAgY3NzOiB7ICdoYXMtZXJyb3InOiB1c2VybmFtZVRleHRib3guZXJyb3IgfSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiB0ZW5hbnRCcmFuZGluZy5Vc2VySWRMYWJlbCB8fCBzdHJbJ0NUX1BXRF9TVFJfVXNlcm5hbWVfQXJpYUxhYmVsJ10sXG4gICAgICAgICAgICAgICAgICAgIGFyaWFEZXNjcmliZWRCeTogJ2xvZ2luSGVhZGVyJyArIChwYWdlRGVzY3JpcHRpb24gJiYgIXN2ci5mSGlkZUxvZ2luRGVzYyA/ICcgbG9naW5EZXNjcmlwdGlvbicgOiAnJyksXG4gICAgICAgICAgICAgICAgICAgIHRleHRJbnB1dDogdXNlcm5hbWVUZXh0Ym94LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBoYXNGb2N1c0V4OiB1c2VybmFtZVRleHRib3guZm9jdXNlZCxcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICRwbGFjZWhvbGRlclRleHRcIi8+IDxpbnB1dCBuYW1lPXBhc3N3ZCB0eXBlPXBhc3N3b3JkIGlkPWkwMTE4IGF1dG9jb21wbGV0ZT1vZmYgZGF0YS1iaW5kPVwibW92ZU9mZlNjcmVlbiwgdGV4dElucHV0OiBwYXNzd29yZEJyb3dzZXJQcmVmaWxsXCIvPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8ZGl2IGRhdGEtYmluZD1cImNzczogeyAncG9zaXRpb24tYnV0dG9ucyc6ICF0ZW5hbnRCcmFuZGluZy5Cb2lsZXJQbGF0ZVRleHQgfVwiPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBjbGFzcz1jb2wtbWQtMjQ+IDxkaXYgY2xhc3M9XCJ0ZXh0LTEzIGFjdGlvbi1saW5rc1wiPjwhLS0ga28gaWY6IHN2ci5mQ0JTaG93U2lnblVwICYmICFzdnIuZkRvSWZFeGlzdHMgJiYgIXN2ci5mQ2hlY2tQcm9vZkZvckFsaWFzZXMgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cCBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgICAgICAgICAgaHRtbFdpdGhCaW5kaW5nczogaHRtbFsnV0ZfU1RSX1NpZ25VcExpbmtfVGV4dCddLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZEJpbmRpbmdzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnc2lnbnVwJzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IHN2ci51cmxTaWduVXAgfHwgJyMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogc3ZyLnVybFNpZ25VcCA/IHN0clsnV0ZfU1RSX1NpZ251cExpbmtfQXJpYUxhYmVsX1RleHQnXSA6IHN0clsnV0ZfU1RSX1NpZ251cExpbmtfQXJpYUxhYmVsX0dlbmVyaWNfVGV4dCddLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBzaWdudXBfb25DbGljayB9IH1cIj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogc3ZyLnNob3dDYW50QWNjZXNzQWNjb3VudExpbmsgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9Y2FudEFjY2Vzc0FjY291bnQgbmFtZT1jYW5ub3RBY2Nlc3NBY2NvdW50IGhyZWY9IyBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHN0clsnV0ZfU1RSX0NhbnRBY2Nlc3NBY2NvdW50X1RleHQnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBjYW50QWNjZXNzQWNjb3VudF9vbkNsaWNrXCI+PC9hPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzaG93Rmlkb0xpbmtJbmxpbmUgJiYgaGFzRmlkbygpICYmIChhdmFpbGFibGVDcmVkc1dpdGhvdXRVc2VybmFtZSgpLmxlbmd0aCA+PSAyIHx8IHN2ci5mU2hvd0ZvcmdvdFVzZXJuYW1lTGluaykgLS0+IDxkaXYgY2xhc3M9Zm9ybS1ncm91cD4gPGEgaWQ9aWRBX1BXRF9Td2l0Y2hUb0ZpZG8gbmFtZT1zd2l0Y2hUb0ZpZG8gaHJlZj0jIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogZmlkb0xpbmtUZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IHN3aXRjaFRvRmlkb0NyZWRMaW5rX29uQ2xpY2tcIj48L2E+PCEtLSBrbyBjb21wb25lbnQ6IHsgbmFtZTogJ2ZpZG8taGVscC1idXR0b24tY29udHJvbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZTogaXNQbGF0Zm9ybUF1dGhlbnRpY2F0b3JBdmFpbGFibGUoKSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWdpc3RlckRpYWxvZzogb25SZWdpc3RlckRpYWxvZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnJlZ2lzdGVyRGlhbG9nOiBvblVucmVnaXN0ZXJEaWFsb2csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0RpYWxvZzogb25TaG93RGlhbG9nIH0gfSAtLT48IS0tIC9rbyAtLT4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogYXZhaWxhYmxlQ3JlZHNXaXRob3V0VXNlcm5hbWUoKS5sZW5ndGggPiAwIHx8IHN2ci5mU2hvd0ZvcmdvdFVzZXJuYW1lTGluayAtLT4gPGRpdiBjbGFzcz1mb3JtLWdyb3VwIGRhdGEtYmluZD1cIlxuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ6IHsgbmFtZTogJ2NyZWQtc3dpdGNoLWxpbmstY29udHJvbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJEYXRhOiBzdnIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ3JlZHM6IGF2YWlsYWJsZUNyZWRzV2l0aG91dFVzZXJuYW1lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0ZvcmdvdFVzZXJuYW1lOiBzdnIuZlNob3dGb3Jnb3RVc2VybmFtZUxpbmsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoVmlldzogbm9Vc2VybmFtZUNyZWRTd2l0Y2hMaW5rX29uU3dpdGNoVmlldyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdDogb25SZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWdpc3RlckRpYWxvZzogb25SZWdpc3RlckRpYWxvZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnJlZ2lzdGVyRGlhbG9nOiBvblVucmVnaXN0ZXJEaWFsb2csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0RpYWxvZzogb25TaG93RGlhbG9nIH0gfVwiPiA8L2Rpdj48IS0tIC9rbyAtLT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1yb3cgZGF0YS1iaW5kPVwiY3NzOiB7ICdtb3ZlLWJ1dHRvbnMnOiB0ZW5hbnRCcmFuZGluZy5Cb2lsZXJQbGF0ZVRleHQgfVwiPiA8ZGl2IGRhdGEtYmluZD1cImNvbXBvbmVudDogeyBuYW1lOiAnZm9vdGVyLWJ1dHRvbnMtZmllbGQnLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgIGlzUHJpbWFyeUJ1dHRvbkVuYWJsZWQ6ICFpc1JlcXVlc3RQZW5kaW5nKCksXG4gICAgICAgICAgICAgICAgaXNQcmltYXJ5QnV0dG9uVmlzaWJsZTogc3ZyLmZTaG93QnV0dG9ucyxcbiAgICAgICAgICAgICAgICBpc1NlY29uZGFyeUJ1dHRvbkVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgaXNTZWNvbmRhcnlCdXR0b25WaXNpYmxlOiBzdnIuZlNob3dCdXR0b25zICYmIGlzQmFja0J1dHRvblZpc2libGUoKSB9LFxuICAgICAgICAgICAgZXZlbnQ6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayxcbiAgICAgICAgICAgICAgICBzZWNvbmRhcnlCdXR0b25DbGljazogc2Vjb25kYXJ5QnV0dG9uX29uQ2xpY2sgfSB9XCI+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PCEtLSBrbyBpZjogdGVuYW50QnJhbmRpbmcuQm9pbGVyUGxhdGVUZXh0IC0tPiA8ZGl2IGlkPWlkQm9pbGVyUGxhdGVUZXh0IGNsYXNzPVwid3JhcC1jb250ZW50IGJvaWxlcnBsYXRlLXRleHRcIiBkYXRhLWJpbmQ9XCJcbiAgICBodG1sV2l0aE1vZHM6IHRlbmFudEJyYW5kaW5nLkJvaWxlclBsYXRlVGV4dCxcbiAgICBodG1sTW9kczogeyBmaWx0ZXJMaW5rczogc3ZyLmZJc0hvc3RlZCB9LFxuICAgIGNzczogeyAndHJhbnNwYXJlbnQtbGlnaHRib3gnOiB0ZW5hbnRCcmFuZGluZy5Vc2VUcmFuc3BhcmVudExpZ2h0Qm94IH1cIj48L2Rpdj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe3ZhciBlPWMucGVyZm9ybWFuY2UsdD1jLm5hdmlnYXRvcixpPXt9O3JldHVybiBlPyhlLm5hdmlnYXRpb24mJihpLm5hdmlnYXRpb249bihlLm5hdmlnYXRpb24pKSxlLnRpbWluZyYmKGkudGltaW5nPW4oZS50aW1pbmcpLGs+MCYmKGkudGltaW5nLmN1c3RvbUxvYWRFdmVudEVuZD1rKSksZS5nZXRFbnRyaWVzJiYoaS5lbnRyaWVzPW8udXRpbHMuYXJyYXlNYXAoZS5nZXRFbnRyaWVzKCksbikpLHQuY29ubmVjdGlvbiYmKGkuY29ubmVjdGlvbj1uKHQuY29ubmVjdGlvbikpLGkpOm51bGx9ZnVuY3Rpb24gbihlKXt2YXIgdD17fTtpZihlLnRvSlNPTilyZXR1cm4gZS50b0pTT04oKTtmb3IodmFyIG4gaW4gZSl0W25dPWVbbl07cmV0dXJuIHR9ZnVuY3Rpb24gaSgpe3ZhciBlPXtjb25maWc6e2luc3RydW1lbnRhdGlvbktleTpULGlzQ29va2llVXNlRGlzYWJsZWQ6ITAsaXNTdG9yYWdlVXNlRGlzYWJsZWQ6ITAsZGlzYWJsZUFqYXhUcmFja2luZzohMCxkaXNhYmxlRXhjZXB0aW9uVHJhY2tpbmc6ITAsZW5kcG9pbnRVcmw6d319LHQ9bmV3IHMuSW5pdGlhbGl6YXRpb24oZSksbj10LmxvYWRBcHBJbnNpZ2h0cygpO2MuYXBwSW5zaWdodHM9bixuLmNvbnRleHQuYWRkVGVsZW1ldHJ5SW5pdGlhbGl6ZXIoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5kYXRhLmJhc2VEYXRhO3QucHJvcGVydGllcz10LnByb3BlcnRpZXN8fHt9LHQucHJvcGVydGllcy5ob3N0QnVpbGROdW1iZXI9aD9oLnZlci52LmpvaW4oIi4iKTpnLHQucHJvcGVydGllcy5yZXF1ZXN0Q291bnRyeT12LHQucHJvcGVydGllcy5ocGdpZD1iLHQubWVhc3VyZW1lbnRzPXQubWVhc3VyZW1lbnRzfHx7fSx0Lm1lYXN1cmVtZW50cy5lbmFibGVkUGVyY2VudGFnZT1TLCJzdHJpbmciPT10eXBlb2YgdC51cmwmJih0LnVybD10LnVybC5zcGxpdCgiPyIpWzBdKTtmb3IodmFyIG49WyJhaS5vcGVyYXRpb24uaWQiLCJhaS5vcGVyYXRpb24ucGFyZW50aWQiLCJhaS5vcGVyYXRpb24ucm9vdGlkIiwiYWkuc2Vzc2lvbi5pZCIsImFpLnVzZXIuYWNjb3VudElkIiwiYWkudXNlci5hdXRoVXNlcklkIiwiYWkudXNlci5pZCJdLGk9MDtpPG4ubGVuZ3RoO2krKyllLnRhZ3NbbltpXV0mJmRlbGV0ZSBlLnRhZ3NbbltpXV19KX1mdW5jdGlvbiBhKCl7aWYoIUQmJngpe2lmKEQ9ITAscCl7dmFyIGU9e2hvc3RCdWlsZE51bWJlcjpoP2gudmVyLnYuam9pbigiLiIpOmcsc2VydmVyRXhlY3V0aW9uVGltZTpoP2guZXQ6bSxyZXF1ZXN0Q291bnRyeTp2LHBsdDowfSxuPXQoKTtuJiYoZS5wZXJmb3JtYW5jZURhdGE9biksQyYmKGUuaW5saW5lTW9kZT1DKTt2YXIgaT1uZXcgcih7Y2hlY2tBcGlDYW5hcnk6Zn0pO2kuSnNvbihwLGUpfXZhciBvPWMuYXBwSW5zaWdodHM7aWYobyl7dmFyIGE9e30scz17fTtzLnNlcnZlckV4ZWN1dGlvblRpbWU9aD9oLmV0Om0sby50cmFja1BhZ2VWaWV3KG51bGwsbnVsbCxhLHMpfX19dmFyIGQ9dGhpcyxsPWUuc2VydmVyRGF0YSx1PWwuaUxvZ2luTW9kZSxwPWwudXJsUmVwb3J0UGFnZUxvYWQsZj1sLmZDaGVja0FwaUNhbmFyeSxnPWwuc0hvc3RCdWlsZE51bWJlcixtPWwuaVNlcnZlckV4ZWN1dGlvblRpbWUsdj1sLnNSZXF1ZXN0Q291bnRyeXx8bC5jb3VudHJ5LGg9bC5zZXJ2ZXJEZXRhaWxzLGI9bC5ocGdpZCxfPWwuZkFwcGxpY2F0aW9uSW5zaWdodHNFbmFibGVkLFM9bC5pQXBwbGljYXRpb25JbnNpZ2h0c0VuYWJsZWRQZXJjZW50YWdlLHc9bC51cmxBcHBsaWNhdGlvbkluc2lnaHRzRW5kcG9pbnQsVD1sLnNBcHBsaWNhdGlvbkluc2lnaHRzSW5zdHJ1bWVudGF0aW9uS2V5LEM9bC5pbmxpbmVNb2RlLHk9bC5pc0N1c3RvbVBlcmYsaz0wLHg9ITEsRD0hMTtkLmNsaWVudE1vZGU9dSxkLnNyc0ZhaWxlZD1jLmdfaVNSU0ZhaWxlZCxkLnNyc1N1Y2Nlc3M9Yy5nX3NTUlNTdWNjZXNzLGQudGltZU9uUGFnZT1vLm9ic2VydmFibGUobnVsbCksZC5yZWNvcmRTdWJtaXQ9ZnVuY3Rpb24oKXtjLnBlcmZvcm1hbmNlJiZjLnBlcmZvcm1hbmNlLnRpbWluZyYmZC50aW1lT25QYWdlKChuZXcgRGF0ZSkuZ2V0VGltZSgpLWMucGVyZm9ybWFuY2UudGltaW5nLmxvYWRFdmVudEVuZCl9LGQuc2V0UGFnZUxvYWRDb21wbGV0ZWQ9ZnVuY3Rpb24oKXt4PSEwLHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKCl9LDApfSxkLnNldEN1c3RvbVBhZ2VMb2FkQ29tcGxldGVkVGltZT1mdW5jdGlvbihlKXtrPWV8fChuZXcgRGF0ZSkuZ2V0VGltZSgpfSxmdW5jdGlvbigpe18mJmkoKSx5fHxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5zZXRQYWdlTG9hZENvbXBsZXRlZCgpfSwxMDApfSgpfXZhciBvPW4oMSksYT1uKDkpLHI9bigxNjcpLHM9big0ODUpLk1pY3Jvc29mdC5BcHBsaWNhdGlvbkluc2lnaHRzLGM9d2luZG93O28uY29tcG9uZW50cy5yZWdpc3RlcigiaW5zdHJ1bWVudGF0aW9uLWNvbnRyb2wiLHt2aWV3TW9kZWw6aSx0ZW1wbGF0ZTpuKDQ4Niksc3luY2hyb25vdXM6IWMuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8YS5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpLGVuYWJsZUV4dGVuc2lvbnM6ITB9KSxlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIG4saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKTshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZX0oKTtlLkJhc2U9dH0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt0aGlzLnZlcj0xLHRoaXMuc2FtcGxlUmF0ZT0xMDAsdGhpcy50YWdzPXt9fXJldHVybiBlfSgpO2UuRW52ZWxvcGU9dH0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7fSh0PWUuQ29udGV4dHx8KGUuQ29udGV4dD17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkNvbnRleHR8fChlLkNvbnRleHQ9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt9KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7fSh0PWUuQ29udGV4dHx8KGUuQ29udGV4dD17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkNvbnRleHR8fChlLkNvbnRleHQ9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt9KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7fSh0PWUuQ29udGV4dHx8KGUuQ29udGV4dD17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkNvbnRleHR8fChlLkNvbnRleHQ9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe30odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbzshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe2VbZS5WZXJib3NlPTBdPSJWZXJib3NlIixlW2UuSW5mb3JtYXRpb249MV09IkluZm9ybWF0aW9uIixlW2UuV2FybmluZz0yXT0iV2FybmluZyIsZVtlLkVycm9yPTNdPSJFcnJvciIsZVtlLkNyaXRpY2FsPTRdPSJDcml0aWNhbCJ9KHQ9ZS5TZXZlcml0eUxldmVsfHwoZS5TZXZlcml0eUxldmVsPXt9KSl9KG98fChvPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7ZVtlLkNSSVRJQ0FMPTBdPSJDUklUSUNBTCIsZVtlLldBUk5JTkc9MV09IldBUk5JTkcifSh0PWUuTG9nZ2luZ1NldmVyaXR5fHwoZS5Mb2dnaW5nU2V2ZXJpdHk9e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7ZVtlLkJyb3dzZXJEb2VzTm90U3VwcG9ydExvY2FsU3RvcmFnZT0wXT0iQnJvd3NlckRvZXNOb3RTdXBwb3J0TG9jYWxTdG9yYWdlIixlW2UuQnJvd3NlckNhbm5vdFJlYWRMb2NhbFN0b3JhZ2U9MV09IkJyb3dzZXJDYW5ub3RSZWFkTG9jYWxTdG9yYWdlIixlW2UuQnJvd3NlckNhbm5vdFJlYWRTZXNzaW9uU3RvcmFnZT0yXT0iQnJvd3NlckNhbm5vdFJlYWRTZXNzaW9uU3RvcmFnZSIsZVtlLkJyb3dzZXJDYW5ub3RXcml0ZUxvY2FsU3RvcmFnZT0zXT0iQnJvd3NlckNhbm5vdFdyaXRlTG9jYWxTdG9yYWdlIixlW2UuQnJvd3NlckNhbm5vdFdyaXRlU2Vzc2lvblN0b3JhZ2U9NF09IkJyb3dzZXJDYW5ub3RXcml0ZVNlc3Npb25TdG9yYWdlIixlW2UuQnJvd3NlckZhaWxlZFJlbW92YWxGcm9tTG9jYWxTdG9yYWdlPTVdPSJCcm93c2VyRmFpbGVkUmVtb3ZhbEZyb21Mb2NhbFN0b3JhZ2UiLGVbZS5Ccm93c2VyRmFpbGVkUmVtb3ZhbEZyb21TZXNzaW9uU3RvcmFnZT02XT0iQnJvd3NlckZhaWxlZFJlbW92YWxGcm9tU2Vzc2lvblN0b3JhZ2UiLGVbZS5DYW5ub3RTZW5kRW1wdHlUZWxlbWV0cnk9N109IkNhbm5vdFNlbmRFbXB0eVRlbGVtZXRyeSIsZVtlLkNsaWVudFBlcmZvcm1hbmNlTWF0aEVycm9yPThdPSJDbGllbnRQZXJmb3JtYW5jZU1hdGhFcnJvciIsZVtlLkVycm9yUGFyc2luZ0FJU2Vzc2lvbkNvb2tpZT05XT0iRXJyb3JQYXJzaW5nQUlTZXNzaW9uQ29va2llIixlW2UuRXJyb3JQVkNhbGM9MTBdPSJFcnJvclBWQ2FsYyIsZVtlLkV4Y2VwdGlvbldoaWxlTG9nZ2luZ0Vycm9yPTExXT0iRXhjZXB0aW9uV2hpbGVMb2dnaW5nRXJyb3IiLGVbZS5GYWlsZWRBZGRpbmdUZWxlbWV0cnlUb0J1ZmZlcj0xMl09IkZhaWxlZEFkZGluZ1RlbGVtZXRyeVRvQnVmZmVyIixlW2UuRmFpbGVkTW9uaXRvckFqYXhBYm9ydD0xM109IkZhaWxlZE1vbml0b3JBamF4QWJvcnQiLGVbZS5GYWlsZWRNb25pdG9yQWpheER1cj0xNF09IkZhaWxlZE1vbml0b3JBamF4RHVyIixlW2UuRmFpbGVkTW9uaXRvckFqYXhPcGVuPTE1XT0iRmFpbGVkTW9uaXRvckFqYXhPcGVuIixlW2UuRmFpbGVkTW9uaXRvckFqYXhSU0M9MTZdPSJGYWlsZWRNb25pdG9yQWpheFJTQyIsZVtlLkZhaWxlZE1vbml0b3JBamF4U2VuZD0xN109IkZhaWxlZE1vbml0b3JBamF4U2VuZCIsZVtlLkZhaWxlZFRvQWRkSGFuZGxlckZvck9uQmVmb3JlVW5sb2FkPTE4XT0iRmFpbGVkVG9BZGRIYW5kbGVyRm9yT25CZWZvcmVVbmxvYWQiLGVbZS5GYWlsZWRUb1NlbmRRdWV1ZWRUZWxlbWV0cnk9MTldPSJGYWlsZWRUb1NlbmRRdWV1ZWRUZWxlbWV0cnkiLGVbZS5GYWlsZWRUb1JlcG9ydERhdGFMb3NzPTIwXT0iRmFpbGVkVG9SZXBvcnREYXRhTG9zcyIsZVtlLkZsdXNoRmFpbGVkPTIxXT0iRmx1c2hGYWlsZWQiLGVbZS5NZXNzYWdlTGltaXRQZXJQVkV4Y2VlZGVkPTIyXT0iTWVzc2FnZUxpbWl0UGVyUFZFeGNlZWRlZCIsZVtlLk1pc3NpbmdSZXF1aXJlZEZpZWxkU3BlY2lmaWNhdGlvbj0yM109Ik1pc3NpbmdSZXF1aXJlZEZpZWxkU3BlY2lmaWNhdGlvbiIsZVtlLk5hdmlnYXRpb25UaW1pbmdOb3RTdXBwb3J0ZWQ9MjRdPSJOYXZpZ2F0aW9uVGltaW5nTm90U3VwcG9ydGVkIixlW2UuT25FcnJvcj0yNV09Ik9uRXJyb3IiLGVbZS5TZXNzaW9uUmVuZXdhbERhdGVJc1plcm89MjZdPSJTZXNzaW9uUmVuZXdhbERhdGVJc1plcm8iLGVbZS5TZW5kZXJOb3RJbml0aWFsaXplZD0yN109IlNlbmRlck5vdEluaXRpYWxpemVkIixlW2UuU3RhcnRUcmFja0V2ZW50RmFpbGVkPTI4XT0iU3RhcnRUcmFja0V2ZW50RmFpbGVkIixlW2UuU3RvcFRyYWNrRXZlbnRGYWlsZWQ9MjldPSJTdG9wVHJhY2tFdmVudEZhaWxlZCIsZVtlLlN0YXJ0VHJhY2tGYWlsZWQ9MzBdPSJTdGFydFRyYWNrRmFpbGVkIixlW2UuU3RvcFRyYWNrRmFpbGVkPTMxXT0iU3RvcFRyYWNrRmFpbGVkIixlW2UuVGVsZW1ldHJ5U2FtcGxlZEFuZE5vdFNlbnQ9MzJdPSJUZWxlbWV0cnlTYW1wbGVkQW5kTm90U2VudCIsZVtlLlRyYWNrRXZlbnRGYWlsZWQ9MzNdPSJUcmFja0V2ZW50RmFpbGVkIixlW2UuVHJhY2tFeGNlcHRpb25GYWlsZWQ9MzRdPSJUcmFja0V4Y2VwdGlvbkZhaWxlZCIsZVtlLlRyYWNrTWV0cmljRmFpbGVkPTM1XT0iVHJhY2tNZXRyaWNGYWlsZWQiLGVbZS5UcmFja1BWRmFpbGVkPTM2XT0iVHJhY2tQVkZhaWxlZCIsZVtlLlRyYWNrUFZGYWlsZWRDYWxjPTM3XT0iVHJhY2tQVkZhaWxlZENhbGMiLGVbZS5UcmFja1RyYWNlRmFpbGVkPTM4XT0iVHJhY2tUcmFjZUZhaWxlZCIsZVtlLlRyYW5zbWlzc2lvbkZhaWxlZD0zOV09IlRyYW5zbWlzc2lvbkZhaWxlZCIsZVtlLkZhaWxlZFRvU2V0U3RvcmFnZUJ1ZmZlcj00MF09IkZhaWxlZFRvU2V0U3RvcmFnZUJ1ZmZlciIsZVtlLkZhaWxlZFRvUmVzdG9yZVN0b3JhZ2VCdWZmZXI9NDFdPSJGYWlsZWRUb1Jlc3RvcmVTdG9yYWdlQnVmZmVyIixlW2UuSW52YWxpZEJhY2tlbmRSZXNwb25zZT00Ml09IkludmFsaWRCYWNrZW5kUmVzcG9uc2UiLGVbZS5GYWlsZWRUb0ZpeERlcHJpY2F0ZWRWYWx1ZXM9NDNdPSJGYWlsZWRUb0ZpeERlcHJpY2F0ZWRWYWx1ZXMiLGVbZS5JbnZhbGlkRHVyYXRpb25WYWx1ZT00NF09IkludmFsaWREdXJhdGlvblZhbHVlIixlW2UuQ2Fubm90U2VyaWFsaXplT2JqZWN0PTQ1XT0iQ2Fubm90U2VyaWFsaXplT2JqZWN0IixlW2UuQ2Fubm90U2VyaWFsaXplT2JqZWN0Tm9uU2VyaWFsaXphYmxlPTQ2XT0iQ2Fubm90U2VyaWFsaXplT2JqZWN0Tm9uU2VyaWFsaXphYmxlIixlW2UuQ2lyY3VsYXJSZWZlcmVuY2VEZXRlY3RlZD00N109IkNpcmN1bGFyUmVmZXJlbmNlRGV0ZWN0ZWQiLGVbZS5DbGVhckF1dGhDb250ZXh0RmFpbGVkPTQ4XT0iQ2xlYXJBdXRoQ29udGV4dEZhaWxlZCIsZVtlLkV4Y2VwdGlvblRydW5jYXRlZD00OV09IkV4Y2VwdGlvblRydW5jYXRlZCIsZVtlLklsbGVnYWxDaGFyc0luTmFtZT01MF09IklsbGVnYWxDaGFyc0luTmFtZSIsZVtlLkl0ZW1Ob3RJbkFycmF5PTUxXT0iSXRlbU5vdEluQXJyYXkiLGVbZS5NYXhBamF4UGVyUFZFeGNlZWRlZD01Ml09Ik1heEFqYXhQZXJQVkV4Y2VlZGVkIixlW2UuTWVzc2FnZVRydW5jYXRlZD01M109Ik1lc3NhZ2VUcnVuY2F0ZWQiLGVbZS5OYW1lVG9vTG9uZz01NF09Ik5hbWVUb29Mb25nIixlW2UuU2FtcGxlUmF0ZU91dE9mUmFuZ2U9NTVdPSJTYW1wbGVSYXRlT3V0T2ZSYW5nZSIsZVtlLlNldEF1dGhDb250ZXh0RmFpbGVkPTU2XT0iU2V0QXV0aENvbnRleHRGYWlsZWQiLGVbZS5TZXRBdXRoQ29udGV4dEZhaWxlZEFjY291bnROYW1lPTU3XT0iU2V0QXV0aENvbnRleHRGYWlsZWRBY2NvdW50TmFtZSIsZVtlLlN0cmluZ1ZhbHVlVG9vTG9uZz01OF09IlN0cmluZ1ZhbHVlVG9vTG9uZyIsZVtlLlN0YXJ0Q2FsbGVkTW9yZVRoYW5PbmNlPTU5XT0iU3RhcnRDYWxsZWRNb3JlVGhhbk9uY2UiLGVbZS5TdG9wQ2FsbGVkV2l0aG91dFN0YXJ0PTYwXT0iU3RvcENhbGxlZFdpdGhvdXRTdGFydCIsZVtlLlRlbGVtZXRyeUluaXRpYWxpemVyRmFpbGVkPTYxXT0iVGVsZW1ldHJ5SW5pdGlhbGl6ZXJGYWlsZWQiLGVbZS5UcmFja0FyZ3VtZW50c05vdFNwZWNpZmllZD02Ml09IlRyYWNrQXJndW1lbnRzTm90U3BlY2lmaWVkIixlW2UuVXJsVG9vTG9uZz02M109IlVybFRvb0xvbmciLGVbZS5TZXNzaW9uU3RvcmFnZUJ1ZmZlckZ1bGw9NjRdPSJTZXNzaW9uU3RvcmFnZUJ1ZmZlckZ1bGwiLGVbZS5DYW5ub3RBY2Nlc3NDb29raWU9NjVdPSJDYW5ub3RBY2Nlc3NDb29raWUifShuPWUuX0ludGVybmFsTWVzc2FnZUlkfHwoZS5fSW50ZXJuYWxNZXNzYWdlSWQ9e30pKTt2YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxpLG8sYSl7dm9pZCAwPT09byYmKG89ITEpLHRoaXMubWVzc2FnZUlkPXQsdGhpcy5tZXNzYWdlPShvP2UuQWlVc2VyQWN0aW9uYWJsZVByZWZpeDplLkFpTm9uVXNlckFjdGlvbmFibGVQcmVmaXgpK25bdF0udG9TdHJpbmcoKTt2YXIgcj0oaT8iIG1lc3NhZ2U6IitlLnNhbml0aXplRGlhZ25vc3RpY1RleHQoaSk6IiIpKyhhPyIgcHJvcHM6IitlLnNhbml0aXplRGlhZ25vc3RpY1RleHQoSlNPTi5zdHJpbmdpZnkoYSkpOiIiKTt0aGlzLm1lc3NhZ2UrPXJ9cmV0dXJuIGUuc2FuaXRpemVEaWFnbm9zdGljVGV4dD1mdW5jdGlvbihlKXtyZXR1cm4nIicrZS5yZXBsYWNlKC9cIi9nLCIiKSsnIid9LGUuQWlOb25Vc2VyQWN0aW9uYWJsZVByZWZpeD0iQUkgKEludGVybmFsKTogIixlLkFpVXNlckFjdGlvbmFibGVQcmVmaXg9IkFJOiAiLGV9KCk7ZS5fSW50ZXJuYWxMb2dNZXNzYWdlPWk7dmFyIG89ZnVuY3Rpb24oKXtmdW5jdGlvbiBvKCl7fXJldHVybiBvLnRocm93SW50ZXJuYWw9ZnVuY3Rpb24oZSx0LG8sYSxyKXt2b2lkIDA9PT1yJiYocj0hMSk7dmFyIHM9bmV3IGkodCxvLHIsYSk7aWYodGhpcy5lbmFibGVEZWJ1Z0V4Y2VwdGlvbnMoKSl0aHJvdyBzO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgcyYmcyYmInVuZGVmaW5lZCIhPXR5cGVvZiBzLm1lc3NhZ2Upe2lmKHIpe3ZhciBjPW5bcy5tZXNzYWdlSWRdO3RoaXMuX21lc3NhZ2VMb2dnZWRbY10mJiF0aGlzLnZlcmJvc2VMb2dnaW5nKCl8fCh0aGlzLndhcm5Ub0NvbnNvbGUocy5tZXNzYWdlKSx0aGlzLl9tZXNzYWdlTG9nZ2VkW2NdPSEwKX1lbHNlIHRoaXMudmVyYm9zZUxvZ2dpbmcoKSYmdGhpcy53YXJuVG9Db25zb2xlKHMubWVzc2FnZSk7dGhpcy5sb2dJbnRlcm5hbE1lc3NhZ2UoZSxzKX19LG8ud2FyblRvQ29uc29sZT1mdW5jdGlvbihlKXsidW5kZWZpbmVkIiE9dHlwZW9mIGNvbnNvbGUmJmNvbnNvbGUmJigiZnVuY3Rpb24iPT10eXBlb2YgY29uc29sZS53YXJuP2NvbnNvbGUud2FybihlKToiZnVuY3Rpb24iPT10eXBlb2YgY29uc29sZS5sb2cmJmNvbnNvbGUubG9nKGUpKX0sby5yZXNldEludGVybmFsTWVzc2FnZUNvdW50PWZ1bmN0aW9uKCl7dGhpcy5fbWVzc2FnZUNvdW50PTAsdGhpcy5fbWVzc2FnZUxvZ2dlZD17fX0sby5jbGVhckludGVybmFsTWVzc2FnZUxvZ2dlZFR5cGVzPWZ1bmN0aW9uKCl7aWYoZS5VdGlsLmNhblVzZVNlc3Npb25TdG9yYWdlKCkpZm9yKHZhciB0PWUuVXRpbC5nZXRTZXNzaW9uU3RvcmFnZUtleXMoKSxuPTA7bjx0Lmxlbmd0aDtuKyspMD09PXRbbl0uaW5kZXhPZihvLkFJSW50ZXJuYWxNZXNzYWdlUHJlZml4KSYmZS5VdGlsLnJlbW92ZVNlc3Npb25TdG9yYWdlKHRbbl0pfSxvLnNldE1heEludGVybmFsTWVzc2FnZUxpbWl0PWZ1bmN0aW9uKGUpe2lmKCFlKXRocm93IG5ldyBFcnJvcigibGltaXQgY2Fubm90IGJlIHVuZGVmaW5lZC4iKTt0aGlzLk1BWF9JTlRFUk5BTF9NRVNTQUdFX0xJTUlUPWV9LG8ubG9nSW50ZXJuYWxNZXNzYWdlPWZ1bmN0aW9uKGEscil7aWYoIXRoaXMuX2FyZUludGVybmFsTWVzc2FnZXNUaHJvdHRsZWQoKSl7dmFyIHM9ITAsYz1vLkFJSW50ZXJuYWxNZXNzYWdlUHJlZml4K25bci5tZXNzYWdlSWRdO2lmKGUuVXRpbC5jYW5Vc2VTZXNzaW9uU3RvcmFnZSgpKXt2YXIgZD1lLlV0aWwuZ2V0U2Vzc2lvblN0b3JhZ2UoYyk7ZD9zPSExOmUuVXRpbC5zZXRTZXNzaW9uU3RvcmFnZShjLCIxIil9ZWxzZSB0aGlzLl9tZXNzYWdlTG9nZ2VkW2NdP3M9ITE6dGhpcy5fbWVzc2FnZUxvZ2dlZFtjXT0hMDtpZihzJiYoKHRoaXMudmVyYm9zZUxvZ2dpbmcoKXx8YT09PXQuQ1JJVElDQUwpJiYodGhpcy5xdWV1ZS5wdXNoKHIpLHRoaXMuX21lc3NhZ2VDb3VudCsrKSx0aGlzLl9tZXNzYWdlQ291bnQ9PXRoaXMuTUFYX0lOVEVSTkFMX01FU1NBR0VfTElNSVQpKXt2YXIgbD0iSW50ZXJuYWwgZXZlbnRzIHRocm90dGxlIGxpbWl0IHBlciBQYWdlVmlldyByZWFjaGVkIGZvciB0aGlzIGFwcC4iLHU9bmV3IGkobi5NZXNzYWdlTGltaXRQZXJQVkV4Y2VlZGVkLGwsKCExKSk7dGhpcy5xdWV1ZS5wdXNoKHUpLHRoaXMud2FyblRvQ29uc29sZShsKX19fSxvLl9hcmVJbnRlcm5hbE1lc3NhZ2VzVGhyb3R0bGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21lc3NhZ2VDb3VudD49dGhpcy5NQVhfSU5URVJOQUxfTUVTU0FHRV9MSU1JVH0sby5BSUludGVybmFsTWVzc2FnZVByZWZpeD0iQUlUUl8iLG8uZW5hYmxlRGVidWdFeGNlcHRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuITF9LG8udmVyYm9zZUxvZ2dpbmc9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sby5xdWV1ZT1bXSxvLk1BWF9JTlRFUk5BTF9NRVNTQUdFX0xJTUlUPTI1LG8uX21lc3NhZ2VDb3VudD0wLG8uX21lc3NhZ2VMb2dnZWQ9e30sb30oKTtlLl9JbnRlcm5hbExvZ2dpbmc9b30odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXtlW2UuTG9jYWxTdG9yYWdlPTBdPSJMb2NhbFN0b3JhZ2UiLGVbZS5TZXNzaW9uU3RvcmFnZT0xXT0iU2Vzc2lvblN0b3JhZ2UifSh0fHwodD17fSkpO3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbigpe31yZXR1cm4gbi5kaXNhYmxlU3RvcmFnZT1mdW5jdGlvbigpe24uX2NhblVzZUxvY2FsU3RvcmFnZT0hMSxuLl9jYW5Vc2VTZXNzaW9uU3RvcmFnZT0hMX0sbi5fZ2V0TG9jYWxTdG9yYWdlT2JqZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIG4uY2FuVXNlTG9jYWxTdG9yYWdlKCk/bi5fZ2V0VmVyaWZpZWRTdG9yYWdlT2JqZWN0KHQuTG9jYWxTdG9yYWdlKTpudWxsfSxuLl9nZXRWZXJpZmllZFN0b3JhZ2VPYmplY3Q9ZnVuY3Rpb24oZSl7dmFyIG4saSxvPW51bGw7dHJ5e2k9bmV3IERhdGUsbz1lPT09dC5Mb2NhbFN0b3JhZ2U/d2luZG93LmxvY2FsU3RvcmFnZTp3aW5kb3cuc2Vzc2lvblN0b3JhZ2Usby5zZXRJdGVtKGksaSksbj1vLmdldEl0ZW0oaSkhPWksby5yZW1vdmVJdGVtKGkpLG4mJihvPW51bGwpfWNhdGNoKGEpe289bnVsbH1yZXR1cm4gb30sbi5jYW5Vc2VMb2NhbFN0b3JhZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09bi5fY2FuVXNlTG9jYWxTdG9yYWdlJiYobi5fY2FuVXNlTG9jYWxTdG9yYWdlPSEhbi5fZ2V0VmVyaWZpZWRTdG9yYWdlT2JqZWN0KHQuTG9jYWxTdG9yYWdlKSksbi5fY2FuVXNlTG9jYWxTdG9yYWdlfSxuLmdldFN0b3JhZ2U9ZnVuY3Rpb24odCl7dmFyIGk9bi5fZ2V0TG9jYWxTdG9yYWdlT2JqZWN0KCk7aWYobnVsbCE9PWkpdHJ5e3JldHVybiBpLmdldEl0ZW0odCl9Y2F0Y2gobyl7bi5fY2FuVXNlTG9jYWxTdG9yYWdlPSExLGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuQnJvd3NlckNhbm5vdFJlYWRMb2NhbFN0b3JhZ2UsIkJyb3dzZXIgZmFpbGVkIHJlYWQgb2YgbG9jYWwgc3RvcmFnZS4gIituLmdldEV4Y2VwdGlvbk5hbWUobykse2V4Y2VwdGlvbjpuLmR1bXAobyl9KX1yZXR1cm4gbnVsbH0sbi5zZXRTdG9yYWdlPWZ1bmN0aW9uKHQsaSl7dmFyIG89bi5fZ2V0TG9jYWxTdG9yYWdlT2JqZWN0KCk7aWYobnVsbCE9PW8pdHJ5e3JldHVybiBvLnNldEl0ZW0odCxpKSwhMH1jYXRjaChhKXtuLl9jYW5Vc2VMb2NhbFN0b3JhZ2U9ITEsZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5Ccm93c2VyQ2Fubm90V3JpdGVMb2NhbFN0b3JhZ2UsIkJyb3dzZXIgZmFpbGVkIHdyaXRlIHRvIGxvY2FsIHN0b3JhZ2UuICIrbi5nZXRFeGNlcHRpb25OYW1lKGEpLHtleGNlcHRpb246bi5kdW1wKGEpfSl9cmV0dXJuITF9LG4ucmVtb3ZlU3RvcmFnZT1mdW5jdGlvbih0KXt2YXIgaT1uLl9nZXRMb2NhbFN0b3JhZ2VPYmplY3QoKTtpZihudWxsIT09aSl0cnl7cmV0dXJuIGkucmVtb3ZlSXRlbSh0KSwhMH1jYXRjaChvKXtuLl9jYW5Vc2VMb2NhbFN0b3JhZ2U9ITEsZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5Ccm93c2VyRmFpbGVkUmVtb3ZhbEZyb21Mb2NhbFN0b3JhZ2UsIkJyb3dzZXIgZmFpbGVkIHJlbW92YWwgb2YgbG9jYWwgc3RvcmFnZSBpdGVtLiAiK24uZ2V0RXhjZXB0aW9uTmFtZShvKSx7ZXhjZXB0aW9uOm4uZHVtcChvKX0pfXJldHVybiExfSxuLl9nZXRTZXNzaW9uU3RvcmFnZU9iamVjdD1mdW5jdGlvbigpe3JldHVybiBuLmNhblVzZVNlc3Npb25TdG9yYWdlKCk/bi5fZ2V0VmVyaWZpZWRTdG9yYWdlT2JqZWN0KHQuU2Vzc2lvblN0b3JhZ2UpOm51bGx9LG4uY2FuVXNlU2Vzc2lvblN0b3JhZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09bi5fY2FuVXNlU2Vzc2lvblN0b3JhZ2UmJihuLl9jYW5Vc2VTZXNzaW9uU3RvcmFnZT0hIW4uX2dldFZlcmlmaWVkU3RvcmFnZU9iamVjdCh0LlNlc3Npb25TdG9yYWdlKSksbi5fY2FuVXNlU2Vzc2lvblN0b3JhZ2V9LG4uZ2V0U2Vzc2lvblN0b3JhZ2VLZXlzPWZ1bmN0aW9uKCl7dmFyIGU9W107aWYobi5jYW5Vc2VTZXNzaW9uU3RvcmFnZSgpKWZvcih2YXIgdCBpbiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UpZS5wdXNoKHQpO3JldHVybiBlfSxuLmdldFNlc3Npb25TdG9yYWdlPWZ1bmN0aW9uKHQpe3ZhciBpPW4uX2dldFNlc3Npb25TdG9yYWdlT2JqZWN0KCk7aWYobnVsbCE9PWkpdHJ5e3JldHVybiBpLmdldEl0ZW0odCl9Y2F0Y2gobyl7bi5fY2FuVXNlU2Vzc2lvblN0b3JhZ2U9ITEsZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5Ccm93c2VyQ2Fubm90UmVhZFNlc3Npb25TdG9yYWdlLCJCcm93c2VyIGZhaWxlZCByZWFkIG9mIHNlc3Npb24gc3RvcmFnZS4gIituLmdldEV4Y2VwdGlvbk5hbWUobykse2V4Y2VwdGlvbjpuLmR1bXAobyl9KX1yZXR1cm4gbnVsbH0sbi5zZXRTZXNzaW9uU3RvcmFnZT1mdW5jdGlvbih0LGkpe3ZhciBvPW4uX2dldFNlc3Npb25TdG9yYWdlT2JqZWN0KCk7aWYobnVsbCE9PW8pdHJ5e3JldHVybiBvLnNldEl0ZW0odCxpKSwhMH1jYXRjaChhKXtuLl9jYW5Vc2VTZXNzaW9uU3RvcmFnZT0hMSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkJyb3dzZXJDYW5ub3RXcml0ZVNlc3Npb25TdG9yYWdlLCJCcm93c2VyIGZhaWxlZCB3cml0ZSB0byBzZXNzaW9uIHN0b3JhZ2UuICIrbi5nZXRFeGNlcHRpb25OYW1lKGEpLHtleGNlcHRpb246bi5kdW1wKGEpfSl9cmV0dXJuITF9LG4ucmVtb3ZlU2Vzc2lvblN0b3JhZ2U9ZnVuY3Rpb24odCl7dmFyIGk9bi5fZ2V0U2Vzc2lvblN0b3JhZ2VPYmplY3QoKTtpZihudWxsIT09aSl0cnl7cmV0dXJuIGkucmVtb3ZlSXRlbSh0KSwhMH1jYXRjaChvKXtuLl9jYW5Vc2VTZXNzaW9uU3RvcmFnZT0hMSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkJyb3dzZXJGYWlsZWRSZW1vdmFsRnJvbVNlc3Npb25TdG9yYWdlLCJCcm93c2VyIGZhaWxlZCByZW1vdmFsIG9mIHNlc3Npb24gc3RvcmFnZSBpdGVtLiAiK24uZ2V0RXhjZXB0aW9uTmFtZShvKSx7ZXhjZXB0aW9uOm4uZHVtcChvKX0pfXJldHVybiExfSxuLmRpc2FibGVDb29raWVzPWZ1bmN0aW9uKCl7bi5fY2FuVXNlQ29va2llcz0hMX0sbi5jYW5Vc2VDb29raWVzPWZ1bmN0aW9uKCl7aWYodm9pZCAwPT09bi5fY2FuVXNlQ29va2llcyl7bi5fY2FuVXNlQ29va2llcz0hMTt0cnl7bi5fY2FuVXNlQ29va2llcz12b2lkIDAhPT1uLmRvY3VtZW50LmNvb2tpZX1jYXRjaCh0KXtlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkNhbm5vdEFjY2Vzc0Nvb2tpZSwiQ2Fubm90IGFjY2VzcyBkb2N1bWVudC5jb29raWUgLSAiK24uZ2V0RXhjZXB0aW9uTmFtZSh0KSx7ZXhjZXB0aW9uOm4uZHVtcCh0KX0pfX1yZXR1cm4gbi5fY2FuVXNlQ29va2llc30sbi5zZXRDb29raWU9ZnVuY3Rpb24oZSx0LGkpe3ZhciBvPSIiLGE9IiI7aSYmKG89Ijtkb21haW49IitpKSxuLmRvY3VtZW50LmxvY2F0aW9uJiYiaHR0cHM6Ij09PW4uZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wmJihhPSI7c2VjdXJlIiksbi5jYW5Vc2VDb29raWVzKCkmJihuLmRvY3VtZW50LmNvb2tpZT1lKyI9Iit0K28rIjtwYXRoPS8iK2EpfSxuLnN0cmluZ1RvQm9vbE9yRGVmYXVsdD1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMSksdm9pZCAwPT09ZXx8bnVsbD09PWU/dDoidHJ1ZSI9PT1lLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKX0sbi5nZXRDb29raWU9ZnVuY3Rpb24oZSl7aWYobi5jYW5Vc2VDb29raWVzKCkpe3ZhciB0PSIiO2lmKGUmJmUubGVuZ3RoKWZvcih2YXIgaT1lKyI9IixvPW4uZG9jdW1lbnQuY29va2llLnNwbGl0KCI7IiksYT0wO2E8by5sZW5ndGg7YSsrKXt2YXIgcj1vW2FdO2lmKHI9bi50cmltKHIpLHImJjA9PT1yLmluZGV4T2YoaSkpe3Q9ci5zdWJzdHJpbmcoaS5sZW5ndGgsb1thXS5sZW5ndGgpO2JyZWFrfX1yZXR1cm4gdH19LG4uZGVsZXRlQ29va2llPWZ1bmN0aW9uKGUpe24uY2FuVXNlQ29va2llcygpJiYobi5kb2N1bWVudC5jb29raWU9ZSsiPTtwYXRoPS87ZXhwaXJlcz1UaHUsIDAxIEphbiAxOTcwIDAwOjAwOjAxIEdNVDsiKX0sbi50cmltPWZ1bmN0aW9uKGUpe3JldHVybiJzdHJpbmciIT10eXBlb2YgZT9lOmUucmVwbGFjZSgvXlxzK3xccyskL2csIiIpfSxuLm5ld0lkPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvIix0PSIiLG49MTA3Mzc0MTgyNCpNYXRoLnJhbmRvbSgpO24+MDspe3ZhciBpPWUuY2hhckF0KG4lNjQpO3QrPWksbj1NYXRoLmZsb29yKG4vNjQpfXJldHVybiB0fSxuLmlzQXJyYXk9ZnVuY3Rpb24oZSl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0sbi5pc0Vycm9yPWZ1bmN0aW9uKGUpe3JldHVybiJbb2JqZWN0IEVycm9yXSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LG4uaXNEYXRlPWZ1bmN0aW9uKGUpe3JldHVybiJbb2JqZWN0IERhdGVdIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0sbi50b0lTT1N0cmluZ0ZvcklFOD1mdW5jdGlvbihlKXtpZihuLmlzRGF0ZShlKSl7aWYoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcpcmV0dXJuIGUudG9JU09TdHJpbmcoKTt2YXIgdD1mdW5jdGlvbihlKXt2YXIgdD1TdHJpbmcoZSk7cmV0dXJuIDE9PT10Lmxlbmd0aCYmKHQ9IjAiK3QpLHR9O3JldHVybiBlLmdldFVUQ0Z1bGxZZWFyKCkrIi0iK3QoZS5nZXRVVENNb250aCgpKzEpKyItIit0KGUuZ2V0VVRDRGF0ZSgpKSsiVCIrdChlLmdldFVUQ0hvdXJzKCkpKyI6Iit0KGUuZ2V0VVRDTWludXRlcygpKSsiOiIrdChlLmdldFVUQ1NlY29uZHMoKSkrIi4iK1N0cmluZygoZS5nZXRVVENNaWxsaXNlY29uZHMoKS8xZTMpLnRvRml4ZWQoMykpLnNsaWNlKDIsNSkrIloifX0sbi5nZXRJRVZlcnNpb249ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9bnVsbCk7dmFyIHQ9ZT9lLnRvTG93ZXJDYXNlKCk6bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO3JldHVybiB0LmluZGV4T2YoIm1zaWUiKSE9LTE/cGFyc2VJbnQodC5zcGxpdCgibXNpZSIpWzFdKTpudWxsfSxuLm1zVG9UaW1lU3Bhbj1mdW5jdGlvbihlKXsoaXNOYU4oZSl8fGU8MCkmJihlPTApLGU9TWF0aC5yb3VuZChlKTt2YXIgdD0iIitlJTFlMyxuPSIiK01hdGguZmxvb3IoZS8xZTMpJTYwLGk9IiIrTWF0aC5mbG9vcihlLzZlNCklNjAsbz0iIitNYXRoLmZsb29yKGUvMzZlNSklMjQsYT1NYXRoLmZsb29yKGUvODY0ZTUpO3JldHVybiB0PTE9PT10Lmxlbmd0aD8iMDAiK3Q6Mj09PXQubGVuZ3RoPyIwIit0OnQsbj1uLmxlbmd0aDwyPyIwIituOm4saT1pLmxlbmd0aDwyPyIwIitpOmksbz1vLmxlbmd0aDwyPyIwIitvOm8sKGE+MD9hKyIuIjoiIikrbysiOiIraSsiOiIrbisiLiIrdH0sbi5pc0Nyb3NzT3JpZ2luRXJyb3I9ZnVuY3Rpb24oZSx0LG4saSxvKXtyZXR1cm4oIlNjcmlwdCBlcnJvci4iPT09ZXx8IlNjcmlwdCBlcnJvciI9PT1lKSYmIW99LG4uZHVtcD1mdW5jdGlvbihlKXt2YXIgdD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSksbj1KU09OLnN0cmluZ2lmeShlKTtyZXR1cm4iW29iamVjdCBFcnJvcl0iPT09dCYmKG49Insgc3RhY2s6ICciK2Uuc3RhY2srIicsIG1lc3NhZ2U6ICciK2UubWVzc2FnZSsiJywgbmFtZTogJyIrZS5uYW1lKyInIiksdCtufSxuLmdldEV4Y2VwdGlvbk5hbWU9ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpO3JldHVybiJbb2JqZWN0IEVycm9yXSI9PT10P2UubmFtZToiIn0sbi5hZGRFdmVudEhhbmRsZXI9ZnVuY3Rpb24oZSx0KXtpZighd2luZG93fHwic3RyaW5nIiE9dHlwZW9mIGV8fCJmdW5jdGlvbiIhPXR5cGVvZiB0KXJldHVybiExO3ZhciBuPSJvbiIrZTtpZih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcil3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihlLHQsITEpO2Vsc2V7aWYoIXdpbmRvdy5hdHRhY2hFdmVudClyZXR1cm4hMTt3aW5kb3cuYXR0YWNoRXZlbnQuY2FsbChuLHQpfXJldHVybiEwfSxuLklzQmVhY29uQXBpU3VwcG9ydGVkPWZ1bmN0aW9uKCl7cmV0dXJuInNlbmRCZWFjb24iaW4gbmF2aWdhdG9yJiZuYXZpZ2F0b3Iuc2VuZEJlYWNvbn0sbi5kb2N1bWVudD0idW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50Ont9LG4uX2NhblVzZUNvb2tpZXM9dm9pZCAwLG4uX2NhblVzZUxvY2FsU3RvcmFnZT12b2lkIDAsbi5fY2FuVXNlU2Vzc2lvblN0b3JhZ2U9dm9pZCAwLG4uTm90U3BlY2lmaWVkPSJub3Rfc3BlY2lmaWVkIixufSgpO2UuVXRpbD1uO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wYXJzZVVybD1mdW5jdGlvbih0KXtyZXR1cm4gZS5odG1sQW5jaG9yRWxlbWVudHx8KGUuaHRtbEFuY2hvckVsZW1lbnQ9ZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50P2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOnt9KSxlLmh0bWxBbmNob3JFbGVtZW50LmhyZWY9dCxlLmh0bWxBbmNob3JFbGVtZW50fSxlLmdldEFic29sdXRlVXJsPWZ1bmN0aW9uKHQpe3ZhciBuLGk9ZS5wYXJzZVVybCh0KTtyZXR1cm4gaSYmKG49aS5ocmVmKSxufSxlLmdldFBhdGhOYW1lPWZ1bmN0aW9uKHQpe3ZhciBuLGk9ZS5wYXJzZVVybCh0KTtyZXR1cm4gaSYmKG49aS5wYXRobmFtZSksbn0sZS5nZXRDb21wbGV0ZVVybD1mdW5jdGlvbihlLHQpe3JldHVybiBlP2UudG9VcHBlckNhc2UoKSsiICIrdDp0fSxlLmRvY3VtZW50PSJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6e30sZX0oKTtlLlVybEhlbHBlcj1pfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe2VbZS5EZWZhdWx0PTBdPSJEZWZhdWx0IixlW2UuUmVxdWlyZWQ9MV09IlJlcXVpcmVkIixlW2UuQXJyYXk9Ml09IkFycmF5IixlW2UuSGlkZGVuPTRdPSJIaWRkZW4ifSh0PWUuRmllbGRUeXBlfHwoZS5GaWVsZFR5cGU9e30pKTt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oKXt9cmV0dXJuIG4uc2VyaWFsaXplPWZ1bmN0aW9uKGUpe3ZhciB0PW4uX3NlcmlhbGl6ZU9iamVjdChlLCJyb290Iik7cmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpfSxuLl9zZXJpYWxpemVPYmplY3Q9ZnVuY3Rpb24oaSxvKXt2YXIgYT0iX19haUNpcmN1bGFyUmVmQ2hlY2siLHI9e307aWYoIWkpcmV0dXJuIGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLkNhbm5vdFNlcmlhbGl6ZU9iamVjdCwiY2Fubm90IHNlcmlhbGl6ZSBvYmplY3QgYmVjYXVzZSBpdCBpcyBudWxsIG9yIHVuZGVmaW5lZCIse25hbWU6b30sITApLHI7aWYoaVthXSlyZXR1cm4gZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5DaXJjdWxhclJlZmVyZW5jZURldGVjdGVkLCJDaXJjdWxhciByZWZlcmVuY2UgZGV0ZWN0ZWQgd2hpbGUgc2VyaWFsaXppbmcgb2JqZWN0Iix7bmFtZTpvfSwhMCkscjtpZighaS5haURhdGFDb250cmFjdCl7aWYoIm1lYXN1cmVtZW50cyI9PT1vKXI9bi5fc2VyaWFsaXplU3RyaW5nTWFwKGksIm51bWJlciIsbyk7ZWxzZSBpZigicHJvcGVydGllcyI9PT1vKXI9bi5fc2VyaWFsaXplU3RyaW5nTWFwKGksInN0cmluZyIsbyk7ZWxzZSBpZigidGFncyI9PT1vKXI9bi5fc2VyaWFsaXplU3RyaW5nTWFwKGksInN0cmluZyIsbyk7ZWxzZSBpZihlLlV0aWwuaXNBcnJheShpKSlyPW4uX3NlcmlhbGl6ZUFycmF5KGksbyk7ZWxzZXtlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkNhbm5vdFNlcmlhbGl6ZU9iamVjdE5vblNlcmlhbGl6YWJsZSwiQXR0ZW1wdGluZyB0byBzZXJpYWxpemUgYW4gb2JqZWN0IHdoaWNoIGRvZXMgbm90IGltcGxlbWVudCBJU2VyaWFsaXphYmxlIix7bmFtZTpvfSwhMCk7dHJ5e0pTT04uc3RyaW5naWZ5KGkpLHI9aX1jYXRjaChzKXtlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5DYW5ub3RTZXJpYWxpemVPYmplY3QscyYmImZ1bmN0aW9uIj09dHlwZW9mIHMudG9TdHJpbmc/cy50b1N0cmluZygpOiJFcnJvciBzZXJpYWxpemluZyBvYmplY3QiLG51bGwsITApOwp9fXJldHVybiByfWlbYV09ITA7Zm9yKHZhciBjIGluIGkuYWlEYXRhQ29udHJhY3Qpe3ZhciBkPWkuYWlEYXRhQ29udHJhY3RbY10sbD0iZnVuY3Rpb24iPT10eXBlb2YgZD9kKCkmdC5SZXF1aXJlZDpkJnQuUmVxdWlyZWQsdT0iZnVuY3Rpb24iPT10eXBlb2YgZD9kKCkmdC5IaWRkZW46ZCZ0LkhpZGRlbixwPWQmdC5BcnJheSxmPXZvaWQgMCE9PWlbY10sZz0ib2JqZWN0Ij09dHlwZW9mIGlbY10mJm51bGwhPT1pW2NdO2lmKCFsfHxmfHxwKXtpZighdSl7dmFyIG07bT1nP3A/bi5fc2VyaWFsaXplQXJyYXkoaVtjXSxjKTpuLl9zZXJpYWxpemVPYmplY3QoaVtjXSxjKTppW2NdLHZvaWQgMCE9PW0mJihyW2NdPW0pfX1lbHNlIGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLk1pc3NpbmdSZXF1aXJlZEZpZWxkU3BlY2lmaWNhdGlvbiwiTWlzc2luZyByZXF1aXJlZCBmaWVsZCBzcGVjaWZpY2F0aW9uLiBUaGUgZmllbGQgaXMgcmVxdWlyZWQgYnV0IG5vdCBwcmVzZW50IG9uIHNvdXJjZSIse2ZpZWxkOmMsbmFtZTpvfSl9cmV0dXJuIGRlbGV0ZSBpW2FdLHJ9LG4uX3NlcmlhbGl6ZUFycmF5PWZ1bmN0aW9uKHQsaSl7dmFyIG89dm9pZCAwO2lmKHQpaWYoZS5VdGlsLmlzQXJyYXkodCkpe289W107Zm9yKHZhciBhPTA7YTx0Lmxlbmd0aDthKyspe3ZhciByPXRbYV0scz1uLl9zZXJpYWxpemVPYmplY3QocixpKyJbIithKyJdIik7by5wdXNoKHMpfX1lbHNlIGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLkl0ZW1Ob3RJbkFycmF5LCJUaGlzIGZpZWxkIHdhcyBzcGVjaWZpZWQgYXMgYW4gYXJyYXkgaW4gdGhlIGNvbnRyYWN0IGJ1dCB0aGUgaXRlbSBpcyBub3QgYW4gYXJyYXkuXHJcbiIse25hbWU6aX0sITApO3JldHVybiBvfSxuLl9zZXJpYWxpemVTdHJpbmdNYXA9ZnVuY3Rpb24odCxuLGkpe3ZhciBvPXZvaWQgMDtpZih0KXtvPXt9O2Zvcih2YXIgYSBpbiB0KXt2YXIgcj10W2FdO2lmKCJzdHJpbmciPT09bil2b2lkIDA9PT1yP29bYV09InVuZGVmaW5lZCI6bnVsbD09PXI/b1thXT0ibnVsbCI6ci50b1N0cmluZz9vW2FdPXIudG9TdHJpbmcoKTpvW2FdPSJpbnZhbGlkIGZpZWxkOiB0b1N0cmluZygpIGlzIG5vdCBkZWZpbmVkLiI7ZWxzZSBpZigibnVtYmVyIj09PW4paWYodm9pZCAwPT09cilvW2FdPSJ1bmRlZmluZWQiO2Vsc2UgaWYobnVsbD09PXIpb1thXT0ibnVsbCI7ZWxzZXt2YXIgcz1wYXJzZUZsb2F0KHIpO2lzTmFOKHMpP29bYV09Ik5hTiI6b1thXT1zfWVsc2Ugb1thXT0iaW52YWxpZCBmaWVsZDogIitpKyIgaXMgb2YgdW5rbm93biB0eXBlLiIsZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsb1thXSxudWxsLCEwKX19cmV0dXJuIG99LG59KCk7ZS5TZXJpYWxpemVyPW59KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbjshZnVuY3Rpb24obil7dmFyIG87IWZ1bmN0aW9uKG4pe3ZhciBvPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG8oaSxvKXt2YXIgYT1lLmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIGEubmFtZT1uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVTdHJpbmcobyl8fHQuVXRpbC5Ob3RTcGVjaWZpZWQsYS5kYXRhPWksYS50aW1lPXQuVXRpbC50b0lTT1N0cmluZ0ZvcklFOChuZXcgRGF0ZSksYS5haURhdGFDb250cmFjdD17dGltZTp0LkZpZWxkVHlwZS5SZXF1aXJlZCxpS2V5OnQuRmllbGRUeXBlLlJlcXVpcmVkLG5hbWU6dC5GaWVsZFR5cGUuUmVxdWlyZWQsc2FtcGxlUmF0ZTpmdW5jdGlvbigpe3JldHVybiAxMDA9PWEuc2FtcGxlUmF0ZT90LkZpZWxkVHlwZS5IaWRkZW46dC5GaWVsZFR5cGUuUmVxdWlyZWR9LHRhZ3M6dC5GaWVsZFR5cGUuUmVxdWlyZWQsZGF0YTp0LkZpZWxkVHlwZS5SZXF1aXJlZH0sYX1yZXR1cm4gaShvLGUpLG99KGUuVGVsZW1ldHJ5LkVudmVsb3BlKTtuLkVudmVsb3BlPW99KG89bi5Db21tb258fChuLkNvbW1vbj17fSkpfShuPXQuVGVsZW1ldHJ5fHwodC5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuOyFmdW5jdGlvbih0KXt2YXIgbjshZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciB0PW51bGwhPT1lJiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gdC5haURhdGFDb250cmFjdD17fSx0fXJldHVybiBpKHQsZSksdH0oZS5UZWxlbWV0cnkuQmFzZSk7dC5CYXNlPW59KG49dC5Db21tb258fCh0LkNvbW1vbj17fSkpfShuPXQuVGVsZW1ldHJ5fHwodC5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbzshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dGhpcy5hcHBsaWNhdGlvblZlcnNpb249ImFpLmFwcGxpY2F0aW9uLnZlciIsdGhpcy5hcHBsaWNhdGlvbkJ1aWxkPSJhaS5hcHBsaWNhdGlvbi5idWlsZCIsdGhpcy5hcHBsaWNhdGlvblR5cGVJZD0iYWkuYXBwbGljYXRpb24udHlwZUlkIix0aGlzLmFwcGxpY2F0aW9uSWQ9ImFpLmFwcGxpY2F0aW9uLmFwcGxpY2F0aW9uSWQiLHRoaXMuZGV2aWNlSWQ9ImFpLmRldmljZS5pZCIsdGhpcy5kZXZpY2VJcD0iYWkuZGV2aWNlLmlwIix0aGlzLmRldmljZUxhbmd1YWdlPSJhaS5kZXZpY2UubGFuZ3VhZ2UiLHRoaXMuZGV2aWNlTG9jYWxlPSJhaS5kZXZpY2UubG9jYWxlIix0aGlzLmRldmljZU1vZGVsPSJhaS5kZXZpY2UubW9kZWwiLHRoaXMuZGV2aWNlTmV0d29yaz0iYWkuZGV2aWNlLm5ldHdvcmsiLHRoaXMuZGV2aWNlTmV0d29ya05hbWU9ImFpLmRldmljZS5uZXR3b3JrTmFtZSIsdGhpcy5kZXZpY2VPRU1OYW1lPSJhaS5kZXZpY2Uub2VtTmFtZSIsdGhpcy5kZXZpY2VPUz0iYWkuZGV2aWNlLm9zIix0aGlzLmRldmljZU9TVmVyc2lvbj0iYWkuZGV2aWNlLm9zVmVyc2lvbiIsdGhpcy5kZXZpY2VSb2xlSW5zdGFuY2U9ImFpLmRldmljZS5yb2xlSW5zdGFuY2UiLHRoaXMuZGV2aWNlUm9sZU5hbWU9ImFpLmRldmljZS5yb2xlTmFtZSIsdGhpcy5kZXZpY2VTY3JlZW5SZXNvbHV0aW9uPSJhaS5kZXZpY2Uuc2NyZWVuUmVzb2x1dGlvbiIsdGhpcy5kZXZpY2VUeXBlPSJhaS5kZXZpY2UudHlwZSIsdGhpcy5kZXZpY2VNYWNoaW5lTmFtZT0iYWkuZGV2aWNlLm1hY2hpbmVOYW1lIix0aGlzLmRldmljZVZNTmFtZT0iYWkuZGV2aWNlLnZtTmFtZSIsdGhpcy5sb2NhdGlvbklwPSJhaS5sb2NhdGlvbi5pcCIsdGhpcy5vcGVyYXRpb25JZD0iYWkub3BlcmF0aW9uLmlkIix0aGlzLm9wZXJhdGlvbk5hbWU9ImFpLm9wZXJhdGlvbi5uYW1lIix0aGlzLm9wZXJhdGlvblBhcmVudElkPSJhaS5vcGVyYXRpb24ucGFyZW50SWQiLHRoaXMub3BlcmF0aW9uUm9vdElkPSJhaS5vcGVyYXRpb24ucm9vdElkIix0aGlzLm9wZXJhdGlvblN5bnRoZXRpY1NvdXJjZT0iYWkub3BlcmF0aW9uLnN5bnRoZXRpY1NvdXJjZSIsdGhpcy5vcGVyYXRpb25Jc1N5bnRoZXRpYz0iYWkub3BlcmF0aW9uLmlzU3ludGhldGljIix0aGlzLm9wZXJhdGlvbkNvcnJlbGF0aW9uVmVjdG9yPSJhaS5vcGVyYXRpb24uY29ycmVsYXRpb25WZWN0b3IiLHRoaXMuc2Vzc2lvbklkPSJhaS5zZXNzaW9uLmlkIix0aGlzLnNlc3Npb25Jc0ZpcnN0PSJhaS5zZXNzaW9uLmlzRmlyc3QiLHRoaXMuc2Vzc2lvbklzTmV3PSJhaS5zZXNzaW9uLmlzTmV3Iix0aGlzLnVzZXJBY2NvdW50QWNxdWlzaXRpb25EYXRlPSJhaS51c2VyLmFjY291bnRBY3F1aXNpdGlvbkRhdGUiLHRoaXMudXNlckFjY291bnRJZD0iYWkudXNlci5hY2NvdW50SWQiLHRoaXMudXNlckFnZW50PSJhaS51c2VyLnVzZXJBZ2VudCIsdGhpcy51c2VySWQ9ImFpLnVzZXIuaWQiLHRoaXMudXNlclN0b3JlUmVnaW9uPSJhaS51c2VyLnN0b3JlUmVnaW9uIix0aGlzLnVzZXJBdXRoVXNlcklkPSJhaS51c2VyLmF1dGhVc2VySWQiLHRoaXMudXNlckFub255bW91c1VzZXJBY3F1aXNpdGlvbkRhdGU9ImFpLnVzZXIuYW5vblVzZXJBY3F1aXNpdGlvbkRhdGUiLHRoaXMudXNlckF1dGhlbnRpY2F0ZWRVc2VyQWNxdWlzaXRpb25EYXRlPSJhaS51c2VyLmF1dGhVc2VyQWNxdWlzaXRpb25EYXRlIix0aGlzLnNhbXBsZVJhdGU9ImFpLnNhbXBsZS5zYW1wbGVSYXRlIix0aGlzLmNsb3VkTmFtZT0iYWkuY2xvdWQubmFtZSIsdGhpcy5jbG91ZFJvbGVWZXI9ImFpLmNsb3VkLnJvbGVWZXIiLHRoaXMuY2xvdWRFbnZpcm9ubWVudD0iYWkuY2xvdWQuZW52aXJvbm1lbnQiLHRoaXMuY2xvdWRMb2NhdGlvbj0iYWkuY2xvdWQubG9jYXRpb24iLHRoaXMuY2xvdWREZXBsb3ltZW50VW5pdD0iYWkuY2xvdWQuZGVwbG95bWVudFVuaXQiLHRoaXMuc2VydmVyRGV2aWNlT1M9ImFpLnNlcnZlckRldmljZS5vcyIsdGhpcy5zZXJ2ZXJEZXZpY2VPU1Zlcj0iYWkuc2VydmVyRGV2aWNlLm9zVmVyIix0aGlzLmludGVybmFsU2RrVmVyc2lvbj0iYWkuaW50ZXJuYWwuc2RrVmVyc2lvbiIsdGhpcy5pbnRlcm5hbEFnZW50VmVyc2lvbj0iYWkuaW50ZXJuYWwuYWdlbnRWZXJzaW9uIix0aGlzLmludGVybmFsRGF0YUNvbGxlY3RvclJlY2VpdmVkVGltZT0iYWkuaW50ZXJuYWwuZGF0YUNvbGxlY3RvclJlY2VpdmVkVGltZSIsdGhpcy5pbnRlcm5hbFByb2ZpbGVJZD0iYWkuaW50ZXJuYWwucHJvZmlsZUlkIix0aGlzLmludGVybmFsUHJvZmlsZUNsYXNzSWQ9ImFpLmludGVybmFsLnByb2ZpbGVDbGFzc0lkIix0aGlzLmludGVybmFsQWNjb3VudElkPSJhaS5pbnRlcm5hbC5hY2NvdW50SWQiLHRoaXMuaW50ZXJuYWxBcHBsaWNhdGlvbk5hbWU9ImFpLmludGVybmFsLmFwcGxpY2F0aW9uTmFtZSIsdGhpcy5pbnRlcm5hbEluc3RydW1lbnRhdGlvbktleT0iYWkuaW50ZXJuYWwuaW5zdHJ1bWVudGF0aW9uS2V5Iix0aGlzLmludGVybmFsVGVsZW1ldHJ5SXRlbUlkPSJhaS5pbnRlcm5hbC50ZWxlbWV0cnlJdGVtSWQiLHRoaXMuaW50ZXJuYWxBcHBsaWNhdGlvblR5cGU9ImFpLmludGVybmFsLmFwcGxpY2F0aW9uVHlwZSIsdGhpcy5pbnRlcm5hbFJlcXVlc3RTb3VyY2U9ImFpLmludGVybmFsLnJlcXVlc3RTb3VyY2UiLHRoaXMuaW50ZXJuYWxGbG93VHlwZT0iYWkuaW50ZXJuYWwuZmxvd1R5cGUiLHRoaXMuaW50ZXJuYWxJc0F1ZGl0PSJhaS5pbnRlcm5hbC5pc0F1ZGl0Iix0aGlzLmludGVybmFsVHJhY2tpbmdTb3VyY2VJZD0iYWkuaW50ZXJuYWwudHJhY2tpbmdTb3VyY2VJZCIsdGhpcy5pbnRlcm5hbFRyYWNraW5nVHlwZT0iYWkuaW50ZXJuYWwudHJhY2tpbmdUeXBlIix0aGlzLmludGVybmFsSXNEaWFnbm9zdGljRXhhbXBsZT0iYWkuaW50ZXJuYWwuaXNEaWFnbm9zdGljRXhhbXBsZSJ9cmV0dXJuIGV9KCk7ZS5Db250ZXh0VGFnS2V5cz10fShvfHwobz17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZX0oKTtlLkFwcGxpY2F0aW9uPXR9KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dGhpcy5pZD0iYnJvd3NlciIsdGhpcy50eXBlPSJCcm93c2VyIn1yZXR1cm4gZX0oKTtlLkRldmljZT10fSh0PWUuQ29udGV4dHx8KGUuQ29udGV4dD17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLnNka1ZlcnNpb249KHQuc2RrRXh0ZW5zaW9uKCk/dC5zZGtFeHRlbnNpb24oKSsiXyI6IiIpKyJqYXZhc2NyaXB0OiIrZS5WZXJzaW9ufXJldHVybiB0fSgpO3QuSW50ZXJuYWw9bn0odD1lLkNvbnRleHR8fChlLkNvbnRleHQ9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGV9KCk7ZS5Mb2NhdGlvbj10fSh0PWUuQ29udGV4dHx8KGUuQ29udGV4dD17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMuaWQ9ZS5VdGlsLm5ld0lkKCksd2luZG93JiZ3aW5kb3cubG9jYXRpb24mJndpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSYmKHRoaXMubmFtZT13aW5kb3cubG9jYXRpb24ucGF0aG5hbWUpfXJldHVybiB0fSgpO3QuT3BlcmF0aW9uPW59KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUucHJvdG90eXBlLmdldEhhc2hDb2RlU2NvcmU9ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5nZXRIYXNoQ29kZSh0KS9lLklOVF9NQVhfVkFMVUU7cmV0dXJuIDEwMCpufSxlLnByb3RvdHlwZS5nZXRIYXNoQ29kZT1mdW5jdGlvbih0KXtpZigiIj09dClyZXR1cm4gMDtmb3IoO3QubGVuZ3RoPGUuTUlOX0lOUFVUX0xFTkdUSDspdD10LmNvbmNhdCh0KTtmb3IodmFyIG49NTM4MSxpPTA7aTx0Lmxlbmd0aDsrK2kpbj0objw8NSkrbit0LmNoYXJDb2RlQXQoaSksbiY9bjtyZXR1cm4gTWF0aC5hYnMobil9LGUuSU5UX01BWF9WQUxVRT0yMTQ3NDgzNjQ3LGUuTUlOX0lOUFVUX0xFTkdUSD04LGV9KCk7ZS5IYXNoQ29kZVNjb3JlR2VuZXJhdG9yPXR9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLmhhc2hDb2RlR2VuZXJhZ29yPW5ldyBlLkhhc2hDb2RlU2NvcmVHZW5lcmF0b3J9cmV0dXJuIHQucHJvdG90eXBlLmdldFNhbXBsaW5nU2NvcmU9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG8uQ29udGV4dFRhZ0tleXMsbj0wO3JldHVybiBuPWUudGFnc1t0LnVzZXJJZF0/dGhpcy5oYXNoQ29kZUdlbmVyYWdvci5nZXRIYXNoQ29kZVNjb3JlKGUudGFnc1t0LnVzZXJJZF0pOmUudGFnc1t0Lm9wZXJhdGlvbklkXT90aGlzLmhhc2hDb2RlR2VuZXJhZ29yLmdldEhhc2hDb2RlU2NvcmUoZS50YWdzW3Qub3BlcmF0aW9uSWRdKTpNYXRoLnJhbmRvbSgpfSx0fSgpO2UuU2FtcGxpbmdTY29yZUdlbmVyYXRvcj10fSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLklOVF9NQVhfVkFMVUU9MjE0NzQ4MzY0NywodD4xMDB8fHQ8MCkmJihlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLlNhbXBsZVJhdGVPdXRPZlJhbmdlLCJTYW1wbGluZyByYXRlIGlzIG91dCBvZiByYW5nZSAoMC4uMTAwKS4gU2FtcGxpbmcgd2lsbCBiZSBkaXNhYmxlZCwgeW91IG1heSBiZSBzZW5kaW5nIHRvbyBtdWNoIGRhdGEgd2hpY2ggbWF5IGFmZmVjdCB5b3VyIEFJIHNlcnZpY2UgbGV2ZWwuIix7c2FtcGxpbmdSYXRlOnR9LCEwKSx0aGlzLnNhbXBsZVJhdGU9MTAwKSx0aGlzLnNhbXBsZVJhdGU9dCx0aGlzLnNhbXBsaW5nU2NvcmVHZW5lcmF0b3I9bmV3IGUuU2FtcGxpbmdTY29yZUdlbmVyYXRvcn1yZXR1cm4gdC5wcm90b3R5cGUuaXNTYW1wbGVkSW49ZnVuY3Rpb24oZSl7aWYoMTAwPT10aGlzLnNhbXBsZVJhdGUpcmV0dXJuITA7dmFyIHQ9dGhpcy5zYW1wbGluZ1Njb3JlR2VuZXJhdG9yLmdldFNhbXBsaW5nU2NvcmUoZSk7cmV0dXJuIHQ8dGhpcy5zYW1wbGVSYXRlfSx0fSgpO3QuU2FtcGxlPW59KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXtlW2UuU3RhcnQ9MF09IlN0YXJ0IixlW2UuRW5kPTFdPSJFbmQifSh0PWUuU2Vzc2lvblN0YXRlfHwoZS5TZXNzaW9uU3RhdGU9e30pKX0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGV9KCk7dC5TZXNzaW9uPW47dmFyIGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpe2V8fChlPXt9KSwiZnVuY3Rpb24iIT10eXBlb2YgZS5zZXNzaW9uRXhwaXJhdGlvbk1zJiYoZS5zZXNzaW9uRXhwaXJhdGlvbk1zPWZ1bmN0aW9uKCl7cmV0dXJuIHQuYWNxdWlzaXRpb25TcGFufSksImZ1bmN0aW9uIiE9dHlwZW9mIGUuc2Vzc2lvblJlbmV3YWxNcyYmKGUuc2Vzc2lvblJlbmV3YWxNcz1mdW5jdGlvbigpe3JldHVybiB0LnJlbmV3YWxTcGFufSksdGhpcy5jb25maWc9ZSx0aGlzLmF1dG9tYXRpY1Nlc3Npb249bmV3IG59cmV0dXJuIHQucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuYXV0b21hdGljU2Vzc2lvbi5pZHx8dGhpcy5pbml0aWFsaXplQXV0b21hdGljU2Vzc2lvbigpO3ZhciBuPWUuZGF0ZVRpbWUuTm93KCksaT1uLXRoaXMuYXV0b21hdGljU2Vzc2lvbi5hY3F1aXNpdGlvbkRhdGU+dGhpcy5jb25maWcuc2Vzc2lvbkV4cGlyYXRpb25NcygpLG89bi10aGlzLmF1dG9tYXRpY1Nlc3Npb24ucmVuZXdhbERhdGU+dGhpcy5jb25maWcuc2Vzc2lvblJlbmV3YWxNcygpO2l8fG8/KHRoaXMuYXV0b21hdGljU2Vzc2lvbi5pc0ZpcnN0PXZvaWQgMCx0aGlzLnJlbmV3KCkpOighdGhpcy5jb29raWVVcGRhdGVkVGltZXN0YW1wfHxuLXRoaXMuY29va2llVXBkYXRlZFRpbWVzdGFtcD50LmNvb2tpZVVwZGF0ZUludGVydmFsKSYmKHRoaXMuYXV0b21hdGljU2Vzc2lvbi5yZW5ld2FsRGF0ZT1uLHRoaXMuc2V0Q29va2llKHRoaXMuYXV0b21hdGljU2Vzc2lvbi5pZCx0aGlzLmF1dG9tYXRpY1Nlc3Npb24uYWNxdWlzaXRpb25EYXRlLHRoaXMuYXV0b21hdGljU2Vzc2lvbi5yZW5ld2FsRGF0ZSkpfSx0LnByb3RvdHlwZS5iYWNrdXA9ZnVuY3Rpb24oKXt0aGlzLnNldFN0b3JhZ2UodGhpcy5hdXRvbWF0aWNTZXNzaW9uLmlkLHRoaXMuYXV0b21hdGljU2Vzc2lvbi5hY3F1aXNpdGlvbkRhdGUsdGhpcy5hdXRvbWF0aWNTZXNzaW9uLnJlbmV3YWxEYXRlKX0sdC5wcm90b3R5cGUuaW5pdGlhbGl6ZUF1dG9tYXRpY1Nlc3Npb249ZnVuY3Rpb24oKXt2YXIgdD1lLlV0aWwuZ2V0Q29va2llKCJhaV9zZXNzaW9uIik7aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mIHQuc3BsaXQpdGhpcy5pbml0aWFsaXplQXV0b21hdGljU2Vzc2lvbldpdGhEYXRhKHQpO2Vsc2V7dmFyIG49ZS5VdGlsLmdldFN0b3JhZ2UoImFpX3Nlc3Npb24iKTtuJiZ0aGlzLmluaXRpYWxpemVBdXRvbWF0aWNTZXNzaW9uV2l0aERhdGEobil9dGhpcy5hdXRvbWF0aWNTZXNzaW9uLmlkfHwodGhpcy5hdXRvbWF0aWNTZXNzaW9uLmlzRmlyc3Q9ITAsdGhpcy5yZW5ldygpKX0sdC5wcm90b3R5cGUuaW5pdGlhbGl6ZUF1dG9tYXRpY1Nlc3Npb25XaXRoRGF0YT1mdW5jdGlvbih0KXt2YXIgbj10LnNwbGl0KCJ8Iik7bi5sZW5ndGg+MCYmKHRoaXMuYXV0b21hdGljU2Vzc2lvbi5pZD1uWzBdKTt0cnl7aWYobi5sZW5ndGg+MSl7dmFyIGk9K25bMV07dGhpcy5hdXRvbWF0aWNTZXNzaW9uLmFjcXVpc2l0aW9uRGF0ZT0rbmV3IERhdGUoaSksdGhpcy5hdXRvbWF0aWNTZXNzaW9uLmFjcXVpc2l0aW9uRGF0ZT10aGlzLmF1dG9tYXRpY1Nlc3Npb24uYWNxdWlzaXRpb25EYXRlPjA/dGhpcy5hdXRvbWF0aWNTZXNzaW9uLmFjcXVpc2l0aW9uRGF0ZTowfWlmKG4ubGVuZ3RoPjIpe3ZhciBvPStuWzJdO3RoaXMuYXV0b21hdGljU2Vzc2lvbi5yZW5ld2FsRGF0ZT0rbmV3IERhdGUobyksdGhpcy5hdXRvbWF0aWNTZXNzaW9uLnJlbmV3YWxEYXRlPXRoaXMuYXV0b21hdGljU2Vzc2lvbi5yZW5ld2FsRGF0ZT4wP3RoaXMuYXV0b21hdGljU2Vzc2lvbi5yZW5ld2FsRGF0ZTowfX1jYXRjaChhKXtlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5FcnJvclBhcnNpbmdBSVNlc3Npb25Db29raWUsIkVycm9yIHBhcnNpbmcgYWlfc2Vzc2lvbiBjb29raWUsIHNlc3Npb24gd2lsbCBiZSByZXNldDogIitlLlV0aWwuZ2V0RXhjZXB0aW9uTmFtZShhKSx7ZXhjZXB0aW9uOmUuVXRpbC5kdW1wKGEpfSl9MD09dGhpcy5hdXRvbWF0aWNTZXNzaW9uLnJlbmV3YWxEYXRlJiZlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLlNlc3Npb25SZW5ld2FsRGF0ZUlzWmVybywiQUkgc2Vzc2lvbiByZW5ld2FsIGRhdGUgaXMgMCwgc2Vzc2lvbiB3aWxsIGJlIHJlc2V0LiIpfSx0LnByb3RvdHlwZS5yZW5ldz1mdW5jdGlvbigpe3ZhciB0PWUuZGF0ZVRpbWUuTm93KCk7dGhpcy5hdXRvbWF0aWNTZXNzaW9uLmlkPWUuVXRpbC5uZXdJZCgpLHRoaXMuYXV0b21hdGljU2Vzc2lvbi5hY3F1aXNpdGlvbkRhdGU9dCx0aGlzLmF1dG9tYXRpY1Nlc3Npb24ucmVuZXdhbERhdGU9dCx0aGlzLnNldENvb2tpZSh0aGlzLmF1dG9tYXRpY1Nlc3Npb24uaWQsdGhpcy5hdXRvbWF0aWNTZXNzaW9uLmFjcXVpc2l0aW9uRGF0ZSx0aGlzLmF1dG9tYXRpY1Nlc3Npb24ucmVuZXdhbERhdGUpLGUuVXRpbC5jYW5Vc2VMb2NhbFN0b3JhZ2UoKXx8ZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5Ccm93c2VyRG9lc05vdFN1cHBvcnRMb2NhbFN0b3JhZ2UsIkJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBsb2NhbCBzdG9yYWdlLiBTZXNzaW9uIGR1cmF0aW9ucyB3aWxsIGJlIGluYWNjdXJhdGUuIil9LHQucHJvdG90eXBlLnNldENvb2tpZT1mdW5jdGlvbih0LG4saSl7dmFyIG89bit0aGlzLmNvbmZpZy5zZXNzaW9uRXhwaXJhdGlvbk1zKCksYT1pK3RoaXMuY29uZmlnLnNlc3Npb25SZW5ld2FsTXMoKSxyPW5ldyBEYXRlLHM9W3QsbixpXTtvPGE/ci5zZXRUaW1lKG8pOnIuc2V0VGltZShhKTt2YXIgYz10aGlzLmNvbmZpZy5jb29raWVEb21haW4/dGhpcy5jb25maWcuY29va2llRG9tYWluKCk6bnVsbDtlLlV0aWwuc2V0Q29va2llKCJhaV9zZXNzaW9uIixzLmpvaW4oInwiKSsiO2V4cGlyZXM9IityLnRvVVRDU3RyaW5nKCksYyksdGhpcy5jb29raWVVcGRhdGVkVGltZXN0YW1wPWUuZGF0ZVRpbWUuTm93KCl9LHQucHJvdG90eXBlLnNldFN0b3JhZ2U9ZnVuY3Rpb24odCxuLGkpe2UuVXRpbC5zZXRTdG9yYWdlKCJhaV9zZXNzaW9uIixbdCxuLGldLmpvaW4oInwiKSl9LHQuYWNxdWlzaXRpb25TcGFuPTg2NGU1LHQucmVuZXdhbFNwYW49MThlNSx0LmNvb2tpZVVwZGF0ZUludGVydmFsPTZlNCx0fSgpO3QuX1Nlc3Npb25NYW5hZ2VyPWl9KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4pe3ZhciBpPWUuVXRpbC5nZXRDb29raWUodC51c2VyQ29va2llTmFtZSk7aWYoaSl7dmFyIG89aS5zcGxpdCh0LmNvb2tpZVNlcGFyYXRvcik7by5sZW5ndGg+MCYmKHRoaXMuaWQ9b1swXSl9aWYodGhpcy5jb25maWc9biwhdGhpcy5pZCl7dGhpcy5pZD1lLlV0aWwubmV3SWQoKTt2YXIgYT1uZXcgRGF0ZSxyPWUuVXRpbC50b0lTT1N0cmluZ0ZvcklFOChhKTt0aGlzLmFjY291bnRBY3F1aXNpdGlvbkRhdGU9cixhLnNldFRpbWUoYS5nZXRUaW1lKCkrMzE1MzZlNik7dmFyIHM9W3RoaXMuaWQscl0sYz10aGlzLmNvbmZpZy5jb29raWVEb21haW4/dGhpcy5jb25maWcuY29va2llRG9tYWluKCk6dm9pZCAwO2UuVXRpbC5zZXRDb29raWUodC51c2VyQ29va2llTmFtZSxzLmpvaW4odC5jb29raWVTZXBhcmF0b3IpKyI7ZXhwaXJlcz0iK2EudG9VVENTdHJpbmcoKSxjKSxlLlV0aWwucmVtb3ZlU3RvcmFnZSgiYWlfc2Vzc2lvbiIpfXRoaXMuYWNjb3VudElkPW4uYWNjb3VudElkP24uYWNjb3VudElkKCk6dm9pZCAwO3ZhciBkPWUuVXRpbC5nZXRDb29raWUodC5hdXRoVXNlckNvb2tpZU5hbWUpO2lmKGQpe2Q9ZGVjb2RlVVJJKGQpO3ZhciBsPWQuc3BsaXQodC5jb29raWVTZXBhcmF0b3IpO2xbMF0mJih0aGlzLmF1dGhlbnRpY2F0ZWRJZD1sWzBdKSxsLmxlbmd0aD4xJiZsWzFdJiYodGhpcy5hY2NvdW50SWQ9bFsxXSl9fXJldHVybiB0LnByb3RvdHlwZS5zZXRBdXRoZW50aWNhdGVkVXNlckNvbnRleHQ9ZnVuY3Rpb24obixpKXt2YXIgbz0hdGhpcy52YWxpZGF0ZVVzZXJJbnB1dChuKXx8aSYmIXRoaXMudmFsaWRhdGVVc2VySW5wdXQoaSk7aWYobylyZXR1cm4gdm9pZCBlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLlNldEF1dGhDb250ZXh0RmFpbGVkQWNjb3VudE5hbWUsIlNldHRpbmcgYXV0aCB1c2VyIGNvbnRleHQgZmFpbGVkLiBVc2VyIGF1dGgvYWNjb3VudCBpZCBzaG91bGQgYmUgb2YgdHlwZSBzdHJpbmcsIGFuZCBub3QgY29udGFpbiBjb21tYXMsIHNlbWktY29sb25zLCBlcXVhbCBzaWducywgc3BhY2VzLCBvciB2ZXJ0aWNhbC1iYXJzLiIsITApO3RoaXMuYXV0aGVudGljYXRlZElkPW47dmFyIGE9dGhpcy5hdXRoZW50aWNhdGVkSWQ7aSYmKHRoaXMuYWNjb3VudElkPWksYT1bdGhpcy5hdXRoZW50aWNhdGVkSWQsdGhpcy5hY2NvdW50SWRdLmpvaW4odC5jb29raWVTZXBhcmF0b3IpKSxlLlV0aWwuc2V0Q29va2llKHQuYXV0aFVzZXJDb29raWVOYW1lLGVuY29kZVVSSShhKSx0aGlzLmNvbmZpZy5jb29raWVEb21haW4oKSl9LHQucHJvdG90eXBlLmNsZWFyQXV0aGVudGljYXRlZFVzZXJDb250ZXh0PWZ1bmN0aW9uKCl7dGhpcy5hdXRoZW50aWNhdGVkSWQ9bnVsbCx0aGlzLmFjY291bnRJZD1udWxsLGUuVXRpbC5kZWxldGVDb29raWUodC5hdXRoVXNlckNvb2tpZU5hbWUpfSx0LnByb3RvdHlwZS52YWxpZGF0ZVVzZXJJbnB1dD1mdW5jdGlvbihlKXtyZXR1cm4hKCJzdHJpbmciIT10eXBlb2YgZXx8IWV8fGUubWF0Y2goLyx8O3w9fCB8XHwvKSl9LHQuY29va2llU2VwYXJhdG9yPSJ8Iix0LnVzZXJDb29raWVOYW1lPSJhaV91c2VyIix0LmF1dGhVc2VyQ29va2llTmFtZT0iYWlfYXV0aFVzZXIiLHR9KCk7dC5Vc2VyPW59KHQ9ZS5Db250ZXh0fHwoZS5Db250ZXh0PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUuSXNOdWxsT3JVbmRlZmluZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuInVuZGVmaW5lZCI9PXR5cGVvZiBlfHxudWxsPT09ZX0sZX0oKTtlLmV4dGVuc2lvbnM9dDt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUuR2V0TGVuZ3RoPWZ1bmN0aW9uKGUpe3ZhciBuPTA7aWYoIXQuSXNOdWxsT3JVbmRlZmluZWQoZSkpe3ZhciBpPSIiO3RyeXtpPWUudG9TdHJpbmcoKX1jYXRjaChvKXt9bj1pLmxlbmd0aCxuPWlzTmFOKG4pPzA6bn1yZXR1cm4gbn0sZX0oKTtlLnN0cmluZ1V0aWxzPW47dmFyIGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7fXJldHVybiBlLk5vdz13aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS5ub3cmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmc/ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpK3dpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0fTpmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxlLkdldER1cmF0aW9uPWZ1bmN0aW9uKGUsbil7dmFyIGk9bnVsbDtyZXR1cm4gMD09PWV8fDA9PT1ufHx0LklzTnVsbE9yVW5kZWZpbmVkKGUpfHx0LklzTnVsbE9yVW5kZWZpbmVkKG4pfHwoaT1uLWUpLGl9LGV9KCk7ZS5kYXRlVGltZT1pO3ZhciBvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5BdHRhY2hFdmVudD1mdW5jdGlvbihlLG4saSl7dmFyIG89ITE7cmV0dXJuIHQuSXNOdWxsT3JVbmRlZmluZWQoZSl8fCh0LklzTnVsbE9yVW5kZWZpbmVkKGUuYXR0YWNoRXZlbnQpP3QuSXNOdWxsT3JVbmRlZmluZWQoZS5hZGRFdmVudExpc3RlbmVyKXx8KGUuYWRkRXZlbnRMaXN0ZW5lcihuLGksITEpLG89ITApOihlLmF0dGFjaEV2ZW50KCJvbiIrbixpKSxvPSEwKSksb30sZS5EZXRhY2hFdmVudD1mdW5jdGlvbihlLG4saSl7dC5Jc051bGxPclVuZGVmaW5lZChlKXx8KHQuSXNOdWxsT3JVbmRlZmluZWQoZS5kZXRhY2hFdmVudCk/dC5Jc051bGxPclVuZGVmaW5lZChlLnJlbW92ZUV2ZW50TGlzdGVuZXIpfHxlLnJlbW92ZUV2ZW50TGlzdGVuZXIobixpLCExKTplLmRldGFjaEV2ZW50KCJvbiIrbixpKSl9LGV9KCk7ZS5FdmVudEhlbHBlcj1vfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dGhpcy5vcGVuRG9uZT0hMSx0aGlzLnNldFJlcXVlc3RIZWFkZXJEb25lPSExLHRoaXMuc2VuZERvbmU9ITEsdGhpcy5hYm9ydERvbmU9ITEsdGhpcy5vbnJlYWR5c3RhdGVjaGFuZ2VDYWxsYmFja0F0dGFjaGVkPSExfXJldHVybiBlfSgpO2UuWEhSTW9uaXRvcmluZ1N0YXRlPXQ7dmFyIG49ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4pe3RoaXMuY29tcGxldGVkPSExLHRoaXMucmVxdWVzdEhlYWRlcnNTaXplPW51bGwsdGhpcy50dGZiPW51bGwsdGhpcy5yZXNwb25zZVJlY2VpdmluZ0R1cmF0aW9uPW51bGwsdGhpcy5jYWxsYmFja0R1cmF0aW9uPW51bGwsdGhpcy5hamF4VG90YWxEdXJhdGlvbj1udWxsLHRoaXMuYWJvcnRlZD1udWxsLHRoaXMucGFnZVVybD1udWxsLHRoaXMucmVxdWVzdFVybD1udWxsLHRoaXMucmVxdWVzdFNpemU9MCx0aGlzLm1ldGhvZD1udWxsLHRoaXMuc3RhdHVzPW51bGwsdGhpcy5yZXF1ZXN0U2VudFRpbWU9bnVsbCx0aGlzLnJlc3BvbnNlU3RhcnRlZFRpbWU9bnVsbCx0aGlzLnJlc3BvbnNlRmluaXNoZWRUaW1lPW51bGwsdGhpcy5jYWxsYmFja0ZpbmlzaGVkVGltZT1udWxsLHRoaXMuZW5kVGltZT1udWxsLHRoaXMub3JpZ2luYWxPbnJlYWR5c3RhdGVjaGFnZT1udWxsLHRoaXMueGhyTW9uaXRvcmluZ1N0YXRlPW5ldyB0LHRoaXMuY2xpZW50RmFpbHVyZT0wLHRoaXMuQ2FsY3VsYXRlTWV0cmljcz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5hamF4VG90YWxEdXJhdGlvbj1NYXRoLnJvdW5kKDFlMyplLmRhdGVUaW1lLkdldER1cmF0aW9uKHQucmVxdWVzdFNlbnRUaW1lLHQucmVzcG9uc2VGaW5pc2hlZFRpbWUpKS8xZTN9LHRoaXMuaWQ9bn1yZXR1cm4gbi5wcm90b3R5cGUuZ2V0QWJzb2x1dGVVcmw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXF1ZXN0VXJsP2UuVXJsSGVscGVyLmdldEFic29sdXRlVXJsKHRoaXMucmVxdWVzdFVybCk6bnVsbH0sbi5wcm90b3R5cGUuZ2V0UGF0aE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXF1ZXN0VXJsP2UuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplVXJsKGUuVXJsSGVscGVyLmdldENvbXBsZXRlVXJsKHRoaXMubWV0aG9kLHRoaXMucmVxdWVzdFVybCkpOm51bGx9LG59KCk7ZS5hamF4UmVjb3JkPW59KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oZSl7dGhpcy5jdXJyZW50V2luZG93SG9zdD13aW5kb3cubG9jYXRpb24uaG9zdCx0aGlzLmFwcEluc2lnaHRzPWUsdGhpcy5pbml0aWFsaXplZD0hMSx0aGlzLkluaXQoKX1yZXR1cm4gbi5wcm90b3R5cGUuSW5pdD1mdW5jdGlvbigpe3RoaXMuc3VwcG9ydHNNb25pdG9yaW5nKCkmJih0aGlzLmluc3RydW1lbnRPcGVuKCksdGhpcy5pbnN0cnVtZW50U2VuZCgpLHRoaXMuaW5zdHJ1bWVudEFib3J0KCksdGhpcy5pbml0aWFsaXplZD0hMCl9LG4ucHJvdG90eXBlLmlzTW9uaXRvcmVkSW5zdGFuY2U9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdGhpcy5pbml0aWFsaXplZCYmKGk9PT0hMHx8IXQuZXh0ZW5zaW9ucy5Jc051bGxPclVuZGVmaW5lZChlLmFqYXhEYXRhKSkmJmVbbi5EaXNhYmxlZFByb3BlcnR5TmFtZV0hPT0hMH0sbi5wcm90b3R5cGUuc3VwcG9ydHNNb25pdG9yaW5nPWZ1bmN0aW9uKCl7dmFyIGU9ITE7cmV0dXJuIHQuZXh0ZW5zaW9ucy5Jc051bGxPclVuZGVmaW5lZChYTUxIdHRwUmVxdWVzdCl8fChlPSEwKSxlfSxuLnByb3RvdHlwZS5pbnN0cnVtZW50T3Blbj1mdW5jdGlvbigpe3ZhciBpPVhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5vcGVuLG89dGhpcztYTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUub3Blbj1mdW5jdGlvbihhLHIscyl7dHJ5eyFvLmlzTW9uaXRvcmVkSW5zdGFuY2UodGhpcywhMCl8fHRoaXMuYWpheERhdGEmJnRoaXMuYWpheERhdGEueGhyTW9uaXRvcmluZ1N0YXRlLm9wZW5Eb25lfHxvLm9wZW5IYW5kbGVyKHRoaXMsYSxyLHMpfWNhdGNoKGMpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZE1vbml0b3JBamF4T3BlbiwiRmFpbGVkIHRvIG1vbml0b3IgWE1MSHR0cFJlcXVlc3Qub3BlbiwgbW9uaXRvcmluZyBkYXRhIGZvciB0aGlzIGFqYXggY2FsbCBtYXkgYmUgaW5jb3JyZWN0LiIse2FqYXhEaWFnbm9zdGljc01lc3NhZ2U6bi5nZXRGYWlsZWRBamF4RGlhZ25vc3RpY3NNZXNzYWdlKHRoaXMpLGV4Y2VwdGlvbjplLkFwcGxpY2F0aW9uSW5zaWdodHMuVXRpbC5kdW1wKGMpfSl9cmV0dXJuIGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0sbi5wcm90b3R5cGUub3BlbkhhbmRsZXI9ZnVuY3Rpb24oZSxuLGksbyl7dmFyIGE9bmV3IHQuYWpheFJlY29yZCh0LlV0aWwubmV3SWQoKSk7YS5tZXRob2Q9bixhLnJlcXVlc3RVcmw9aSxhLnhock1vbml0b3JpbmdTdGF0ZS5vcGVuRG9uZT0hMCxlLmFqYXhEYXRhPWEsdGhpcy5hdHRhY2hUb09uUmVhZHlTdGF0ZUNoYW5nZShlKX0sbi5nZXRGYWlsZWRBamF4RGlhZ25vc3RpY3NNZXNzYWdlPWZ1bmN0aW9uKGUpe3ZhciBuPSIiO3RyeXt0LmV4dGVuc2lvbnMuSXNOdWxsT3JVbmRlZmluZWQoZSl8fHQuZXh0ZW5zaW9ucy5Jc051bGxPclVuZGVmaW5lZChlLmFqYXhEYXRhKXx8dC5leHRlbnNpb25zLklzTnVsbE9yVW5kZWZpbmVkKGUuYWpheERhdGEucmVxdWVzdFVybCl8fChuKz0iKHVybDogJyIrZS5hamF4RGF0YS5yZXF1ZXN0VXJsKyInKSIpfWNhdGNoKGkpe31yZXR1cm4gbn0sbi5wcm90b3R5cGUuaW5zdHJ1bWVudFNlbmQ9ZnVuY3Rpb24oKXt2YXIgaT1YTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuc2VuZCxvPXRoaXM7WE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oYSl7dHJ5e28uaXNNb25pdG9yZWRJbnN0YW5jZSh0aGlzKSYmIXRoaXMuYWpheERhdGEueGhyTW9uaXRvcmluZ1N0YXRlLnNlbmREb25lJiZvLnNlbmRIYW5kbGVyKHRoaXMsYSl9Y2F0Y2gocil7dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsdC5fSW50ZXJuYWxNZXNzYWdlSWQuRmFpbGVkTW9uaXRvckFqYXhTZW5kLCJGYWlsZWQgdG8gbW9uaXRvciBYTUxIdHRwUmVxdWVzdCwgbW9uaXRvcmluZyBkYXRhIGZvciB0aGlzIGFqYXggY2FsbCBtYXkgYmUgaW5jb3JyZWN0LiIse2FqYXhEaWFnbm9zdGljc01lc3NhZ2U6bi5nZXRGYWlsZWRBamF4RGlhZ25vc3RpY3NNZXNzYWdlKHRoaXMpLGV4Y2VwdGlvbjplLkFwcGxpY2F0aW9uSW5zaWdodHMuVXRpbC5kdW1wKHIpfSl9cmV0dXJuIGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0sbi5wcm90b3R5cGUuc2VuZEhhbmRsZXI9ZnVuY3Rpb24oZSxuKXtpZihlLmFqYXhEYXRhLnJlcXVlc3RTZW50VGltZT10LmRhdGVUaW1lLk5vdygpLCF0aGlzLmFwcEluc2lnaHRzLmNvbmZpZy5kaXNhYmxlQ29ycmVsYXRpb25IZWFkZXJzJiZ0LlVybEhlbHBlci5wYXJzZVVybChlLmFqYXhEYXRhLmdldEFic29sdXRlVXJsKCkpLmhvc3Q9PXRoaXMuY3VycmVudFdpbmRvd0hvc3Qpe3ZhciBpPXRoaXMuYXBwSW5zaWdodHMuY29udGV4dC5vcGVyYXRpb24uaWQ7ZS5zZXRSZXF1ZXN0SGVhZGVyKCJ4LW1zLXJlcXVlc3Qtcm9vdC1pZCIsaSksZS5zZXRSZXF1ZXN0SGVhZGVyKCJ4LW1zLXJlcXVlc3QtaWQiLGUuYWpheERhdGEuaWQpfWUuYWpheERhdGEueGhyTW9uaXRvcmluZ1N0YXRlLnNlbmREb25lPSEwfSxuLnByb3RvdHlwZS5pbnN0cnVtZW50QWJvcnQ9ZnVuY3Rpb24oKXt2YXIgaT1YTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuYWJvcnQsbz10aGlzO1hNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5hYm9ydD1mdW5jdGlvbigpe3RyeXtvLmlzTW9uaXRvcmVkSW5zdGFuY2UodGhpcykmJiF0aGlzLmFqYXhEYXRhLnhock1vbml0b3JpbmdTdGF0ZS5hYm9ydERvbmUmJih0aGlzLmFqYXhEYXRhLmFib3J0ZWQ9MSx0aGlzLmFqYXhEYXRhLnhock1vbml0b3JpbmdTdGF0ZS5hYm9ydERvbmU9ITApfWNhdGNoKGEpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZE1vbml0b3JBamF4QWJvcnQsIkZhaWxlZCB0byBtb25pdG9yIFhNTEh0dHBSZXF1ZXN0LmFib3J0LCBtb25pdG9yaW5nIGRhdGEgZm9yIHRoaXMgYWpheCBjYWxsIG1heSBiZSBpbmNvcnJlY3QuIix7YWpheERpYWdub3N0aWNzTWVzc2FnZTpuLmdldEZhaWxlZEFqYXhEaWFnbm9zdGljc01lc3NhZ2UodGhpcyksZXhjZXB0aW9uOmUuQXBwbGljYXRpb25JbnNpZ2h0cy5VdGlsLmR1bXAoYSl9KX1yZXR1cm4gaS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxuLnByb3RvdHlwZS5hdHRhY2hUb09uUmVhZHlTdGF0ZUNoYW5nZT1mdW5jdGlvbihpKXt2YXIgbz10aGlzO2kuYWpheERhdGEueGhyTW9uaXRvcmluZ1N0YXRlLm9ucmVhZHlzdGF0ZWNoYW5nZUNhbGxiYWNrQXR0YWNoZWQ9dC5FdmVudEhlbHBlci5BdHRhY2hFdmVudChpLCJyZWFkeXN0YXRlY2hhbmdlIixmdW5jdGlvbigpe3RyeXtvLmlzTW9uaXRvcmVkSW5zdGFuY2UoaSkmJjQ9PT1pLnJlYWR5U3RhdGUmJm8ub25BamF4Q29tcGxldGUoaSl9Y2F0Y2goYSl7dmFyIHI9ZS5BcHBsaWNhdGlvbkluc2lnaHRzLlV0aWwuZHVtcChhKTtyJiZyLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiYzAwYzAyM2YiKSE9LTF8fHQuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZE1vbml0b3JBamF4UlNDLCJGYWlsZWQgdG8gbW9uaXRvciBYTUxIdHRwUmVxdWVzdCAncmVhZHlzdGF0ZWNoYW5nZScgZXZlbnQgaGFuZGxlciwgbW9uaXRvcmluZyBkYXRhIGZvciB0aGlzIGFqYXggY2FsbCBtYXkgYmUgaW5jb3JyZWN0LiIse2FqYXhEaWFnbm9zdGljc01lc3NhZ2U6bi5nZXRGYWlsZWRBamF4RGlhZ25vc3RpY3NNZXNzYWdlKGkpLGV4Y2VwdGlvbjplLkFwcGxpY2F0aW9uSW5zaWdodHMuVXRpbC5kdW1wKGEpfSl9fSl9LG4ucHJvdG90eXBlLm9uQWpheENvbXBsZXRlPWZ1bmN0aW9uKGUpe2UuYWpheERhdGEucmVzcG9uc2VGaW5pc2hlZFRpbWU9dC5kYXRlVGltZS5Ob3coKSxlLmFqYXhEYXRhLnN0YXR1cz1lLnN0YXR1cyxlLmFqYXhEYXRhLkNhbGN1bGF0ZU1ldHJpY3MoKSxlLmFqYXhEYXRhLmFqYXhUb3RhbER1cmF0aW9uPDA/dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5GYWlsZWRNb25pdG9yQWpheER1ciwiRmFpbGVkIHRvIGNhbGN1bGF0ZSB0aGUgZHVyYXRpb24gb2YgdGhlIGFqYXggY2FsbCwgbW9uaXRvcmluZyBkYXRhIGZvciB0aGlzIGFqYXggY2FsbCB3b24ndCBiZSBzZW50LiIse2FqYXhEaWFnbm9zdGljc01lc3NhZ2U6bi5nZXRGYWlsZWRBamF4RGlhZ25vc3RpY3NNZXNzYWdlKGUpLHJlcXVlc3RTZW50VGltZTplLmFqYXhEYXRhLnJlcXVlc3RTZW50VGltZSxyZXNwb25zZUZpbmlzaGVkVGltZTplLmFqYXhEYXRhLnJlc3BvbnNlRmluaXNoZWRUaW1lfSk6KHRoaXMuYXBwSW5zaWdodHMudHJhY2tEZXBlbmRlbmN5KGUuYWpheERhdGEuaWQsZS5hamF4RGF0YS5tZXRob2QsZS5hamF4RGF0YS5nZXRBYnNvbHV0ZVVybCgpLGUuYWpheERhdGEuZ2V0UGF0aE5hbWUoKSxlLmFqYXhEYXRhLmFqYXhUb3RhbER1cmF0aW9uLCtlLmFqYXhEYXRhLnN0YXR1cz49MjAwJiYrZS5hamF4RGF0YS5zdGF0dXM8NDAwLCtlLmFqYXhEYXRhLnN0YXR1cyksZS5hamF4RGF0YT1udWxsKX0sbi5pbnN0cnVtZW50ZWRCeUFwcEluc2lnaHRzTmFtZT0iSW5zdHJ1bWVudGVkQnlBcHBJbnNpZ2h0cyIsbi5EaXNhYmxlZFByb3BlcnR5TmFtZT0iTWljcm9zb2Z0X0FwcGxpY2F0aW9uSW5zaWdodHNfQnlwYXNzQWpheEluc3RydW1lbnRhdGlvbiIsbn0oKTt0LkFqYXhNb25pdG9yPW59KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5fY29uZmlnPWUsdGhpcy5fYnVmZmVyPVtdfXJldHVybiBlLnByb3RvdHlwZS5lbnF1ZXVlPWZ1bmN0aW9uKGUpe3RoaXMuX2J1ZmZlci5wdXNoKGUpfSxlLnByb3RvdHlwZS5jb3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9idWZmZXIubGVuZ3RofSxlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuX2J1ZmZlci5sZW5ndGg9MH0sZS5wcm90b3R5cGUuZ2V0SXRlbXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYnVmZmVyLnNsaWNlKDApfSxlLnByb3RvdHlwZS5iYXRjaFBheWxvYWRzPWZ1bmN0aW9uKGUpe2lmKGUmJmUubGVuZ3RoPjApe3ZhciB0PXRoaXMuX2NvbmZpZy5lbWl0TGluZURlbGltaXRlZEpzb24oKT9lLmpvaW4oIlxuIik6IlsiK2Uuam9pbigiLCIpKyJdIjtyZXR1cm4gdH1yZXR1cm4gbnVsbH0sZS5wcm90b3R5cGUubWFya0FzU2VudD1mdW5jdGlvbihlKXt0aGlzLmNsZWFyKCl9LGUucHJvdG90eXBlLmNsZWFyU2VudD1mdW5jdGlvbihlKXt9LGV9KCk7ZS5BcnJheVNlbmRCdWZmZXI9dDt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7dGhpcy5fYnVmZmVyRnVsbE1lc3NhZ2VTZW50PSExLHRoaXMuX2NvbmZpZz1lO3ZhciBuPXRoaXMuZ2V0QnVmZmVyKHQuQlVGRkVSX0tFWSksaT10aGlzLmdldEJ1ZmZlcih0LlNFTlRfQlVGRkVSX0tFWSk7dGhpcy5fYnVmZmVyPW4uY29uY2F0KGkpLHRoaXMuX2J1ZmZlci5sZW5ndGg+dC5NQVhfQlVGRkVSX1NJWkUmJih0aGlzLl9idWZmZXIubGVuZ3RoPXQuTUFYX0JVRkZFUl9TSVpFKSx0aGlzLnNldEJ1ZmZlcih0LlNFTlRfQlVGRkVSX0tFWSxbXSksdGhpcy5zZXRCdWZmZXIodC5CVUZGRVJfS0VZLHRoaXMuX2J1ZmZlcil9cmV0dXJuIHQucHJvdG90eXBlLmVucXVldWU9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuX2J1ZmZlci5sZW5ndGg+PXQuTUFYX0JVRkZFUl9TSVpFP3ZvaWQodGhpcy5fYnVmZmVyRnVsbE1lc3NhZ2VTZW50fHwoZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5TZXNzaW9uU3RvcmFnZUJ1ZmZlckZ1bGwsIk1heGltdW0gYnVmZmVyIHNpemUgcmVhY2hlZDogIit0aGlzLl9idWZmZXIubGVuZ3RoLCEwKSx0aGlzLl9idWZmZXJGdWxsTWVzc2FnZVNlbnQ9ITApKToodGhpcy5fYnVmZmVyLnB1c2gobiksdm9pZCB0aGlzLnNldEJ1ZmZlcih0LkJVRkZFUl9LRVksdGhpcy5fYnVmZmVyKSl9LHQucHJvdG90eXBlLmNvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci5sZW5ndGh9LHQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fYnVmZmVyLmxlbmd0aD0wLHRoaXMuc2V0QnVmZmVyKHQuQlVGRkVSX0tFWSxbXSksdGhpcy5zZXRCdWZmZXIodC5TRU5UX0JVRkZFUl9LRVksW10pLHRoaXMuX2J1ZmZlckZ1bGxNZXNzYWdlU2VudD0hMX0sdC5wcm90b3R5cGUuZ2V0SXRlbXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYnVmZmVyLnNsaWNlKDApfSx0LnByb3RvdHlwZS5iYXRjaFBheWxvYWRzPWZ1bmN0aW9uKGUpe2lmKGUmJmUubGVuZ3RoPjApe3ZhciB0PXRoaXMuX2NvbmZpZy5lbWl0TGluZURlbGltaXRlZEpzb24oKT9lLmpvaW4oIlxuIik6IlsiK2Uuam9pbigiLCIpKyJdIjtyZXR1cm4gdH1yZXR1cm4gbnVsbH0sdC5wcm90b3R5cGUubWFya0FzU2VudD1mdW5jdGlvbihuKXt0aGlzLl9idWZmZXI9dGhpcy5yZW1vdmVQYXlsb2Fkc0Zyb21CdWZmZXIobix0aGlzLl9idWZmZXIpLHRoaXMuc2V0QnVmZmVyKHQuQlVGRkVSX0tFWSx0aGlzLl9idWZmZXIpO3ZhciBpPXRoaXMuZ2V0QnVmZmVyKHQuU0VOVF9CVUZGRVJfS0VZKTtpIGluc3RhbmNlb2YgQXJyYXkmJm4gaW5zdGFuY2VvZiBBcnJheSYmKGk9aS5jb25jYXQobiksaS5sZW5ndGg+dC5NQVhfQlVGRkVSX1NJWkUmJihlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5TZXNzaW9uU3RvcmFnZUJ1ZmZlckZ1bGwsIlNlbnQgYnVmZmVyIHJlYWNoZWQgaXRzIG1heGltdW0gc2l6ZTogIitpLmxlbmd0aCwhMCksaS5sZW5ndGg9dC5NQVhfQlVGRkVSX1NJWkUpLHRoaXMuc2V0QnVmZmVyKHQuU0VOVF9CVUZGRVJfS0VZLGkpKX0sdC5wcm90b3R5cGUuY2xlYXJTZW50PWZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMuZ2V0QnVmZmVyKHQuU0VOVF9CVUZGRVJfS0VZKTtuPXRoaXMucmVtb3ZlUGF5bG9hZHNGcm9tQnVmZmVyKGUsbiksdGhpcy5zZXRCdWZmZXIodC5TRU5UX0JVRkZFUl9LRVksbil9LHQucHJvdG90eXBlLnJlbW92ZVBheWxvYWRzRnJvbUJ1ZmZlcj1mdW5jdGlvbihlLHQpe3ZhciBuPVtdO2Zvcih2YXIgaSBpbiB0KXt2YXIgbz0hMTtmb3IodmFyIGEgaW4gZSlpZihlW2FdPT09dFtpXSl7bz0hMDticmVha31vfHxuLnB1c2godFtpXSl9cmV0dXJuIG59LHQucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbih0KXt0cnl7dmFyIG49ZS5VdGlsLmdldFNlc3Npb25TdG9yYWdlKHQpO2lmKG4pe3ZhciBpPUpTT04ucGFyc2Uobik7aWYoaSlyZXR1cm4gaX19Y2F0Y2gobyl7ZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsZS5fSW50ZXJuYWxNZXNzYWdlSWQuRmFpbGVkVG9SZXN0b3JlU3RvcmFnZUJ1ZmZlciwiIHN0b3JhZ2Uga2V5OiAiK3QrIiwgIitlLlV0aWwuZ2V0RXhjZXB0aW9uTmFtZShvKSx7ZXhjZXB0aW9uOmUuVXRpbC5kdW1wKG8pfSl9cmV0dXJuW119LHQucHJvdG90eXBlLnNldEJ1ZmZlcj1mdW5jdGlvbih0LG4pe3RyeXt2YXIgaT1KU09OLnN0cmluZ2lmeShuKTtlLlV0aWwuc2V0U2Vzc2lvblN0b3JhZ2UodCxpKX1jYXRjaChvKXtlLlV0aWwuc2V0U2Vzc2lvblN0b3JhZ2UodCxKU09OLnN0cmluZ2lmeShbXSkpLGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuRmFpbGVkVG9TZXRTdG9yYWdlQnVmZmVyLCIgc3RvcmFnZSBrZXk6ICIrdCsiLCAiK2UuVXRpbC5nZXRFeGNlcHRpb25OYW1lKG8pKyIuIEJ1ZmZlciBjbGVhcmVkIix7ZXhjZXB0aW9uOmUuVXRpbC5kdW1wKG8pfSl9fSx0LkJVRkZFUl9LRVk9IkFJX2J1ZmZlciIsdC5TRU5UX0JVRkZFUl9LRVk9IkFJX3NlbnRCdWZmZXIiLHQuTUFYX0JVRkZFUl9TSVpFPTJlMyx0fSgpO2UuU2Vzc2lvblN0b3JhZ2VTZW5kQnVmZmVyPW59KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy5fWE1MSHR0cFJlcXVlc3RTdXBwb3J0ZWQ9ITEsdGhpcy5fY29uc2VjdXRpdmVFcnJvcnM9MCx0aGlzLl9yZXRyeUF0PW51bGwsdGhpcy5fbGFzdFNlbmQ9MCx0aGlzLl9jb25maWc9dCx0aGlzLl9zZW5kZXI9bnVsbCx0aGlzLl9idWZmZXI9ZS5VdGlsLmNhblVzZVNlc3Npb25TdG9yYWdlKCkmJnRoaXMuX2NvbmZpZy5lbmFibGVTZXNzaW9uU3RvcmFnZUJ1ZmZlcigpP25ldyBlLlNlc3Npb25TdG9yYWdlU2VuZEJ1ZmZlcih0KTpuZXcgZS5BcnJheVNlbmRCdWZmZXIodCksIXRoaXMuX2NvbmZpZy5pc0JlYWNvbkFwaURpc2FibGVkKCkmJmUuVXRpbC5Jc0JlYWNvbkFwaVN1cHBvcnRlZCgpKXRoaXMuX3NlbmRlcj10aGlzLl9iZWFjb25TZW5kZXI7ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIFhNTEh0dHBSZXF1ZXN0KXt2YXIgbj1uZXcgWE1MSHR0cFJlcXVlc3Q7IndpdGhDcmVkZW50aWFscyJpbiBuPyh0aGlzLl9zZW5kZXI9dGhpcy5feGhyU2VuZGVyLHRoaXMuX1hNTEh0dHBSZXF1ZXN0U3VwcG9ydGVkPSEwKToidW5kZWZpbmVkIiE9dHlwZW9mIFhEb21haW5SZXF1ZXN0JiYodGhpcy5fc2VuZGVyPXRoaXMuX3hkclNlbmRlcil9fXJldHVybiB0LnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKHQpe3RyeXtpZih0aGlzLl9jb25maWcuZGlzYWJsZVRlbGVtZXRyeSgpKXJldHVybjtpZighdClyZXR1cm4gdm9pZCBlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5DYW5ub3RTZW5kRW1wdHlUZWxlbWV0cnksIkNhbm5vdCBzZW5kIGVtcHR5IHRlbGVtZXRyeSIpO2lmKCF0aGlzLl9zZW5kZXIpcmV0dXJuIHZvaWQgZS5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsZS5fSW50ZXJuYWxNZXNzYWdlSWQuU2VuZGVyTm90SW5pdGlhbGl6ZWQsIlNlbmRlciB3YXMgbm90IGluaXRpYWxpemVkIik7dmFyIG49ZS5TZXJpYWxpemVyLnNlcmlhbGl6ZSh0KSxpPXRoaXMuX2J1ZmZlci5nZXRJdGVtcygpLG89dGhpcy5fYnVmZmVyLmJhdGNoUGF5bG9hZHMoaSk7byYmby5sZW5ndGgrbi5sZW5ndGg+dGhpcy5fY29uZmlnLm1heEJhdGNoU2l6ZUluQnl0ZXMoKSYmdGhpcy50cmlnZ2VyU2VuZCgpLHRoaXMuX2J1ZmZlci5lbnF1ZXVlKG4pLHRoaXMuX3NldHVwVGltZXIoKX1jYXRjaChhKXtlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZEFkZGluZ1RlbGVtZXRyeVRvQnVmZmVyLCJGYWlsZWQgYWRkaW5nIHRlbGVtZXRyeSB0byB0aGUgc2VuZGVyJ3MgYnVmZmVyLCBzb21lIHRlbGVtZXRyeSB3aWxsIGJlIGxvc3Q6ICIrZS5VdGlsLmdldEV4Y2VwdGlvbk5hbWUoYSkse2V4Y2VwdGlvbjplLlV0aWwuZHVtcChhKX0pfX0sdC5wcm90b3R5cGUuX3NldHVwVGltZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKCF0aGlzLl90aW1lb3V0SGFuZGxlKXt2YXIgdD10aGlzLl9yZXRyeUF0P01hdGgubWF4KDAsdGhpcy5fcmV0cnlBdC1EYXRlLm5vdygpKTowLG49TWF0aC5tYXgodGhpcy5fY29uZmlnLm1heEJhdGNoSW50ZXJ2YWwoKSx0KTt0aGlzLl90aW1lb3V0SGFuZGxlPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLnRyaWdnZXJTZW5kKCl9LG4pfX0sdC5wcm90b3R5cGUuX2dldFNpemVJbkJ5dGVzPWZ1bmN0aW9uKGUpe3ZhciB0PTA7aWYoZSYmZS5sZW5ndGgpZm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aSYmaS5sZW5ndGgmJih0Kz1pLmxlbmd0aCl9cmV0dXJuIHR9LHQucHJvdG90eXBlLnRyaWdnZXJTZW5kPWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSEwKTt0cnl7aWYodGhpcy5fY29uZmlnLmRpc2FibGVUZWxlbWV0cnkoKSl0aGlzLl9idWZmZXIuY2xlYXIoKTtlbHNle2lmKHRoaXMuX2J1ZmZlci5jb3VudCgpPjApe3ZhciBuPXRoaXMuX2J1ZmZlci5nZXRJdGVtcygpO3RoaXMuX3NlbmRlcihuLHQpfXRoaXMuX2xhc3RTZW5kPStuZXcgRGF0ZX1jbGVhclRpbWVvdXQodGhpcy5fdGltZW91dEhhbmRsZSksdGhpcy5fdGltZW91dEhhbmRsZT1udWxsLHRoaXMuX3JldHJ5QXQ9bnVsbH1jYXRjaChpKXsoIWUuVXRpbC5nZXRJRVZlcnNpb24oKXx8ZS5VdGlsLmdldElFVmVyc2lvbigpPjkpJiZlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLl9JbnRlcm5hbE1lc3NhZ2VJZC5UcmFuc21pc3Npb25GYWlsZWQsIlRlbGVtZXRyeSB0cmFuc21pc3Npb24gZmFpbGVkLCBzb21lIHRlbGVtZXRyeSB3aWxsIGJlIGxvc3Q6ICIrZS5VdGlsLmdldEV4Y2VwdGlvbk5hbWUoaSkse2V4Y2VwdGlvbjplLlV0aWwuZHVtcChpKX0pfX0sdC5wcm90b3R5cGUuX3NldFJldHJ5VGltZT1mdW5jdGlvbigpe3ZhciBlLHQ9MTA7aWYodGhpcy5fY29uc2VjdXRpdmVFcnJvcnM8PTEpZT10O2Vsc2V7dmFyIG49KE1hdGgucG93KDIsdGhpcy5fY29uc2VjdXRpdmVFcnJvcnMpLTEpLzIsaT1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqbip0KSsxO2U9TWF0aC5tYXgoTWF0aC5taW4oaSwzNjAwKSx0KX12YXIgbz1EYXRlLm5vdygpKzFlMyplO3RoaXMuX3JldHJ5QXQ9b30sdC5wcm90b3R5cGUuX3BhcnNlUmVzcG9uc2U9ZnVuY3Rpb24odCl7dHJ5e3ZhciBuPUpTT04ucGFyc2UodCk7aWYobiYmbi5pdGVtc1JlY2VpdmVkJiZuLml0ZW1zUmVjZWl2ZWQ+PW4uaXRlbXNBY2NlcHRlZCYmbi5pdGVtc1JlY2VpdmVkLW4uaXRlbXNBY2NlcHRlZD09bi5lcnJvcnMubGVuZ3RoKXJldHVybiBufWNhdGNoKGkpe2UuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLkludmFsaWRCYWNrZW5kUmVzcG9uc2UsIkNhbm5vdCBwYXJzZSB0aGUgcmVzcG9uc2UuICIrZS5VdGlsLmdldEV4Y2VwdGlvbk5hbWUoaSkpfXJldHVybiBudWxsfSx0LnByb3RvdHlwZS5faXNSZXRyaWFibGU9ZnVuY3Rpb24oZSl7cmV0dXJuIDQwOD09ZXx8NDI5PT1lfHw1MDA9PWV8fDUwMz09ZX0sdC5wcm90b3R5cGUuX3Jlc2VuZFBheWxvYWQ9ZnVuY3Rpb24oZSl7aWYoZSYmMCE9PWUubGVuZ3RoKXt0aGlzLl9idWZmZXIuY2xlYXJTZW50KGUpLHRoaXMuX2NvbnNlY3V0aXZlRXJyb3JzKys7Zm9yKHZhciB0PTAsbj1lO3Q8bi5sZW5ndGg7dCsrKXt2YXIgaT1uW3RdO3RoaXMuX2J1ZmZlci5lbnF1ZXVlKGkpfXRoaXMuX3NldFJldHJ5VGltZSgpLHRoaXMuX3NldHVwVGltZXIoKX19LHQucHJvdG90eXBlLl9mb3JtYXRFcnJvck1lc3NhZ2VYaHI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT8iWE1MSHR0cFJlcXVlc3QsU3RhdHVzOiIrZS5zdGF0dXMrIixSZXNwb25zZToiK2UucmVzcG9uc2VUZXh0fHxlLnJlc3BvbnNlfHwiIjp0fSx0LnByb3RvdHlwZS5fZm9ybWF0RXJyb3JNZXNzYWdlWGRyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU/IlhEb21haW5SZXF1ZXN0LFJlc3BvbnNlOiIrZS5yZXNwb25zZVRleHR8fCIiOnR9LHQucHJvdG90eXBlLl94aHJTZW5kZXI9ZnVuY3Rpb24odCxuKXt2YXIgaT10aGlzLG89bmV3IFhNTEh0dHBSZXF1ZXN0O29bZS5BamF4TW9uaXRvci5EaXNhYmxlZFByb3BlcnR5TmFtZV09ITAsby5vcGVuKCJQT1NUIix0aGlzLl9jb25maWcuZW5kcG9pbnRVcmwoKSxuKSxvLnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtdHlwZSIsImFwcGxpY2F0aW9uL2pzb24iKSxvLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3JldHVybiBpLl94aHJSZWFkeVN0YXRlQ2hhbmdlKG8sdCx0Lmxlbmd0aCl9LG8ub25lcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gaS5fb25FcnJvcih0LGkuX2Zvcm1hdEVycm9yTWVzc2FnZVhocihvKSxlKX07dmFyIGE9dGhpcy5fYnVmZmVyLmJhdGNoUGF5bG9hZHModCk7by5zZW5kKGEpLHRoaXMuX2J1ZmZlci5tYXJrQXNTZW50KHQpfSx0LnByb3RvdHlwZS5feGRyU2VuZGVyPWZ1bmN0aW9uKHQsbil7dmFyIGk9dGhpcyxvPW5ldyBYRG9tYWluUmVxdWVzdDtvLm9ubG9hZD1mdW5jdGlvbigpe3JldHVybiBpLl94ZHJPbkxvYWQobyx0KX0sby5vbmVycm9yPWZ1bmN0aW9uKGUpe3JldHVybiBpLl9vbkVycm9yKHQsaS5fZm9ybWF0RXJyb3JNZXNzYWdlWGRyKG8pLGUpfTt2YXIgYT13aW5kb3cubG9jYXRpb24ucHJvdG9jb2w7aWYoMCE9PXRoaXMuX2NvbmZpZy5lbmRwb2ludFVybCgpLmxhc3RJbmRleE9mKGEsMCkpcmV0dXJuIGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuVHJhbnNtaXNzaW9uRmFpbGVkLCIuIENhbm5vdCBzZW5kIFhEb21haW4gcmVxdWVzdC4gVGhlIGVuZHBvaW50IFVSTCBwcm90b2NvbCBkb2Vzbid0IG1hdGNoIHRoZSBob3N0aW5nIHBhZ2UgcHJvdG9jb2wuIiksdm9pZCB0aGlzLl9idWZmZXIuY2xlYXIoKTt2YXIgcj10aGlzLl9jb25maWcuZW5kcG9pbnRVcmwoKS5yZXBsYWNlKC9eKGh0dHBzPzopLywiIik7by5vcGVuKCJQT1NUIixyKTt2YXIgcz10aGlzLl9idWZmZXIuYmF0Y2hQYXlsb2Fkcyh0KTtvLnNlbmQocyksdGhpcy5fYnVmZmVyLm1hcmtBc1NlbnQodCl9LHQucHJvdG90eXBlLl9iZWFjb25TZW5kZXI9ZnVuY3Rpb24odCxuKXt2YXIgaT10aGlzLl9jb25maWcuZW5kcG9pbnRVcmwoKSxvPXRoaXMuX2J1ZmZlci5iYXRjaFBheWxvYWRzKHQpLGE9bmF2aWdhdG9yLnNlbmRCZWFjb24oaSxvKTthP3RoaXMuX2J1ZmZlci5tYXJrQXNTZW50KHQpOmUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLlRyYW5zbWlzc2lvbkZhaWxlZCwiLiBGYWlsZWQgdG8gc2VuZCB0ZWxlbWV0cnkgd2l0aCBCZWFjb24gQVBJLiIpfSx0LnByb3RvdHlwZS5feGhyUmVhZHlTdGF0ZUNoYW5nZT1mdW5jdGlvbih0LG4saSl7aWYoND09PXQucmVhZHlTdGF0ZSlpZigodC5zdGF0dXM8MjAwfHx0LnN0YXR1cz49MzAwKSYmMCE9PXQuc3RhdHVzKSF0aGlzLl9jb25maWcuaXNSZXRyeURpc2FibGVkKCkmJnRoaXMuX2lzUmV0cmlhYmxlKHQuc3RhdHVzKT8odGhpcy5fcmVzZW5kUGF5bG9hZChuKSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLlRyYW5zbWlzc2lvbkZhaWxlZCwiLiBSZXNwb25zZSBjb2RlICIrdC5zdGF0dXMrIi4gV2lsbCByZXRyeSB0byBzZW5kICIrbi5sZW5ndGgrIiBpdGVtcy4iKSk6dGhpcy5fb25FcnJvcihuLHRoaXMuX2Zvcm1hdEVycm9yTWVzc2FnZVhocih0KSk7ZWxzZSBpZigyMDY9PT10LnN0YXR1cyl7dmFyIG89dGhpcy5fcGFyc2VSZXNwb25zZSh0LnJlc3BvbnNlVGV4dHx8dC5yZXNwb25zZSk7byYmIXRoaXMuX2NvbmZpZy5pc1JldHJ5RGlzYWJsZWQoKT90aGlzLl9vblBhcnRpYWxTdWNjZXNzKG4sbyk6dGhpcy5fb25FcnJvcihuLHRoaXMuX2Zvcm1hdEVycm9yTWVzc2FnZVhocih0KSl9ZWxzZSB0aGlzLl9jb25zZWN1dGl2ZUVycm9ycz0wLHRoaXMuX29uU3VjY2VzcyhuLGkpfSx0LnByb3RvdHlwZS5feGRyT25Mb2FkPWZ1bmN0aW9uKGUsdCl7aWYoIWV8fGUucmVzcG9uc2VUZXh0KyIiIT0iMjAwIiYmIiIhPT1lLnJlc3BvbnNlVGV4dCl7dmFyIG49dGhpcy5fcGFyc2VSZXNwb25zZShlLnJlc3BvbnNlVGV4dCk7biYmbi5pdGVtc1JlY2VpdmVkJiZuLml0ZW1zUmVjZWl2ZWQ+bi5pdGVtc0FjY2VwdGVkJiYhdGhpcy5fY29uZmlnLmlzUmV0cnlEaXNhYmxlZCgpP3RoaXMuX29uUGFydGlhbFN1Y2Nlc3ModCxuKTp0aGlzLl9vbkVycm9yKHQsdGhpcy5fZm9ybWF0RXJyb3JNZXNzYWdlWGRyKGUpKX1lbHNlIHRoaXMuX2NvbnNlY3V0aXZlRXJyb3JzPTAsdGhpcy5fb25TdWNjZXNzKHQsMCl9LHQucHJvdG90eXBlLl9vblBhcnRpYWxTdWNjZXNzPWZ1bmN0aW9uKHQsbil7Zm9yKHZhciBpPVtdLG89W10sYT1uLmVycm9ycy5yZXZlcnNlKCkscj0wLHM9YTtyPHMubGVuZ3RoO3IrKyl7dmFyIGM9c1tyXSxkPXQuc3BsaWNlKGMuaW5kZXgsMSlbMF07dGhpcy5faXNSZXRyaWFibGUoYy5zdGF0dXNDb2RlKT9vLnB1c2goZCk6aS5wdXNoKGQpfXQubGVuZ3RoPjAmJnRoaXMuX29uU3VjY2Vzcyh0LG4uaXRlbXNBY2NlcHRlZCksaS5sZW5ndGg+MCYmdGhpcy5fb25FcnJvcihpLHRoaXMuX2Zvcm1hdEVycm9yTWVzc2FnZVhocihudWxsLFsicGFydGlhbCBzdWNjZXNzIixuLml0ZW1zQWNjZXB0ZWQsIm9mIixuLml0ZW1zUmVjZWl2ZWRdLmpvaW4oIiAiKSkpLG8ubGVuZ3RoPjAmJih0aGlzLl9yZXNlbmRQYXlsb2FkKG8pLGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuVHJhbnNtaXNzaW9uRmFpbGVkLCJQYXJ0aWFsIHN1Y2Nlc3MuIERlbGl2ZXJlZDogIit0Lmxlbmd0aCsiLCBGYWlsZWQ6ICIraS5sZW5ndGgrIi4gV2lsbCByZXRyeSB0byBzZW5kICIrby5sZW5ndGgrIiBvdXIgb2YgIituLml0ZW1zUmVjZWl2ZWQrIiBpdGVtcyIpKX0sdC5wcm90b3R5cGUuX29uRXJyb3I9ZnVuY3Rpb24odCxuLGkpe2UuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuT25FcnJvciwiRmFpbGVkIHRvIHNlbmQgdGVsZW1ldHJ5LiIse21lc3NhZ2U6bn0pLHRoaXMuX2J1ZmZlci5jbGVhclNlbnQodCl9LHQucHJvdG90eXBlLl9vblN1Y2Nlc3M9ZnVuY3Rpb24oZSx0KXt0aGlzLl9idWZmZXIuY2xlYXJTZW50KGUpfSx0Lk1heEJlYWNvblBheWxvYWRTaXplPTY1NTM2LHR9KCk7ZS5TZW5kZXI9dH0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7CnZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGV9KCk7ZS5Eb21haW49dH0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KG58fChuPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgdD1lLmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHQudmVyPTIsdC5wcm9wZXJ0aWVzPXt9LHQ9ZS5jYWxsKHRoaXMpfHx0aGlzfXJldHVybiBpKHQsZSksdH0obi5UZWxlbWV0cnkuRG9tYWluKTtlLk1lc3NhZ2VEYXRhPXR9KG98fChvPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24odCl7dmFyIG47IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gdC5zYW5pdGl6ZUtleUFuZEFkZFVuaXF1ZW5lc3M9ZnVuY3Rpb24oZSxuKXt2YXIgaT1lLmxlbmd0aCxvPXQuc2FuaXRpemVLZXkoZSk7aWYoby5sZW5ndGghPT1pKXtmb3IodmFyIGE9MCxyPW87dm9pZCAwIT09bltyXTspYSsrLHI9by5zdWJzdHJpbmcoMCx0Lk1BWF9OQU1FX0xFTkdUSC0zKSt0LnBhZE51bWJlcihhKTtvPXJ9cmV0dXJuIG99LHQuc2FuaXRpemVLZXk9ZnVuY3Rpb24obil7cmV0dXJuIG4mJihuPWUuVXRpbC50cmltKG4udG9TdHJpbmcoKSksbi5sZW5ndGg+dC5NQVhfTkFNRV9MRU5HVEgmJihuPW4uc3Vic3RyaW5nKDAsdC5NQVhfTkFNRV9MRU5HVEgpLGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuTmFtZVRvb0xvbmcsIm5hbWUgaXMgdG9vIGxvbmcuICBJdCBoYXMgYmVlbiB0cnVuY2F0ZWQgdG8gIit0Lk1BWF9OQU1FX0xFTkdUSCsiIGNoYXJhY3RlcnMuIix7bmFtZTpufSwhMCkpKSxufSx0LnNhbml0aXplU3RyaW5nPWZ1bmN0aW9uKG4pe3JldHVybiBuJiYobj1lLlV0aWwudHJpbShuKSxuLnRvU3RyaW5nKCkubGVuZ3RoPnQuTUFYX1NUUklOR19MRU5HVEgmJihuPW4udG9TdHJpbmcoKS5zdWJzdHJpbmcoMCx0Lk1BWF9TVFJJTkdfTEVOR1RIKSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLlN0cmluZ1ZhbHVlVG9vTG9uZywic3RyaW5nIHZhbHVlIGlzIHRvbyBsb25nLiBJdCBoYXMgYmVlbiB0cnVuY2F0ZWQgdG8gIit0Lk1BWF9TVFJJTkdfTEVOR1RIKyIgY2hhcmFjdGVycy4iLHt2YWx1ZTpufSwhMCkpKSxufSx0LnNhbml0aXplVXJsPWZ1bmN0aW9uKG4pe3JldHVybiBuJiYobj1lLlV0aWwudHJpbShuKSxuLmxlbmd0aD50Lk1BWF9VUkxfTEVOR1RIJiYobj1uLnN1YnN0cmluZygwLHQuTUFYX1VSTF9MRU5HVEgpLGUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuVXJsVG9vTG9uZywidXJsIGlzIHRvbyBsb25nLCBpdCBoYXMgYmVlbiB0cnVuY2F0ZWQgdG8gIit0Lk1BWF9VUkxfTEVOR1RIKyIgY2hhcmFjdGVycy4iLHt1cmw6bn0sITApKSksbn0sdC5zYW5pdGl6ZU1lc3NhZ2U9ZnVuY3Rpb24obil7cmV0dXJuIG4mJm4ubGVuZ3RoPnQuTUFYX01FU1NBR0VfTEVOR1RIJiYobj1uLnN1YnN0cmluZygwLHQuTUFYX01FU1NBR0VfTEVOR1RIKSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLk1lc3NhZ2VUcnVuY2F0ZWQsIm1lc3NhZ2UgaXMgdG9vIGxvbmcsIGl0IGhhcyBiZWVuIHRydW5jYXRlZCB0byAiK3QuTUFYX01FU1NBR0VfTEVOR1RIKyIgY2hhcmFjdGVycy4iLHttZXNzYWdlOm59LCEwKSksbn0sdC5zYW5pdGl6ZUV4Y2VwdGlvbj1mdW5jdGlvbihuKXtyZXR1cm4gbiYmbi5sZW5ndGg+dC5NQVhfRVhDRVBUSU9OX0xFTkdUSCYmKG49bi5zdWJzdHJpbmcoMCx0Lk1BWF9FWENFUFRJT05fTEVOR1RIKSxlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkV4Y2VwdGlvblRydW5jYXRlZCwiZXhjZXB0aW9uIGlzIHRvbyBsb25nLCBpdCBoYXMgYmVlbiB0cnVuY2F0ZWQgdG8gIit0Lk1BWF9FWENFUFRJT05fTEVOR1RIKyIgY2hhcmFjdGVycy4iLHtleGNlcHRpb246bn0sITApKSxufSx0LnNhbml0aXplUHJvcGVydGllcz1mdW5jdGlvbihlKXtpZihlKXt2YXIgbj17fTtmb3IodmFyIGkgaW4gZSl7dmFyIG89dC5zYW5pdGl6ZVN0cmluZyhlW2ldKTtpPXQuc2FuaXRpemVLZXlBbmRBZGRVbmlxdWVuZXNzKGksbiksbltpXT1vfWU9bn1yZXR1cm4gZX0sdC5zYW5pdGl6ZU1lYXN1cmVtZW50cz1mdW5jdGlvbihlKXtpZihlKXt2YXIgbj17fTtmb3IodmFyIGkgaW4gZSl7dmFyIG89ZVtpXTtpPXQuc2FuaXRpemVLZXlBbmRBZGRVbmlxdWVuZXNzKGksbiksbltpXT1vfWU9bn1yZXR1cm4gZX0sdC5wYWROdW1iZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9IjAwIitlO3JldHVybiB0LnN1YnN0cih0Lmxlbmd0aC0zKX0sdC5NQVhfTkFNRV9MRU5HVEg9MTUwLHQuTUFYX1NUUklOR19MRU5HVEg9MTAyNCx0Lk1BWF9VUkxfTEVOR1RIPTIwNDgsdC5NQVhfTUVTU0FHRV9MRU5HVEg9MzI3NjgsdC5NQVhfRVhDRVBUSU9OX0xFTkdUSD0zMjc2OCx0fSgpO3QuRGF0YVNhbml0aXplcj1ufShuPXQuQ29tbW9ufHwodC5Db21tb249e30pKX0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24obil7ZnVuY3Rpb24gbyhpLG8sYSl7dmFyIHI9bi5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLmFpRGF0YUNvbnRyYWN0PXt2ZXI6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsbWVzc2FnZTplLkZpZWxkVHlwZS5SZXF1aXJlZCxzZXZlcml0eUxldmVsOmUuRmllbGRUeXBlLkRlZmF1bHQscHJvcGVydGllczplLkZpZWxkVHlwZS5EZWZhdWx0fSxpPWl8fGUuVXRpbC5Ob3RTcGVjaWZpZWQsci5tZXNzYWdlPXQuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVNZXNzYWdlKGkpLHIucHJvcGVydGllcz10LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplUHJvcGVydGllcyhvKSxhJiYoci5zZXZlcml0eUxldmVsPWEpLHJ9cmV0dXJuIGkobyxuKSxvLmVudmVsb3BlVHlwZT0iTWljcm9zb2Z0LkFwcGxpY2F0aW9uSW5zaWdodHMuezB9Lk1lc3NhZ2UiLG8uZGF0YVR5cGU9Ik1lc3NhZ2VEYXRhIixvfShvLk1lc3NhZ2VEYXRhKTt0LlRyYWNlPW59KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBvOyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIHQ9ZS5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiB0LnZlcj0yLHQucHJvcGVydGllcz17fSx0Lm1lYXN1cmVtZW50cz17fSx0PWUuY2FsbCh0aGlzKXx8dGhpc31yZXR1cm4gaSh0LGUpLHR9KG4uVGVsZW1ldHJ5LkRvbWFpbik7ZS5FdmVudERhdGE9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKG4saSxvKXt2YXIgYT10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIGEuYWlEYXRhQ29udHJhY3Q9e3ZlcjplLkZpZWxkVHlwZS5SZXF1aXJlZCxuYW1lOmUuRmllbGRUeXBlLlJlcXVpcmVkLHByb3BlcnRpZXM6ZS5GaWVsZFR5cGUuRGVmYXVsdCxtZWFzdXJlbWVudHM6ZS5GaWVsZFR5cGUuRGVmYXVsdH0sYS5uYW1lPWUuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplU3RyaW5nKG4pfHxlLlV0aWwuTm90U3BlY2lmaWVkLGEucHJvcGVydGllcz1lLlRlbGVtZXRyeS5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZVByb3BlcnRpZXMoaSksYS5tZWFzdXJlbWVudHM9ZS5UZWxlbWV0cnkuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVNZWFzdXJlbWVudHMobyksYX1yZXR1cm4gaShuLHQpLG4uZW52ZWxvcGVUeXBlPSJNaWNyb3NvZnQuQXBwbGljYXRpb25JbnNpZ2h0cy57MH0uRXZlbnQiLG4uZGF0YVR5cGU9IkV2ZW50RGF0YSIsbn0oby5FdmVudERhdGEpO3QuRXZlbnQ9bn0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuaGFzRnVsbFN0YWNrPSEwLHRoaXMucGFyc2VkU3RhY2s9W119cmV0dXJuIGV9KCk7ZS5FeGNlcHRpb25EZXRhaWxzPXR9KG98fChvPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgdD1lLmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHQudmVyPTIsdC5leGNlcHRpb25zPVtdLHQucHJvcGVydGllcz17fSx0Lm1lYXN1cmVtZW50cz17fSx0PWUuY2FsbCh0aGlzKXx8dGhpc31yZXR1cm4gaSh0LGUpLHR9KG4uVGVsZW1ldHJ5LkRvbWFpbik7ZS5FeGNlcHRpb25EYXRhPXR9KG98fChvPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZX0oKTtlLlN0YWNrRnJhbWU9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKG4saSxvLHIscyl7dmFyIGM9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBjLmFpRGF0YUNvbnRyYWN0PXt2ZXI6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsaGFuZGxlZEF0OmUuRmllbGRUeXBlLlJlcXVpcmVkLGV4Y2VwdGlvbnM6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsc2V2ZXJpdHlMZXZlbDplLkZpZWxkVHlwZS5EZWZhdWx0LHByb3BlcnRpZXM6ZS5GaWVsZFR5cGUuRGVmYXVsdCxtZWFzdXJlbWVudHM6ZS5GaWVsZFR5cGUuRGVmYXVsdH0sYy5wcm9wZXJ0aWVzPWUuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplUHJvcGVydGllcyhvKSxjLm1lYXN1cmVtZW50cz1lLlRlbGVtZXRyeS5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZU1lYXN1cmVtZW50cyhyKSxjLmhhbmRsZWRBdD1pfHwidW5oYW5kbGVkIixjLmV4Y2VwdGlvbnM9W25ldyBhKG4pXSxzJiYoYy5zZXZlcml0eUxldmVsPXMpLGN9cmV0dXJuIGkobix0KSxuLkNyZWF0ZVNpbXBsZUV4Y2VwdGlvbj1mdW5jdGlvbihlLHQsbixpLG8sYSxyKXtyZXR1cm57aGFuZGxlZEF0OnJ8fCJ1bmhhbmRsZWQiLGV4Y2VwdGlvbnM6W3toYXNGdWxsU3RhY2s6ITAsbWVzc2FnZTplLHN0YWNrOm8sdHlwZU5hbWU6dH1dfX0sbi5lbnZlbG9wZVR5cGU9Ik1pY3Jvc29mdC5BcHBsaWNhdGlvbkluc2lnaHRzLnswfS5FeGNlcHRpb24iLG4uZGF0YVR5cGU9IkV4Y2VwdGlvbkRhdGEiLG59KG8uRXhjZXB0aW9uRGF0YSk7dC5FeGNlcHRpb249bjt2YXIgYT1mdW5jdGlvbihuKXtmdW5jdGlvbiBvKGkpe3ZhciBvPW4uY2FsbCh0aGlzKXx8dGhpcztvLmFpRGF0YUNvbnRyYWN0PXtpZDplLkZpZWxkVHlwZS5EZWZhdWx0LG91dGVySWQ6ZS5GaWVsZFR5cGUuRGVmYXVsdCx0eXBlTmFtZTplLkZpZWxkVHlwZS5SZXF1aXJlZCxtZXNzYWdlOmUuRmllbGRUeXBlLlJlcXVpcmVkLGhhc0Z1bGxTdGFjazplLkZpZWxkVHlwZS5EZWZhdWx0LHN0YWNrOmUuRmllbGRUeXBlLkRlZmF1bHQscGFyc2VkU3RhY2s6ZS5GaWVsZFR5cGUuQXJyYXl9LG8udHlwZU5hbWU9dC5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZVN0cmluZyhpLm5hbWUpfHxlLlV0aWwuTm90U3BlY2lmaWVkLG8ubWVzc2FnZT10LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplTWVzc2FnZShpLm1lc3NhZ2UpfHxlLlV0aWwuTm90U3BlY2lmaWVkO3ZhciBhPWkuc3RhY2s7cmV0dXJuIG8ucGFyc2VkU3RhY2s9by5wYXJzZVN0YWNrKGEpLG8uc3RhY2s9dC5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZUV4Y2VwdGlvbihhKSxvLmhhc0Z1bGxTdGFjaz1lLlV0aWwuaXNBcnJheShvLnBhcnNlZFN0YWNrKSYmby5wYXJzZWRTdGFjay5sZW5ndGg+MCxvfXJldHVybiBpKG8sbiksby5wcm90b3R5cGUucGFyc2VTdGFjaz1mdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7aWYoInN0cmluZyI9PXR5cGVvZiBlKXt2YXIgbj1lLnNwbGl0KCJcbiIpO3Q9W107Zm9yKHZhciBpPTAsbz0wLGE9MDthPD1uLmxlbmd0aDthKyspe3ZhciBzPW5bYV07aWYoci5yZWdleC50ZXN0KHMpKXt2YXIgYz1uZXcgcihuW2FdLChpKyspKTtvKz1jLnNpemVJbkJ5dGVzLHQucHVzaChjKX19dmFyIGQ9MzI3Njg7aWYobz5kKWZvcih2YXIgbD0wLHU9dC5sZW5ndGgtMSxwPTAsZj1sLGc9dTtsPHU7KXt2YXIgbT10W2xdLnNpemVJbkJ5dGVzLHY9dFt1XS5zaXplSW5CeXRlcztpZihwKz1tK3YscD5kKXt2YXIgaD1nLWYrMTt0LnNwbGljZShmLGgpO2JyZWFrfWY9bCxnPXUsbCsrLHUtLX19cmV0dXJuIHR9LG99KG8uRXhjZXB0aW9uRGV0YWlscykscj1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKGksbyl7dmFyIGE9dC5jYWxsKHRoaXMpfHx0aGlzO2Euc2l6ZUluQnl0ZXM9MCxhLmFpRGF0YUNvbnRyYWN0PXtsZXZlbDplLkZpZWxkVHlwZS5SZXF1aXJlZCxtZXRob2Q6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsYXNzZW1ibHk6ZS5GaWVsZFR5cGUuRGVmYXVsdCxmaWxlTmFtZTplLkZpZWxkVHlwZS5EZWZhdWx0LGxpbmU6ZS5GaWVsZFR5cGUuRGVmYXVsdH0sYS5sZXZlbD1vLGEubWV0aG9kPSI8bm9fbWV0aG9kPiIsYS5hc3NlbWJseT1lLlV0aWwudHJpbShpKTt2YXIgcj1pLm1hdGNoKG4ucmVnZXgpO3JldHVybiByJiZyLmxlbmd0aD49NSYmKGEubWV0aG9kPWUuVXRpbC50cmltKHJbMl0pfHxhLm1ldGhvZCxhLmZpbGVOYW1lPWUuVXRpbC50cmltKHJbNF0pLGEubGluZT1wYXJzZUludChyWzVdKXx8MCksYS5zaXplSW5CeXRlcys9YS5tZXRob2QubGVuZ3RoLGEuc2l6ZUluQnl0ZXMrPWEuZmlsZU5hbWUubGVuZ3RoLGEuc2l6ZUluQnl0ZXMrPWEuYXNzZW1ibHkubGVuZ3RoLGEuc2l6ZUluQnl0ZXMrPW4uYmFzZVNpemUsYS5zaXplSW5CeXRlcys9YS5sZXZlbC50b1N0cmluZygpLmxlbmd0aCxhLnNpemVJbkJ5dGVzKz1hLmxpbmUudG9TdHJpbmcoKS5sZW5ndGgsYX1yZXR1cm4gaShuLHQpLG4ucmVnZXg9L14oW1xzXSthdCk/KC4qPykoXEB8XHNcKHxccykoW15cKFxAXG5dKyk6KFswLTldKyk6KFswLTldKykoXCk/KSQvLG4uYmFzZVNpemU9NTgsbn0oby5TdGFja0ZyYW1lKTt0Ll9TdGFja0ZyYW1lPXJ9KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBvOyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIHQ9ZS5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiB0LnZlcj0yLHQubWV0cmljcz1bXSx0LnByb3BlcnRpZXM9e30sdD1lLmNhbGwodGhpcyl8fHRoaXN9cmV0dXJuIGkodCxlKSx0fShuLlRlbGVtZXRyeS5Eb21haW4pO2UuTWV0cmljRGF0YT10fShvfHwobz17fSkpO3ZhciBvOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7ZVtlLk1lYXN1cmVtZW50PTBdPSJNZWFzdXJlbWVudCIsZVtlLkFnZ3JlZ2F0aW9uPTFdPSJBZ2dyZWdhdGlvbiJ9KHQ9ZS5EYXRhUG9pbnRUeXBlfHwoZS5EYXRhUG9pbnRUeXBlPXt9KSl9KG98fChvPXt9KSk7dmFyIG87IWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMua2luZD1lLkRhdGFQb2ludFR5cGUuTWVhc3VyZW1lbnR9cmV0dXJuIHR9KCk7ZS5EYXRhUG9pbnQ9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbjshZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3ZhciBuPW51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gbi5haURhdGFDb250cmFjdD17bmFtZTplLkZpZWxkVHlwZS5SZXF1aXJlZCxraW5kOmUuRmllbGRUeXBlLkRlZmF1bHQsdmFsdWU6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsY291bnQ6ZS5GaWVsZFR5cGUuRGVmYXVsdCxtaW46ZS5GaWVsZFR5cGUuRGVmYXVsdCxtYXg6ZS5GaWVsZFR5cGUuRGVmYXVsdCxzdGREZXY6ZS5GaWVsZFR5cGUuRGVmYXVsdH0sbn1yZXR1cm4gaShuLHQpLG59KG8uRGF0YVBvaW50KTt0LkRhdGFQb2ludD1ufShuPXQuQ29tbW9ufHwodC5Db21tb249e30pKX0odD1lLlRlbGVtZXRyeXx8KGUuVGVsZW1ldHJ5PXt9KSl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbjshZnVuY3Rpb24obil7dmFyIGE9ZnVuY3Rpb24obyl7ZnVuY3Rpb24gYShpLGEscixzLGMsZCl7dmFyIGw9by5jYWxsKHRoaXMpfHx0aGlzO2wuYWlEYXRhQ29udHJhY3Q9e3Zlcjp0LkZpZWxkVHlwZS5SZXF1aXJlZCxtZXRyaWNzOnQuRmllbGRUeXBlLlJlcXVpcmVkLHByb3BlcnRpZXM6dC5GaWVsZFR5cGUuRGVmYXVsdH07dmFyIHU9bmV3IGUuQXBwbGljYXRpb25JbnNpZ2h0cy5UZWxlbWV0cnkuQ29tbW9uLkRhdGFQb2ludDtyZXR1cm4gdS5jb3VudD1yPjA/cjp2b2lkIDAsdS5tYXg9aXNOYU4oYyl8fG51bGw9PT1jP3ZvaWQgMDpjLHUubWluPWlzTmFOKHMpfHxudWxsPT09cz92b2lkIDA6cyx1Lm5hbWU9bi5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZVN0cmluZyhpKXx8dC5VdGlsLk5vdFNwZWNpZmllZCx1LnZhbHVlPWEsbC5tZXRyaWNzPVt1XSxsLnByb3BlcnRpZXM9dC5UZWxlbWV0cnkuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVQcm9wZXJ0aWVzKGQpLGx9cmV0dXJuIGkoYSxvKSxhLmVudmVsb3BlVHlwZT0iTWljcm9zb2Z0LkFwcGxpY2F0aW9uSW5zaWdodHMuezB9Lk1ldHJpYyIsYS5kYXRhVHlwZT0iTWV0cmljRGF0YSIsYX0oby5NZXRyaWNEYXRhKTtuLk1ldHJpYz1hfShuPXQuVGVsZW1ldHJ5fHwodC5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbzshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciB0PWUuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gdC52ZXI9Mix0LnByb3BlcnRpZXM9e30sdC5tZWFzdXJlbWVudHM9e30sdD1lLmNhbGwodGhpcyl8fHRoaXN9cmV0dXJuIGkodCxlKSx0fShlLkV2ZW50RGF0YSk7ZS5QYWdlVmlld0RhdGE9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbihuKXtmdW5jdGlvbiBvKGksbyxhLHIscyl7dmFyIGM9bi5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBjLmFpRGF0YUNvbnRyYWN0PXt2ZXI6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsbmFtZTplLkZpZWxkVHlwZS5EZWZhdWx0LHVybDplLkZpZWxkVHlwZS5EZWZhdWx0LGR1cmF0aW9uOmUuRmllbGRUeXBlLkRlZmF1bHQscHJvcGVydGllczplLkZpZWxkVHlwZS5EZWZhdWx0LG1lYXN1cmVtZW50czplLkZpZWxkVHlwZS5EZWZhdWx0fSxjLnVybD10LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplVXJsKG8pLGMubmFtZT10LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplU3RyaW5nKGkpfHxlLlV0aWwuTm90U3BlY2lmaWVkLGlzTmFOKGEpfHwoYy5kdXJhdGlvbj1lLlV0aWwubXNUb1RpbWVTcGFuKGEpKSxjLnByb3BlcnRpZXM9ZS5UZWxlbWV0cnkuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVQcm9wZXJ0aWVzKHIpLGMubWVhc3VyZW1lbnRzPWUuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplTWVhc3VyZW1lbnRzKHMpLGN9cmV0dXJuIGkobyxuKSxvLmVudmVsb3BlVHlwZT0iTWljcm9zb2Z0LkFwcGxpY2F0aW9uSW5zaWdodHMuezB9LlBhZ2V2aWV3IixvLmRhdGFUeXBlPSJQYWdldmlld0RhdGEiLG99KG8uUGFnZVZpZXdEYXRhKTt0LlBhZ2VWaWV3PW59KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBvOyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIHQ9ZS5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiB0LnZlcj0yLHQucHJvcGVydGllcz17fSx0Lm1lYXN1cmVtZW50cz17fSx0PWUuY2FsbCh0aGlzKXx8dGhpc31yZXR1cm4gaSh0LGUpLHR9KGUuUGFnZVZpZXdEYXRhKTtlLlBhZ2VWaWV3UGVyZkRhdGE9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbihuKXtmdW5jdGlvbiBvKGksYSxyLHMsYyl7dmFyIGQ9bi5jYWxsKHRoaXMpfHx0aGlzO2QuYWlEYXRhQ29udHJhY3Q9e3ZlcjplLkZpZWxkVHlwZS5SZXF1aXJlZCxuYW1lOmUuRmllbGRUeXBlLkRlZmF1bHQsdXJsOmUuRmllbGRUeXBlLkRlZmF1bHQsZHVyYXRpb246ZS5GaWVsZFR5cGUuRGVmYXVsdCxwZXJmVG90YWw6ZS5GaWVsZFR5cGUuRGVmYXVsdCxuZXR3b3JrQ29ubmVjdDplLkZpZWxkVHlwZS5EZWZhdWx0LHNlbnRSZXF1ZXN0OmUuRmllbGRUeXBlLkRlZmF1bHQscmVjZWl2ZWRSZXNwb25zZTplLkZpZWxkVHlwZS5EZWZhdWx0LGRvbVByb2Nlc3Npbmc6ZS5GaWVsZFR5cGUuRGVmYXVsdCxwcm9wZXJ0aWVzOmUuRmllbGRUeXBlLkRlZmF1bHQsbWVhc3VyZW1lbnRzOmUuRmllbGRUeXBlLkRlZmF1bHR9LGQuaXNWYWxpZD0hMTt2YXIgbD1vLmdldFBlcmZvcm1hbmNlVGltaW5nKCk7aWYobCl7dmFyIHU9by5nZXREdXJhdGlvbihsLm5hdmlnYXRpb25TdGFydCxsLmxvYWRFdmVudEVuZCkscD1vLmdldER1cmF0aW9uKGwubmF2aWdhdGlvblN0YXJ0LGwuY29ubmVjdEVuZCksZj1vLmdldER1cmF0aW9uKGwucmVxdWVzdFN0YXJ0LGwucmVzcG9uc2VTdGFydCksZz1vLmdldER1cmF0aW9uKGwucmVzcG9uc2VTdGFydCxsLnJlc3BvbnNlRW5kKSxtPW8uZ2V0RHVyYXRpb24obC5yZXNwb25zZUVuZCxsLmxvYWRFdmVudEVuZCk7MD09dT9lLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkVycm9yUFZDYWxjLCJlcnJvciBjYWxjdWxhdGluZyBwYWdlIHZpZXcgcGVyZm9ybWFuY2UuIix7dG90YWw6dSxuZXR3b3JrOnAscmVxdWVzdDpmLHJlc3BvbnNlOmcsZG9tOm19KTpvLnNob3VsZENvbGxlY3REdXJhdGlvbih1LHAsZixnLG0pP3U8TWF0aC5mbG9vcihwKStNYXRoLmZsb29yKGYpK01hdGguZmxvb3IoZykrTWF0aC5mbG9vcihtKT9lLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLkNsaWVudFBlcmZvcm1hbmNlTWF0aEVycm9yLCJjbGllbnQgcGVyZm9ybWFuY2UgbWF0aCBlcnJvci4iLHt0b3RhbDp1LG5ldHdvcms6cCxyZXF1ZXN0OmYscmVzcG9uc2U6Zyxkb206bX0pOihkLmR1cmF0aW9uTXM9dSxkLnBlcmZUb3RhbD1kLmR1cmF0aW9uPWUuVXRpbC5tc1RvVGltZVNwYW4odSksZC5uZXR3b3JrQ29ubmVjdD1lLlV0aWwubXNUb1RpbWVTcGFuKHApLGQuc2VudFJlcXVlc3Q9ZS5VdGlsLm1zVG9UaW1lU3BhbihmKSxkLnJlY2VpdmVkUmVzcG9uc2U9ZS5VdGlsLm1zVG9UaW1lU3BhbihnKSxkLmRvbVByb2Nlc3Npbmc9ZS5VdGlsLm1zVG9UaW1lU3BhbihtKSxkLmlzVmFsaWQ9ITApOmUuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsZS5fSW50ZXJuYWxNZXNzYWdlSWQuSW52YWxpZER1cmF0aW9uVmFsdWUsIkludmFsaWQgcGFnZSBsb2FkIGR1cmF0aW9uIHZhbHVlLiBCcm93c2VyIHBlcmYgZGF0YSB3b24ndCBiZSBzZW50LiIse3RvdGFsOnUsbmV0d29yazpwLHJlcXVlc3Q6ZixyZXNwb25zZTpnLGRvbTptfSl9cmV0dXJuIGQudXJsPXQuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVVcmwoYSksZC5uYW1lPXQuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVTdHJpbmcoaSl8fGUuVXRpbC5Ob3RTcGVjaWZpZWQsZC5wcm9wZXJ0aWVzPWUuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplUHJvcGVydGllcyhzKSxkLm1lYXN1cmVtZW50cz1lLlRlbGVtZXRyeS5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZU1lYXN1cmVtZW50cyhjKSxkfXJldHVybiBpKG8sbiksby5wcm90b3R5cGUuZ2V0SXNWYWxpZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzVmFsaWR9LG8ucHJvdG90eXBlLmdldER1cmF0aW9uTXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kdXJhdGlvbk1zfSxvLmdldFBlcmZvcm1hbmNlVGltaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIG8uaXNQZXJmb3JtYW5jZVRpbWluZ1N1cHBvcnRlZCgpP3dpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmc6bnVsbH0sby5pc1BlcmZvcm1hbmNlVGltaW5nU3VwcG9ydGVkPWZ1bmN0aW9uKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5wZXJmb3JtYW5jZSYmd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZ30sby5pc1BlcmZvcm1hbmNlVGltaW5nRGF0YVJlYWR5PWZ1bmN0aW9uKCl7dmFyIGU9d2luZG93LnBlcmZvcm1hbmNlLnRpbWluZztyZXR1cm4gZS5kb21haW5Mb29rdXBTdGFydD4wJiZlLm5hdmlnYXRpb25TdGFydD4wJiZlLnJlc3BvbnNlU3RhcnQ+MCYmZS5yZXF1ZXN0U3RhcnQ+MCYmZS5sb2FkRXZlbnRFbmQ+MCYmZS5yZXNwb25zZUVuZD4wJiZlLmNvbm5lY3RFbmQ+MCYmZS5kb21Mb2FkaW5nPjB9LG8uZ2V0RHVyYXRpb249ZnVuY3Rpb24oZSx0KXt2YXIgbj12b2lkIDA7cmV0dXJuIGlzTmFOKGUpfHxpc05hTih0KXx8KG49TWF0aC5tYXgodC1lLDApKSxufSxvLnNob3VsZENvbGxlY3REdXJhdGlvbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PTA7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyllW3RdPWFyZ3VtZW50c1t0XTt2YXIgbj1uYXZpZ2F0b3IudXNlckFnZW50LGk9ISFuJiZuLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiZ29vZ2xlYm90IikhPT0tMTtpZihpKXJldHVybiExO2Zvcih2YXIgYT0wO2E8ZS5sZW5ndGg7YSsrKWlmKGVbYV0+PW8uTUFYX0RVUkFUSU9OX0FMTE9XRUQpcmV0dXJuITE7cmV0dXJuITB9LG8uZW52ZWxvcGVUeXBlPSJNaWNyb3NvZnQuQXBwbGljYXRpb25JbnNpZ2h0cy57MH0uUGFnZXZpZXdQZXJmb3JtYW5jZSIsby5kYXRhVHlwZT0iUGFnZXZpZXdQZXJmb3JtYW5jZURhdGEiLG8uTUFYX0RVUkFUSU9OX0FMTE9XRUQ9MzZlNSxvfShvLlBhZ2VWaWV3UGVyZkRhdGEpO3QuUGFnZVZpZXdQZXJmb3JtYW5jZT1ufSh0PWUuVGVsZW1ldHJ5fHwoZS5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihlKXt0aGlzLl9jb25maWc9ZSx0aGlzLl9zZW5kZXI9bmV3IHQuU2VuZGVyKGUpLHRoaXMudGVsZW1ldHJ5SW5pdGlhbGl6ZXJzPVtdLCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiYodGhpcy5fc2Vzc2lvbk1hbmFnZXI9bmV3IHQuQ29udGV4dC5fU2Vzc2lvbk1hbmFnZXIoZSksdGhpcy5hcHBsaWNhdGlvbj1uZXcgdC5Db250ZXh0LkFwcGxpY2F0aW9uLHRoaXMuZGV2aWNlPW5ldyB0LkNvbnRleHQuRGV2aWNlLHRoaXMuaW50ZXJuYWw9bmV3IHQuQ29udGV4dC5JbnRlcm5hbChlKSx0aGlzLmxvY2F0aW9uPW5ldyB0LkNvbnRleHQuTG9jYXRpb24sdGhpcy51c2VyPW5ldyB0LkNvbnRleHQuVXNlcihlKSx0aGlzLm9wZXJhdGlvbj1uZXcgdC5Db250ZXh0Lk9wZXJhdGlvbix0aGlzLnNlc3Npb249bmV3IHQuQ29udGV4dC5TZXNzaW9uLHRoaXMuc2FtcGxlPW5ldyB0LkNvbnRleHQuU2FtcGxlKGUuc2FtcGxlUmF0ZSgpKSksdGhpcy5fYWRkRGVmYXVsdFRlbGVtZXRyeUluaXRpYWxpemVycygpfXJldHVybiBuLnByb3RvdHlwZS5hZGRUZWxlbWV0cnlJbml0aWFsaXplcj1mdW5jdGlvbihlKXt0aGlzLnRlbGVtZXRyeUluaXRpYWxpemVycy5wdXNoKGUpfSxuLnByb3RvdHlwZS50cmFjaz1mdW5jdGlvbihlKXtyZXR1cm4gZT8oZS5uYW1lPT09dC5UZWxlbWV0cnkuUGFnZVZpZXcuZW52ZWxvcGVUeXBlJiZ0Ll9JbnRlcm5hbExvZ2dpbmcucmVzZXRJbnRlcm5hbE1lc3NhZ2VDb3VudCgpLHRoaXMuc2Vzc2lvbiYmInN0cmluZyIhPXR5cGVvZiB0aGlzLnNlc3Npb24uaWQmJnRoaXMuX3Nlc3Npb25NYW5hZ2VyLnVwZGF0ZSgpLHRoaXMuX3RyYWNrKGUpKTp0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5UcmFja0FyZ3VtZW50c05vdFNwZWNpZmllZCwiY2Fubm90IGNhbGwgLnRyYWNrKCkgd2l0aCBhIG51bGwgb3IgdW5kZWZpbmVkIGFyZ3VtZW50IixudWxsLCEwKSxlfSxuLnByb3RvdHlwZS5fYWRkRGVmYXVsdFRlbGVtZXRyeUluaXRpYWxpemVycz1mdW5jdGlvbigpe2lmKCF0aGlzLl9jb25maWcuaXNCcm93c2VyTGlua1RyYWNraW5nRW5hYmxlZCgpKXt2YXIgdD1bIi9icm93c2VyTGlua1NpZ25hbFIvIiwiL19fYnJvd3NlckxpbmsvIl0sbj1mdW5jdGlvbihuKXtpZihuLm5hbWU9PT1lLkFwcGxpY2F0aW9uSW5zaWdodHMuVGVsZW1ldHJ5LlJlbW90ZURlcGVuZGVuY3lEYXRhLmVudmVsb3BlVHlwZSl7dmFyIGk9bi5kYXRhO2lmKGkmJmkuYmFzZURhdGEpZm9yKHZhciBvPTA7bzx0Lmxlbmd0aDtvKyspaWYoaS5iYXNlRGF0YS5uYW1lLmluZGV4T2YodFtvXSk+PTApcmV0dXJuITF9cmV0dXJuITB9O3RoaXMuYWRkVGVsZW1ldHJ5SW5pdGlhbGl6ZXIobil9fSxuLnByb3RvdHlwZS5fdHJhY2s9ZnVuY3Rpb24oZSl7dGhpcy5zZXNzaW9uJiYoInN0cmluZyI9PXR5cGVvZiB0aGlzLnNlc3Npb24uaWQ/dGhpcy5fYXBwbHlTZXNzaW9uQ29udGV4dChlLHRoaXMuc2Vzc2lvbik6dGhpcy5fYXBwbHlTZXNzaW9uQ29udGV4dChlLHRoaXMuX3Nlc3Npb25NYW5hZ2VyLmF1dG9tYXRpY1Nlc3Npb24pKSx0aGlzLl9hcHBseUFwcGxpY2F0aW9uQ29udGV4dChlLHRoaXMuYXBwbGljYXRpb24pLHRoaXMuX2FwcGx5RGV2aWNlQ29udGV4dChlLHRoaXMuZGV2aWNlKSx0aGlzLl9hcHBseUludGVybmFsQ29udGV4dChlLHRoaXMuaW50ZXJuYWwpLHRoaXMuX2FwcGx5TG9jYXRpb25Db250ZXh0KGUsdGhpcy5sb2NhdGlvbiksdGhpcy5fYXBwbHlTYW1wbGVDb250ZXh0KGUsdGhpcy5zYW1wbGUpLHRoaXMuX2FwcGx5VXNlckNvbnRleHQoZSx0aGlzLnVzZXIpLHRoaXMuX2FwcGx5T3BlcmF0aW9uQ29udGV4dChlLHRoaXMub3BlcmF0aW9uKSxlLmlLZXk9dGhpcy5fY29uZmlnLmluc3RydW1lbnRhdGlvbktleSgpO3ZhciBuPSExO3RyeXtmb3IodmFyIGk9dGhpcy50ZWxlbWV0cnlJbml0aWFsaXplcnMubGVuZ3RoLG89MDtvPGk7KytvKXt2YXIgYT10aGlzLnRlbGVtZXRyeUluaXRpYWxpemVyc1tvXTtpZihhJiZhLmFwcGx5KG51bGwsW2VdKT09PSExKXtuPSEwO2JyZWFrfX19Y2F0Y2gocil7bj0hMCx0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5UZWxlbWV0cnlJbml0aWFsaXplckZhaWxlZCwiT25lIG9mIHRlbGVtZXRyeSBpbml0aWFsaXplcnMgZmFpbGVkLCB0ZWxlbWV0cnkgaXRlbSB3aWxsIG5vdCBiZSBzZW50OiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKHIpLHtleGNlcHRpb246dC5VdGlsLmR1bXAocil9LCEwKX1pZighbilpZih0aGlzLl9maXhEZXByaWNhdGVkVmFsdWVzKGUpLGUubmFtZT09PXQuVGVsZW1ldHJ5Lk1ldHJpYy5lbnZlbG9wZVR5cGV8fHRoaXMuc2FtcGxlLmlzU2FtcGxlZEluKGUpKXt2YXIgcz10aGlzLl9jb25maWcuaW5zdHJ1bWVudGF0aW9uS2V5KCkucmVwbGFjZSgvLS9nLCIiKTtlLm5hbWU9ZS5uYW1lLnJlcGxhY2UoInswfSIscyksdGhpcy5fc2VuZGVyLnNlbmQoZSl9ZWxzZSB0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLHQuX0ludGVybmFsTWVzc2FnZUlkLlRlbGVtZXRyeVNhbXBsZWRBbmROb3RTZW50LCJUZWxlbWV0cnkgaXMgc2FtcGxlZCBhbmQgbm90IHNlbnQgdG8gdGhlIEFJIHNlcnZpY2UuIix7U2FtcGxlUmF0ZTp0aGlzLnNhbXBsZS5zYW1wbGVSYXRlfSwhMCk7cmV0dXJuIGV9LG4ucHJvdG90eXBlLl9hcHBseUFwcGxpY2F0aW9uQ29udGV4dD1mdW5jdGlvbihlLHQpe2lmKHQpe3ZhciBuPW5ldyBvLkNvbnRleHRUYWdLZXlzOyJzdHJpbmciPT10eXBlb2YgdC52ZXImJihlLnRhZ3Nbbi5hcHBsaWNhdGlvblZlcnNpb25dPXQudmVyKSwic3RyaW5nIj09dHlwZW9mIHQuYnVpbGQmJihlLnRhZ3Nbbi5hcHBsaWNhdGlvbkJ1aWxkXT10LmJ1aWxkKX19LG4ucHJvdG90eXBlLl9hcHBseURldmljZUNvbnRleHQ9ZnVuY3Rpb24oZSx0KXt2YXIgbj1uZXcgby5Db250ZXh0VGFnS2V5czt0JiYoInN0cmluZyI9PXR5cGVvZiB0LmlkJiYoZS50YWdzW24uZGV2aWNlSWRdPXQuaWQpLCJzdHJpbmciPT10eXBlb2YgdC5pcCYmKGUudGFnc1tuLmRldmljZUlwXT10LmlwKSwic3RyaW5nIj09dHlwZW9mIHQubGFuZ3VhZ2UmJihlLnRhZ3Nbbi5kZXZpY2VMYW5ndWFnZV09dC5sYW5ndWFnZSksInN0cmluZyI9PXR5cGVvZiB0LmxvY2FsZSYmKGUudGFnc1tuLmRldmljZUxvY2FsZV09dC5sb2NhbGUpLCJzdHJpbmciPT10eXBlb2YgdC5tb2RlbCYmKGUudGFnc1tuLmRldmljZU1vZGVsXT10Lm1vZGVsKSwidW5kZWZpbmVkIiE9dHlwZW9mIHQubmV0d29yayYmKGUudGFnc1tuLmRldmljZU5ldHdvcmtdPXQubmV0d29yayksInN0cmluZyI9PXR5cGVvZiB0Lm9lbU5hbWUmJihlLnRhZ3Nbbi5kZXZpY2VPRU1OYW1lXT10Lm9lbU5hbWUpLCJzdHJpbmciPT10eXBlb2YgdC5vcyYmKGUudGFnc1tuLmRldmljZU9TXT10Lm9zKSwic3RyaW5nIj09dHlwZW9mIHQub3N2ZXJzaW9uJiYoZS50YWdzW24uZGV2aWNlT1NWZXJzaW9uXT10Lm9zdmVyc2lvbiksInN0cmluZyI9PXR5cGVvZiB0LnJlc29sdXRpb24mJihlLnRhZ3Nbbi5kZXZpY2VTY3JlZW5SZXNvbHV0aW9uXT10LnJlc29sdXRpb24pLCJzdHJpbmciPT10eXBlb2YgdC50eXBlJiYoZS50YWdzW24uZGV2aWNlVHlwZV09dC50eXBlKSl9LG4ucHJvdG90eXBlLl9hcHBseUludGVybmFsQ29udGV4dD1mdW5jdGlvbihlLHQpe2lmKHQpe3ZhciBuPW5ldyBvLkNvbnRleHRUYWdLZXlzOyJzdHJpbmciPT10eXBlb2YgdC5hZ2VudFZlcnNpb24mJihlLnRhZ3Nbbi5pbnRlcm5hbEFnZW50VmVyc2lvbl09dC5hZ2VudFZlcnNpb24pLCJzdHJpbmciPT10eXBlb2YgdC5zZGtWZXJzaW9uJiYoZS50YWdzW24uaW50ZXJuYWxTZGtWZXJzaW9uXT10LnNka1ZlcnNpb24pfX0sbi5wcm90b3R5cGUuX2FwcGx5TG9jYXRpb25Db250ZXh0PWZ1bmN0aW9uKGUsdCl7aWYodCl7dmFyIG49bmV3IG8uQ29udGV4dFRhZ0tleXM7InN0cmluZyI9PXR5cGVvZiB0LmlwJiYoZS50YWdzW24ubG9jYXRpb25JcF09dC5pcCl9fSxuLnByb3RvdHlwZS5fYXBwbHlPcGVyYXRpb25Db250ZXh0PWZ1bmN0aW9uKGUsdCl7aWYodCl7dmFyIG49bmV3IG8uQ29udGV4dFRhZ0tleXM7InN0cmluZyI9PXR5cGVvZiB0LmlkJiYoZS50YWdzW24ub3BlcmF0aW9uSWRdPXQuaWQpLCJzdHJpbmciPT10eXBlb2YgdC5uYW1lJiYoZS50YWdzW24ub3BlcmF0aW9uTmFtZV09dC5uYW1lKSwic3RyaW5nIj09dHlwZW9mIHQucGFyZW50SWQmJihlLnRhZ3Nbbi5vcGVyYXRpb25QYXJlbnRJZF09dC5wYXJlbnRJZCksInN0cmluZyI9PXR5cGVvZiB0LnJvb3RJZCYmKGUudGFnc1tuLm9wZXJhdGlvblJvb3RJZF09dC5yb290SWQpLCJzdHJpbmciPT10eXBlb2YgdC5zeW50aGV0aWNTb3VyY2UmJihlLnRhZ3Nbbi5vcGVyYXRpb25TeW50aGV0aWNTb3VyY2VdPXQuc3ludGhldGljU291cmNlKX19LG4ucHJvdG90eXBlLl9hcHBseVNhbXBsZUNvbnRleHQ9ZnVuY3Rpb24oZSx0KXt0JiYoZS5zYW1wbGVSYXRlPXQuc2FtcGxlUmF0ZSl9LG4ucHJvdG90eXBlLl9hcHBseVNlc3Npb25Db250ZXh0PWZ1bmN0aW9uKGUsdCl7aWYodCl7dmFyIG49bmV3IG8uQ29udGV4dFRhZ0tleXM7InN0cmluZyI9PXR5cGVvZiB0LmlkJiYoZS50YWdzW24uc2Vzc2lvbklkXT10LmlkKSwidW5kZWZpbmVkIiE9dHlwZW9mIHQuaXNGaXJzdCYmKGUudGFnc1tuLnNlc3Npb25Jc0ZpcnN0XT10LmlzRmlyc3QpfX0sbi5wcm90b3R5cGUuX2FwcGx5VXNlckNvbnRleHQ9ZnVuY3Rpb24oZSx0KXtpZih0KXt2YXIgbj1uZXcgby5Db250ZXh0VGFnS2V5czsic3RyaW5nIj09dHlwZW9mIHQuYWNjb3VudElkJiYoZS50YWdzW24udXNlckFjY291bnRJZF09dC5hY2NvdW50SWQpLCJzdHJpbmciPT10eXBlb2YgdC5hZ2VudCYmKGUudGFnc1tuLnVzZXJBZ2VudF09dC5hZ2VudCksInN0cmluZyI9PXR5cGVvZiB0LmlkJiYoZS50YWdzW24udXNlcklkXT10LmlkKSwic3RyaW5nIj09dHlwZW9mIHQuYXV0aGVudGljYXRlZElkJiYoZS50YWdzW24udXNlckF1dGhVc2VySWRdPXQuYXV0aGVudGljYXRlZElkKSwic3RyaW5nIj09dHlwZW9mIHQuc3RvcmVSZWdpb24mJihlLnRhZ3Nbbi51c2VyU3RvcmVSZWdpb25dPXQuc3RvcmVSZWdpb24pfX0sbi5wcm90b3R5cGUuX2ZpeERlcHJpY2F0ZWRWYWx1ZXM9ZnVuY3Rpb24obil7dHJ5e3ZhciBpPW4uZGF0YTtpZihpJiZpLmJhc2VUeXBlPT09ZS5BcHBsaWNhdGlvbkluc2lnaHRzLlRlbGVtZXRyeS5SZW1vdGVEZXBlbmRlbmN5RGF0YS5kYXRhVHlwZSl7dmFyIG89aS5iYXNlRGF0YTtvJiZ0aGlzLl9maXhSREREZXByaWNhdGVkVmFsdWVzKG8pfX1jYXRjaChhKXt0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLHQuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZFRvRml4RGVwcmljYXRlZFZhbHVlcywiRmFpbGVkIHRvIHBhcnNlIHRoZSBiYXNlIGRhdGEgb2JqZWN0LCB0byBmaXggdGhlIGRlcHJpY2F0ZWQgdmFsdWVzICIrdC5VdGlsLmdldEV4Y2VwdGlvbk5hbWUoYSkse2V4Y2VwdGlvbjp0LlV0aWwuZHVtcChhKX0pfX0sbi5wcm90b3R5cGUuX2ZpeFJERERlcHJpY2F0ZWRWYWx1ZXM9ZnVuY3Rpb24oZSl7ZS5jb21tYW5kTmFtZSYmKGUuZGF0YT1lLmNvbW1hbmROYW1lLGUuY29tbWFuZE5hbWU9dm9pZCAwKSxlLmRlcGVuZGVuY3lUeXBlTmFtZSYmKGUudHlwZT1lLmRlcGVuZGVuY3lUeXBlTmFtZSxlLmRlcGVuZGVuY3lUeXBlTmFtZT12b2lkIDApLGUudmFsdWUmJjAhPT1lLnZhbHVlJiYoZS5kdXJhdGlvbj10LlV0aWwubXNUb1RpbWVTcGFuKGUudmFsdWUpLGUudmFsdWU9dm9pZCAwKSxlLmtpbmQmJihlLmtpbmQ9dm9pZCAwKSxlLmRlcGVuZGVuY3lTb3VyY2UmJihlLmRlcGVuZGVuY3lTb3VyY2U9dm9pZCAwKSxlLmFzeW5jJiYoZS5hc3luYz12b2lkIDApLGUuY291bnQmJihlLmNvdW50PXZvaWQgMCksZS5taW4mJihlLm1pbj12b2lkIDApLGUubWF4JiYoZS5tYXg9dm9pZCAwKSxlLnN0ZERldiYmKGUuc3RkRGV2PXZvaWQgMCksZS5kZXBlbmRlbmN5S2luZCYmKGUuZGVwZW5kZW5jeUtpbmQ9dm9pZCAwKX0sbn0oKTt0LlRlbGVtZXRyeUNvbnRleHQ9bn0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gZS5jYWxsKHRoaXMpfHx0aGlzfXJldHVybiBpKHQsZSksdH0oZS5UZWxlbWV0cnkuQmFzZSk7dC5EYXRhPW59KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24odCl7dmFyIG47IWZ1bmN0aW9uKG4pe3ZhciBvOyFmdW5jdGlvbihuKXt2YXIgbz1mdW5jdGlvbihlKXtmdW5jdGlvbiBuKG4saSl7dmFyIG89ZS5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBvLmFpRGF0YUNvbnRyYWN0PXtiYXNlVHlwZTp0LkZpZWxkVHlwZS5SZXF1aXJlZCxiYXNlRGF0YTp0LkZpZWxkVHlwZS5SZXF1aXJlZH0sby5iYXNlVHlwZT1uLG8uYmFzZURhdGE9aSxvfXJldHVybiBpKG4sZSksbn0oZS5UZWxlbWV0cnkuRGF0YSk7bi5EYXRhPW99KG89bi5Db21tb258fChuLkNvbW1vbj17fSkpfShuPXQuVGVsZW1ldHJ5fHwodC5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oZSx0KXt0aGlzLnBhZ2VWaWV3UGVyZm9ybWFuY2VTZW50PSExLHRoaXMub3ZlcnJpZGVQYWdlVmlld0R1cmF0aW9uPSExLHRoaXMub3ZlcnJpZGVQYWdlVmlld0R1cmF0aW9uPXQsdGhpcy5hcHBJbnNpZ2h0cz1lfXJldHVybiBuLnByb3RvdHlwZS50cmFja1BhZ2VWaWV3PWZ1bmN0aW9uKG4saSxvLGEscil7dmFyIHM9dGhpczsic3RyaW5nIiE9dHlwZW9mIG4mJihuPXdpbmRvdy5kb2N1bWVudCYmd2luZG93LmRvY3VtZW50LnRpdGxlfHwiIiksInN0cmluZyIhPXR5cGVvZiBpJiYoaT13aW5kb3cubG9jYXRpb24mJndpbmRvdy5sb2NhdGlvbi5ocmVmfHwiIik7dmFyIGM9ITEsZD12b2lkIDA7aWYodC5QYWdlVmlld1BlcmZvcm1hbmNlLmlzUGVyZm9ybWFuY2VUaW1pbmdTdXBwb3J0ZWQoKSl7dmFyIGw9dC5QYWdlVmlld1BlcmZvcm1hbmNlLmdldFBlcmZvcm1hbmNlVGltaW5nKCkubmF2aWdhdGlvblN0YXJ0O2Q9dC5QYWdlVmlld1BlcmZvcm1hbmNlLmdldER1cmF0aW9uKGwsK25ldyBEYXRlKSx0LlBhZ2VWaWV3UGVyZm9ybWFuY2Uuc2hvdWxkQ29sbGVjdER1cmF0aW9uKGQpfHwoZD12b2lkIDApfWVsc2UgdGhpcy5hcHBJbnNpZ2h0cy5zZW5kUGFnZVZpZXdJbnRlcm5hbChuLGksaXNOYU4ocik/dm9pZCAwOnIsbyxhKSx0aGlzLmFwcEluc2lnaHRzLmZsdXNoKCksYz0hMDtjfHwhdGhpcy5vdmVycmlkZVBhZ2VWaWV3RHVyYXRpb24mJmlzTmFOKHIpfHwodGhpcy5hcHBJbnNpZ2h0cy5zZW5kUGFnZVZpZXdJbnRlcm5hbChuLGksaXNOYU4ocik/ZDpyLG8sYSksdGhpcy5hcHBJbnNpZ2h0cy5mbHVzaCgpLGM9ITApO3ZhciB1PTZlNDtpZighdC5QYWdlVmlld1BlcmZvcm1hbmNlLmlzUGVyZm9ybWFuY2VUaW1pbmdTdXBwb3J0ZWQoKSlyZXR1cm4gdm9pZCBlLl9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbChlLkxvZ2dpbmdTZXZlcml0eS5XQVJOSU5HLGUuX0ludGVybmFsTWVzc2FnZUlkLk5hdmlnYXRpb25UaW1pbmdOb3RTdXBwb3J0ZWQsInRyYWNrUGFnZVZpZXc6IG5hdmlnYXRpb24gdGltaW5nIEFQSSB1c2VkIGZvciBjYWxjdWxhdGlvbiBvZiBwYWdlIGR1cmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLiBUaGlzIHBhZ2UgdmlldyB3aWxsIGJlIGNvbGxlY3RlZCB3aXRob3V0IGR1cmF0aW9uIGFuZCB0aW1pbmcgaW5mby4iKTt2YXIgcD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3RyeXtpZih0LlBhZ2VWaWV3UGVyZm9ybWFuY2UuaXNQZXJmb3JtYW5jZVRpbWluZ0RhdGFSZWFkeSgpKXtjbGVhckludGVydmFsKHApO3ZhciByPW5ldyB0LlBhZ2VWaWV3UGVyZm9ybWFuY2UobixpLG51bGwsbyxhKTtyLmdldElzVmFsaWQoKXx8Yz8oY3x8cy5hcHBJbnNpZ2h0cy5zZW5kUGFnZVZpZXdJbnRlcm5hbChuLGksci5nZXREdXJhdGlvbk1zKCksbyxhKSxzLnBhZ2VWaWV3UGVyZm9ybWFuY2VTZW50fHwocy5hcHBJbnNpZ2h0cy5zZW5kUGFnZVZpZXdQZXJmb3JtYW5jZUludGVybmFsKHIpLHMucGFnZVZpZXdQZXJmb3JtYW5jZVNlbnQ9ITApLHMuYXBwSW5zaWdodHMuZmx1c2goKSk6KHMuYXBwSW5zaWdodHMuc2VuZFBhZ2VWaWV3SW50ZXJuYWwobixpLGQsbyxhKSxzLmFwcEluc2lnaHRzLmZsdXNoKCkpfWVsc2UgdC5QYWdlVmlld1BlcmZvcm1hbmNlLmdldER1cmF0aW9uKGwsK25ldyBEYXRlKT51JiYoY2xlYXJJbnRlcnZhbChwKSxjfHwocy5hcHBJbnNpZ2h0cy5zZW5kUGFnZVZpZXdJbnRlcm5hbChuLGksdSxvLGEpLHMuYXBwSW5zaWdodHMuZmx1c2goKSkpfWNhdGNoKGYpe2UuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLlRyYWNrUFZGYWlsZWRDYWxjLCJ0cmFja1BhZ2VWaWV3IGZhaWxlZCBvbiBwYWdlIGxvYWQgY2FsY3VsYXRpb246ICIrZS5VdGlsLmdldEV4Y2VwdGlvbk5hbWUoZikse2V4Y2VwdGlvbjplLlV0aWwuZHVtcChmKX0pfX0sMTAwKX0sbn0oKTt0LlBhZ2VWaWV3TWFuYWdlcj1ufSh0PWUuVGVsZW1ldHJ5fHwoZS5UZWxlbWV0cnk9e30pKX0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7dGhpcy5wcmV2UGFnZVZpc2l0RGF0YUtleU5hbWU9InByZXZQYWdlVmlzaXREYXRhIix0aGlzLnBhZ2VWaXNpdFRpbWVUcmFja2luZ0hhbmRsZXI9ZX1yZXR1cm4gdC5wcm90b3R5cGUudHJhY2tQcmV2aW91c1BhZ2VWaXNpdD1mdW5jdGlvbih0LG4pe3RyeXt2YXIgaT10aGlzLnJlc3RhcnRQYWdlVmlzaXRUaW1lcih0LG4pO2kmJnRoaXMucGFnZVZpc2l0VGltZVRyYWNraW5nSGFuZGxlcihpLnBhZ2VOYW1lLGkucGFnZVVybCxpLnBhZ2VWaXNpdFRpbWUpfWNhdGNoKG8pe2UuX0ludGVybmFsTG9nZ2luZy53YXJuVG9Db25zb2xlKCJBdXRvIHRyYWNrIHBhZ2UgdmlzaXQgdGltZSBmYWlsZWQsIG1ldHJpYyB3aWxsIG5vdCBiZSBjb2xsZWN0ZWQ6ICIrZS5VdGlsLmR1bXAobykpfX0sdC5wcm90b3R5cGUucmVzdGFydFBhZ2VWaXNpdFRpbWVyPWZ1bmN0aW9uKHQsbil7dHJ5e3ZhciBpPXRoaXMuc3RvcFBhZ2VWaXNpdFRpbWVyKCk7cmV0dXJuIHRoaXMuc3RhcnRQYWdlVmlzaXRUaW1lcih0LG4pLGl9Y2F0Y2gobyl7cmV0dXJuIGUuX0ludGVybmFsTG9nZ2luZy53YXJuVG9Db25zb2xlKCJDYWxsIHRvIHJlc3RhcnQgZmFpbGVkOiAiK2UuVXRpbC5kdW1wKG8pKSxudWxsfX0sdC5wcm90b3R5cGUuc3RhcnRQYWdlVmlzaXRUaW1lcj1mdW5jdGlvbih0LG4pe3RyeXtpZihlLlV0aWwuY2FuVXNlU2Vzc2lvblN0b3JhZ2UoKSl7aWYobnVsbCE9ZS5VdGlsLmdldFNlc3Npb25TdG9yYWdlKHRoaXMucHJldlBhZ2VWaXNpdERhdGFLZXlOYW1lKSl0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBjYWxsIHN0YXJ0UGFnZVZpc2l0IGNvbnNlY3V0aXZlbHkgd2l0aG91dCBmaXJzdCBjYWxsaW5nIHN0b3BQYWdlVmlzaXQiKTt2YXIgbz1uZXcgaSh0LG4pLGE9SlNPTi5zdHJpbmdpZnkobyk7ZS5VdGlsLnNldFNlc3Npb25TdG9yYWdlKHRoaXMucHJldlBhZ2VWaXNpdERhdGFLZXlOYW1lLGEpfX1jYXRjaChyKXtlLl9JbnRlcm5hbExvZ2dpbmcud2FyblRvQ29uc29sZSgiQ2FsbCB0byBzdGFydCBmYWlsZWQ6ICIrZS5VdGlsLmR1bXAocikpfX0sdC5wcm90b3R5cGUuc3RvcFBhZ2VWaXNpdFRpbWVyPWZ1bmN0aW9uKCl7dHJ5e2lmKGUuVXRpbC5jYW5Vc2VTZXNzaW9uU3RvcmFnZSgpKXt2YXIgdD1EYXRlLm5vdygpLG49ZS5VdGlsLmdldFNlc3Npb25TdG9yYWdlKHRoaXMucHJldlBhZ2VWaXNpdERhdGFLZXlOYW1lKTtpZihuKXt2YXIgaT1KU09OLnBhcnNlKG4pO3JldHVybiBpLnBhZ2VWaXNpdFRpbWU9dC1pLnBhZ2VWaXNpdFN0YXJ0VGltZSxlLlV0aWwucmVtb3ZlU2Vzc2lvblN0b3JhZ2UodGhpcy5wcmV2UGFnZVZpc2l0RGF0YUtleU5hbWUpLGl9cmV0dXJuIG51bGx9cmV0dXJuIG51bGx9Y2F0Y2gobyl7cmV0dXJuIGUuX0ludGVybmFsTG9nZ2luZy53YXJuVG9Db25zb2xlKCJTdG9wIHBhZ2UgdmlzaXQgdGltZXIgZmFpbGVkOiAiK2UuVXRpbC5kdW1wKG8pKSxudWxsfX0sdH0oKTt0LlBhZ2VWaXNpdFRpbWVNYW5hZ2VyPW47dmFyIGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dGhpcy5wYWdlVmlzaXRTdGFydFRpbWU9RGF0ZS5ub3coKSx0aGlzLnBhZ2VOYW1lPWUsdGhpcy5wYWdlVXJsPXR9cmV0dXJuIGV9KCk7dC5QYWdlVmlzaXREYXRhPWl9KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBvOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7ZVtlLlNRTD0wXT0iU1FMIixlW2UuSHR0cD0xXT0iSHR0cCIsZVtlLk90aGVyPTJdPSJPdGhlciJ9KHQ9ZS5EZXBlbmRlbmN5S2luZHx8KGUuRGVwZW5kZW5jeUtpbmQ9e30pKX0ob3x8KG89e30pKTt2YXIgbzshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe2VbZS5VbmRlZmluZWQ9MF09IlVuZGVmaW5lZCIsZVtlLkFpYz0xXT0iQWljIixlW2UuQXBtYz0yXT0iQXBtYyJ9KHQ9ZS5EZXBlbmRlbmN5U291cmNlVHlwZXx8KGUuRGVwZW5kZW5jeVNvdXJjZVR5cGU9e30pKX0ob3x8KG89e30pKTt2YXIgbzshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi52ZXI9MixuLmtpbmQ9ZS5EYXRhUG9pbnRUeXBlLkFnZ3JlZ2F0aW9uLG4uZGVwZW5kZW5jeUtpbmQ9ZS5EZXBlbmRlbmN5S2luZC5PdGhlcixuLnN1Y2Nlc3M9ITAsbi5kZXBlbmRlbmN5U291cmNlPWUuRGVwZW5kZW5jeVNvdXJjZVR5cGUuQXBtYyxuLnByb3BlcnRpZXM9e30sbi5tZWFzdXJlbWVudHM9e30sbj10LmNhbGwodGhpcyl8fHRoaXN9cmV0dXJuIGkobix0KSxufShuLlRlbGVtZXRyeS5Eb21haW4pO2UuUmVtb3RlRGVwZW5kZW5jeURhdGE9dH0ob3x8KG89e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbihuKXtmdW5jdGlvbiBhKGksYSxyLHMsYyxkLGwsdSxwKXt2YXIgZj1uLmNhbGwodGhpcyl8fHRoaXM7aWYoZi5haURhdGFDb250cmFjdD17aWQ6ZS5GaWVsZFR5cGUuUmVxdWlyZWQsdmVyOmUuRmllbGRUeXBlLlJlcXVpcmVkLG5hbWU6ZS5GaWVsZFR5cGUuRGVmYXVsdCxyZXN1bHRDb2RlOmUuRmllbGRUeXBlLkRlZmF1bHQsZHVyYXRpb246ZS5GaWVsZFR5cGUuRGVmYXVsdCxzdWNjZXNzOmUuRmllbGRUeXBlLkRlZmF1bHQsZGF0YTplLkZpZWxkVHlwZS5EZWZhdWx0LHRhcmdldDplLkZpZWxkVHlwZS5EZWZhdWx0LHR5cGU6ZS5GaWVsZFR5cGUuRGVmYXVsdCxwcm9wZXJ0aWVzOmUuRmllbGRUeXBlLkRlZmF1bHQsbWVhc3VyZW1lbnRzOmUuRmllbGRUeXBlLkRlZmF1bHQsa2luZDplLkZpZWxkVHlwZS5EZWZhdWx0LHZhbHVlOmUuRmllbGRUeXBlLkRlZmF1bHQsY291bnQ6ZS5GaWVsZFR5cGUuRGVmYXVsdCxtaW46ZS5GaWVsZFR5cGUuRGVmYXVsdCxtYXg6ZS5GaWVsZFR5cGUuRGVmYXVsdCxzdGREZXY6ZS5GaWVsZFR5cGUuRGVmYXVsdCxkZXBlbmRlbmN5S2luZDplLkZpZWxkVHlwZS5EZWZhdWx0LGFzeW5jOmUuRmllbGRUeXBlLkRlZmF1bHQsZGVwZW5kZW5jeVNvdXJjZTplLkZpZWxkVHlwZS5EZWZhdWx0LGNvbW1hbmROYW1lOmUuRmllbGRUeXBlLkRlZmF1bHQsZGVwZW5kZW5jeVR5cGVOYW1lOmUuRmllbGRUeXBlLkRlZmF1bHR9LGYuaWQ9aSxmLmR1cmF0aW9uPWUuVXRpbC5tc1RvVGltZVNwYW4ocyksZi5zdWNjZXNzPWMsZi5yZXN1bHRDb2RlPWQrIiIsZi5kZXBlbmRlbmN5S2luZD1vLkRlcGVuZGVuY3lLaW5kLkh0dHAsZi50eXBlPSJBamF4IixmLmRhdGE9dC5Db21tb24uRGF0YVNhbml0aXplci5zYW5pdGl6ZVVybChyKSxhJiZhLmxlbmd0aD4wKXt2YXIgZz1lLlVybEhlbHBlci5wYXJzZVVybChhKTtpZihmLnRhcmdldD1nLmhvc3QsbnVsbCE9Zy5wYXRobmFtZSl7dmFyIG09MD09PWcucGF0aG5hbWUubGVuZ3RoPyIvIjpnLnBhdGhuYW1lOyIvIiE9PW0uY2hhckF0KDApJiYobT0iLyIrbSksZi5uYW1lPXQuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVTdHJpbmcobD9sKyIgIittOm0pfWVsc2UgZi5uYW1lPXQuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVTdHJpbmcoYSl9ZWxzZSBmLnRhcmdldD1yLGYubmFtZT1yO3JldHVybiBmLnByb3BlcnRpZXM9ZS5UZWxlbWV0cnkuQ29tbW9uLkRhdGFTYW5pdGl6ZXIuc2FuaXRpemVQcm9wZXJ0aWVzKHUpLGYubWVhc3VyZW1lbnRzPWUuVGVsZW1ldHJ5LkNvbW1vbi5EYXRhU2FuaXRpemVyLnNhbml0aXplTWVhc3VyZW1lbnRzKHApLGZ9cmV0dXJuIGkoYSxuKSxhLmVudmVsb3BlVHlwZT0iTWljcm9zb2Z0LkFwcGxpY2F0aW9uSW5zaWdodHMuezB9LlJlbW90ZURlcGVuZGVuY3kiLGEuZGF0YVR5cGU9IlJlbW90ZURlcGVuZGVuY3lEYXRhIixhfShvLlJlbW90ZURlcGVuZGVuY3lEYXRhKTt0LlJlbW90ZURlcGVuZGVuY3lEYXRhPW59KHQ9ZS5UZWxlbWV0cnl8fChlLlRlbGVtZXRyeT17fSkpfSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dGhpcy5oYXNoQ29kZUdlbmVyYWdvcj1uZXcgZS5IYXNoQ29kZVNjb3JlR2VuZXJhdG9yfXJldHVybiB0LnByb3RvdHlwZS5pc0VuYWJsZWQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5oYXNoQ29kZUdlbmVyYWdvci5nZXRIYXNoQ29kZVNjb3JlKGUpPHR9LHR9KCk7ZS5TcGxpdFRlc3Q9dH0odD1lLkFwcGxpY2F0aW9uSW5zaWdodHN8fChlLkFwcGxpY2F0aW9uSW5zaWdodHM9e30pKX0obnx8KG49e30pKTt2YXIgbjshZnVuY3Rpb24oZSl7dmFyIHQ7IWZ1bmN0aW9uKHQpe3QuVmVyc2lvbj0iMS4wLjEyIjt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obyl7dmFyIGE9dGhpczt0aGlzLl90cmFja0FqYXhBdHRlbXB0cz0wLHRoaXMuY29uZmlnPW98fHt9O3ZhciByPW4uZGVmYXVsdENvbmZpZztpZih2b2lkIDAhPT1yKWZvcih2YXIgcyBpbiByKXZvaWQgMD09PXRoaXMuY29uZmlnW3NdJiYodGhpcy5jb25maWdbc109cltzXSk7dC5fSW50ZXJuYWxMb2dnaW5nLnZlcmJvc2VMb2dnaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLnZlcmJvc2VMb2dnaW5nfSx0Ll9JbnRlcm5hbExvZ2dpbmcuZW5hYmxlRGVidWdFeGNlcHRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmVuYWJsZURlYnVnfTt2YXIgYz17aW5zdHJ1bWVudGF0aW9uS2V5OmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmluc3RydW1lbnRhdGlvbktleX0sYWNjb3VudElkOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmFjY291bnRJZH0sc2Vzc2lvblJlbmV3YWxNczpmdW5jdGlvbigpe3JldHVybiBhLmNvbmZpZy5zZXNzaW9uUmVuZXdhbE1zfSxzZXNzaW9uRXhwaXJhdGlvbk1zOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLnNlc3Npb25FeHBpcmF0aW9uTXN9LGVuZHBvaW50VXJsOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmVuZHBvaW50VXJsfSxlbWl0TGluZURlbGltaXRlZEpzb246ZnVuY3Rpb24oKXtyZXR1cm4gYS5jb25maWcuZW1pdExpbmVEZWxpbWl0ZWRKc29ufSxtYXhCYXRjaFNpemVJbkJ5dGVzOmZ1bmN0aW9uKCl7cmV0dXJuIWEuY29uZmlnLmlzQmVhY29uQXBpRGlzYWJsZWQmJnQuVXRpbC5Jc0JlYWNvbkFwaVN1cHBvcnRlZCgpP01hdGgubWluKGEuY29uZmlnLm1heEJhdGNoU2l6ZUluQnl0ZXMsdC5TZW5kZXIuTWF4QmVhY29uUGF5bG9hZFNpemUpOmEuY29uZmlnLm1heEJhdGNoU2l6ZUluQnl0ZXN9LG1heEJhdGNoSW50ZXJ2YWw6ZnVuY3Rpb24oKXtyZXR1cm4gYS5jb25maWcubWF4QmF0Y2hJbnRlcnZhbH0sZGlzYWJsZVRlbGVtZXRyeTpmdW5jdGlvbigpe3JldHVybiBhLmNvbmZpZy5kaXNhYmxlVGVsZW1ldHJ5fSxzYW1wbGVSYXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLnNhbXBsaW5nUGVyY2VudGFnZX0sY29va2llRG9tYWluOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmNvb2tpZURvbWFpbn0sZW5hYmxlU2Vzc2lvblN0b3JhZ2VCdWZmZXI6ZnVuY3Rpb24oKXtyZXR1cm4oYS5jb25maWcuaXNCZWFjb25BcGlEaXNhYmxlZHx8IXQuVXRpbC5Jc0JlYWNvbkFwaVN1cHBvcnRlZCgpKSYmYS5jb25maWcuZW5hYmxlU2Vzc2lvblN0b3JhZ2VCdWZmZXJ9LGlzUmV0cnlEaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiBhLmNvbmZpZy5pc1JldHJ5RGlzYWJsZWR9LGlzQmVhY29uQXBpRGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5jb25maWcuaXNCZWFjb25BcGlEaXNhYmxlZH0sc2RrRXh0ZW5zaW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLnNka0V4dGVuc2lvbn0saXNCcm93c2VyTGlua1RyYWNraW5nRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiBhLmNvbmZpZy5pc0Jyb3dzZXJMaW5rVHJhY2tpbmdFbmFibGVkfX07dGhpcy5jb25maWcuaXNDb29raWVVc2VEaXNhYmxlZCYmdC5VdGlsLmRpc2FibGVDb29raWVzKCksdGhpcy5jb25maWcuaXNTdG9yYWdlVXNlRGlzYWJsZWQmJnQuVXRpbC5kaXNhYmxlU3RvcmFnZSgpLHRoaXMuY29udGV4dD1uZXcgdC5UZWxlbWV0cnlDb250ZXh0KGMpLHRoaXMuX3BhZ2VWaWV3TWFuYWdlcj1uZXcgZS5BcHBsaWNhdGlvbkluc2lnaHRzLlRlbGVtZXRyeS5QYWdlVmlld01hbmFnZXIodGhpcyx0aGlzLmNvbmZpZy5vdmVycmlkZVBhZ2VWaWV3RHVyYXRpb24pLHRoaXMuX2V2ZW50VHJhY2tpbmc9bmV3IGkoInRyYWNrRXZlbnQiKSx0aGlzLl9ldmVudFRyYWNraW5nLmFjdGlvbj1mdW5jdGlvbihlLG4saSxvLHIpe3I/aXNOYU4oci5kdXJhdGlvbikmJihyLmR1cmF0aW9uPWkpOnI9e2R1cmF0aW9uOml9O3ZhciBzPW5ldyB0LlRlbGVtZXRyeS5FdmVudChlLG8sciksYz1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkRhdGEodC5UZWxlbWV0cnkuRXZlbnQuZGF0YVR5cGUscyksZD1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkVudmVsb3BlKGMsdC5UZWxlbWV0cnkuRXZlbnQuZW52ZWxvcGVUeXBlKTthLmNvbnRleHQudHJhY2soZCl9LHRoaXMuX3BhZ2VUcmFja2luZz1uZXcgaSgidHJhY2tQYWdlVmlldyIpLHRoaXMuX3BhZ2VUcmFja2luZy5hY3Rpb249ZnVuY3Rpb24oZSx0LG4saSxvKXthLnNlbmRQYWdlVmlld0ludGVybmFsKGUsdCxuLGksbyl9LHRoaXMuX3BhZ2VWaXNpdFRpbWVNYW5hZ2VyPW5ldyB0LlRlbGVtZXRyeS5QYWdlVmlzaXRUaW1lTWFuYWdlcihmdW5jdGlvbihlLHQsbil7cmV0dXJuIGEudHJhY2tQYWdlVmlzaXRUaW1lKGUsdCxuKX0pLHRoaXMuY29uZmlnLmRpc2FibGVBamF4VHJhY2tpbmd8fCh0aGlzLl9hamF4TW9uaXRvcj1uZXcgZS5BcHBsaWNhdGlvbkluc2lnaHRzLkFqYXhNb25pdG9yKHRoaXMpKX1yZXR1cm4gbi5wcm90b3R5cGUuc2VuZFBhZ2VWaWV3SW50ZXJuYWw9ZnVuY3Rpb24oZSxuLGksbyxhKXt2YXIgcj1uZXcgdC5UZWxlbWV0cnkuUGFnZVZpZXcoZSxuLGksbyxhKSxzPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRGF0YSh0LlRlbGVtZXRyeS5QYWdlVmlldy5kYXRhVHlwZSxyKSxjPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRW52ZWxvcGUocyx0LlRlbGVtZXRyeS5QYWdlVmlldy5lbnZlbG9wZVR5cGUpO3RoaXMuY29udGV4dC50cmFjayhjKSx0aGlzLl90cmFja0FqYXhBdHRlbXB0cz0wfSxuLnByb3RvdHlwZS5zZW5kUGFnZVZpZXdQZXJmb3JtYW5jZUludGVybmFsPWZ1bmN0aW9uKGUpe3ZhciBuPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRGF0YSh0LlRlbGVtZXRyeS5QYWdlVmlld1BlcmZvcm1hbmNlLmRhdGFUeXBlLGUpLGk9bmV3IHQuVGVsZW1ldHJ5LkNvbW1vbi5FbnZlbG9wZShuLHQuVGVsZW1ldHJ5LlBhZ2VWaWV3UGVyZm9ybWFuY2UuZW52ZWxvcGVUeXBlKTt0aGlzLmNvbnRleHQudHJhY2soaSl9LG4ucHJvdG90eXBlLnN0YXJ0VHJhY2tQYWdlPWZ1bmN0aW9uKGUpe3RyeXsic3RyaW5nIiE9dHlwZW9mIGUmJihlPXdpbmRvdy5kb2N1bWVudCYmd2luZG93LmRvY3VtZW50LnRpdGxlfHwiIiksdGhpcy5fcGFnZVRyYWNraW5nLnN0YXJ0KGUpfWNhdGNoKG4pe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLlN0YXJ0VHJhY2tGYWlsZWQsInN0YXJ0VHJhY2tQYWdlIGZhaWxlZCwgcGFnZSB2aWV3IG1heSBub3QgYmUgY29sbGVjdGVkOiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKG4pLHtleGNlcHRpb246dC5VdGlsLmR1bXAobil9KX19LG4ucHJvdG90eXBlLnN0b3BUcmFja1BhZ2U9ZnVuY3Rpb24oZSxuLGksbyl7dHJ5eyJzdHJpbmciIT10eXBlb2YgZSYmKGU9d2luZG93LmRvY3VtZW50JiZ3aW5kb3cuZG9jdW1lbnQudGl0bGV8fCIiKSwic3RyaW5nIiE9dHlwZW9mIG4mJihuPXdpbmRvdy5sb2NhdGlvbiYmd2luZG93LmxvY2F0aW9uLmhyZWZ8fCIiKSx0aGlzLl9wYWdlVHJhY2tpbmcuc3RvcChlLG4saSxvKSx0aGlzLmNvbmZpZy5hdXRvVHJhY2tQYWdlVmlzaXRUaW1lJiZ0aGlzLl9wYWdlVmlzaXRUaW1lTWFuYWdlci50cmFja1ByZXZpb3VzUGFnZVZpc2l0KGUsbil9Y2F0Y2goYSl7dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsdC5fSW50ZXJuYWxNZXNzYWdlSWQuU3RvcFRyYWNrRmFpbGVkLCJzdG9wVHJhY2tQYWdlIGZhaWxlZCwgcGFnZSB2aWV3IHdpbGwgbm90IGJlIGNvbGxlY3RlZDogIit0LlV0aWwuZ2V0RXhjZXB0aW9uTmFtZShhKSx7ZXhjZXB0aW9uOnQuVXRpbC5kdW1wKGEpfSl9fSxuLnByb3RvdHlwZS50cmFja1BhZ2VWaWV3PWZ1bmN0aW9uKGUsbixpLG8sYSl7dHJ5e3RoaXMuX3BhZ2VWaWV3TWFuYWdlci50cmFja1BhZ2VWaWV3KGUsbixpLG8sYSksdGhpcy5jb25maWcuYXV0b1RyYWNrUGFnZVZpc2l0VGltZSYmdGhpcy5fcGFnZVZpc2l0VGltZU1hbmFnZXIudHJhY2tQcmV2aW91c1BhZ2VWaXNpdChlLG4pfWNhdGNoKHIpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLlRyYWNrUFZGYWlsZWQsInRyYWNrUGFnZVZpZXcgZmFpbGVkLCBwYWdlIHZpZXcgd2lsbCBub3QgYmUgY29sbGVjdGVkOiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKHIpLHtleGNlcHRpb246dC5VdGlsLmR1bXAocil9KX19LG4ucHJvdG90eXBlLnN0YXJ0VHJhY2tFdmVudD1mdW5jdGlvbihlKXt0cnl7dGhpcy5fZXZlbnRUcmFja2luZy5zdGFydChlKX1jYXRjaChuKXt0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5TdGFydFRyYWNrRXZlbnRGYWlsZWQsInN0YXJ0VHJhY2tFdmVudCBmYWlsZWQsIGV2ZW50IHdpbGwgbm90IGJlIGNvbGxlY3RlZDogIit0LlV0aWwuZ2V0RXhjZXB0aW9uTmFtZShuKSx7ZXhjZXB0aW9uOnQuVXRpbC5kdW1wKG4pCn0pfX0sbi5wcm90b3R5cGUuc3RvcFRyYWNrRXZlbnQ9ZnVuY3Rpb24oZSxuLGkpe3RyeXt0aGlzLl9ldmVudFRyYWNraW5nLnN0b3AoZSx2b2lkIDAsbixpKX1jYXRjaChvKXt0Ll9JbnRlcm5hbExvZ2dpbmcudGhyb3dJbnRlcm5hbCh0LkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5TdG9wVHJhY2tFdmVudEZhaWxlZCwic3RvcFRyYWNrRXZlbnQgZmFpbGVkLCBldmVudCB3aWxsIG5vdCBiZSBjb2xsZWN0ZWQ6ICIrdC5VdGlsLmdldEV4Y2VwdGlvbk5hbWUobykse2V4Y2VwdGlvbjp0LlV0aWwuZHVtcChvKX0pfX0sbi5wcm90b3R5cGUudHJhY2tFdmVudD1mdW5jdGlvbihlLG4saSl7dHJ5e3ZhciBvPW5ldyB0LlRlbGVtZXRyeS5FdmVudChlLG4saSksYT1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkRhdGEodC5UZWxlbWV0cnkuRXZlbnQuZGF0YVR5cGUsbykscj1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkVudmVsb3BlKGEsdC5UZWxlbWV0cnkuRXZlbnQuZW52ZWxvcGVUeXBlKTt0aGlzLmNvbnRleHQudHJhY2socil9Y2F0Y2gocyl7dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsdC5fSW50ZXJuYWxNZXNzYWdlSWQuVHJhY2tFdmVudEZhaWxlZCwidHJhY2tFdmVudCBmYWlsZWQsIGV2ZW50IHdpbGwgbm90IGJlIGNvbGxlY3RlZDogIit0LlV0aWwuZ2V0RXhjZXB0aW9uTmFtZShzKSx7ZXhjZXB0aW9uOnQuVXRpbC5kdW1wKHMpfSl9fSxuLnByb3RvdHlwZS50cmFja0RlcGVuZGVuY3k9ZnVuY3Rpb24oZSxuLGksbyxhLHIscyxjLGQpe2lmKHRoaXMuY29uZmlnLm1heEFqYXhDYWxsc1BlclZpZXc9PT0tMXx8dGhpcy5fdHJhY2tBamF4QXR0ZW1wdHM8dGhpcy5jb25maWcubWF4QWpheENhbGxzUGVyVmlldyl7dmFyIGw9bmV3IHQuVGVsZW1ldHJ5LlJlbW90ZURlcGVuZGVuY3lEYXRhKGUsaSxvLGEscixzLG4sYyxkKSx1PW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRGF0YSh0LlRlbGVtZXRyeS5SZW1vdGVEZXBlbmRlbmN5RGF0YS5kYXRhVHlwZSxsKSxwPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRW52ZWxvcGUodSx0LlRlbGVtZXRyeS5SZW1vdGVEZXBlbmRlbmN5RGF0YS5lbnZlbG9wZVR5cGUpO3RoaXMuY29udGV4dC50cmFjayhwKX1lbHNlIHRoaXMuX3RyYWNrQWpheEF0dGVtcHRzPT09dGhpcy5jb25maWcubWF4QWpheENhbGxzUGVyVmlldyYmdC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuQ1JJVElDQUwsdC5fSW50ZXJuYWxNZXNzYWdlSWQuTWF4QWpheFBlclBWRXhjZWVkZWQsIk1heGltdW0gYWpheCBwZXIgcGFnZSB2aWV3IGxpbWl0IHJlYWNoZWQsIGFqYXggbW9uaXRvcmluZyBpcyBwYXVzZWQgdW50aWwgdGhlIG5leHQgdHJhY2tQYWdlVmlldygpLiBJbiBvcmRlciB0byBpbmNyZWFzZSB0aGUgbGltaXQgc2V0IHRoZSBtYXhBamF4Q2FsbHNQZXJWaWV3IGNvbmZpZ3VyYXRpb24gcGFyYW1ldGVyLiIsITApOysrdGhpcy5fdHJhY2tBamF4QXR0ZW1wdHN9LG4ucHJvdG90eXBlLnRyYWNrQWpheD1mdW5jdGlvbihlLHQsbixpLG8sYSxyKXt0aGlzLnRyYWNrRGVwZW5kZW5jeShlLG51bGwsdCxuLGksbyxhKX0sbi5wcm90b3R5cGUudHJhY2tFeGNlcHRpb249ZnVuY3Rpb24oZSxuLGksbyxhKXt0cnl7aWYoIXQuVXRpbC5pc0Vycm9yKGUpKXRyeXt0aHJvdyBuZXcgRXJyb3IoZSl9Y2F0Y2gocil7ZT1yfXZhciBzPW5ldyB0LlRlbGVtZXRyeS5FeGNlcHRpb24oZSxuLGksbyxhKSxjPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRGF0YSh0LlRlbGVtZXRyeS5FeGNlcHRpb24uZGF0YVR5cGUscyksZD1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkVudmVsb3BlKGMsdC5UZWxlbWV0cnkuRXhjZXB0aW9uLmVudmVsb3BlVHlwZSk7dGhpcy5jb250ZXh0LnRyYWNrKGQpfWNhdGNoKGwpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLlRyYWNrRXhjZXB0aW9uRmFpbGVkLCJ0cmFja0V4Y2VwdGlvbiBmYWlsZWQsIGV4Y2VwdGlvbiB3aWxsIG5vdCBiZSBjb2xsZWN0ZWQ6ICIrdC5VdGlsLmdldEV4Y2VwdGlvbk5hbWUobCkse2V4Y2VwdGlvbjp0LlV0aWwuZHVtcChsKX0pfX0sbi5wcm90b3R5cGUudHJhY2tNZXRyaWM9ZnVuY3Rpb24oZSxuLGksbyxhLHIpe3RyeXt2YXIgcz1uZXcgdC5UZWxlbWV0cnkuTWV0cmljKGUsbixpLG8sYSxyKSxjPW5ldyB0LlRlbGVtZXRyeS5Db21tb24uRGF0YSh0LlRlbGVtZXRyeS5NZXRyaWMuZGF0YVR5cGUscyksZD1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkVudmVsb3BlKGMsdC5UZWxlbWV0cnkuTWV0cmljLmVudmVsb3BlVHlwZSk7dGhpcy5jb250ZXh0LnRyYWNrKGQpfWNhdGNoKGwpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLlRyYWNrTWV0cmljRmFpbGVkLCJ0cmFja01ldHJpYyBmYWlsZWQsIG1ldHJpYyB3aWxsIG5vdCBiZSBjb2xsZWN0ZWQ6ICIrdC5VdGlsLmdldEV4Y2VwdGlvbk5hbWUobCkse2V4Y2VwdGlvbjp0LlV0aWwuZHVtcChsKX0pfX0sbi5wcm90b3R5cGUudHJhY2tUcmFjZT1mdW5jdGlvbihlLG4saSl7dHJ5e3ZhciBvPW5ldyB0LlRlbGVtZXRyeS5UcmFjZShlLG4saSksYT1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkRhdGEodC5UZWxlbWV0cnkuVHJhY2UuZGF0YVR5cGUsbykscj1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkVudmVsb3BlKGEsdC5UZWxlbWV0cnkuVHJhY2UuZW52ZWxvcGVUeXBlKTt0aGlzLmNvbnRleHQudHJhY2socil9Y2F0Y2gocyl7dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5UcmFja1RyYWNlRmFpbGVkLCJ0cmFja1RyYWNlIGZhaWxlZCwgdHJhY2Ugd2lsbCBub3QgYmUgY29sbGVjdGVkOiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKHMpLHtleGNlcHRpb246dC5VdGlsLmR1bXAocyl9KX19LG4ucHJvdG90eXBlLnRyYWNrUGFnZVZpc2l0VGltZT1mdW5jdGlvbihlLHQsbil7dmFyIGk9e1BhZ2VOYW1lOmUsUGFnZVVybDp0fTt0aGlzLnRyYWNrTWV0cmljKCJQYWdlVmlzaXRUaW1lIixuLDEsbixuLGkpfSxuLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbihlKXt2b2lkIDA9PT1lJiYoZT0hMCk7dHJ5e3RoaXMuY29udGV4dC5fc2VuZGVyLnRyaWdnZXJTZW5kKGUpfWNhdGNoKG4pe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLkZsdXNoRmFpbGVkLCJmbHVzaCBmYWlsZWQsIHRlbGVtZXRyeSB3aWxsIG5vdCBiZSBjb2xsZWN0ZWQ6ICIrdC5VdGlsLmdldEV4Y2VwdGlvbk5hbWUobikse2V4Y2VwdGlvbjp0LlV0aWwuZHVtcChuKX0pfX0sbi5wcm90b3R5cGUuc2V0QXV0aGVudGljYXRlZFVzZXJDb250ZXh0PWZ1bmN0aW9uKGUsbil7dHJ5e3RoaXMuY29udGV4dC51c2VyLnNldEF1dGhlbnRpY2F0ZWRVc2VyQ29udGV4dChlLG4pfWNhdGNoKGkpe3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsdC5fSW50ZXJuYWxNZXNzYWdlSWQuU2V0QXV0aENvbnRleHRGYWlsZWQsIlNldHRpbmcgYXV0aCB1c2VyIGNvbnRleHQgZmFpbGVkLiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKGkpLHtleGNlcHRpb246dC5VdGlsLmR1bXAoaSl9LCEwKX19LG4ucHJvdG90eXBlLmNsZWFyQXV0aGVudGljYXRlZFVzZXJDb250ZXh0PWZ1bmN0aW9uKCl7dHJ5e3RoaXMuY29udGV4dC51c2VyLmNsZWFyQXV0aGVudGljYXRlZFVzZXJDb250ZXh0KCl9Y2F0Y2goZSl7dC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5TZXRBdXRoQ29udGV4dEZhaWxlZCwiQ2xlYXJpbmcgYXV0aCB1c2VyIGNvbnRleHQgZmFpbGVkLiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKGUpLHtleGNlcHRpb246dC5VdGlsLmR1bXAoZSl9LCEwKX19LG4ucHJvdG90eXBlLlNlbmRDT1JTRXhjZXB0aW9uPWZ1bmN0aW9uKG4pe3ZhciBpPWUuQXBwbGljYXRpb25JbnNpZ2h0cy5UZWxlbWV0cnkuRXhjZXB0aW9uLkNyZWF0ZVNpbXBsZUV4Y2VwdGlvbigiU2NyaXB0IGVycm9yLiIsIkVycm9yIiwidW5rbm93biIsInVua25vd24iLCJUaGUgYnJvd3NlcidzIHNhbWUtb3JpZ2luIHBvbGljeSBwcmV2ZW50cyB1cyBmcm9tIGdldHRpbmcgdGhlIGRldGFpbHMgb2YgdGhpcyBleGNlcHRpb24uIENvbnNpZGVyIHVzaW5nICdjcm9zc29yaWdpbicgYXR0cmlidXRlLiIsMCxudWxsKTtpLnByb3BlcnRpZXM9bjt2YXIgbz1uZXcgdC5UZWxlbWV0cnkuQ29tbW9uLkRhdGEodC5UZWxlbWV0cnkuRXhjZXB0aW9uLmRhdGFUeXBlLGkpLGE9bmV3IHQuVGVsZW1ldHJ5LkNvbW1vbi5FbnZlbG9wZShvLHQuVGVsZW1ldHJ5LkV4Y2VwdGlvbi5lbnZlbG9wZVR5cGUpO3RoaXMuY29udGV4dC50cmFjayhhKX0sbi5wcm90b3R5cGUuX29uZXJyb3I9ZnVuY3Rpb24oZSxuLGksbyxhKXt0cnl7dmFyIHI9e3VybDpuP246ZG9jdW1lbnQuVVJMfTtpZih0LlV0aWwuaXNDcm9zc09yaWdpbkVycm9yKGUsbixpLG8sYSkpdGhpcy5TZW5kQ09SU0V4Y2VwdGlvbihyKTtlbHNle2lmKCF0LlV0aWwuaXNFcnJvcihhKSl7dmFyIHM9IndpbmRvdy5vbmVycm9yQCIrci51cmwrIjoiK2krIjoiKyhvfHwwKTthPW5ldyBFcnJvcihlKSxhLnN0YWNrPXN9dGhpcy50cmFja0V4Y2VwdGlvbihhLG51bGwscil9fWNhdGNoKGMpe3ZhciBkPWE/YS5uYW1lKyIsICIrYS5tZXNzYWdlOiJudWxsIixsPXQuVXRpbC5kdW1wKGMpO3QuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLHQuX0ludGVybmFsTWVzc2FnZUlkLkV4Y2VwdGlvbldoaWxlTG9nZ2luZ0Vycm9yLCJfb25lcnJvciB0aHJldyBleGNlcHRpb24gd2hpbGUgbG9nZ2luZyBlcnJvciwgZXJyb3Igd2lsbCBub3QgYmUgY29sbGVjdGVkOiAiK3QuVXRpbC5nZXRFeGNlcHRpb25OYW1lKGMpLHtleGNlcHRpb246bCxlcnJvclN0cmluZzpkfSl9fSxufSgpO3QuQXBwSW5zaWdodHM9bjt2YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5fbmFtZT1lLHRoaXMuX2V2ZW50cz17fX1yZXR1cm4gZS5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oZSl7InVuZGVmaW5lZCIhPXR5cGVvZiB0aGlzLl9ldmVudHNbZV0mJnQuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKHQuTG9nZ2luZ1NldmVyaXR5LldBUk5JTkcsdC5fSW50ZXJuYWxNZXNzYWdlSWQuU3RhcnRDYWxsZWRNb3JlVGhhbk9uY2UsInN0YXJ0IHdhcyBjYWxsZWQgbW9yZSB0aGFuIG9uY2UgZm9yIHRoaXMgZXZlbnQgd2l0aG91dCBjYWxsaW5nIHN0b3AuIix7bmFtZTp0aGlzLl9uYW1lLGtleTplfSwhMCksdGhpcy5fZXZlbnRzW2VdPStuZXcgRGF0ZX0sZS5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbihlLG4saSxvKXt2YXIgYT10aGlzLl9ldmVudHNbZV07aWYoaXNOYU4oYSkpdC5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5TdG9wQ2FsbGVkV2l0aG91dFN0YXJ0LCJzdG9wIHdhcyBjYWxsZWQgd2l0aG91dCBhIGNvcnJlc3BvbmRpbmcgc3RhcnQuIix7bmFtZTp0aGlzLl9uYW1lLGtleTplfSwhMCk7ZWxzZXt2YXIgcj0rbmV3IERhdGUscz10LlRlbGVtZXRyeS5QYWdlVmlld1BlcmZvcm1hbmNlLmdldER1cmF0aW9uKGEscik7dGhpcy5hY3Rpb24oZSxuLHMsaSxvKX1kZWxldGUgdGhpcy5fZXZlbnRzW2VdLHRoaXMuX2V2ZW50c1tlXT12b2lkIDB9LGV9KCl9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQucmVzZXQ9ZnVuY3Rpb24oKXt0LmlzRW5hYmxlZCgpJiYoZS5VdGlsLnNldFNlc3Npb25TdG9yYWdlKHQuSVRFTVNfUVVFVUVEX0tFWSwiMCIpLGUuVXRpbC5zZXRTZXNzaW9uU3RvcmFnZSh0LklTU1VFU19SRVBPUlRFRF9LRVksIjAiKSx0Lml0ZW1zUmVzdG9yZWRGcm9tU2Vzc2lvbkJ1ZmZlcj0wKX0sdC5pc0VuYWJsZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdC5lbmFibGVkJiZudWxsIT10LmFwcEluc2lnaHRzJiZ0LmFwcEluc2lnaHRzLmNvbnRleHQuX3NlbmRlci5fWE1MSHR0cFJlcXVlc3RTdXBwb3J0ZWQmJmUuVXRpbC5jYW5Vc2VTZXNzaW9uU3RvcmFnZSgpfSx0LmdldElzc3Vlc1JlcG9ydGVkPWZ1bmN0aW9uKCl7dmFyIG49IXQuaXNFbmFibGVkKCl8fGlzTmFOKCtlLlV0aWwuZ2V0U2Vzc2lvblN0b3JhZ2UodC5JU1NVRVNfUkVQT1JURURfS0VZKSk/MDorZS5VdGlsLmdldFNlc3Npb25TdG9yYWdlKHQuSVNTVUVTX1JFUE9SVEVEX0tFWSk7cmV0dXJuIG59LHQuaW5jcmVtZW50SXRlbXNRdWV1ZWQ9ZnVuY3Rpb24oKXt0cnl7aWYodC5pc0VuYWJsZWQoKSl7dmFyIG49dC5nZXROdW1iZXJPZkxvc3RJdGVtcygpOysrbixlLlV0aWwuc2V0U2Vzc2lvblN0b3JhZ2UodC5JVEVNU19RVUVVRURfS0VZLG4udG9TdHJpbmcoKSl9fWNhdGNoKGkpe319LHQuZGVjcmVtZW50SXRlbXNRdWV1ZWQ9ZnVuY3Rpb24obil7dHJ5e2lmKHQuaXNFbmFibGVkKCkpe3ZhciBpPXQuZ2V0TnVtYmVyT2ZMb3N0SXRlbXMoKTtpLT1uLGk8MCYmKGk9MCksZS5VdGlsLnNldFNlc3Npb25TdG9yYWdlKHQuSVRFTVNfUVVFVUVEX0tFWSxpLnRvU3RyaW5nKCkpfX1jYXRjaChvKXt9fSx0LmdldE51bWJlck9mTG9zdEl0ZW1zPWZ1bmN0aW9uKCl7dmFyIG49MDt0cnl7dC5pc0VuYWJsZWQoKSYmKG49aXNOYU4oK2UuVXRpbC5nZXRTZXNzaW9uU3RvcmFnZSh0LklURU1TX1FVRVVFRF9LRVkpKT8wOitlLlV0aWwuZ2V0U2Vzc2lvblN0b3JhZ2UodC5JVEVNU19RVUVVRURfS0VZKSl9Y2F0Y2goaSl7bj0wfXJldHVybiBufSx0LnJlcG9ydExvc3RJdGVtcz1mdW5jdGlvbigpe3RyeXtpZih0LmlzRW5hYmxlZCgpJiZ0LmdldElzc3Vlc1JlcG9ydGVkKCk8dC5MSU1JVF9QRVJfU0VTU0lPTiYmdC5nZXROdW1iZXJPZkxvc3RJdGVtcygpPjApe3ZhciBuPXQuZ2V0TnVtYmVyT2ZMb3N0SXRlbXMoKS10Lml0ZW1zUmVzdG9yZWRGcm9tU2Vzc2lvbkJ1ZmZlcjt0LmFwcEluc2lnaHRzLnRyYWNrVHJhY2UoJ0FJIChJbnRlcm5hbCk6IEludGVybmFsIHJlcG9ydCBEQVRBTE9TUzoiJytuKyciJyxudWxsKSx0LmFwcEluc2lnaHRzLmZsdXNoKCk7dmFyIGk9dC5nZXRJc3N1ZXNSZXBvcnRlZCgpOysraSxlLlV0aWwuc2V0U2Vzc2lvblN0b3JhZ2UodC5JU1NVRVNfUkVQT1JURURfS0VZLGkudG9TdHJpbmcoKSl9fWNhdGNoKG8pe2UuX0ludGVybmFsTG9nZ2luZy50aHJvd0ludGVybmFsKGUuTG9nZ2luZ1NldmVyaXR5LkNSSVRJQ0FMLGUuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZFRvUmVwb3J0RGF0YUxvc3MsIkZhaWxlZCB0byByZXBvcnQgZGF0YSBsb3NzOiAiK2UuVXRpbC5nZXRFeGNlcHRpb25OYW1lKG8pLHtleGNlcHRpb246ZS5VdGlsLmR1bXAobyl9KX1maW5hbGx5e3RyeXt0LnJlc2V0KCl9Y2F0Y2gobyl7fX19LHQuZW5hYmxlZD0hMSx0Lml0ZW1zUmVzdG9yZWRGcm9tU2Vzc2lvbkJ1ZmZlcj0wLHQuTElNSVRfUEVSX1NFU1NJT049MTAsdC5JVEVNU19RVUVVRURfS0VZPSJBSV9pdGVtc1F1ZXVlZCIsdC5JU1NVRVNfUkVQT1JURURfS0VZPSJBSV9sb3NzSXNzdWVzUmVwb3J0ZWQiLHR9KCk7ZS5EYXRhTG9zc0FuYWx5emVyPXR9KHQ9ZS5BcHBsaWNhdGlvbkluc2lnaHRzfHwoZS5BcHBsaWNhdGlvbkluc2lnaHRzPXt9KSl9KG58fChuPXt9KSk7dmFyIG47IWZ1bmN0aW9uKGUpe3ZhciB0OyFmdW5jdGlvbih0KXt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIG4odCl7dC5xdWV1ZT10LnF1ZXVlfHxbXTt2YXIgaT10LmNvbmZpZ3x8e307aWYoaSYmIWkuaW5zdHJ1bWVudGF0aW9uS2V5KWlmKGk9dCxpLmlLZXkpZS5BcHBsaWNhdGlvbkluc2lnaHRzLlZlcnNpb249IjAuMTAuMC4wIixpLmluc3RydW1lbnRhdGlvbktleT1pLmlLZXk7ZWxzZXtpZighaS5hcHBsaWNhdGlvbkluc2lnaHRzSWQpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgbG9hZCBBcHBsaWNhdGlvbiBJbnNpZ2h0cyBTREssIG5vIGluc3RydW1lbnRhdGlvbktleSB3YXMgcHJvdmlkZWQuIik7ZS5BcHBsaWNhdGlvbkluc2lnaHRzLlZlcnNpb249IjAuNy4yLjAiLGkuaW5zdHJ1bWVudGF0aW9uS2V5PWkuYXBwbGljYXRpb25JbnNpZ2h0c0lkfWk9bi5nZXREZWZhdWx0Q29uZmlnKGkpLHRoaXMuc25pcHBldD10LHRoaXMuY29uZmlnPWl9cmV0dXJuIG4ucHJvdG90eXBlLmxvYWRBcHBJbnNpZ2h0cz1mdW5jdGlvbigpe3ZhciB0PW5ldyBlLkFwcGxpY2F0aW9uSW5zaWdodHMuQXBwSW5zaWdodHModGhpcy5jb25maWcpO2lmKHRoaXMuY29uZmlnLmlLZXkpe3ZhciBuPXQudHJhY2tQYWdlVmlldzt0LnRyYWNrUGFnZVZpZXc9ZnVuY3Rpb24oZSxpLG8pe24uYXBwbHkodCxbbnVsbCxlLGksb10pfX12YXIgaT0ibG9nUGFnZVZpZXciOyJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLnNuaXBwZXRbaV0mJih0W2ldPWZ1bmN0aW9uKGUsbixpKXt0LnRyYWNrUGFnZVZpZXcobnVsbCxlLG4saSl9KTt2YXIgbz0ibG9nRXZlbnQiO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLnNuaXBwZXRbb10mJih0W29dPWZ1bmN0aW9uKGUsbixpKXt0LnRyYWNrRXZlbnQoZSxuLGkpfSksdH0sbi5wcm90b3R5cGUuZW1wdHlRdWV1ZT1mdW5jdGlvbigpe3RyeXtpZihlLkFwcGxpY2F0aW9uSW5zaWdodHMuVXRpbC5pc0FycmF5KHRoaXMuc25pcHBldC5xdWV1ZSkpe2Zvcih2YXIgbj10aGlzLnNuaXBwZXQucXVldWUubGVuZ3RoLGk9MDtpPG47aSsrKXt2YXIgbz10aGlzLnNuaXBwZXQucXVldWVbaV07bygpfXRoaXMuc25pcHBldC5xdWV1ZT12b2lkIDAsZGVsZXRlIHRoaXMuc25pcHBldC5xdWV1ZX19Y2F0Y2goYSl7dmFyIHI9e307YSYmImZ1bmN0aW9uIj09dHlwZW9mIGEudG9TdHJpbmcmJihyLmV4Y2VwdGlvbj1hLnRvU3RyaW5nKCkpLGUuQXBwbGljYXRpb25JbnNpZ2h0cy5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwodC5Mb2dnaW5nU2V2ZXJpdHkuV0FSTklORyx0Ll9JbnRlcm5hbE1lc3NhZ2VJZC5GYWlsZWRUb1NlbmRRdWV1ZWRUZWxlbWV0cnksIkZhaWxlZCB0byBzZW5kIHF1ZXVlZCB0ZWxlbWV0cnkiLHIpfX0sbi5wcm90b3R5cGUucG9sbEludGVyYWxMb2dzPWZ1bmN0aW9uKHQpe3JldHVybiBzZXRJbnRlcnZhbChmdW5jdGlvbigpe2Zvcih2YXIgbj1lLkFwcGxpY2F0aW9uSW5zaWdodHMuX0ludGVybmFsTG9nZ2luZy5xdWV1ZSxpPW4ubGVuZ3RoLG89MDtvPGk7bysrKXQudHJhY2tUcmFjZShuW29dLm1lc3NhZ2UpO24ubGVuZ3RoPTB9LHRoaXMuY29uZmlnLmRpYWdub3N0aWNMb2dJbnRlcnZhbCl9LG4ucHJvdG90eXBlLmFkZEhvdXNla2VlcGluZ0JlZm9yZVVubG9hZD1mdW5jdGlvbih0KXtpZighdC5jb25maWcuZGlzYWJsZUZsdXNoT25CZWZvcmVVbmxvYWQmJiJvbmJlZm9yZXVubG9hZCJpbiB3aW5kb3cpe3ZhciBuPWZ1bmN0aW9uKCl7dC5jb250ZXh0Ll9zZW5kZXIudHJpZ2dlclNlbmQoKSx0LmNvbnRleHQuX3Nlc3Npb25NYW5hZ2VyLmJhY2t1cCgpfTtlLkFwcGxpY2F0aW9uSW5zaWdodHMuVXRpbC5hZGRFdmVudEhhbmRsZXIoImJlZm9yZXVubG9hZCIsbil8fGUuQXBwbGljYXRpb25JbnNpZ2h0cy5fSW50ZXJuYWxMb2dnaW5nLnRocm93SW50ZXJuYWwoZS5BcHBsaWNhdGlvbkluc2lnaHRzLkxvZ2dpbmdTZXZlcml0eS5DUklUSUNBTCxlLkFwcGxpY2F0aW9uSW5zaWdodHMuX0ludGVybmFsTWVzc2FnZUlkLkZhaWxlZFRvQWRkSGFuZGxlckZvck9uQmVmb3JlVW5sb2FkLCJDb3VsZCBub3QgYWRkIGhhbmRsZXIgZm9yIGJlZm9yZXVubG9hZCIpfX0sbi5nZXREZWZhdWx0Q29uZmlnPWZ1bmN0aW9uKGUpe3JldHVybiBlfHwoZT17fSksZS5lbmRwb2ludFVybD1lLmVuZHBvaW50VXJsfHwiaHR0cHM6Ly9kYy5zZXJ2aWNlcy52aXN1YWxzdHVkaW8uY29tL3YyL3RyYWNrIixlLnNlc3Npb25SZW5ld2FsTXM9MThlNSxlLnNlc3Npb25FeHBpcmF0aW9uTXM9ODY0ZTUsZS5tYXhCYXRjaFNpemVJbkJ5dGVzPWUubWF4QmF0Y2hTaXplSW5CeXRlcz4wP2UubWF4QmF0Y2hTaXplSW5CeXRlczoxMDI0MDAsZS5tYXhCYXRjaEludGVydmFsPWlzTmFOKGUubWF4QmF0Y2hJbnRlcnZhbCk/MTVlMzplLm1heEJhdGNoSW50ZXJ2YWwsZS5lbmFibGVEZWJ1Zz10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuZW5hYmxlRGVidWcpLGUuZGlzYWJsZUV4Y2VwdGlvblRyYWNraW5nPXQuVXRpbC5zdHJpbmdUb0Jvb2xPckRlZmF1bHQoZS5kaXNhYmxlRXhjZXB0aW9uVHJhY2tpbmcpLGUuZGlzYWJsZVRlbGVtZXRyeT10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuZGlzYWJsZVRlbGVtZXRyeSksZS52ZXJib3NlTG9nZ2luZz10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUudmVyYm9zZUxvZ2dpbmcpLGUuZW1pdExpbmVEZWxpbWl0ZWRKc29uPXQuVXRpbC5zdHJpbmdUb0Jvb2xPckRlZmF1bHQoZS5lbWl0TGluZURlbGltaXRlZEpzb24pLGUuZGlhZ25vc3RpY0xvZ0ludGVydmFsPWUuZGlhZ25vc3RpY0xvZ0ludGVydmFsfHwxZTQsZS5hdXRvVHJhY2tQYWdlVmlzaXRUaW1lPXQuVXRpbC5zdHJpbmdUb0Jvb2xPckRlZmF1bHQoZS5hdXRvVHJhY2tQYWdlVmlzaXRUaW1lKSwoaXNOYU4oZS5zYW1wbGluZ1BlcmNlbnRhZ2UpfHxlLnNhbXBsaW5nUGVyY2VudGFnZTw9MHx8ZS5zYW1wbGluZ1BlcmNlbnRhZ2U+PTEwMCkmJihlLnNhbXBsaW5nUGVyY2VudGFnZT0xMDApLGUuZGlzYWJsZUFqYXhUcmFja2luZz10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuZGlzYWJsZUFqYXhUcmFja2luZyksZS5tYXhBamF4Q2FsbHNQZXJWaWV3PWlzTmFOKGUubWF4QWpheENhbGxzUGVyVmlldyk/NTAwOmUubWF4QWpheENhbGxzUGVyVmlldyxlLmlzQmVhY29uQXBpRGlzYWJsZWQ9dC5VdGlsLnN0cmluZ1RvQm9vbE9yRGVmYXVsdChlLmlzQmVhY29uQXBpRGlzYWJsZWQsITApLGUuZGlzYWJsZUNvcnJlbGF0aW9uSGVhZGVycz10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuZGlzYWJsZUNvcnJlbGF0aW9uSGVhZGVycyksZS5kaXNhYmxlRmx1c2hPbkJlZm9yZVVubG9hZD10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuZGlzYWJsZUZsdXNoT25CZWZvcmVVbmxvYWQpLGUuZW5hYmxlU2Vzc2lvblN0b3JhZ2VCdWZmZXI9dC5VdGlsLnN0cmluZ1RvQm9vbE9yRGVmYXVsdChlLmVuYWJsZVNlc3Npb25TdG9yYWdlQnVmZmVyLCEwKSxlLmlzUmV0cnlEaXNhYmxlZD10LlV0aWwuc3RyaW5nVG9Cb29sT3JEZWZhdWx0KGUuaXNSZXRyeURpc2FibGVkKSxlLmlzQ29va2llVXNlRGlzYWJsZWQ9dC5VdGlsLnN0cmluZ1RvQm9vbE9yRGVmYXVsdChlLmlzQ29va2llVXNlRGlzYWJsZWQpLGUuaXNTdG9yYWdlVXNlRGlzYWJsZWQ9dC5VdGlsLnN0cmluZ1RvQm9vbE9yRGVmYXVsdChlLmlzU3RvcmFnZVVzZURpc2FibGVkKSxlLmlzQnJvd3NlckxpbmtUcmFja2luZ0VuYWJsZWQ9dC5VdGlsLnN0cmluZ1RvQm9vbE9yRGVmYXVsdChlLmlzQnJvd3NlckxpbmtUcmFja2luZ0VuYWJsZWQpLGV9LG59KCk7dC5Jbml0aWFsaXphdGlvbj1ufSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpO3ZhciBuOyFmdW5jdGlvbihlKXt2YXIgdDshZnVuY3Rpb24odCl7dHJ5e2lmKCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiYidW5kZWZpbmVkIiE9dHlwZW9mIEpTT04pe3ZhciBuPSJhcHBJbnNpZ2h0cyI7aWYodm9pZCAwPT09d2luZG93W25dKWUuQXBwbGljYXRpb25JbnNpZ2h0cy5BcHBJbnNpZ2h0cy5kZWZhdWx0Q29uZmlnPWUuQXBwbGljYXRpb25JbnNpZ2h0cy5Jbml0aWFsaXphdGlvbi5nZXREZWZhdWx0Q29uZmlnKCk7ZWxzZXt2YXIgaT13aW5kb3dbbl18fHt9LG89bmV3IGUuQXBwbGljYXRpb25JbnNpZ2h0cy5Jbml0aWFsaXphdGlvbihpKSxhPW8ubG9hZEFwcEluc2lnaHRzKCk7Zm9yKHZhciByIGluIGEpaVtyXT1hW3JdO28uZW1wdHlRdWV1ZSgpLG8ucG9sbEludGVyYWxMb2dzKGEpLG8uYWRkSG91c2VrZWVwaW5nQmVmb3JlVW5sb2FkKGEpfX19Y2F0Y2gocyl7ZS5BcHBsaWNhdGlvbkluc2lnaHRzLl9JbnRlcm5hbExvZ2dpbmcud2FyblRvQ29uc29sZSgiRmFpbGVkIHRvIGluaXRpYWxpemUgQXBwSW5zaWdodHMgSlMgU0RLOiAiK3MubWVzc2FnZSl9fSh0PWUuQXBwbGljYXRpb25JbnNpZ2h0c3x8KGUuQXBwbGljYXRpb25JbnNpZ2h0cz17fSkpfShufHwobj17fSkpLHQuTWljcm9zb2Z0PW4sdC5BST1vfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0nPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9aTIgZGF0YS1iaW5kPSJ2YWx1ZTogY2xpZW50TW9kZSIvPiA8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1pMTcgZGF0YS1iaW5kPSJ2YWx1ZTogc3JzRmFpbGVkIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWkxOCBkYXRhLWJpbmQ9InZhbHVlOiBzcnNTdWNjZXNzIi8+IDxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWkxOSBkYXRhLWJpbmQ9InZhbHVlOiB0aW1lT25QYWdlIi8+J30sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoKXt2YXIgZT10aGlzO2UuaXNBcHBCcmFuZGluZz1vLm9ic2VydmFibGUoITEpLGUuYmFja2dyb3VuZFN0eWxlPW8ub2JzZXJ2YWJsZSgpLGUuc21hbGxJbWFnZVVybD1vLm9ic2VydmFibGUoKSxlLmJhY2tncm91bmRJbWFnZVVybD1vLm9ic2VydmFibGUoKSxlLnVzZUltYWdlTWFzaz1vLm9ic2VydmFibGUoITEpLGUudXNlVHJhbnNwYXJlbnRMaWdodEJveD1vLm9ic2VydmFibGUoITEpLGUudXBkYXRlQnJhbmRpbmc9ZnVuY3Rpb24odCl7ZS5pc0FwcEJyYW5kaW5nKCEhdC5iYWNrZ3JvdW5kTG9nb1VybCksZS5iYWNrZ3JvdW5kU3R5bGUodC5jb2xvciksZS5zbWFsbEltYWdlVXJsKHQuc21hbGxJbWFnZVVybCksZS5iYWNrZ3JvdW5kSW1hZ2VVcmwodC5iYWNrZ3JvdW5kSW1hZ2VVcmwpLGUudXNlSW1hZ2VNYXNrKCEhdC51c2VJbWFnZU1hc2spLGUudXNlVHJhbnNwYXJlbnRMaWdodEJveCghIXQudXNlVHJhbnNwYXJlbnRMaWdodEJveCl9fXZhciBvPW4oMSksYT1uKDkpLHI9d2luZG93O28uY29tcG9uZW50cy5yZWdpc3RlcigiYmFja2dyb3VuZC1pbWFnZS1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6big0ODgpLHN5bmNocm9ub3VzOiFyLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fGEuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oci5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSc8ZGl2IGNsYXNzPWJhY2tncm91bmQgcm9sZT1wcmVzZW50YXRpb24gZGF0YS1iaW5kPSJjc3M6IHsgYXBwOiBpc0FwcEJyYW5kaW5nIH0sIHN0eWxlOiB7IGJhY2tncm91bmQ6IGJhY2tncm91bmRTdHlsZSB9Ij48IS0tIGtvIGlmOiBzbWFsbEltYWdlVXJsIC0tPiA8ZGl2IGRhdGEtYmluZD0iYmFja2dyb3VuZEltYWdlOiBzbWFsbEltYWdlVXJsKCkiPjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0ga28gaWY6IGJhY2tncm91bmRJbWFnZVVybCAtLT4gPGRpdiBjbGFzcz1iYWNrZ3JvdW5kSW1hZ2UgZGF0YS1iaW5kPSJiYWNrZ3JvdW5kSW1hZ2U6IGJhY2tncm91bmRJbWFnZVVybCgpIj48L2Rpdj48IS0tIGtvIGlmOiB1c2VJbWFnZU1hc2sgLS0+IDxkaXYgY2xhc3M9YmFja2dyb3VuZC1vdmVybGF5PjwvZGl2PjwhLS0gL2tvIC0tPjwhLS0gL2tvIC0tPiA8L2Rpdj4nfSxmdW5jdGlvbihlLHQsbil7dmFyIGk9bigxKSxvPW4oOSksYT13aW5kb3c7aS5jb21wb25lbnRzLnJlZ2lzdGVyKCJsb2dvLWNvbnRyb2wiLHt0ZW1wbGF0ZTpuKDQ5MCksc3luY2hyb25vdXM6IWEuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50c3x8by5IZWxwZXIuaXNTdGFja1NpemVHcmVhdGVyVGhhbihhLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHMpfSl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigyMDcpLCIiKSsiIC0tPjwhLS0ga28gaWY6IGJhbm5lckxvZ29VcmwgLS0+IDxpbWcgY2xhc3M9YmFubmVyLWxvZ28gcm9sZT1wcmVzZW50YXRpb24gZGF0YS1iaW5kPVwiYXR0cjogeyBzcmM6IGJhbm5lckxvZ29VcmwgfVwiLz48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiAhYmFubmVyTG9nb1VybCAmJiAhaXNDaGluYURjIC0tPjwhLS0ga28gY29tcG9uZW50OiAnYWNjZXNzaWJsZS1pbWFnZS1jb250cm9sJyAtLT4gPGltZyBjbGFzcz1sb2dvIHJvbGU9aW1nIHBuZ3NyYz0iK24oNDkxKSsiIHN2Z3NyYz0iK24oNDkyKSsiIGRhdGEtYmluZD1cImltZ1NyYywgYXR0cjogeyBhbHQ6IHN0clsnTU9CSUxFX1NUUl9Gb290ZXJfTWljcm9zb2Z0J10gfVwiLz4gPGltZyBjbGFzcz1sb2dvIHJvbGU9aW1nIHBuZ3NyYz0iK24oNDkzKSsiIHN2Z3NyYz0iK24oNDk0KSsiIGRhdGEtYmluZD1cImltZ1NyYywgYXR0cjogeyBhbHQ6IHN0clsnTU9CSUxFX1NUUl9Gb290ZXJfTWljcm9zb2Z0J10gfVwiLz48IS0tIC9rbyAtLT4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL21pY3Jvc29mdF9sb2dvX3doaXRlX2EyMjAzYTUyY2UwODQzNDI3YzY5Nzg2ZTE4ODQxNDM3LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9taWNyb3NvZnRfbG9nb193aGl0ZV81OTVlOTIwNmQ0Mjc0YzQyYzI3YjY2ZTM3MWZhNjMzZC5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvbWljcm9zb2Z0X2xvZ29fZWQ5YzllYjBkY2UxN2Q3NTJiZWRlYTZiNWFjZGE2ZDkucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL21pY3Jvc29mdF9sb2dvX2VlNWM4ZDlmYjYyNDhjOTM4ZmQwZGMxOTM3MGU5MGJkLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEpLG89big5KSxhPXdpbmRvdztpLmNvbXBvbmVudHMucmVnaXN0ZXIoImNvb2tpZS1iYW5uZXItY29udHJvbCIse3RlbXBsYXRlOm4oNDk2KSxzeW5jaHJvbm91czohYS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxvLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGEuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyl9KX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz0iPCEtLSAiKyhuKDIwNyksIiIpKyIgLS0+IDxkaXYgaWQ9bXNjY0Jhbm5lciBjbGFzcz1jYy1iYW5uZXIgcm9sZT1hbGVydD4gPGRpdiBjbGFzcz1jYy1jb250YWluZXI+PCEtLSBrbyBjb21wb25lbnQ6ICdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2wnIC0tPiA8aW1nIGNsYXNzPVwiY2MtaWNvbiBjYy12LWNlbnRlclwiIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oNDk3KSsiIHN2Z3NyYz0iK24oNDk4KSsnIGRhdGEtYmluZD1pbWdTcmMgLz4gPGltZyBjbGFzcz0iY2MtaWNvbiBjYy12LWNlbnRlciIgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPScrbig0OTkpKyIgc3Znc3JjPSIrbig1MDApKyIgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPiA8c3BhbiBjbGFzcz1cImNjLXYtY2VudGVyIGNjLXRleHRcIiBkYXRhLWJpbmQ9XCJcbiAgICAgICAgICAgIGh0bWxXaXRoQmluZGluZ3M6IGh0bWxbJ0NUX1NUUl9Db29raWVCYW5uZXJfVGV4dCddLFxuICAgICAgICAgICAgY2hpbGRCaW5kaW5nczoge1xuICAgICAgICAgICAgICAgICdtc2NjTGVhcm5Nb3JlJzoge1xuICAgICAgICAgICAgICAgICAgICBocmVmOiBzdnIudXJsRm9vdGVyUHJpdmFjeSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBzdHJbJ0NUX1NUUl9Db29raWVCYW5uZXJfTGlua19BcmlhTGFiZWwnXSxcbiAgICAgICAgICAgICAgICAgICAgY3NzOiB7ICdjYy1saW5rIGNjLXYtY2VudGVyIGZsb2F0LXJpZ2h0JzogdHJ1ZSB9IH0gfVwiPjwvc3Bhbj4gPC9kaXY+IDwvZGl2PiJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9pbmZvX3doaXRlX2UwMGFiNTllM2Q4MGQzZWIyZGVlNDNhMjFjZjdmYTBlLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9pbmZvX3doaXRlXzQwMDA4NWZhZDVhZjQzNGU3ZjYxZTBhN2U0ZjkwZTNkLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9pbmZvX2Y4MGM5MjYwMmRiMDQyOGVmNDdiMmJiNzFlYTIzNmI0LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9pbmZvXzQ4ODNlYjFhM2NiZGRkZjVhNzllMjhkMzIwY2ZlNWE5LnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1uKDEpLG89big5KSxhPXdpbmRvdztpLmNvbXBvbmVudHMucmVnaXN0ZXIoImVudmlyb25tZW50LWJhbm5lci1jb250cm9sIix7dGVtcGxhdGU6big1MDIpLHN5bmNocm9ub3VzOiFhLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fG8uSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oYS5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKX0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0iPGRpdiBjbGFzcz1lbnYtYmFubmVyLWlubmVyIHJvbGU9YWxlcnQgYXJpYS1hdG9taWM9dHJ1ZSBkYXRhLWJpbmQ9XCJcbiAgICBodG1sV2l0aEJpbmRpbmdzOiBodG1sWydDVF9TVFJfRW52aXJvbm1lbnRCYW5uZXJfVGV4dCddLFxuICAgIGNoaWxkQmluZGluZ3M6IHtcbiAgICAgICAgJ2VudkJhbm5lck5vTGluayc6IHtcbiAgICAgICAgICAgIGNzczogeyAnZW52LWJhbm5lci10ZXh0JzogdHJ1ZSB9XG4gICAgICAgIH0sXG4gICAgICAgICdlbnZCYW5uZXJMaW5rJzoge1xuICAgICAgICAgICAgaHJlZjogc3ZyLnVybEVudkJhbm5lckxpbmssXG4gICAgICAgICAgICBjc3M6IHsgJ2Vudi1iYW5uZXItbGluayc6IHRydWUgfVxuICAgICAgICB9IH1cIj4gPC9kaXY+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdChlKXtlPWV8fGMuZXZlbnQsIkVzY2FwZSIhPT1lLmNvZGUmJmUua2V5Q29kZSE9PWwuRXNjYXBlfHxuLm9uQ2xvc2UoKX12YXIgbj10aGlzLGk9ZS5kYXRhLG89ZS50ZW1wbGF0ZU5vZGVzO24uZGF0YT1pLG4udGVtcGxhdGVOb2Rlcz1vLG4ub25DbG9zZT1zLmNyZWF0ZSgpLG4uZGlzcG9zZT1mdW5jdGlvbigpe2QucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudC5ib2R5LCJrZXlkb3duIix0KX0sbi5vdmVybGF5X29uQ2xpY2s9ZnVuY3Rpb24oKXtyZXR1cm4hMH0sbi5wcmltYXJ5QnV0dG9uX29uQ2xpY2s9ZnVuY3Rpb24oKXtuLm9uQ2xvc2UoKX0sZnVuY3Rpb24oKXtkLmFkZEV2ZW50TGlzdGVuZXIoZG9jdW1lbnQuYm9keSwia2V5ZG93biIsdCl9KCl9dmFyIG89bigxKSxhPW4oNSkscj1uKDkpLHM9bigxMyksYz13aW5kb3csZD1yLkhlbHBlcixsPWEuS2V5Q29kZTtvLmNvbXBvbmVudHMucmVnaXN0ZXIoImRpYWxvZy1jb250cm9sIix7dmlld01vZGVsOmksdGVtcGxhdGU6big1MDQpLHN5bmNocm9ub3VzOiFjLlNlcnZlckRhdGEuaU1heFN0YWNrRm9yS25vY2tvdXRBc3luY0NvbXBvbmVudHN8fHIuSGVscGVyLmlzU3RhY2tTaXplR3JlYXRlclRoYW4oYy5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzKSxlbmFibGVFeHRlbnNpb25zOiEwfSksZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IjwhLS0gIisobigxOTgpLCIiKSsiIC0tPiA8ZGl2IGNsYXNzPWRpYWxvZy1vdXRlciBkYXRhLWJpbmQ9XCJjbGljazogb3ZlcmxheV9vbkNsaWNrXCI+IDxkaXYgY2xhc3M9ZGlhbG9nLW1pZGRsZT4gPGRpdiBjbGFzcz1kaWFsb2ctaW5uZXI+IDxkaXYgY2xhc3M9ZGlhbG9nLWNvbnRlbnQgcm9sZT1kaWFsb2cgZGF0YS1iaW5kPVwiXG4gICAgICAgICAgICAgICAgYXR0cjogeyAnYXJpYS1sYWJlbGxlZGJ5JzogZGF0YS5sYWJlbGxlZEJ5IH0sXG4gICAgICAgICAgICAgICAgYXJpYURlc2NyaWJlZEJ5OiBkYXRhLmRlc2NyaWJlZEJ5XCI+IDwhLS0ga28gdGVtcGxhdGU6IHsgbm9kZXM6IHRlbXBsYXRlTm9kZXMsIGRhdGE6IGRhdGEgfSAtLT48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1wb3NpdGlvbi1idXR0b25zPiA8ZGl2IGNsYXNzPXJvdz4gPGRpdiBkYXRhLWJpbmQ9XCJjb21wb25lbnQ6IHsgbmFtZTogJ2Zvb3Rlci1idXR0b25zLWZpZWxkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyRGF0YTogc3ZyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uSWQ6ICdkaWFsb2dDbG9zZUJ1dHRvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25UZXh0OiBzdHJbJ0NUX1NUUl9EaWFsb2dfQ2xvc2VCdXR0b24nXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPblByaW1hcnlCdXR0b246IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW1hcnlCdXR0b25QcmV2ZW50VGFiYmluZzogZGF0YS5wcmltYXJ5QnV0dG9uUHJldmVudFRhYmJpbmcgfHwgeyBkaXJlY3Rpb246ICdib3RoJyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVCb3R0b21NYXJnaW46IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU2Vjb25kYXJ5QnV0dG9uVmlzaWJsZTogZmFsc2UgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xpY2s6IHByaW1hcnlCdXR0b25fb25DbGljayB9IH1cIj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+In0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gdCgpe2kuc2VuZGluZyghMSksaS5pc0RlYnVnVHJhY2luZ0VuYWJsZWQoIWkuaXNEZWJ1Z1RyYWNpbmdFbmFibGVkKCkpLGkub25TZXREZWJ1Z1RyYWNpbmcoKX1mdW5jdGlvbiBuKCl7aS5zZW5kaW5nKCExKSxpLmRlYnVnTW9kZUVycm9yKGIuU1RSX0Vycm9yX0RldGFpbHNfRGVidWdfTW9kZV9GYWlsdXJlKX12YXIgaT10aGlzLGE9bnVsbCxyPWUuZGVidWdEZXRhaWxzLGQ9ZS5zZXJ2ZXJEYXRhLGw9ZS5pc0RlYnVnVHJhY2luZ0VuYWJsZWQsZj1lLnVzZVdpZGVyV2lkdGgsZz1kLnN0clNlcnZpY2VFeGNlcHRpb25NZXNzYWdlLG09ZC51cmxTZXREZWJ1Z01vZGUsdj1kLnNQT1NUX1VzZXJuYW1lLGg9ZC5zU2lnbmluTmFtZSxiPWQuc3RyO2kub25DbG9zZUJhbm5lcj1zLmNyZWF0ZSgpLGkub25TZXREZWJ1Z1RyYWNpbmc9cy5jcmVhdGUoKSxpLmRlYnVnTW9kZUVycm9yPW8ub2JzZXJ2YWJsZSgpLGkuaXNEZWJ1Z1RyYWNpbmdFbmFibGVkPW8ub2JzZXJ2YWJsZShsKSxpLnNlbmRpbmc9by5vYnNlcnZhYmxlKCExKSxpLnNob3dCYW5uZXI9by5vYnNlcnZhYmxlKCEwKSxpLnNob3dEZWJ1Z0RldGFpbHNDb3B5TWVzc2FnZT1vLm9ic2VydmFibGUoITEpLGkudW5zYWZlX2V4Y2VwdGlvbk1lc3NhZ2U9bnVsbCxpLmRlYnVnRGV0YWlscz1udWxsLGkudXNlV2lkZXJXaWR0aD1mLGkuaGlkZUJhbm5lcl9vbkNsaWNrPWZ1bmN0aW9uKCl7aS5vbkNsb3NlQmFubmVyKCksaS5zaG93QmFubmVyKCExKX0saS5zZXREZWJ1Z01vZGVfb25DbGljaz1mdW5jdGlvbigpe2lmKCFpLnNlbmRpbmcoKSl7dmFyIGU9bmV3IGM7aS5zZW5kaW5nKCEwKSxpLmRlYnVnTW9kZUVycm9yKCIiKTt2YXIgbz17bW9kZTppLmlzRGVidWdUcmFjaW5nRW5hYmxlZCgpPzA6MSx1c2VyOmF9O2UuSnNvbihtLG8sdCxuKX19LGZ1bmN0aW9uKCl7YT12fHxofHwiIixpLnVuc2FmZV9leGNlcHRpb25NZXNzYWdlPXAuaHRtbFVuZXNjYXBlKGcpLGkuZGVidWdEZXRhaWxzPXJ8fHt9LGkuZGVidWdEZXRhaWxzLnRpbWVzdGFtcHx8KGkuZGVidWdEZXRhaWxzLnRpbWVzdGFtcD11LmdldFVUQ1N0cmluZygpKX0oKX12YXIgbz1uKDEpLGE9big5KSxyPW4oNikscz1uKDEzKSxjPW4oMTY3KSxkPW4oNTA2KSxsPXdpbmRvdyx1PXIuRGF0ZVRpbWUscD1hLkhlbHBlcjtkLmFwcGx5RXh0ZW5zaW9ucyhvKSxvLmNvbXBvbmVudHMucmVnaXN0ZXIoImRlYnVnLWRldGFpbHMtY29udHJvbCIse3ZpZXdNb2RlbDppLHRlbXBsYXRlOm4oNTA3KSxzeW5jaHJvbm91czohbC5TZXJ2ZXJEYXRhLmlNYXhTdGFja0Zvcktub2Nrb3V0QXN5bmNDb21wb25lbnRzfHxhLkhlbHBlci5pc1N0YWNrU2l6ZUdyZWF0ZXJUaGFuKGwuU2VydmVyRGF0YS5pTWF4U3RhY2tGb3JLbm9ja291dEFzeW5jQ29tcG9uZW50cyksZW5hYmxlRXh0ZW5zaW9uczohMH0pLGUuZXhwb3J0cz1pfSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSx0LG4pe3ZhciBvPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpO28mJihvLnNlbGVjdCgpLGRvY3VtZW50LmV4ZWNDb21tYW5kKCJjb3B5Iiksbi5mb2N1cygpLGkodCkpfWZ1bmN0aW9uIGkoZSl7ZSgpJiZlKCExKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZSghMCl9LDApfXQuYXBwbHlFeHRlbnNpb25zPWZ1bmN0aW9uKGUpe2UuYmluZGluZ0hhbmRsZXJzLmNvcHlTb3VyY2U9e2luaXQ6ZnVuY3Rpb24odCxuLGksbyxhKXt2YXIgcj1lLnVud3JhcChuKCkpLHM9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocik7c3x8KHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGV4dGFyZWEiKSxzLmlkPXIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKSxlLmJpbmRpbmdIYW5kbGVycy5tb3ZlT2ZmU2NyZWVuLnVwZGF0ZShzLGZ1bmN0aW9uKCl7cmV0dXJuITB9KSksZS5iaW5kaW5nRXZlbnQuc3Vic2NyaWJlKHQsImRlc2NlbmRhbnRzQ29tcGxldGUiLGZ1bmN0aW9uKCl7cy52YWx1ZT10LmlubmVyVGV4dH0pO3ZhciBjPWUuYmluZGluZ0V2ZW50LnN0YXJ0UG9zc2libHlBc3luY0NvbnRlbnRCaW5kaW5nKHQsYSk7cmV0dXJuIGUuYXBwbHlCaW5kaW5nc1RvRGVzY2VuZGFudHMoYyx0KSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fX0sZS5iaW5kaW5nSGFuZGxlcnMuY2xpY2tUb0NvcHk9e2luaXQ6ZnVuY3Rpb24odCxpLG8sYSxyKXt2YXIgcz1lLnVud3JhcChpKCkpLGM9cy50ZXh0YXJlYUlkLGQ9cy5zaG93Tm90aWZpY2F0aW9uO2UuYmluZGluZ0hhbmRsZXJzLmNsaWNrLmluaXQodCxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbigpe24oYyxkLHQpfX0sbyxhLHIpfX19fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSI8IS0tICIrKG4oMjM2KSxuKDIwNyksIiIpKycgLS0+PCEtLSBrbyBpZjogc2hvd0Jhbm5lciAtLT4gPGRpdiBpZD1kZWJ1Z0RldGFpbHNCYW5uZXIgY2xhc3M9ImRlYnVnLWRldGFpbHMtYmFubmVyIHRhYmxlIiBkYXRhLWJpbmQ9ImNzczogeyBcJ3dpZGVcJzogdXNlV2lkZXJXaWR0aCB9Ij4gPGRpdiBjbGFzcz10YWJsZS1yb3c+IDxkaXYgY2xhc3M9dGFibGUtY2VsbD48IS0tIGtvIGlmOiBzdnIuZlNob3dDb3B5RGVidWdEZXRhaWxzTGluayAtLT4gPGRpdiBjbGFzcz1kZWJ1Zy1kZXRhaWxzLWhlYWRlcj4gPGRpdiBjbGFzcz0iYm9sZCBoZWFkZXIiIGRhdGEtYmluZD0idGV4dDogc3RyW1wnU1RSX0Vycm9yX0RldGFpbHNfVGl0bGVcJ10iPjwvZGl2PiA8ZGl2IGRhdGEtYmluZD0idGV4dDogc3RyW1wnU1RSX0Vycm9yX0RldGFpbHNfSW5zdHJ1Y3Rpb25cJ10iPjwvZGl2PiA8YSBpZD1pZENvcHlUb0NsaXBib2FyZCBocmVmPSMgcm9sZT1idXR0b24gZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tUb0NvcHk6IHsgdGV4dGFyZWFJZDogXCdkZWJ1Z0RldGFpbHNUZXh0XCcsIHNob3dOb3RpZmljYXRpb246IHNob3dEZWJ1Z0RldGFpbHNDb3B5TWVzc2FnZSB9LFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzdHJbXCdTVFJfRXJyb3JfRGV0YWlsc19Db3B5TGlua1wnXSxcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBzdHJbXCdTVFJfRXJyb3JfRGV0YWlsc19Db3B5TGlua1wnXSxcbiAgICAgICAgICAgICAgICAgICAgaGFzRm9jdXM6IHRydWUiPjwvYT4gPHNwYW4gaWQ9ZGVidWdEZXRhaWxzQ29weU1lc3NhZ2UgY2xhc3M9ImRlYnVnLWRldGFpbHMtbm90aWZpY2F0aW9uIGZhZGUtaW4tbGlnaHRib3giIGRhdGEtYmluZD0idmlzaWJsZTogc2hvd0RlYnVnRGV0YWlsc0NvcHlNZXNzYWdlIj48IS0tIGtvIGNvbXBvbmVudDogXCdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2xcJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDUwOCkrIiBzdmdzcmM9IituKDUwOSkrIiBkYXRhLWJpbmQ9aW1nU3JjIC8+IDxpbWcgcm9sZT1wcmVzZW50YXRpb24gcG5nc3JjPSIrbig1MTApKyIgc3Znc3JjPSIrbig1MTEpKycgZGF0YS1iaW5kPWltZ1NyYyAvPjwhLS0gL2tvIC0tPiA8c3BhbiByb2xlPWFsZXJ0IGRhdGEtYmluZD0iXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzaG93RGVidWdEZXRhaWxzQ29weU1lc3NhZ2UoKSA/IHN0cltcJ1NUUl9FcnJvcl9EZXRhaWxzX05vdGlmaWNhdGlvblwnXSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw6IHN0cltcJ1NUUl9FcnJvcl9EZXRhaWxzX05vdGlmaWNhdGlvbl9TY3JlZW5SZWFkZXJcJ10iPjwvc3Bhbj4gPC9zcGFuPiA8L2Rpdj48IS0tIC9rbyAtLT4gPGRpdiBjbGFzcz1vdmVycmlkZS1sdHIgZGF0YS1iaW5kPSJjb3B5U291cmNlOiBcJ2RlYnVnRGV0YWlsc1RleHRcJyI+PCEtLSBrbyBpZjogZGVidWdEZXRhaWxzLmVycm9yQ29kZSAtLT4gPGRpdj4gPHNwYW4gY2xhc3M9Ym9sZD5FcnJvciBDb2RlOiA8L3NwYW4+IDxzcGFuIGRhdGEtYmluZD0idGV4dDogZGVidWdEZXRhaWxzLmVycm9yQ29kZSI+PC9zcGFuPiA8L2Rpdj48IS0tIC9rbyAtLT48IS0tIGtvIGlmOiBzdnIuc2Vzc2lvbklkIC0tPiA8ZGl2PiA8c3BhbiBjbGFzcz1ib2xkPlJlcXVlc3QgSWQ6IDwvc3Bhbj4gPHNwYW4gZGF0YS1iaW5kPSJ0ZXh0OiBzdnIuc2Vzc2lvbklkIj48L3NwYW4+IDwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2PiA8c3BhbiBjbGFzcz1ib2xkPkNvcnJlbGF0aW9uIElkOiA8L3NwYW4+IDxzcGFuIGRhdGEtYmluZD0idGV4dDogc3ZyLmNvcnJlbGF0aW9uSWQiPjwvc3Bhbj4gPC9kaXY+IDxkaXY+IDxzcGFuIGNsYXNzPWJvbGQ+VGltZXN0YW1wOiA8L3NwYW4+IDxzcGFuIGRhdGEtYmluZD0idGV4dDogZGVidWdEZXRhaWxzLnRpbWVzdGFtcCI+PC9zcGFuPiA8L2Rpdj48IS0tIGtvIGlmOiBzdnIuc3RyU2VydmljZUV4Y2VwdGlvbk1lc3NhZ2UgLS0+IDxkaXY+IDxzcGFuIGNsYXNzPWJvbGQ+TWVzc2FnZTogPC9zcGFuPiA8c3BhbiBkYXRhLWJpbmQ9InRleHQ6IHVuc2FmZV9leGNlcHRpb25NZXNzYWdlIj48L3NwYW4+IDwvZGl2PjwhLS0gL2tvIC0tPiA8IS0tIGtvIHRlbXBsYXRlOiB7IG5vZGVzOiAkY29tcG9uZW50VGVtcGxhdGVOb2RlcywgZGF0YTogJGRhdGEgfSAtLT48IS0tIC9rbyAtLT4gPC9kaXY+PCEtLSBrbyBpZjogc3ZyLnVybFNldERlYnVnTW9kZSAtLT4gPGRpdiBjbGFzcz1kZWJ1Zy10cmFjZS1zZWN0aW9uPiA8ZGl2PiA8c3BhbiBjbGFzcz1ib2xkIGRhdGEtYmluZD0idGV4dDogc3RyW1wnU1RSX0Vycm9yX0RldGFpbHNfRGVidWdfTW9kZVwnXSI+PC9zcGFuPiA8YSBpZD1zZXREZWJ1Z01vZGUgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IHN2ci51cmxTZXREZWJ1Z01vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBpc0RlYnVnVHJhY2luZ0VuYWJsZWQoKSA/IHN0cltcJ1NUUl9FcnJvcl9EZXRhaWxzX0RlYnVnX01vZGVfRGlzYWJsZVwnXSA6IHN0cltcJ1NUUl9FcnJvcl9EZXRhaWxzX0RlYnVnX01vZGVfRW5hYmxlXCddLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsOiBpc0RlYnVnVHJhY2luZ0VuYWJsZWQoKSA/IHN0cltcJ1NUUl9FcnJvcl9EZXRhaWxzX0RlYnVnX01vZGVfRGlzYWJsZV9BcmlhTGFiZWxcJ10gOiBzdHJbXCdTVFJfRXJyb3JfRGV0YWlsc19EZWJ1Z19Nb2RlX0VuYWJsZV9BcmlhTGFiZWxcJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogc2V0RGVidWdNb2RlX29uQ2xpY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNGb2N1czogIXN2ci5mU2hvd0NvcHlEZWJ1Z0RldGFpbHNMaW5rIj48L2E+IDwvZGl2PjwhLS0ga28gaWY6IHNlbmRpbmcgLS0+IDxkaXYgY2xhc3M9cHJvZ3Jlc3MtY29udGFpbmVyLXRpbGU+IDxkaXYgY2xhc3M9cHJvZ3Jlc3Mgcm9sZT1wcm9ncmVzc2JhciBkYXRhLWJpbmQ9ImNvbXBvbmVudDogXCdtYXJjaGluZy1hbnRzLWNvbnRyb2xcJywgYXJpYUxhYmVsOiBzdHJbXCdXRl9TVFJfUHJvZ3Jlc3NUZXh0XCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+PCEtLSBrbyBpZjogZGVidWdNb2RlRXJyb3IgLS0+IDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWVycm9yIiByb2xlPWFsZXJ0IGRhdGEtYmluZD0idGV4dDogZGVidWdNb2RlRXJyb3IiPjwvZGl2PjwhLS0gL2tvIC0tPiA8ZGl2IGRhdGEtYmluZD0idGV4dDogc3RyW1wnU1RSX0Vycm9yX0RldGFpbHNfRGVidWdfTW9kZV9EZXNjXCddIj48L2Rpdj4gPC9kaXY+PCEtLSAva28gLS0+IDwvZGl2PiA8ZGl2PiA8YSBpZD1lcnJvckJhbm5lckNsb3NlTGluayByb2xlPWJ1dHRvbiBocmVmPSMgZGF0YS1iaW5kPSJcbiAgICAgICAgICAgICAgICBjbGljazogaGlkZUJhbm5lcl9vbkNsaWNrLFxuICAgICAgICAgICAgICAgIGFyaWFMYWJlbDogc3RyW1wnQ1RfU1RSX0Vycm9yX0RldGFpbHNfQ2xvc2VfQWx0VGV4dFwnXSxcbiAgICAgICAgICAgICAgICBoYXNGb2N1czogIXN2ci5mU2hvd0NvcHlEZWJ1Z0RldGFpbHNMaW5rICYmICFzdnIudXJsU2V0RGVidWdNb2RlIj48IS0tIGtvIGNvbXBvbmVudDogXCdhY2Nlc3NpYmxlLWltYWdlLWNvbnRyb2xcJyAtLT4gPGltZyByb2xlPXByZXNlbnRhdGlvbiBwbmdzcmM9JytuKDUxMikrIiBzdmdzcmM9IituKDUxMykrIiBkYXRhLWJpbmQ9XCJpbWdTcmMsIGF0dHI6IHsgYWx0OiBzdHJbJ0NUX1NUUl9FcnJvcl9EZXRhaWxzX0Nsb3NlX0FsdFRleHQnXSB9XCIvPiA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIHBuZ3NyYz0iK24oNTE0KSsiIHN2Z3NyYz0iK24oNTE1KSsiIGRhdGEtYmluZD1cImltZ1NyYywgYXR0cjogeyBhbHQ6IHN0clsnQ1RfU1RSX0Vycm9yX0RldGFpbHNfQ2xvc2VfQWx0VGV4dCddIH1cIi8+PCEtLSAva28gLS0+IDwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPCEtLSAva28gLS0+In0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NoZWNrX3NtYWxsX3doaXRlXzlmZmYwODc2MDZkNWNmNmVhNmYyZWUyN2I0NjFiZmMyLnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jaGVja19zbWFsbF93aGl0ZV9jNDQyYWJjNGNhMzhjNWYwNGEyM2UzZGYxMTQzNjQxYi5zdmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY2hlY2tfc21hbGxfZTFlNjg1MjE5ZjgwMWI3YzJjMzk1NTk0Mzc5ZmJjNDYucG5nIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2NoZWNrX3NtYWxsX2MzNmZhMTQ3OTBkZmM2Y2EyMjA2OGE5NTgzNzNjMmJhLnN2ZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jbG9zZV93aGl0ZV83ODc4MmE4MGEzMmIyM2VhNzZmNGU5ZTAzOTYxMDEwMi5wbmcifSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4ucCsiY29udGVudC9pbWFnZXMvY2xvc2Vfd2hpdGVfNmIyZWViYzJmZWZmMmQ4NTgzZmNjOWFkN2E5ZTM3NWEuc3ZnIn0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uLnArImNvbnRlbnQvaW1hZ2VzL2Nsb3NlXzYyNzhlYzBhYzExNmEyMjk1MTJlZTVjNDQ4NjU4YjE2LnBuZyJ9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bi5wKyJjb250ZW50L2ltYWdlcy9jbG9zZV80MGViMzkxMjYzMDBiNTZiZjY2YzIwZWU3NWI1NDA5My5zdmcifV0pLHdpbmRvdy5fX09sZENvbnZlcmdlZExvZ2luX1BDb3JlPSEwOwovLyMgc291cmNlTWFwcGluZ1VSTD04NTJhYzk4MjFjMzRlNzA0N2U2YS5tYXA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPBody>
          </HTTPResponse>
        </HTTPTask>
      </HTTPTask>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>